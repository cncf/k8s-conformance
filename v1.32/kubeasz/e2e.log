  I0323 12:21:08.174021      23 e2e.go:109] Starting e2e run "807e9663-23d0-49d7-8aea-ec7ce4004c5d" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1742732467 - will randomize all specs

Will run 411 of 6624 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0323 12:21:08.313882 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  I0323 12:21:08.314630 23 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0323 12:21:08.325435 23 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0323 12:21:08.326847 23 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  I0323 12:21:08.326870 23 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'node-local-dns' (0 seconds elapsed)
  I0323 12:21:08.326881 23 e2e.go:245] e2e test version: v1.32.3
  I0323 12:21:08.327339 23 e2e.go:254] kube-apiserver version: v1.32.3
  I0323 12:21:08.327395 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  I0323 12:21:08.328847 23 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.015 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 03/23/25 12:21:08.43
  I0323 12:21:08.430279 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename configmap @ 03/23/25 12:21:08.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:21:08.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:21:08.439
  STEP: Creating configMap with name configmap-test-volume-map-49d894e8-d226-425c-9467-e73be23dd6d7 @ 03/23/25 12:21:08.44
  STEP: Creating a pod to test consume configMaps @ 03/23/25 12:21:08.443
  STEP: Saw pod success @ 03/23/25 12:21:18.461
  I0323 12:21:18.462377 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-configmaps-b569debd-5063-4728-9829-9634ddee4fb1 container agnhost-container: <nil>
  STEP: delete the pod @ 03/23/25 12:21:18.471
  I0323 12:21:18.478324 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1558" for this suite. @ 03/23/25 12:21:18.479
• [10.052 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 03/23/25 12:21:18.481
  I0323 12:21:18.481920 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename container-probe @ 03/23/25 12:21:18.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:21:18.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:21:18.49
  I0323 12:21:42.529070 23 container_probe.go:92] Container started at 2025-03-23 12:21:18 +0000 UTC, pod became ready at 2025-03-23 12:21:40 +0000 UTC
  I0323 12:21:42.529167 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8899" for this suite. @ 03/23/25 12:21:42.53
• [24.051 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 03/23/25 12:21:42.532
  I0323 12:21:42.532806 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename crd-webhook @ 03/23/25 12:21:42.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:21:42.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:21:42.539
  STEP: Setting up server cert @ 03/23/25 12:21:42.541
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 03/23/25 12:21:42.835
  STEP: Deploying the custom resource conversion webhook pod @ 03/23/25 12:21:42.838
  STEP: Wait for the deployment to be ready @ 03/23/25 12:21:42.845
  I0323 12:21:42.849435 23 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 03/23/25 12:21:44.854
  STEP: Verifying the service has paired with the endpoint @ 03/23/25 12:21:44.859
  I0323 12:21:45.859602 23 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0323 12:21:45.862990 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Creating a v1 custom resource @ 03/23/25 12:21:48.403
  STEP: Create a v2 custom resource @ 03/23/25 12:21:48.41
  STEP: List CRs in v1 @ 03/23/25 12:21:48.428
  STEP: List CRs in v2 @ 03/23/25 12:21:48.429
  I0323 12:21:48.966147 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-1817" for this suite. @ 03/23/25 12:21:48.974
• [6.445 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 03/23/25 12:21:48.977
  I0323 12:21:48.977987 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename projected @ 03/23/25 12:21:48.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:21:48.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:21:48.988
  STEP: Creating projection with secret that has name projected-secret-test-map-3992da6d-4180-4bfc-9be8-891a1b072496 @ 03/23/25 12:21:48.99
  STEP: Creating a pod to test consume secrets @ 03/23/25 12:21:48.992
  STEP: Saw pod success @ 03/23/25 12:21:53.004
  I0323 12:21:53.005557 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-projected-secrets-7ac09d97-1604-4641-bcd5-da7f2b287ba8 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 03/23/25 12:21:53.008
  I0323 12:21:53.015256 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9243" for this suite. @ 03/23/25 12:21:53.016
• [4.042 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 03/23/25 12:21:53.019
  I0323 12:21:53.019884 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename replicaset @ 03/23/25 12:21:53.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:21:53.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:21:53.026
  I0323 12:21:53.028186 23 replica_set.go:191] Creating ReplicaSet my-hostname-basic-974324e4-b568-44b4-86ed-6dfef8c2675c
  I0323 12:21:53.033750 23 resource.go:87] Pod name my-hostname-basic-974324e4-b568-44b4-86ed-6dfef8c2675c: Found 0 pods out of 1
  I0323 12:21:58.041228 23 resource.go:87] Pod name my-hostname-basic-974324e4-b568-44b4-86ed-6dfef8c2675c: Found 1 pods out of 1
  I0323 12:21:58.041252 23 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-974324e4-b568-44b4-86ed-6dfef8c2675c" is running
  I0323 12:21:58.042454 23 replica_set.go:220] Pod "my-hostname-basic-974324e4-b568-44b4-86ed-6dfef8c2675c-6rvv7" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-03-23 12:21:53 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-03-23 12:21:53 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-03-23 12:21:53 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-03-23 12:21:53 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-03-23 12:21:53 +0000 UTC Reason: Message:}])
  I0323 12:21:58.042472 23 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 03/23/25 12:21:58.042
  I0323 12:21:58.046542 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3171" for this suite. @ 03/23/25 12:21:58.048
• [5.032 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 03/23/25 12:21:58.051
  I0323 12:21:58.051731 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename projected @ 03/23/25 12:21:58.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:21:58.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:21:58.06
  STEP: Creating configMap with name configmap-projected-all-test-volume-8106a99b-f212-48b5-a876-5f05ea20279e @ 03/23/25 12:21:58.061
  STEP: Creating secret with name secret-projected-all-test-volume-97096623-026a-45ab-b23a-efe40e51f882 @ 03/23/25 12:21:58.063
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 03/23/25 12:21:58.065
  W0323 12:21:58.069868      23 warnings.go:70] volume "podinfo" (Projected): overlapping paths: "podname" (DownwardAPI) with "podname" (DownwardAPI)
  STEP: Saw pod success @ 03/23/25 12:22:04.084
  I0323 12:22:04.085957 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod projected-volume-8f733840-57bb-45ac-a525-67c2f3df71e0 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 03/23/25 12:22:04.088
  I0323 12:22:04.096588 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4444" for this suite. @ 03/23/25 12:22:04.098
• [6.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 03/23/25 12:22:04.103
  I0323 12:22:04.103071 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/23/25 12:22:04.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:22:04.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:22:04.116
  STEP: set up a multi version CRD @ 03/23/25 12:22:04.117
  I0323 12:22:04.117726 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: mark a version not serverd @ 03/23/25 12:22:07.19
  STEP: check the unserved version gets removed @ 03/23/25 12:22:07.199
  STEP: check the other version is not changed @ 03/23/25 12:22:07.846
  I0323 12:22:10.248487 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8557" for this suite. @ 03/23/25 12:22:10.253
• [6.153 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 03/23/25 12:22:10.256
  I0323 12:22:10.256482 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/23/25 12:22:10.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:22:10.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:22:10.263
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 03/23/25 12:22:10.264
  I0323 12:22:10.265100 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  I0323 12:22:11.434726 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  I0323 12:22:16.152908 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5703" for this suite. @ 03/23/25 12:22:16.157
• [5.903 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 03/23/25 12:22:16.159
  I0323 12:22:16.159761 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename emptydir @ 03/23/25 12:22:16.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:22:16.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:22:16.167
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 03/23/25 12:22:16.169
  STEP: Saw pod success @ 03/23/25 12:22:18.188
  I0323 12:22:18.190123 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-c54f3885-23e4-4ce1-955d-6968a9cdf29d container test-container: <nil>
  STEP: delete the pod @ 03/23/25 12:22:18.192
  I0323 12:22:18.199621 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3985" for this suite. @ 03/23/25 12:22:18.201
• [2.044 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:130
  STEP: Creating a kubernetes client @ 03/23/25 12:22:18.203
  I0323 12:22:18.203553 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename dns @ 03/23/25 12:22:18.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:22:18.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:22:18.209
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-1796.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-1796.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 03/23/25 12:22:18.211
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-1796.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-1796.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 03/23/25 12:22:18.211
  STEP: creating a pod to probe /etc/hosts @ 03/23/25 12:22:18.211
  STEP: submitting the pod to kubernetes @ 03/23/25 12:22:18.211
  STEP: retrieving the pod @ 03/23/25 12:22:36.241
  STEP: looking for the results for each expected name from probers @ 03/23/25 12:22:36.242
  I0323 12:22:36.275187 23 dns_common.go:546] DNS probes using dns-1796/dns-test-fa4d72c0-fdfe-4772-a8c5-6290bc6e5d00 succeeded

  STEP: deleting the pod @ 03/23/25 12:22:36.275
  I0323 12:22:36.281069 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1796" for this suite. @ 03/23/25 12:22:36.282
• [18.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3683
  STEP: Creating a kubernetes client @ 03/23/25 12:22:36.286
  I0323 12:22:36.286102 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename services @ 03/23/25 12:22:36.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:22:36.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:22:36.294
  STEP: creating service multiprotocol-test in namespace services-2350 @ 03/23/25 12:22:36.296
  STEP: creating pod pod1 in namespace services-2350 @ 03/23/25 12:22:36.3
  STEP: Creating pod pod1 in namespace services-2350 @ 03/23/25 12:22:36.3
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-2350 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 03/23/25 12:22:38.314
  I0323 12:22:38.318480 23 service.go:4553] successfully validated that service multiprotocol-test in namespace services-2350 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 03/23/25 12:22:38.318
  I0323 12:22:38.318539 23 resource.go:361] Creating new exec pod
  I0323 12:22:40.325896 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-2350 exec execpodztlt4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.152.189 80'
  I0323 12:22:40.397374 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.152.189 80\nConnection to 10.68.152.189 80 port [tcp/http] succeeded!\n"
  I0323 12:22:40.397415 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0323 12:22:40.397475 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-2350 exec execpodztlt4 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.152.189 80'
  I0323 12:22:42.462299 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.68.152.189 80\n"
  I0323 12:22:42.462327 23 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 03/23/25 12:22:42.462
  I0323 12:22:42.466526 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-2350 exec execpodztlt4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.152.189 80'
  I0323 12:22:42.541485 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.152.189 80\nConnection to 10.68.152.189 80 port [tcp/http] succeeded!\n"
  I0323 12:22:42.541519 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0323 12:22:42.541612 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-2350 exec execpodztlt4 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.152.189 80'
  I0323 12:22:42.632862 23 builder.go:146] stderr: "+ nc -v -u -w 2 10.68.152.189 80\n+ echo hostName\n"
  I0323 12:22:42.632907 23 builder.go:147] stdout: ""
  I0323 12:22:44.542000 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-2350 exec execpodztlt4 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.152.189 80'
  I0323 12:22:44.608450 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.68.152.189 80\n"
  I0323 12:22:44.608498 23 builder.go:147] stdout: ""
  I0323 12:22:46.541825 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-2350 exec execpodztlt4 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.152.189 80'
  I0323 12:22:46.604979 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.68.152.189 80\n"
  I0323 12:22:46.605017 23 builder.go:147] stdout: ""
  I0323 12:22:48.542605 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-2350 exec execpodztlt4 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.152.189 80'
  I0323 12:22:48.605450 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.68.152.189 80\n"
  I0323 12:22:48.605486 23 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 03/23/25 12:22:48.605
  I0323 12:22:48.609146 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-2350 exec execpodztlt4 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.152.189 80'
  I0323 12:22:48.677159 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.68.152.189 80\n"
  I0323 12:22:48.677193 23 builder.go:147] stdout: ""
  I0323 12:22:50.610232 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-2350 exec execpodztlt4 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.152.189 80'
  I0323 12:22:52.675355 23 builder.go:146] stderr: "+ nc -v -u -w 2 10.68.152.189 80\n+ echo hostName\n"
  I0323 12:22:52.675385 23 builder.go:147] stdout: "pod1"
  I0323 12:22:52.675505 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-2350 exec execpodztlt4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.152.189 80'
  I0323 12:22:52.738783 23 builder.go:135] rc: 1
  I0323 12:22:52.738835 23 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-2350 exec execpodztlt4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.152.189 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.68.152.189 80
  nc: connect to 10.68.152.189 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0323 12:22:54.675717 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-2350 exec execpodztlt4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.152.189 80'
  I0323 12:22:54.738620 23 builder.go:135] rc: 1
  I0323 12:22:54.738667 23 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-2350 exec execpodztlt4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.152.189 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.68.152.189 80
  nc: connect to 10.68.152.189 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0323 12:22:56.675722 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-2350 exec execpodztlt4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.152.189 80'
  I0323 12:22:56.738298 23 builder.go:135] rc: 1
  I0323 12:22:56.738353 23 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-2350 exec execpodztlt4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.152.189 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.68.152.189 80
  nc: connect to 10.68.152.189 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0323 12:22:58.675699 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-2350 exec execpodztlt4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.152.189 80'
  I0323 12:22:58.741832 23 builder.go:135] rc: 1
  I0323 12:22:58.741884 23 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-2350 exec execpodztlt4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.152.189 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.68.152.189 80
  nc: connect to 10.68.152.189 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0323 12:22:58.742017 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2350" for this suite. @ 03/23/25 12:22:58.743
• [22.460 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:246
  STEP: Creating a kubernetes client @ 03/23/25 12:22:58.746
  I0323 12:22:58.746355 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename namespaces @ 03/23/25 12:22:58.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:22:58.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:22:58.752
  STEP: Creating a test namespace @ 03/23/25 12:22:58.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:22:58.758
  STEP: Creating a pod in the namespace @ 03/23/25 12:22:58.759
  STEP: Waiting for the pod to have running status @ 03/23/25 12:22:58.764
  STEP: Deleting the namespace @ 03/23/25 12:23:00.769
  STEP: Waiting for the namespace to be removed. @ 03/23/25 12:23:00.772
  STEP: Recreating the namespace @ 03/23/25 12:23:11.775
  STEP: Verifying there are no pods in the namespace @ 03/23/25 12:23:11.781
  I0323 12:23:11.785923 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1783" for this suite. @ 03/23/25 12:23:11.787
  STEP: Destroying namespace "nsdeletetest-6634" for this suite. @ 03/23/25 12:23:11.79
  I0323 12:23:11.791422 23 framework.go:370] Namespace nsdeletetest-6634 was already deleted
  STEP: Destroying namespace "nsdeletetest-9510" for this suite. @ 03/23/25 12:23:11.791
• [13.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 03/23/25 12:23:11.794
  I0323 12:23:11.794012 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename services @ 03/23/25 12:23:11.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:23:11.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:23:11.801
  STEP: creating service nodeport-test with type=NodePort in namespace services-3689 @ 03/23/25 12:23:11.802
  STEP: creating replication controller nodeport-test in namespace services-3689 @ 03/23/25 12:23:11.808
  I0323 12:23:11.814006      23 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-3689, replica count: 2
  I0323 12:23:14.865968      23 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0323 12:23:14.865992 23 resource.go:361] Creating new exec pod
  I0323 12:23:17.874940 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-3689 exec execpodmzdxm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0323 12:23:17.942177 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.68.125.185) 80 port [tcp/http] succeeded!\n"
  I0323 12:23:17.942210 23 builder.go:147] stdout: "nodeport-test-qql82"
  I0323 12:23:17.942273 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-3689 exec execpodmzdxm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.125.185 80'
  I0323 12:23:18.006497 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.125.185 80\nConnection to 10.68.125.185 80 port [tcp/http] succeeded!\n"
  I0323 12:23:18.006529 23 builder.go:147] stdout: "nodeport-test-7k52k"
  I0323 12:23:18.006660 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-3689 exec execpodmzdxm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.207 32447'
  I0323 12:23:18.074202 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.207 32447\nConnection to 10.255.0.207 32447 port [tcp/*] succeeded!\n"
  I0323 12:23:18.074238 23 builder.go:147] stdout: "nodeport-test-qql82"
  I0323 12:23:18.074304 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-3689 exec execpodmzdxm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.208 32447'
  I0323 12:23:18.138275 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.208 32447\nConnection to 10.255.0.208 32447 port [tcp/*] succeeded!\n"
  I0323 12:23:18.138309 23 builder.go:147] stdout: "nodeport-test-qql82"
  I0323 12:23:18.138465 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3689" for this suite. @ 03/23/25 12:23:18.14
• [6.348 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110
  STEP: Creating a kubernetes client @ 03/23/25 12:23:18.142
  I0323 12:23:18.142560 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename job @ 03/23/25 12:23:18.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:23:18.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:23:18.152
  STEP: Looking for a node to schedule job pod @ 03/23/25 12:23:18.153
  STEP: Creating a job @ 03/23/25 12:23:18.241
  STEP: Ensuring job fails @ 03/23/25 12:23:18.244
  I0323 12:23:26.255260 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8371" for this suite. @ 03/23/25 12:23:26.256
• [8.117 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 03/23/25 12:23:26.259
  I0323 12:23:26.259554 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename container-probe @ 03/23/25 12:23:26.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:23:26.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:23:26.267
  STEP: Creating pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392 @ 03/23/25 12:23:26.268
  STEP: checking the pod's current state and verifying that restartCount is present @ 03/23/25 12:23:28.277
  I0323 12:23:28.278466 23 container_probe.go:1749] Initial restart count of pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 is 0
  I0323 12:23:28.279497 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:23:30.281591 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:23:32.284444 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:23:34.287349 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:23:36.289591 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:23:38.292468 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:23:40.294447 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:23:42.297495 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:23:44.300307 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:23:46.302542 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:23:48.305434 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:23:50.308465 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:23:52.310795 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:23:54.313568 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:23:56.315501 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:23:58.318456 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:24:00.320489 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:24:02.322581 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:24:04.325394 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:24:06.328020 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:24:08.330760 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:24:10.332766 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:24:12.334780 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:24:14.337465 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:24:16.339178 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:24:18.341846 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:24:20.343778 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:24:22.345879 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:24:24.348049 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:24:26.350602 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:24:28.353080 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:24:30.355908 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:24:32.358742 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:24:34.361226 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:24:36.363939 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:24:38.366757 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:24:40.369554 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:24:42.372667 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:24:44.375284 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:24:46.378092 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:24:48.380442 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:24:50.382555 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:24:52.385626 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:24:54.388337 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:24:56.390507 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:24:58.393138 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:25:00.395043 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:25:02.397655 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:25:04.400214 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:25:06.402437 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:25:08.405218 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:25:10.408185 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:25:12.410782 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:25:14.413442 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:25:16.415806 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:25:18.418290 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:25:20.421175 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:25:22.424337 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:25:24.427012 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:25:26.429389 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:25:28.431874 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:25:30.434563 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:25:32.437659 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:25:34.440201 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:25:36.442513 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:25:38.445370 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:25:40.447667 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:25:42.449822 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:25:44.452267 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:25:46.454587 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:25:48.457362 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:25:50.459287 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:25:52.462378 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:25:54.464496 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:25:56.466584 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:25:58.469399 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:26:00.472321 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:26:02.474425 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:26:04.477251 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:26:06.479196 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:26:08.481146 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:26:10.484040 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:26:12.486687 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:26:14.489508 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:26:16.491383 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:26:18.494234 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:26:20.496161 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:26:22.498318 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:26:24.500571 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:26:26.502585 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:26:28.505466 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:26:30.508320 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:26:32.510632 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:26:34.512910 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:26:36.515772 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:26:38.518557 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:26:40.520584 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:26:42.522359 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:26:44.525149 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:26:46.528128 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:26:48.530930 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:26:50.533507 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:26:52.536318 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:26:54.539119 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:26:56.541432 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:26:58.544202 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:27:00.546092 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:27:02.549159 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:27:04.552026 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:27:06.554520 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:27:08.557332 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:27:10.559456 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:27:12.561647 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:27:14.564340 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:27:16.566604 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:27:18.569314 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:27:20.571195 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:27:22.573825 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:27:24.576323 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  I0323 12:27:26.578528 23 container_probe.go:1759] Get pod test-webserver-a7814211-78db-40ce-a1a2-6664b327cf76 in namespace container-probe-4392
  STEP: deleting the pod @ 03/23/25 12:27:28.579
  I0323 12:27:28.586278 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4392" for this suite. @ 03/23/25 12:27:28.588
• [242.332 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 03/23/25 12:27:28.591
  I0323 12:27:28.591684 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/23/25 12:27:28.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:27:28.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:27:28.598
  I0323 12:27:28.600224 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 03/23/25 12:27:29.775
  I0323 12:27:29.775490 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=crd-publish-openapi-4546 --namespace=crd-publish-openapi-4546 create -f -'
  I0323 12:27:31.832542 23 builder.go:146] stderr: ""
  I0323 12:27:31.832574 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3606-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0323 12:27:31.832617 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=crd-publish-openapi-4546 --namespace=crd-publish-openapi-4546 delete e2e-test-crd-publish-openapi-3606-crds test-foo'
  I0323 12:27:31.874021 23 builder.go:146] stderr: ""
  I0323 12:27:31.874062 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3606-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0323 12:27:31.874157 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=crd-publish-openapi-4546 --namespace=crd-publish-openapi-4546 apply -f -'
  I0323 12:27:31.918708 23 builder.go:146] stderr: ""
  I0323 12:27:31.918745 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3606-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0323 12:27:31.918792 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=crd-publish-openapi-4546 --namespace=crd-publish-openapi-4546 delete e2e-test-crd-publish-openapi-3606-crds test-foo'
  I0323 12:27:31.961605 23 builder.go:146] stderr: ""
  I0323 12:27:31.961638 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3606-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 03/23/25 12:27:31.961
  I0323 12:27:31.961707 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=crd-publish-openapi-4546 --namespace=crd-publish-openapi-4546 create -f -'
  I0323 12:27:32.002774 23 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 03/23/25 12:27:32.002
  I0323 12:27:32.002928 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=crd-publish-openapi-4546 --namespace=crd-publish-openapi-4546 create -f -'
  I0323 12:27:32.043199 23 builder.go:135] rc: 1
  I0323 12:27:32.043275 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=crd-publish-openapi-4546 --namespace=crd-publish-openapi-4546 apply -f -'
  I0323 12:27:32.085561 23 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 03/23/25 12:27:32.085
  I0323 12:27:32.085657 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=crd-publish-openapi-4546 --namespace=crd-publish-openapi-4546 create -f -'
  I0323 12:27:32.126215 23 builder.go:135] rc: 1
  I0323 12:27:32.126331 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=crd-publish-openapi-4546 --namespace=crd-publish-openapi-4546 apply -f -'
  I0323 12:27:32.169058 23 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 03/23/25 12:27:32.169
  I0323 12:27:32.169178 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=crd-publish-openapi-4546 explain e2e-test-crd-publish-openapi-3606-crds'
  I0323 12:27:32.208445 23 builder.go:146] stderr: ""
  I0323 12:27:32.208548 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3606-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 03/23/25 12:27:32.208
  I0323 12:27:32.208788 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=crd-publish-openapi-4546 explain e2e-test-crd-publish-openapi-3606-crds.metadata'
  I0323 12:27:32.248758 23 builder.go:146] stderr: ""
  I0323 12:27:32.248930 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3606-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0323 12:27:32.249086 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=crd-publish-openapi-4546 explain e2e-test-crd-publish-openapi-3606-crds.spec'
  I0323 12:27:32.288511 23 builder.go:146] stderr: ""
  I0323 12:27:32.288545 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3606-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0323 12:27:32.288693 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=crd-publish-openapi-4546 explain e2e-test-crd-publish-openapi-3606-crds.spec.bars'
  I0323 12:27:32.328726 23 builder.go:146] stderr: ""
  I0323 12:27:32.328768 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3606-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 03/23/25 12:27:32.328
  I0323 12:27:32.328910 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=crd-publish-openapi-4546 explain e2e-test-crd-publish-openapi-3606-crds.spec.bars2'
  I0323 12:27:32.368434 23 builder.go:135] rc: 1
  I0323 12:27:33.549217 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4546" for this suite. @ 03/23/25 12:27:33.553
• [4.964 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 03/23/25 12:27:33.555
  I0323 12:27:33.555919 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename gc @ 03/23/25 12:27:33.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:27:33.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:27:33.564
  STEP: create the deployment @ 03/23/25 12:27:33.565
  W0323 12:27:33.567566      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 03/23/25 12:27:33.567
  STEP: delete the deployment @ 03/23/25 12:27:34.07
  STEP: wait for all rs to be garbage collected @ 03/23/25 12:27:34.072
  STEP: expected 0 pods, got 2 pods @ 03/23/25 12:27:34.08
  STEP: Gathering metrics @ 03/23/25 12:27:34.585
  W0323 12:27:34.587666      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0323 12:27:34.587688 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0323 12:27:34.587818 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2890" for this suite. @ 03/23/25 12:27:34.589
• [1.036 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 03/23/25 12:27:34.591
  I0323 12:27:34.591658 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename runtimeclass @ 03/23/25 12:27:34.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:27:34.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:27:34.598
  I0323 12:27:36.611627 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1354" for this suite. @ 03/23/25 12:27:36.613
• [2.025 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 03/23/25 12:27:36.616
  I0323 12:27:36.616570 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/23/25 12:27:36.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:27:36.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:27:36.623
  I0323 12:27:36.624726 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 03/23/25 12:27:37.792
  I0323 12:27:37.792996 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=crd-publish-openapi-7027 --namespace=crd-publish-openapi-7027 create -f -'
  I0323 12:27:39.851635 23 builder.go:146] stderr: ""
  I0323 12:27:39.851679 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-925-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0323 12:27:39.851781 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=crd-publish-openapi-7027 --namespace=crd-publish-openapi-7027 delete e2e-test-crd-publish-openapi-925-crds test-cr'
  I0323 12:27:39.893099 23 builder.go:146] stderr: ""
  I0323 12:27:39.893138 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-925-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0323 12:27:39.893181 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=crd-publish-openapi-7027 --namespace=crd-publish-openapi-7027 apply -f -'
  I0323 12:27:39.937271 23 builder.go:146] stderr: ""
  I0323 12:27:39.937302 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-925-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0323 12:27:39.937337 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=crd-publish-openapi-7027 --namespace=crd-publish-openapi-7027 delete e2e-test-crd-publish-openapi-925-crds test-cr'
  I0323 12:27:39.978136 23 builder.go:146] stderr: ""
  I0323 12:27:39.978164 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-925-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 03/23/25 12:27:39.978
  I0323 12:27:39.978281 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=crd-publish-openapi-7027 explain e2e-test-crd-publish-openapi-925-crds'
  I0323 12:27:40.017752 23 builder.go:146] stderr: ""
  I0323 12:27:40.017868 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-925-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I0323 12:27:41.197733 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7027" for this suite. @ 03/23/25 12:27:41.202
• [4.588 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 03/23/25 12:27:41.204
  I0323 12:27:41.204699 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename services @ 03/23/25 12:27:41.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:27:41.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:27:41.212
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-2910 @ 03/23/25 12:27:41.214
  STEP: changing the ExternalName service to type=ClusterIP @ 03/23/25 12:27:41.216
  STEP: creating replication controller externalname-service in namespace services-2910 @ 03/23/25 12:27:41.222
  I0323 12:27:41.226235      23 runners.go:193] Created replication controller with name: externalname-service, namespace: services-2910, replica count: 2
  I0323 12:27:44.277256      23 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0323 12:27:44.277281 23 resource.go:361] Creating new exec pod
  I0323 12:27:47.287531 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-2910 exec execpod5mt7z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0323 12:27:47.356494 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.68.51.93) 80 port [tcp/http] succeeded!\n"
  I0323 12:27:47.356530 23 builder.go:147] stdout: ""
  I0323 12:27:48.287580 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-2910 exec execpod5mt7z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0323 12:27:48.354093 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.68.51.93) 80 port [tcp/http] succeeded!\n"
  I0323 12:27:48.354124 23 builder.go:147] stdout: "externalname-service-vnc8f"
  I0323 12:27:48.354183 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-2910 exec execpod5mt7z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.51.93 80'
  I0323 12:27:48.417327 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.51.93 80\nConnection to 10.68.51.93 80 port [tcp/http] succeeded!\n"
  I0323 12:27:48.417361 23 builder.go:147] stdout: "externalname-service-28h6v"
  I0323 12:27:48.417479 23 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I0323 12:27:48.426033 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2910" for this suite. @ 03/23/25 12:27:48.427
• [7.226 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 03/23/25 12:27:48.43
  I0323 12:27:48.430747 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 03/23/25 12:27:48.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:27:48.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:27:48.439
  STEP: creating a target pod @ 03/23/25 12:27:48.44
  STEP: adding an ephemeral container @ 03/23/25 12:27:50.451
  STEP: checking pod container endpoints @ 03/23/25 12:27:52.464
  I0323 12:27:52.465014 23 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-9394 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0323 12:27:52.465030 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0323 12:27:52.465069 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/ephemeral-containers-test-9394/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0323 12:27:52.489915 23 exec_util.go:108] Exec stderr: ""
  I0323 12:27:52.505950 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-9394" for this suite. @ 03/23/25 12:27:52.507
• [4.079 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 03/23/25 12:27:52.509
  I0323 12:27:52.509954 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename secrets @ 03/23/25 12:27:52.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:27:52.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:27:52.518
  STEP: Creating secret with name secret-test-d6115065-48fa-42d2-8501-9d9f3efb137c @ 03/23/25 12:27:52.519
  STEP: Creating a pod to test consume secrets @ 03/23/25 12:27:52.521
  STEP: Saw pod success @ 03/23/25 12:27:56.532
  I0323 12:27:56.533258 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-secrets-9e01c43b-95be-49d1-91af-ed1080563648 container secret-volume-test: <nil>
  STEP: delete the pod @ 03/23/25 12:27:56.541
  I0323 12:27:56.547475 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4525" for this suite. @ 03/23/25 12:27:56.548
• [4.041 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 03/23/25 12:27:56.551
  I0323 12:27:56.551170 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename configmap @ 03/23/25 12:27:56.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:27:56.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:27:56.56
  STEP: Creating configMap with name configmap-test-volume-f0a45288-2379-4591-9622-3a69e10bea1f @ 03/23/25 12:27:56.561
  STEP: Creating a pod to test consume configMaps @ 03/23/25 12:27:56.563
  STEP: Saw pod success @ 03/23/25 12:27:58.571
  I0323 12:27:58.573133 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-configmaps-6d576554-1e65-4b36-b849-e3c296acbd1c container agnhost-container: <nil>
  STEP: delete the pod @ 03/23/25 12:27:58.575
  I0323 12:27:58.582747 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4270" for this suite. @ 03/23/25 12:27:58.584
• [2.035 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 03/23/25 12:27:58.586
  I0323 12:27:58.586248 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename daemonsets @ 03/23/25 12:27:58.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:27:58.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:27:58.595
  I0323 12:27:58.688987 23 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 03/23/25 12:27:58.691
  I0323 12:27:58.695407 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0323 12:27:58.695425 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 03/23/25 12:27:58.695
  I0323 12:27:58.793352 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0323 12:27:58.793381 23 fixtures.go:131] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  I0323 12:27:59.794456 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0323 12:27:59.794481 23 fixtures.go:131] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  I0323 12:28:00.794757 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0323 12:28:00.794783 23 fixtures.go:131] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  I0323 12:28:01.793393 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0323 12:28:01.793414 23 fixtures.go:131] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  I0323 12:28:02.793195 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0323 12:28:02.793224 23 fixtures.go:131] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  I0323 12:28:03.794179 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0323 12:28:03.794205 23 fixtures.go:131] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  I0323 12:28:04.794000 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0323 12:28:04.794025 23 fixtures.go:131] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  I0323 12:28:05.793915 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0323 12:28:05.793941 23 fixtures.go:131] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  I0323 12:28:06.794413 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0323 12:28:06.794435 23 fixtures.go:131] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  I0323 12:28:07.794704 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0323 12:28:07.794730 23 fixtures.go:131] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  I0323 12:28:08.794744 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0323 12:28:08.794774 23 fixtures.go:131] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  I0323 12:28:09.794575 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0323 12:28:09.794600 23 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 03/23/25 12:28:09.795
  I0323 12:28:09.806366 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0323 12:28:09.806390 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 03/23/25 12:28:09.806
  I0323 12:28:09.896365 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0323 12:28:09.896391 23 fixtures.go:131] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  I0323 12:28:10.813332 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0323 12:28:10.813360 23 fixtures.go:131] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  I0323 12:28:11.813334 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0323 12:28:11.813359 23 fixtures.go:131] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  I0323 12:28:12.812802 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0323 12:28:12.812827 23 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 03/23/25 12:28:12.815
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7044, will wait for the garbage collector to delete the pods @ 03/23/25 12:28:12.815
  I0323 12:28:12.868814 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 2.370051ms
  I0323 12:28:12.969109 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.292758ms
  I0323 12:28:14.471107 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0323 12:28:14.471131 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0323 12:28:14.473069 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"6220"},"items":null}

  I0323 12:28:14.476580 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"6220"},"items":null}

  I0323 12:28:14.490226 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7044" for this suite. @ 03/23/25 12:28:14.579
• [15.996 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:275
  STEP: Creating a kubernetes client @ 03/23/25 12:28:14.582
  I0323 12:28:14.582488 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename namespaces @ 03/23/25 12:28:14.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:28:14.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:28:14.591
  STEP: creating a Namespace @ 03/23/25 12:28:14.592
  STEP: patching the Namespace @ 03/23/25 12:28:14.598
  STEP: get the Namespace and ensuring it has the label @ 03/23/25 12:28:14.6
  I0323 12:28:14.602371 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4453" for this suite. @ 03/23/25 12:28:14.679
  STEP: Destroying namespace "nspatchtest-f5d6a7ac-6811-4660-a490-53db617b42fe-3629" for this suite. @ 03/23/25 12:28:14.683
• [0.104 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 03/23/25 12:28:14.686
  I0323 12:28:14.686383 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename gc @ 03/23/25 12:28:14.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:28:14.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:28:14.692
  STEP: create the rc @ 03/23/25 12:28:14.695
  W0323 12:28:14.697092      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 03/23/25 12:28:19.699
  STEP: wait for all pods to be garbage collected @ 03/23/25 12:28:19.702
  STEP: Gathering metrics @ 03/23/25 12:28:24.706
  W0323 12:28:24.707921      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0323 12:28:24.707955 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0323 12:28:24.708076 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7953" for this suite. @ 03/23/25 12:28:24.709
• [10.025 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 03/23/25 12:28:24.711
  I0323 12:28:24.711751 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename containers @ 03/23/25 12:28:24.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:28:24.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:28:24.719
  STEP: Creating a pod to test override arguments @ 03/23/25 12:28:24.721
  STEP: Saw pod success @ 03/23/25 12:28:26.728
  I0323 12:28:26.729516 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod client-containers-fedf3e9e-1975-4ebc-919c-c21d2ae93d5f container agnhost-container: <nil>
  STEP: delete the pod @ 03/23/25 12:28:26.732
  I0323 12:28:26.740545 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8999" for this suite. @ 03/23/25 12:28:26.741
• [2.032 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 03/23/25 12:28:26.744
  I0323 12:28:26.744131 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename resourcequota @ 03/23/25 12:28:26.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:28:26.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:28:26.751
  STEP: Creating a ResourceQuota @ 03/23/25 12:28:26.753
  STEP: Getting a ResourceQuota @ 03/23/25 12:28:26.755
  STEP: Updating a ResourceQuota @ 03/23/25 12:28:26.756
  STEP: Verifying a ResourceQuota was modified @ 03/23/25 12:28:26.76
  STEP: Deleting a ResourceQuota @ 03/23/25 12:28:26.761
  STEP: Verifying the deleted ResourceQuota @ 03/23/25 12:28:26.764
  I0323 12:28:26.765107 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-558" for this suite. @ 03/23/25 12:28:26.843
• [0.102 seconds]
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 03/23/25 12:28:26.846
  I0323 12:28:26.846115 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename projected @ 03/23/25 12:28:26.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:28:26.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:28:26.853
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-f9dfc42d-211b-4325-a000-d6f0b3e0cd0b @ 03/23/25 12:28:26.943
  STEP: Creating the pod @ 03/23/25 12:28:26.946
  STEP: Updating configmap projected-configmap-test-upd-f9dfc42d-211b-4325-a000-d6f0b3e0cd0b @ 03/23/25 12:28:28.958
  STEP: waiting to observe update in volume @ 03/23/25 12:28:28.961
  I0323 12:29:45.181465 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2979" for this suite. @ 03/23/25 12:29:45.183
• [78.339 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 03/23/25 12:29:45.185
  I0323 12:29:45.185572 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename webhook @ 03/23/25 12:29:45.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:29:45.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:29:45.193
  STEP: Setting up server cert @ 03/23/25 12:29:45.204
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/23/25 12:29:45.42
  STEP: Deploying the webhook pod @ 03/23/25 12:29:45.423
  STEP: Wait for the deployment to be ready @ 03/23/25 12:29:45.43
  I0323 12:29:45.433168 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 03/23/25 12:29:47.437
  STEP: Verifying the service has paired with the endpoint @ 03/23/25 12:29:47.442
  I0323 12:29:48.443445 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 03/23/25 12:29:48.446
  STEP: create a pod that should be denied by the webhook @ 03/23/25 12:29:48.456
  STEP: create a pod that causes the webhook to hang @ 03/23/25 12:29:48.461
  STEP: create a configmap that should be denied by the webhook @ 03/23/25 12:29:58.465
  STEP: create a configmap that should be admitted by the webhook @ 03/23/25 12:29:58.477
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 03/23/25 12:29:58.482
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 03/23/25 12:29:58.485
  STEP: create a namespace that bypass the webhook @ 03/23/25 12:29:58.488
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 03/23/25 12:29:58.494
  I0323 12:29:58.524621 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7040" for this suite. @ 03/23/25 12:29:58.527
  STEP: Destroying namespace "webhook-markers-5738" for this suite. @ 03/23/25 12:29:58.53
  STEP: Destroying namespace "exempted-namespace-9024" for this suite. @ 03/23/25 12:29:58.532
• [13.350 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 03/23/25 12:29:58.536
  I0323 12:29:58.536170 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename disruption @ 03/23/25 12:29:58.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:29:58.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:29:58.549
  STEP: Creating a kubernetes client @ 03/23/25 12:29:58.551
  I0323 12:29:58.551416 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename disruption-2 @ 03/23/25 12:29:58.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:29:58.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:29:58.56
  STEP: Waiting for the pdb to be processed @ 03/23/25 12:29:58.563
  STEP: Waiting for the pdb to be processed @ 03/23/25 12:30:00.567
  STEP: Waiting for the pdb to be processed @ 03/23/25 12:30:02.572
  STEP: listing a collection of PDBs across all namespaces @ 03/23/25 12:30:02.574
  STEP: listing a collection of PDBs in namespace disruption-4657 @ 03/23/25 12:30:02.576
  STEP: deleting a collection of PDBs @ 03/23/25 12:30:02.579
  STEP: Waiting for the PDB collection to be deleted @ 03/23/25 12:30:02.584
  I0323 12:30:02.586155 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-7532" for this suite. @ 03/23/25 12:30:02.587
  I0323 12:30:02.590235 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4657" for this suite. @ 03/23/25 12:30:02.688
• [4.156 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 03/23/25 12:30:02.691
  I0323 12:30:02.691776 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename downward-api @ 03/23/25 12:30:02.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:30:02.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:30:02.7
  STEP: Creating a pod to test downward API volume plugin @ 03/23/25 12:30:02.701
  STEP: Saw pod success @ 03/23/25 12:30:06.712
  I0323 12:30:06.713723 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod downwardapi-volume-22e44f29-b2f4-43b3-bbbc-bd06e40570dd container client-container: <nil>
  STEP: delete the pod @ 03/23/25 12:30:06.716
  I0323 12:30:06.723724 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3950" for this suite. @ 03/23/25 12:30:06.725
• [4.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1102
  STEP: Creating a kubernetes client @ 03/23/25 12:30:06.727
  I0323 12:30:06.727671 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename job @ 03/23/25 12:30:06.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:30:06.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:30:06.735
  STEP: Creating a suspended job @ 03/23/25 12:30:06.743
  STEP: Patching the Job @ 03/23/25 12:30:06.745
  STEP: Watching for Job to be patched @ 03/23/25 12:30:06.755
  I0323 12:30:06.755947 23 job.go:1309] Event ADDED observed for Job e2e-25cdf in namespace job-2207 with labels: map[e2e-job-label:e2e-25cdf] and annotations: map[]
  I0323 12:30:06.755971 23 job.go:1309] Event MODIFIED observed for Job e2e-25cdf in namespace job-2207 with labels: map[e2e-job-label:e2e-25cdf] and annotations: map[]
  I0323 12:30:06.755985 23 job.go:1312] Event MODIFIED found for Job e2e-25cdf in namespace job-2207 with labels: map[e2e-25cdf:patched e2e-job-label:e2e-25cdf] and annotations: map[]
  STEP: Updating the job @ 03/23/25 12:30:06.756
  STEP: Watching for Job to be updated @ 03/23/25 12:30:06.759
  I0323 12:30:06.760292 23 job.go:1312] Event MODIFIED found for Job e2e-25cdf in namespace job-2207 with labels: map[e2e-25cdf:patched e2e-job-label:e2e-25cdf] and annotations: map[updated:true]
  I0323 12:30:06.760316 23 job.go:1180] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 03/23/25 12:30:06.76
  I0323 12:30:06.761371 23 job.go:1187] Job: e2e-25cdf as labels: map[e2e-25cdf:patched e2e-job-label:e2e-25cdf]
  STEP: Waiting for job to complete @ 03/23/25 12:30:06.761
  STEP: Delete a job collection with a labelselector @ 03/23/25 12:30:12.772
  STEP: Watching for Job to be deleted @ 03/23/25 12:30:12.775
  I0323 12:30:12.776895 23 job.go:1309] Event MODIFIED observed for Job e2e-25cdf in namespace job-2207 with labels: map[e2e-25cdf:patched e2e-job-label:e2e-25cdf] and annotations: map[updated:true]
  I0323 12:30:12.776937 23 job.go:1309] Event MODIFIED observed for Job e2e-25cdf in namespace job-2207 with labels: map[e2e-25cdf:patched e2e-job-label:e2e-25cdf] and annotations: map[updated:true]
  I0323 12:30:12.776955 23 job.go:1309] Event MODIFIED observed for Job e2e-25cdf in namespace job-2207 with labels: map[e2e-25cdf:patched e2e-job-label:e2e-25cdf] and annotations: map[updated:true]
  I0323 12:30:12.777047 23 job.go:1309] Event MODIFIED observed for Job e2e-25cdf in namespace job-2207 with labels: map[e2e-25cdf:patched e2e-job-label:e2e-25cdf] and annotations: map[updated:true]
  I0323 12:30:12.777082 23 job.go:1309] Event MODIFIED observed for Job e2e-25cdf in namespace job-2207 with labels: map[e2e-25cdf:patched e2e-job-label:e2e-25cdf] and annotations: map[updated:true]
  I0323 12:30:12.777103 23 job.go:1312] Event DELETED found for Job e2e-25cdf in namespace job-2207 with labels: map[e2e-25cdf:patched e2e-job-label:e2e-25cdf] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 03/23/25 12:30:12.777
  I0323 12:30:12.780839 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2207" for this suite. @ 03/23/25 12:30:12.784
• [6.061 seconds]
------------------------------
S
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 03/23/25 12:30:12.789
  I0323 12:30:12.789096 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename proxy @ 03/23/25 12:30:12.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:30:12.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:30:12.796
  I0323 12:30:12.798044 23 proxy.go:293] Creating pod...
  I0323 12:30:14.809591 23 proxy.go:317] Creating service...
  I0323 12:30:14.814416 23 proxy.go:354] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5567/pods/agnhost/proxy/some/path/with/DELETE
  I0323 12:30:14.816536 23 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0323 12:30:14.816558 23 proxy.go:354] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5567/pods/agnhost/proxy/some/path/with/GET
  I0323 12:30:14.824214 23 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0323 12:30:14.824234 23 proxy.go:354] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5567/pods/agnhost/proxy/some/path/with/HEAD
  I0323 12:30:14.825434 23 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0323 12:30:14.825450 23 proxy.go:354] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5567/pods/agnhost/proxy/some/path/with/OPTIONS
  I0323 12:30:14.836546 23 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0323 12:30:14.836575 23 proxy.go:354] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5567/pods/agnhost/proxy/some/path/with/PATCH
  I0323 12:30:14.846538 23 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0323 12:30:14.846575 23 proxy.go:354] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5567/pods/agnhost/proxy/some/path/with/POST
  I0323 12:30:14.856535 23 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0323 12:30:14.856557 23 proxy.go:354] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5567/pods/agnhost/proxy/some/path/with/PUT
  I0323 12:30:14.866496 23 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0323 12:30:14.866519 23 proxy.go:365] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5567/services/test-service/proxy/some/path/with/DELETE
  I0323 12:30:14.876520 23 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0323 12:30:14.876540 23 proxy.go:365] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5567/services/test-service/proxy/some/path/with/GET
  I0323 12:30:14.878059 23 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0323 12:30:14.878086 23 proxy.go:365] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5567/services/test-service/proxy/some/path/with/HEAD
  I0323 12:30:14.879390 23 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0323 12:30:14.879404 23 proxy.go:365] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5567/services/test-service/proxy/some/path/with/OPTIONS
  I0323 12:30:14.888079 23 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0323 12:30:14.888095 23 proxy.go:365] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5567/services/test-service/proxy/some/path/with/PATCH
  I0323 12:30:14.898148 23 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0323 12:30:14.898180 23 proxy.go:365] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5567/services/test-service/proxy/some/path/with/POST
  I0323 12:30:14.899916 23 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0323 12:30:14.899945 23 proxy.go:365] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5567/services/test-service/proxy/some/path/with/PUT
  I0323 12:30:14.908101 23 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0323 12:30:14.908231 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5567" for this suite. @ 03/23/25 12:30:14.91
• [2.125 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 03/23/25 12:30:14.914
  I0323 12:30:14.914419 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename cronjob @ 03/23/25 12:30:14.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:30:14.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:30:14.923
  STEP: Creating a cronjob @ 03/23/25 12:30:14.927
  STEP: creating @ 03/23/25 12:30:14.928
  STEP: getting @ 03/23/25 12:30:14.93
  STEP: listing @ 03/23/25 12:30:14.931
  STEP: watching @ 03/23/25 12:30:14.933
  I0323 12:30:14.933160 23 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 03/23/25 12:30:14.933
  STEP: cluster-wide watching @ 03/23/25 12:30:14.934
  I0323 12:30:14.934757 23 cronjob.go:407] starting watch
  STEP: patching @ 03/23/25 12:30:14.935
  STEP: updating @ 03/23/25 12:30:14.939
  I0323 12:30:14.942571 23 cronjob.go:431] waiting for watch events with expected annotations
  I0323 12:30:14.942594 23 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 03/23/25 12:30:14.942
  STEP: updating /status @ 03/23/25 12:30:14.945
  STEP: get /status @ 03/23/25 12:30:14.947
  STEP: deleting @ 03/23/25 12:30:14.949
  STEP: deleting a collection @ 03/23/25 12:30:14.954
  I0323 12:30:14.958241 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3768" for this suite. @ 03/23/25 12:30:15.01
• [0.099 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 03/23/25 12:30:15.013
  I0323 12:30:15.013285 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename kubelet-test @ 03/23/25 12:30:15.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:30:15.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:30:15.02
  STEP: Waiting for pod completion @ 03/23/25 12:30:15.026
  I0323 12:30:17.037562 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4112" for this suite. @ 03/23/25 12:30:17.039
• [2.029 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 03/23/25 12:30:17.042
  I0323 12:30:17.042650 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename resourcequota @ 03/23/25 12:30:17.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:30:17.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:30:17.05
  STEP: Creating a ResourceQuota with best effort scope @ 03/23/25 12:30:17.051
  STEP: Ensuring ResourceQuota status is calculated @ 03/23/25 12:30:17.053
  STEP: Creating a ResourceQuota with not best effort scope @ 03/23/25 12:30:19.056
  STEP: Ensuring ResourceQuota status is calculated @ 03/23/25 12:30:19.059
  STEP: Creating a best-effort pod @ 03/23/25 12:30:21.061
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 03/23/25 12:30:21.067
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 03/23/25 12:30:23.069
  STEP: Deleting the pod @ 03/23/25 12:30:25.072
  STEP: Ensuring resource quota status released the pod usage @ 03/23/25 12:30:25.077
  STEP: Creating a not best-effort pod @ 03/23/25 12:30:27.08
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 03/23/25 12:30:27.086
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 03/23/25 12:30:29.087
  STEP: Deleting the pod @ 03/23/25 12:30:31.09
  STEP: Ensuring resource quota status released the pod usage @ 03/23/25 12:30:31.095
  I0323 12:30:33.097506 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9887" for this suite. @ 03/23/25 12:30:33.099
• [16.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 03/23/25 12:30:33.101
  I0323 12:30:33.101834 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename projected @ 03/23/25 12:30:33.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:30:33.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:30:33.11
  STEP: Creating a pod to test downward API volume plugin @ 03/23/25 12:30:33.111
  STEP: Saw pod success @ 03/23/25 12:30:37.121
  I0323 12:30:37.122793 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod downwardapi-volume-3896eddd-3878-4bea-adf6-04b1b526b6f2 container client-container: <nil>
  STEP: delete the pod @ 03/23/25 12:30:37.125
  I0323 12:30:37.131873 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4378" for this suite. @ 03/23/25 12:30:37.133
• [4.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 03/23/25 12:30:37.135
  I0323 12:30:37.135635 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename var-expansion @ 03/23/25 12:30:37.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:30:37.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:30:37.145
  STEP: creating the pod @ 03/23/25 12:30:37.147
  STEP: waiting for pod running @ 03/23/25 12:30:37.152
  STEP: creating a file in subpath @ 03/23/25 12:30:39.156
  I0323 12:30:39.157534 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-8421 PodName:var-expansion-4449da76-0959-459c-825c-64636f453ce6 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0323 12:30:39.157556 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0323 12:30:39.157593 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/var-expansion-8421/pods/var-expansion-4449da76-0959-459c-825c-64636f453ce6/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 03/23/25 12:30:39.186
  I0323 12:30:39.187388 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-8421 PodName:var-expansion-4449da76-0959-459c-825c-64636f453ce6 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0323 12:30:39.187408 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0323 12:30:39.187449 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/var-expansion-8421/pods/var-expansion-4449da76-0959-459c-825c-64636f453ce6/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 03/23/25 12:30:39.21
  I0323 12:30:39.717181 23 pod_client.go:173] Successfully updated pod "var-expansion-4449da76-0959-459c-825c-64636f453ce6"
  STEP: waiting for annotated pod running @ 03/23/25 12:30:39.717
  STEP: deleting the pod gracefully @ 03/23/25 12:30:39.718
  I0323 12:30:39.718628 23 delete.go:62] Deleting pod "var-expansion-4449da76-0959-459c-825c-64636f453ce6" in namespace "var-expansion-8421"
  I0323 12:30:39.722253 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-4449da76-0959-459c-825c-64636f453ce6" to be fully deleted
  I0323 12:31:11.764035 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8421" for this suite. @ 03/23/25 12:31:11.765
• [34.633 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1631
  STEP: Creating a kubernetes client @ 03/23/25 12:31:11.768
  I0323 12:31:11.768259 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename kubectl @ 03/23/25 12:31:11.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:31:11.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:31:11.776
  STEP: creating the pod @ 03/23/25 12:31:11.777
  I0323 12:31:11.777643 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-6430 create -f -'
  I0323 12:31:11.860721 23 builder.go:146] stderr: ""
  I0323 12:31:11.860751 23 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 03/23/25 12:31:13.864
  I0323 12:31:13.864498 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-6430 label pods pause testing-label=testing-label-value'
  I0323 12:31:13.910092 23 builder.go:146] stderr: ""
  I0323 12:31:13.910124 23 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 03/23/25 12:31:13.91
  I0323 12:31:13.910190 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-6430 get pod pause -L testing-label'
  I0323 12:31:13.950993 23 builder.go:146] stderr: ""
  I0323 12:31:13.951024 23 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 03/23/25 12:31:13.951
  I0323 12:31:13.951098 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-6430 label pods pause testing-label-'
  I0323 12:31:13.995722 23 builder.go:146] stderr: ""
  I0323 12:31:13.995752 23 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 03/23/25 12:31:13.995
  I0323 12:31:13.995900 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-6430 get pod pause -L testing-label'
  I0323 12:31:14.036058 23 builder.go:146] stderr: ""
  I0323 12:31:14.036088 23 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 03/23/25 12:31:14.036
  I0323 12:31:14.036226 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-6430 delete --grace-period=0 --force -f -'
  I0323 12:31:14.079772 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0323 12:31:14.079801 23 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0323 12:31:14.079892 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-6430 get rc,svc -l name=pause --no-headers'
  I0323 12:31:14.121839 23 builder.go:146] stderr: "No resources found in kubectl-6430 namespace.\n"
  I0323 12:31:14.121871 23 builder.go:147] stdout: ""
  I0323 12:31:14.121914 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-6430 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0323 12:31:14.169302 23 builder.go:146] stderr: ""
  I0323 12:31:14.169388 23 builder.go:147] stdout: ""
  I0323 12:31:14.169511 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6430" for this suite. @ 03/23/25 12:31:14.171
• [2.406 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 03/23/25 12:31:14.174
  I0323 12:31:14.174119 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename daemonsets @ 03/23/25 12:31:14.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:31:14.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:31:14.182
  STEP: Creating a simple DaemonSet "daemon-set" @ 03/23/25 12:31:14.275
  STEP: Check that daemon pods launch on every node of the cluster. @ 03/23/25 12:31:14.278
  I0323 12:31:14.373791 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0323 12:31:14.373816 23 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0323 12:31:15.282440 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0323 12:31:15.282467 23 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0323 12:31:16.282270 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0323 12:31:16.282298 23 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0323 12:31:17.281857 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0323 12:31:17.281883 23 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0323 12:31:18.282331 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0323 12:31:18.282358 23 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0323 12:31:19.281481 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0323 12:31:19.281505 23 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0323 12:31:20.282014 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0323 12:31:20.282040 23 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0323 12:31:21.282699 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0323 12:31:21.282727 23 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0323 12:31:22.282768 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0323 12:31:22.282791 23 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0323 12:31:23.282493 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0323 12:31:23.282527 23 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0323 12:31:24.281967 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0323 12:31:24.281992 23 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 03/23/25 12:31:24.283
  I0323 12:31:24.382622 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0323 12:31:24.382649 23 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0323 12:31:25.292098 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0323 12:31:25.292126 23 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0323 12:31:26.292900 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0323 12:31:26.292923 23 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 03/23/25 12:31:26.292
  STEP: Deleting DaemonSet "daemon-set" @ 03/23/25 12:31:26.295
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3140, will wait for the garbage collector to delete the pods @ 03/23/25 12:31:26.295
  I0323 12:31:26.349706 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 3.014666ms
  I0323 12:31:26.450285 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.576637ms
  I0323 12:31:28.852695 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0323 12:31:28.852720 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0323 12:31:28.854133 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"7359"},"items":null}

  I0323 12:31:28.855125 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"7359"},"items":null}

  I0323 12:31:28.859486 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3140" for this suite. @ 03/23/25 12:31:28.86
• [14.689 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 03/23/25 12:31:28.862
  I0323 12:31:28.862960 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename pods @ 03/23/25 12:31:28.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:31:28.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:31:28.87
  STEP: creating the pod @ 03/23/25 12:31:28.872
  STEP: submitting the pod to kubernetes @ 03/23/25 12:31:28.872
  STEP: verifying QOS class is set on the pod @ 03/23/25 12:31:28.875
  I0323 12:31:28.876995 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6480" for this suite. @ 03/23/25 12:31:28.957
• [0.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 03/23/25 12:31:28.96
  I0323 12:31:28.960543 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename validating-admission-policy @ 03/23/25 12:31:28.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:31:28.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:31:28.969
  STEP: creating a policy with variables @ 03/23/25 12:31:28.974
  STEP: waiting until the marker is denied @ 03/23/25 12:31:28.987
  STEP: testing a replicated Deployment to be allowed @ 03/23/25 12:31:29.995
  STEP: testing a non-replicated ReplicaSet not to be denied @ 03/23/25 12:31:30.001
  I0323 12:31:30.028069 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-2650" for this suite. @ 03/23/25 12:31:30.033
• [1.078 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 03/23/25 12:31:30.039
  I0323 12:31:30.040014 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename downward-api @ 03/23/25 12:31:30.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:31:30.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:31:30.048
  STEP: Creating a pod to test downward api env vars @ 03/23/25 12:31:30.049
  STEP: Saw pod success @ 03/23/25 12:31:32.057
  I0323 12:31:32.058869 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod downward-api-95a48338-e25b-40e3-9fc3-09a1f672a0a9 container dapi-container: <nil>
  STEP: delete the pod @ 03/23/25 12:31:32.062
  I0323 12:31:32.072298 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2300" for this suite. @ 03/23/25 12:31:32.073
• [2.036 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 03/23/25 12:31:32.076
  I0323 12:31:32.076300 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename cronjob @ 03/23/25 12:31:32.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:31:32.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:31:32.084
  STEP: Creating a ReplaceConcurrent cronjob @ 03/23/25 12:31:32.085
  STEP: Ensuring a job is scheduled @ 03/23/25 12:31:32.088
  STEP: Ensuring exactly one is scheduled @ 03/23/25 12:32:02.092
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 03/23/25 12:32:02.093
  STEP: Ensuring the job is replaced with a new one @ 03/23/25 12:32:02.094
  STEP: Removing cronjob @ 03/23/25 12:33:02.098
  I0323 12:33:02.101100 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4848" for this suite. @ 03/23/25 12:33:02.102
• [90.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:373
  STEP: Creating a kubernetes client @ 03/23/25 12:33:02.107
  I0323 12:33:02.107276 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename namespaces @ 03/23/25 12:33:02.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:33:02.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:33:02.124
  STEP: Updating Namespace "namespaces-8135" @ 03/23/25 12:33:02.126
  I0323 12:33:02.130670 23 namespace.go:390] Namespace "namespaces-8135" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"807e9663-23d0-49d7-8aea-ec7ce4004c5d", "kubernetes.io/metadata.name":"namespaces-8135", "namespaces-8135":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0323 12:33:02.130745 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8135" for this suite. @ 03/23/25 12:33:02.203
• [0.099 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 03/23/25 12:33:02.206
  I0323 12:33:02.206278 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename var-expansion @ 03/23/25 12:33:02.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:33:02.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:33:02.214
  STEP: creating the pod with failed condition @ 03/23/25 12:33:02.215
  STEP: updating the pod @ 03/23/25 12:35:02.221
  I0323 12:35:02.727633 23 pod_client.go:173] Successfully updated pod "var-expansion-11f8c9e9-09d4-44f1-8f2d-953e408225da"
  STEP: waiting for pod running @ 03/23/25 12:35:02.727
  STEP: deleting the pod gracefully @ 03/23/25 12:35:04.733
  I0323 12:35:04.733028 23 delete.go:62] Deleting pod "var-expansion-11f8c9e9-09d4-44f1-8f2d-953e408225da" in namespace "var-expansion-7566"
  I0323 12:35:04.736447 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-11f8c9e9-09d4-44f1-8f2d-953e408225da" to be fully deleted
  I0323 12:35:36.777137 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7566" for this suite. @ 03/23/25 12:35:36.778
• [154.575 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 03/23/25 12:35:36.781
  I0323 12:35:36.781401 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename podtemplate @ 03/23/25 12:35:36.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:35:36.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:35:36.79
  I0323 12:35:36.803768 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5481" for this suite. @ 03/23/25 12:35:36.879
• [0.102 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 03/23/25 12:35:36.883
  I0323 12:35:36.883058 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename daemonsets @ 03/23/25 12:35:36.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:35:36.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:35:36.891
  STEP: Creating simple DaemonSet "daemon-set" @ 03/23/25 12:35:36.984
  STEP: Check that daemon pods launch on every node of the cluster. @ 03/23/25 12:35:36.991
  I0323 12:35:37.082957 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0323 12:35:37.082984 23 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0323 12:35:37.995199 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0323 12:35:37.995227 23 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0323 12:35:38.994917 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0323 12:35:38.995022 23 fixtures.go:131] Node k8s-10-255-0-208 is running 0 daemon pod, expected 1
  I0323 12:35:39.995044 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0323 12:35:39.995072 23 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 03/23/25 12:35:39.996
  STEP: DeleteCollection of the DaemonSets @ 03/23/25 12:35:39.997
  STEP: Verify that ReplicaSets have been deleted @ 03/23/25 12:35:40
  I0323 12:35:40.100191 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"8287"},"items":null}

  I0323 12:35:40.102140 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"8287"},"items":[{"metadata":{"name":"daemon-set-4qnnx","generateName":"daemon-set-","namespace":"daemonsets-887","uid":"4f238599-18c7-4f71-96a5-3638e70d597e","resourceVersion":"8283","creationTimestamp":"2025-03-23T12:35:37Z","deletionTimestamp":"2025-03-23T12:36:10Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"0f2701f0-e027-4743-ba72-beddceaa5be6","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-03-23T12:35:37Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0f2701f0-e027-4743-ba72-beddceaa5be6\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-03-23T12:35:39Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.20.64.147\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-bznjj","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-bznjj","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k8s-10-255-0-208","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k8s-10-255-0-208"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-23T12:35:39Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-23T12:35:37Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-23T12:35:39Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-23T12:35:39Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-23T12:35:37Z"}],"hostIP":"10.255.0.208","hostIPs":[{"ip":"10.255.0.208"}],"podIP":"172.20.64.147","podIPs":[{"ip":"172.20.64.147"}],"startTime":"2025-03-23T12:35:37Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-03-23T12:35:38Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://0b11af236dbfc13932767363d3e0390667848835e719c3d91c7397be9b7ce937","started":true,"volumeMounts":[{"name":"kube-api-access-bznjj","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-c498w","generateName":"daemon-set-","namespace":"daemonsets-887","uid":"98be5a9f-b018-4100-9350-0f9242d5705e","resourceVersion":"8285","creationTimestamp":"2025-03-23T12:35:37Z","deletionTimestamp":"2025-03-23T12:36:10Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"0f2701f0-e027-4743-ba72-beddceaa5be6","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-03-23T12:35:37Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0f2701f0-e027-4743-ba72-beddceaa5be6\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-03-23T12:35:38Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.20.254.36\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-kg878","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-kg878","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k8s-10-255-0-207","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k8s-10-255-0-207"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-23T12:35:38Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-23T12:35:37Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-23T12:35:38Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-23T12:35:38Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-23T12:35:37Z"}],"hostIP":"10.255.0.207","hostIPs":[{"ip":"10.255.0.207"}],"podIP":"172.20.254.36","podIPs":[{"ip":"172.20.254.36"}],"startTime":"2025-03-23T12:35:37Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-03-23T12:35:37Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://0d5e0f172d94c457b09487f56a571fcfc6d7490c65d25b7d7c20347299ed23db","started":true,"volumeMounts":[{"name":"kube-api-access-kg878","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-mwvjw","generateName":"daemon-set-","namespace":"daemonsets-887","uid":"cd030895-d8f3-438c-93b0-81aa4ebbd336","resourceVersion":"8284","creationTimestamp":"2025-03-23T12:35:37Z","deletionTimestamp":"2025-03-23T12:36:10Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"0f2701f0-e027-4743-ba72-beddceaa5be6","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-03-23T12:35:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0f2701f0-e027-4743-ba72-beddceaa5be6\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-03-23T12:35:38Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.20.63.199\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-g4d4f","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-g4d4f","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k8s-10-255-0-206","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k8s-10-255-0-206"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-23T12:35:38Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-23T12:35:37Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-23T12:35:38Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-23T12:35:38Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-23T12:35:37Z"}],"hostIP":"10.255.0.206","hostIPs":[{"ip":"10.255.0.206"}],"podIP":"172.20.63.199","podIPs":[{"ip":"172.20.63.199"}],"startTime":"2025-03-23T12:35:37Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-03-23T12:35:37Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://4ddf5087c2dcd3345c8e1084d6b6f96d7a4e232900f89026c53b5349cf2ce304","started":true,"volumeMounts":[{"name":"kube-api-access-g4d4f","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I0323 12:35:40.107363 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-887" for this suite. @ 03/23/25 12:35:40.108
• [3.229 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 03/23/25 12:35:40.112
  I0323 12:35:40.112627 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename emptydir @ 03/23/25 12:35:40.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:35:40.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:35:40.122
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 03/23/25 12:35:40.124
  STEP: Saw pod success @ 03/23/25 12:35:44.134
  I0323 12:35:44.135356 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-01fa927d-420e-4679-b0db-27d154b66fac container test-container: <nil>
  STEP: delete the pod @ 03/23/25 12:35:44.143
  I0323 12:35:44.150104 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6623" for this suite. @ 03/23/25 12:35:44.151
• [4.041 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 03/23/25 12:35:44.153
  I0323 12:35:44.153960 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename emptydir @ 03/23/25 12:35:44.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:35:44.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:35:44.164
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 03/23/25 12:35:44.166
  STEP: Saw pod success @ 03/23/25 12:35:48.175
  I0323 12:35:48.176750 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-d4c4ebed-f89a-4fe3-b99b-feaadf3065c0 container test-container: <nil>
  STEP: delete the pod @ 03/23/25 12:35:48.179
  I0323 12:35:48.185921 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9775" for this suite. @ 03/23/25 12:35:48.187
• [4.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 03/23/25 12:35:48.189
  I0323 12:35:48.189974 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename projected @ 03/23/25 12:35:48.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:35:48.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:35:48.196
  STEP: Creating projection with secret that has name projected-secret-test-map-287d58e2-13e2-4694-9d06-eca3467c0708 @ 03/23/25 12:35:48.198
  STEP: Creating a pod to test consume secrets @ 03/23/25 12:35:48.2
  STEP: Saw pod success @ 03/23/25 12:35:52.212
  I0323 12:35:52.213351 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-projected-secrets-6a68b977-e846-4226-a8bd-394485c2edc7 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 03/23/25 12:35:52.215
  I0323 12:35:52.222999 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1158" for this suite. @ 03/23/25 12:35:52.224
• [4.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 03/23/25 12:35:52.227
  I0323 12:35:52.227203 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename services @ 03/23/25 12:35:52.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:35:52.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:35:52.237
  STEP: creating service in namespace services-9762 @ 03/23/25 12:35:52.238
  STEP: creating service affinity-clusterip-transition in namespace services-9762 @ 03/23/25 12:35:52.238
  STEP: creating replication controller affinity-clusterip-transition in namespace services-9762 @ 03/23/25 12:35:52.245
  I0323 12:35:52.249959      23 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-9762, replica count: 3
  I0323 12:35:55.303158      23 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0323 12:35:58.303908      23 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0323 12:36:01.304042      23 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0323 12:36:01.306833 23 resource.go:361] Creating new exec pod
  I0323 12:36:04.314275 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-9762 exec execpod-affinityvkn9p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0323 12:36:04.381362 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.68.255.242) 80 port [tcp/http] succeeded!\n"
  I0323 12:36:04.381397 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0323 12:36:04.381452 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-9762 exec execpod-affinityvkn9p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.255.242 80'
  I0323 12:36:04.444767 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.255.242 80\nConnection to 10.68.255.242 80 port [tcp/http] succeeded!\n"
  I0323 12:36:04.444801 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0323 12:36:04.448492 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-9762 exec execpod-affinityvkn9p -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.68.255.242:80/ ; done'
  I0323 12:36:04.560902 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.255.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.255.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.255.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.255.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.255.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.255.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.255.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.255.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.255.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.255.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.255.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.255.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.255.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.255.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.255.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.255.242:80/\n"
  I0323 12:36:04.560946 23 builder.go:147] stdout: "\naffinity-clusterip-transition-cpfcm\naffinity-clusterip-transition-gkxpb\naffinity-clusterip-transition-z9sqz\naffinity-clusterip-transition-cpfcm\naffinity-clusterip-transition-gkxpb\naffinity-clusterip-transition-z9sqz\naffinity-clusterip-transition-cpfcm\naffinity-clusterip-transition-gkxpb\naffinity-clusterip-transition-z9sqz\naffinity-clusterip-transition-cpfcm\naffinity-clusterip-transition-gkxpb\naffinity-clusterip-transition-z9sqz\naffinity-clusterip-transition-cpfcm\naffinity-clusterip-transition-gkxpb\naffinity-clusterip-transition-z9sqz\naffinity-clusterip-transition-cpfcm"
  I0323 12:36:04.560957 23 service.go:242] Received response from host: affinity-clusterip-transition-cpfcm
  I0323 12:36:04.560965 23 service.go:242] Received response from host: affinity-clusterip-transition-gkxpb
  I0323 12:36:04.560970 23 service.go:242] Received response from host: affinity-clusterip-transition-z9sqz
  I0323 12:36:04.560975 23 service.go:242] Received response from host: affinity-clusterip-transition-cpfcm
  I0323 12:36:04.561017 23 service.go:242] Received response from host: affinity-clusterip-transition-gkxpb
  I0323 12:36:04.561028 23 service.go:242] Received response from host: affinity-clusterip-transition-z9sqz
  I0323 12:36:04.561036 23 service.go:242] Received response from host: affinity-clusterip-transition-cpfcm
  I0323 12:36:04.561043 23 service.go:242] Received response from host: affinity-clusterip-transition-gkxpb
  I0323 12:36:04.561050 23 service.go:242] Received response from host: affinity-clusterip-transition-z9sqz
  I0323 12:36:04.561055 23 service.go:242] Received response from host: affinity-clusterip-transition-cpfcm
  I0323 12:36:04.561072 23 service.go:242] Received response from host: affinity-clusterip-transition-gkxpb
  I0323 12:36:04.561081 23 service.go:242] Received response from host: affinity-clusterip-transition-z9sqz
  I0323 12:36:04.561088 23 service.go:242] Received response from host: affinity-clusterip-transition-cpfcm
  I0323 12:36:04.561095 23 service.go:242] Received response from host: affinity-clusterip-transition-gkxpb
  I0323 12:36:04.561101 23 service.go:242] Received response from host: affinity-clusterip-transition-z9sqz
  I0323 12:36:04.561107 23 service.go:242] Received response from host: affinity-clusterip-transition-cpfcm
  I0323 12:36:04.564974 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-9762 exec execpod-affinityvkn9p -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.68.255.242:80/ ; done'
  I0323 12:36:04.673815 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.255.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.255.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.255.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.255.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.255.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.255.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.255.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.255.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.255.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.255.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.255.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.255.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.255.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.255.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.255.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.255.242:80/\n"
  I0323 12:36:04.673863 23 builder.go:147] stdout: "\naffinity-clusterip-transition-z9sqz\naffinity-clusterip-transition-z9sqz\naffinity-clusterip-transition-z9sqz\naffinity-clusterip-transition-z9sqz\naffinity-clusterip-transition-z9sqz\naffinity-clusterip-transition-z9sqz\naffinity-clusterip-transition-z9sqz\naffinity-clusterip-transition-z9sqz\naffinity-clusterip-transition-z9sqz\naffinity-clusterip-transition-z9sqz\naffinity-clusterip-transition-z9sqz\naffinity-clusterip-transition-z9sqz\naffinity-clusterip-transition-z9sqz\naffinity-clusterip-transition-z9sqz\naffinity-clusterip-transition-z9sqz\naffinity-clusterip-transition-z9sqz"
  I0323 12:36:04.673875 23 service.go:242] Received response from host: affinity-clusterip-transition-z9sqz
  I0323 12:36:04.673882 23 service.go:242] Received response from host: affinity-clusterip-transition-z9sqz
  I0323 12:36:04.673890 23 service.go:242] Received response from host: affinity-clusterip-transition-z9sqz
  I0323 12:36:04.673895 23 service.go:242] Received response from host: affinity-clusterip-transition-z9sqz
  I0323 12:36:04.673901 23 service.go:242] Received response from host: affinity-clusterip-transition-z9sqz
  I0323 12:36:04.673906 23 service.go:242] Received response from host: affinity-clusterip-transition-z9sqz
  I0323 12:36:04.673913 23 service.go:242] Received response from host: affinity-clusterip-transition-z9sqz
  I0323 12:36:04.673917 23 service.go:242] Received response from host: affinity-clusterip-transition-z9sqz
  I0323 12:36:04.673923 23 service.go:242] Received response from host: affinity-clusterip-transition-z9sqz
  I0323 12:36:04.673927 23 service.go:242] Received response from host: affinity-clusterip-transition-z9sqz
  I0323 12:36:04.673932 23 service.go:242] Received response from host: affinity-clusterip-transition-z9sqz
  I0323 12:36:04.673946 23 service.go:242] Received response from host: affinity-clusterip-transition-z9sqz
  I0323 12:36:04.673952 23 service.go:242] Received response from host: affinity-clusterip-transition-z9sqz
  I0323 12:36:04.673958 23 service.go:242] Received response from host: affinity-clusterip-transition-z9sqz
  I0323 12:36:04.673963 23 service.go:242] Received response from host: affinity-clusterip-transition-z9sqz
  I0323 12:36:04.673969 23 service.go:242] Received response from host: affinity-clusterip-transition-z9sqz
  I0323 12:36:04.674030 23 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-9762, will wait for the garbage collector to delete the pods @ 03/23/25 12:36:04.681
  I0323 12:36:04.735730 23 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 2.750698ms
  I0323 12:36:04.836672 23 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 100.938811ms
  I0323 12:36:07.545466 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9762" for this suite. @ 03/23/25 12:36:07.547
• [15.323 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 03/23/25 12:36:07.549
  I0323 12:36:07.549952 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename watch @ 03/23/25 12:36:07.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:36:07.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:36:07.558
  STEP: creating a watch on configmaps @ 03/23/25 12:36:07.56
  STEP: creating a new configmap @ 03/23/25 12:36:07.561
  STEP: modifying the configmap once @ 03/23/25 12:36:07.564
  STEP: closing the watch once it receives two notifications @ 03/23/25 12:36:07.567
  I0323 12:36:07.567270 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6204  8d0f4b32-73fc-4aae-8fde-9951becd757f 8612 0 2025-03-23 12:36:07 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-03-23 12:36:07 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0323 12:36:07.567372 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6204  8d0f4b32-73fc-4aae-8fde-9951becd757f 8613 0 2025-03-23 12:36:07 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-03-23 12:36:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 03/23/25 12:36:07.567
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 03/23/25 12:36:07.57
  STEP: deleting the configmap @ 03/23/25 12:36:07.571
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 03/23/25 12:36:07.576
  I0323 12:36:07.576974 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6204  8d0f4b32-73fc-4aae-8fde-9951becd757f 8614 0 2025-03-23 12:36:07 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-03-23 12:36:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0323 12:36:07.577044 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6204  8d0f4b32-73fc-4aae-8fde-9951becd757f 8615 0 2025-03-23 12:36:07 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-03-23 12:36:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0323 12:36:07.577110 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6204" for this suite. @ 03/23/25 12:36:07.648
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 03/23/25 12:36:07.651
  I0323 12:36:07.651248 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename downward-api @ 03/23/25 12:36:07.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:36:07.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:36:07.659
  STEP: Creating a pod to test downward api env vars @ 03/23/25 12:36:07.661
  STEP: Saw pod success @ 03/23/25 12:36:11.671
  I0323 12:36:11.673054 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod downward-api-3ad02563-3385-48b0-b109-0f35de50573d container dapi-container: <nil>
  STEP: delete the pod @ 03/23/25 12:36:11.676
  I0323 12:36:11.682916 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7056" for this suite. @ 03/23/25 12:36:11.684
• [4.036 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:469
  STEP: Creating a kubernetes client @ 03/23/25 12:36:11.687
  I0323 12:36:11.687046 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename sched-preemption @ 03/23/25 12:36:11.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:36:11.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:36:11.695
  I0323 12:36:11.701596 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0323 12:37:11.704746 23 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 03/23/25 12:37:11.706
  STEP: Adding a custom resource @ 03/23/25 12:37:11.706
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 03/23/25 12:37:11.71
  I0323 12:37:11.714804 23 preemption.go:503] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 03/23/25 12:37:11.714
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 03/23/25 12:37:13.718
  I0323 12:37:13.722249 23 preemption.go:521] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 03/23/25 12:37:13.722
  STEP: Verifying the pod has the pod disruption condition @ 03/23/25 12:37:15.726
  I0323 12:37:15.727701 23 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I0323 12:37:16.234482 23 pod_client.go:173] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 03/23/25 12:37:16.24
  STEP: Removing a custom resource @ 03/23/25 12:37:16.246
  STEP: Removing a custom resource @ 03/23/25 12:37:16.249
  I0323 12:37:16.252851 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6559" for this suite. @ 03/23/25 12:37:16.254
• [64.569 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 03/23/25 12:37:16.256
  I0323 12:37:16.256541 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename crd-watch @ 03/23/25 12:37:16.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:37:16.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:37:16.264
  I0323 12:37:16.265853 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Creating first CR  @ 03/23/25 12:37:18.785
  I0323 12:37:18.787803 23 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-03-23T12:37:18Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-03-23T12:37:18Z]] name:name1 resourceVersion:8858 uid:5d5b24a6-b6e9-4f5a-9786-5de5a2c21682] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 03/23/25 12:37:28.788
  I0323 12:37:28.791399 23 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-03-23T12:37:28Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-03-23T12:37:28Z]] name:name2 resourceVersion:8900 uid:ded144d9-f5fd-4834-a47c-bcb17fdd5e64] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 03/23/25 12:37:38.792
  I0323 12:37:38.795754 23 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-03-23T12:37:18Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-03-23T12:37:38Z]] name:name1 resourceVersion:8917 uid:5d5b24a6-b6e9-4f5a-9786-5de5a2c21682] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 03/23/25 12:37:48.796
  I0323 12:37:48.799796 23 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-03-23T12:37:28Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-03-23T12:37:48Z]] name:name2 resourceVersion:8934 uid:ded144d9-f5fd-4834-a47c-bcb17fdd5e64] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 03/23/25 12:37:58.8
  I0323 12:37:58.803786 23 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-03-23T12:37:18Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-03-23T12:37:38Z]] name:name1 resourceVersion:8950 uid:5d5b24a6-b6e9-4f5a-9786-5de5a2c21682] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 03/23/25 12:38:08.804
  I0323 12:38:08.808069 23 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-03-23T12:37:28Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-03-23T12:37:48Z]] name:name2 resourceVersion:8966 uid:ded144d9-f5fd-4834-a47c-bcb17fdd5e64] num:map[num1:9223372036854775807 num2:1000000]]}
  I0323 12:38:19.315433 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-4489" for this suite. @ 03/23/25 12:38:19.317
• [63.063 seconds]
------------------------------
S
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 03/23/25 12:38:19.319
  I0323 12:38:19.319518 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename csiinlinevolumes @ 03/23/25 12:38:19.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:38:19.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:38:19.328
  STEP: creating @ 03/23/25 12:38:19.329
  STEP: getting @ 03/23/25 12:38:19.337
  STEP: listing in namespace @ 03/23/25 12:38:19.339
  STEP: patching @ 03/23/25 12:38:19.34
  STEP: deleting @ 03/23/25 12:38:19.343
  I0323 12:38:19.349335 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-429" for this suite. @ 03/23/25 12:38:19.417
• [0.101 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 03/23/25 12:38:19.42
  I0323 12:38:19.420793 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename emptydir-wrapper @ 03/23/25 12:38:19.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:38:19.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:38:19.429
  STEP: Cleaning up the secret @ 03/23/25 12:38:21.443
  STEP: Cleaning up the configmap @ 03/23/25 12:38:21.445
  STEP: Cleaning up the pod @ 03/23/25 12:38:21.447
  I0323 12:38:21.453659 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-6502" for this suite. @ 03/23/25 12:38:21.455
• [2.039 seconds]
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 03/23/25 12:38:21.459
  I0323 12:38:21.459767 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename watch @ 03/23/25 12:38:21.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:38:21.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:38:21.466
  STEP: creating a watch on configmaps with label A @ 03/23/25 12:38:21.468
  STEP: creating a watch on configmaps with label B @ 03/23/25 12:38:21.469
  STEP: creating a watch on configmaps with label A or B @ 03/23/25 12:38:21.47
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 03/23/25 12:38:21.47
  I0323 12:38:21.472851 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8003  5ab1ccc9-1001-4206-aeb8-a8085b538ef4 9037 0 2025-03-23 12:38:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-03-23 12:38:21 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0323 12:38:21.472935 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8003  5ab1ccc9-1001-4206-aeb8-a8085b538ef4 9037 0 2025-03-23 12:38:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-03-23 12:38:21 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 03/23/25 12:38:21.472
  I0323 12:38:21.475728 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8003  5ab1ccc9-1001-4206-aeb8-a8085b538ef4 9038 0 2025-03-23 12:38:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-03-23 12:38:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0323 12:38:21.475803 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8003  5ab1ccc9-1001-4206-aeb8-a8085b538ef4 9038 0 2025-03-23 12:38:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-03-23 12:38:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 03/23/25 12:38:21.475
  I0323 12:38:21.478674 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8003  5ab1ccc9-1001-4206-aeb8-a8085b538ef4 9039 0 2025-03-23 12:38:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-03-23 12:38:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0323 12:38:21.478731 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8003  5ab1ccc9-1001-4206-aeb8-a8085b538ef4 9039 0 2025-03-23 12:38:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-03-23 12:38:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 03/23/25 12:38:21.478
  I0323 12:38:21.480715 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8003  5ab1ccc9-1001-4206-aeb8-a8085b538ef4 9040 0 2025-03-23 12:38:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-03-23 12:38:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0323 12:38:21.480738 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8003  5ab1ccc9-1001-4206-aeb8-a8085b538ef4 9040 0 2025-03-23 12:38:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-03-23 12:38:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 03/23/25 12:38:21.48
  I0323 12:38:21.482361 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8003  64dcc6f3-173b-482c-ae3a-cf204e656bea 9041 0 2025-03-23 12:38:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-03-23 12:38:21 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0323 12:38:21.482416 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8003  64dcc6f3-173b-482c-ae3a-cf204e656bea 9041 0 2025-03-23 12:38:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-03-23 12:38:21 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 03/23/25 12:38:31.483
  I0323 12:38:31.487040 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8003  64dcc6f3-173b-482c-ae3a-cf204e656bea 9083 0 2025-03-23 12:38:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-03-23 12:38:21 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0323 12:38:31.487076 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8003  64dcc6f3-173b-482c-ae3a-cf204e656bea 9083 0 2025-03-23 12:38:21 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-03-23 12:38:21 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0323 12:38:41.487293 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8003" for this suite. @ 03/23/25 12:38:41.489
• [20.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 03/23/25 12:38:41.492
  I0323 12:38:41.492112 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename projected @ 03/23/25 12:38:41.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:38:41.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:38:41.501
  STEP: Creating a pod to test downward API volume plugin @ 03/23/25 12:38:41.502
  STEP: Saw pod success @ 03/23/25 12:38:45.513
  I0323 12:38:45.514693 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod downwardapi-volume-04016cbd-ee5a-496a-836e-6ab5fd7a7495 container client-container: <nil>
  STEP: delete the pod @ 03/23/25 12:38:45.521
  I0323 12:38:45.528788 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5293" for this suite. @ 03/23/25 12:38:45.53
• [4.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 03/23/25 12:38:45.532
  I0323 12:38:45.532834 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename field-validation @ 03/23/25 12:38:45.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:38:45.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:38:45.54
  STEP: apply creating a deployment @ 03/23/25 12:38:45.542
  I0323 12:38:45.548616 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1702" for this suite. @ 03/23/25 12:38:45.631
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 03/23/25 12:38:45.634
  I0323 12:38:45.634618 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename deployment @ 03/23/25 12:38:45.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:38:45.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:38:45.644
  STEP: creating a Deployment @ 03/23/25 12:38:45.647
  STEP: waiting for Deployment to be created @ 03/23/25 12:38:45.65
  STEP: waiting for all Replicas to be Ready @ 03/23/25 12:38:45.651
  I0323 12:38:45.652166 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0323 12:38:45.652182 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0323 12:38:45.666369 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0323 12:38:45.666391 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0323 12:38:45.689086 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0323 12:38:45.689108 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0323 12:38:45.713320 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0323 12:38:45.713347 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0323 12:38:46.367404 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0323 12:38:46.367429 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0323 12:38:48.384121 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 03/23/25 12:38:48.384
  I0323 12:38:48.389382 23 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 03/23/25 12:38:48.389
  I0323 12:38:48.390340 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 0
  I0323 12:38:48.390355 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 0
  I0323 12:38:48.390365 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 0
  I0323 12:38:48.390373 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 0
  I0323 12:38:48.390400 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 0
  I0323 12:38:48.390408 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 0
  I0323 12:38:48.390481 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 0
  I0323 12:38:48.390496 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 0
  I0323 12:38:48.390503 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 1
  I0323 12:38:48.390512 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 1
  I0323 12:38:48.390522 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 2
  I0323 12:38:48.390531 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 2
  I0323 12:38:48.390572 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 2
  I0323 12:38:48.390583 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 2
  I0323 12:38:48.397650 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 2
  I0323 12:38:48.397677 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 2
  I0323 12:38:48.406063 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 2
  I0323 12:38:48.406080 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 2
  I0323 12:38:48.412901 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 1
  I0323 12:38:48.412916 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 1
  I0323 12:38:48.424233 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 1
  I0323 12:38:48.424254 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 1
  I0323 12:38:49.378644 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 2
  I0323 12:38:49.378676 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 2
  I0323 12:38:49.388278 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 1
  STEP: listing Deployments @ 03/23/25 12:38:49.388
  I0323 12:38:49.389588 23 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 03/23/25 12:38:49.389
  I0323 12:38:49.394890 23 deployment.go:360] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 03/23/25 12:38:49.394
  I0323 12:38:49.400168 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0323 12:38:49.403036 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0323 12:38:49.415613 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0323 12:38:49.423763 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0323 12:38:49.428438 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0323 12:38:50.381569 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0323 12:38:50.398688 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0323 12:38:50.403877 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0323 12:38:50.408925 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0323 12:38:51.400733 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 03/23/25 12:38:51.411
  STEP: fetching the DeploymentStatus @ 03/23/25 12:38:51.416
  I0323 12:38:51.418984 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 1
  I0323 12:38:51.419106 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 1
  I0323 12:38:51.419126 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 1
  I0323 12:38:51.419193 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 1
  I0323 12:38:51.419279 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 1
  I0323 12:38:51.419349 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 2
  I0323 12:38:51.419362 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 2
  I0323 12:38:51.419460 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 2
  I0323 12:38:51.419467 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 2
  I0323 12:38:51.419475 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-5590 with ReadyReplicas 3
  STEP: deleting the Deployment @ 03/23/25 12:38:51.419
  I0323 12:38:51.422847 23 deployment.go:475] observed event type MODIFIED
  I0323 12:38:51.422939 23 deployment.go:475] observed event type MODIFIED
  I0323 12:38:51.423009 23 deployment.go:475] observed event type MODIFIED
  I0323 12:38:51.423035 23 deployment.go:475] observed event type MODIFIED
  I0323 12:38:51.423096 23 deployment.go:475] observed event type MODIFIED
  I0323 12:38:51.423110 23 deployment.go:475] observed event type MODIFIED
  I0323 12:38:51.423120 23 deployment.go:475] observed event type MODIFIED
  I0323 12:38:51.423188 23 deployment.go:475] observed event type MODIFIED
  I0323 12:38:51.423311 23 deployment.go:475] observed event type MODIFIED
  I0323 12:38:51.423322 23 deployment.go:475] observed event type MODIFIED
  I0323 12:38:51.423333 23 deployment.go:475] observed event type MODIFIED
  I0323 12:38:51.423425 23 deployment.go:475] observed event type MODIFIED
  I0323 12:38:51.423434 23 deployment.go:475] observed event type MODIFIED
  I0323 12:38:51.424516 23 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0323 12:38:51.426090 23 deployment.go:657] ReplicaSet "test-deployment-564597bcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-564597bcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5590",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "561d068b-18f2-440f-ae3f-81a731be183c",
      ResourceVersion: (string) (len=4) "9225",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330325,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "2d37018b-8a8d-4dec-8c86-ab0220903a2b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330329,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 32 64 33 37  30 31 38 62 2d 38 61 38  |":\"2d37018b-8a8|
              00000130  64 2d 34 64 65 63 2d 38  63 38 36 2d 61 62 30 32  |d-4dec-8c86-ab02|
              00000140  32 30 39 30 33 61 32 62  5c 22 7d 22 3a 7b 7d 7d  |20903a2b\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330329,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0323 12:38:51.436849 23 deployment.go:657] ReplicaSet "test-deployment-79899bcfcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-79899bcfcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5590",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6c67a007-b931-4fee-912d-c8baf0146928",
      ResourceVersion: (string) (len=4) "9324",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330329,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "2d37018b-8a8d-4dec-8c86-ab0220903a2b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330330,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 32 64 33 37  30 31 38 62 2d 38 61 38  |":\"2d37018b-8a8|
              00000130  64 2d 34 64 65 63 2d 38  63 38 36 2d 61 62 30 32  |d-4dec-8c86-ab02|
              00000140  32 30 39 30 33 61 32 62  5c 22 7d 22 3a 7b 7d 7d  |20903a2b\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330331,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0323 12:38:51.445206 23 deployment.go:669] pod: "test-deployment-79899bcfcc-9czgk":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-9czgk",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-5590",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c0a9e25a-d80d-495f-99c0-f73f36e43779",
      ResourceVersion: (string) (len=4) "9340",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330329,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330332,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "6c67a007-b931-4fee-912d-c8baf0146928",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330329,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  36 63 36 37 61 30 30 37  |uid\":\"6c67a007|
              000000a0  2d 62 39 33 31 2d 34 66  65 65 2d 39 31 32 64 2d  |-b931-4fee-912d-|
              000000b0  63 38 62 61 66 30 31 34  36 39 32 38 5c 22 7d 22  |c8baf0146928\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330330,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 35 34  2e 34 37 5c 22 7d 22 3a  |2.20.254.47\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nvm47",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nvm47",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330330,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330329,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330330,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330330,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330329,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=13) "172.20.254.47",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.254.47"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330329,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878330329,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://850802b8bb7bc55dc9da16f76025d0c75cae2311297fe7491a09c0ef5afce4b8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nvm47",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0323 12:38:51.446350 23 deployment.go:669] pod: "test-deployment-79899bcfcc-mm5hp":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-mm5hp",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-5590",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b742b760-77ce-4d35-80dc-07c35325fed3",
      ResourceVersion: (string) (len=4) "9323",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330330,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "6c67a007-b931-4fee-912d-c8baf0146928",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330330,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  36 63 36 37 61 30 30 37  |uid\":\"6c67a007|
              000000a0  2d 62 39 33 31 2d 34 66  65 65 2d 39 31 32 64 2d  |-b931-4fee-912d-|
              000000b0  63 38 62 61 66 30 31 34  36 39 32 38 5c 22 7d 22  |c8baf0146928\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330331,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 34 2e  31 35 31 5c 22 7d 22 3a  |2.20.64.151\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bhfsc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bhfsc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330331,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330330,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330331,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330331,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330330,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.151",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.151"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330330,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878330330,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3b4d97c294fe035be386ab511040f9cc9b6dcace5058279365c07626f137e43a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bhfsc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0323 12:38:51.447795 23 deployment.go:657] ReplicaSet "test-deployment-f78d658f9":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-f78d658f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5590",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "869ef4ac-f78a-463a-a7fb-7661cce52462",
      ResourceVersion: (string) (len=4) "9332",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330328,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "2d37018b-8a8d-4dec-8c86-ab0220903a2b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330331,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 32 64 33 37  30 31 38 62 2d 38 61 38  |":\"2d37018b-8a8|
              00000130  64 2d 34 64 65 63 2d 38  63 38 36 2d 61 62 30 32  |d-4dec-8c86-ab02|
              00000140  32 30 39 30 33 61 32 62  5c 22 7d 22 3a 7b 7d 7d  |20903a2b\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330331,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0323 12:38:51.539063 23 deployment.go:669] pod: "test-deployment-f78d658f9-5dgfv":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-f78d658f9-5dgfv",
      GenerateName: (string) (len=26) "test-deployment-f78d658f9-",
      Namespace: (string) (len=15) "deployment-5590",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f2b7d1d9-5297-4c99-85df-7e821ff13dcf",
      ResourceVersion: (string) (len=4) "9327",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330328,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330333,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-f78d658f9",
          UID: (types.UID) (len=36) "869ef4ac-f78a-463a-a7fb-7661cce52462",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330328,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  38 36 39 65 66 34 61 63  |uid\":\"869ef4ac|
              000000a0  2d 66 37 38 61 2d 34 36  33 61 2d 61 37 66 62 2d  |-f78a-463a-a7fb-|
              000000b0  37 36 36 31 63 63 65 35  32 34 36 32 5c 22 7d 22  |7661cce52462\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330329,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 35 34  2e 34 36 5c 22 7d 22 3a  |2.20.254.46\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-26zft",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-26zft",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330329,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330328,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330329,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330329,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330328,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=13) "172.20.254.46",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.254.46"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330328,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878330328,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=40) "easzlab.io.local:5000/easzlab/pause:3.10",
          ImageID: (string) (len=107) "easzlab.io.local:5000/easzlab/pause@sha256:d8c8296a995aa91d1a888d405d98f3c4a317fe2b5790b996051f7ff1184a3694",
          ContainerID: (string) (len=77) "containerd://5b2c8434f046d551f81333413848f24733ccb33efb16e673f5a20f68c1ff7e0a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-26zft",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0323 12:38:51.541162 23 deployment.go:669] pod: "test-deployment-f78d658f9-wxj8v":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-f78d658f9-wxj8v",
      GenerateName: (string) (len=26) "test-deployment-f78d658f9-",
      Namespace: (string) (len=15) "deployment-5590",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c51625a8-a63f-4644-8232-71f21b1376b2",
      ResourceVersion: (string) (len=4) "9279",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330329,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330332,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-f78d658f9",
          UID: (types.UID) (len=36) "869ef4ac-f78a-463a-a7fb-7661cce52462",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330329,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  38 36 39 65 66 34 61 63  |uid\":\"869ef4ac|
              000000a0  2d 66 37 38 61 2d 34 36  33 61 2d 61 37 66 62 2d  |-f78a-463a-a7fb-|
              000000b0  37 36 36 31 63 63 65 35  32 34 36 32 5c 22 7d 22  |7661cce52462\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330330,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 34 2e  31 35 30 5c 22 7d 22 3a  |2.20.64.150\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sgbb7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sgbb7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330330,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330329,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330330,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330330,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330329,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.150",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.150"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330329,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878330330,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=40) "easzlab.io.local:5000/easzlab/pause:3.10",
          ImageID: (string) (len=107) "easzlab.io.local:5000/easzlab/pause@sha256:d8c8296a995aa91d1a888d405d98f3c4a317fe2b5790b996051f7ff1184a3694",
          ContainerID: (string) (len=77) "containerd://b42fce8af70b72470b2b7805f2318de66f61b6fec840b2aa2dde7b19fd006c95",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-sgbb7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0323 12:38:51.542462 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5590" for this suite. @ 03/23/25 12:38:51.544
• [5.914 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 03/23/25 12:38:51.548
  I0323 12:38:51.548425 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename pods @ 03/23/25 12:38:51.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:38:51.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:38:51.557
  STEP: Create a pod @ 03/23/25 12:38:51.558
  STEP: patching /status @ 03/23/25 12:38:53.57
  I0323 12:38:53.574621 23 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0323 12:38:53.574717 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-409" for this suite. @ 03/23/25 12:38:53.576
• [2.031 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 03/23/25 12:38:53.579
  I0323 12:38:53.579461 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename downward-api @ 03/23/25 12:38:53.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:38:53.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:38:53.587
  STEP: Creating a pod to test downward API volume plugin @ 03/23/25 12:38:53.588
  STEP: Saw pod success @ 03/23/25 12:38:55.595
  I0323 12:38:55.597129 23 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-6eb91f09-ef13-43ae-93a1-928840cb52d8 container client-container: <nil>
  STEP: delete the pod @ 03/23/25 12:38:55.613
  I0323 12:38:55.620001 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5656" for this suite. @ 03/23/25 12:38:55.621
• [2.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 03/23/25 12:38:55.624
  I0323 12:38:55.624659 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename kubectl @ 03/23/25 12:38:55.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:38:55.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:38:55.684
  STEP: creating a replication controller @ 03/23/25 12:38:55.686
  I0323 12:38:55.686317 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-5527 create -f -'
  I0323 12:38:55.765089 23 builder.go:146] stderr: ""
  I0323 12:38:55.765118 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 03/23/25 12:38:55.765
  I0323 12:38:55.765262 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-5527 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0323 12:38:55.810410 23 builder.go:146] stderr: ""
  I0323 12:38:55.810441 23 builder.go:147] stdout: "update-demo-nautilus-qnxb7 update-demo-nautilus-sfbj8 "
  I0323 12:38:55.810479 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-5527 get pods update-demo-nautilus-qnxb7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0323 12:38:55.849521 23 builder.go:146] stderr: ""
  I0323 12:38:55.849552 23 builder.go:147] stdout: ""
  I0323 12:38:55.849562 23 kubectl.go:2509] update-demo-nautilus-qnxb7 is created but not running
  I0323 12:39:00.850790 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-5527 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0323 12:39:00.900231 23 builder.go:146] stderr: ""
  I0323 12:39:00.900268 23 builder.go:147] stdout: "update-demo-nautilus-qnxb7 update-demo-nautilus-sfbj8 "
  I0323 12:39:00.900335 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-5527 get pods update-demo-nautilus-qnxb7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0323 12:39:00.941250 23 builder.go:146] stderr: ""
  I0323 12:39:00.941280 23 builder.go:147] stdout: ""
  I0323 12:39:00.941292 23 kubectl.go:2509] update-demo-nautilus-qnxb7 is created but not running
  I0323 12:39:05.943718 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-5527 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0323 12:39:05.985614 23 builder.go:146] stderr: ""
  I0323 12:39:05.985644 23 builder.go:147] stdout: "update-demo-nautilus-qnxb7 update-demo-nautilus-sfbj8 "
  I0323 12:39:05.985681 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-5527 get pods update-demo-nautilus-qnxb7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0323 12:39:06.024251 23 builder.go:146] stderr: ""
  I0323 12:39:06.024281 23 builder.go:147] stdout: "true"
  I0323 12:39:06.024316 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-5527 get pods update-demo-nautilus-qnxb7 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0323 12:39:06.063131 23 builder.go:146] stderr: ""
  I0323 12:39:06.063163 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0323 12:39:06.063173 23 kubectl.go:2400] validating pod update-demo-nautilus-qnxb7
  I0323 12:39:06.067302 23 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0323 12:39:06.067364 23 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0323 12:39:06.067381 23 kubectl.go:2527] update-demo-nautilus-qnxb7 is verified up and running
  I0323 12:39:06.067419 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-5527 get pods update-demo-nautilus-sfbj8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0323 12:39:06.106619 23 builder.go:146] stderr: ""
  I0323 12:39:06.106649 23 builder.go:147] stdout: "true"
  I0323 12:39:06.106686 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-5527 get pods update-demo-nautilus-sfbj8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0323 12:39:06.146117 23 builder.go:146] stderr: ""
  I0323 12:39:06.146148 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0323 12:39:06.146158 23 kubectl.go:2400] validating pod update-demo-nautilus-sfbj8
  I0323 12:39:06.157571 23 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0323 12:39:06.157612 23 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0323 12:39:06.157623 23 kubectl.go:2527] update-demo-nautilus-sfbj8 is verified up and running
  STEP: scaling down the replication controller @ 03/23/25 12:39:06.157
  I0323 12:39:06.158367 23 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0323 12:39:06.158396 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-5527 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I0323 12:39:07.204675 23 builder.go:146] stderr: ""
  I0323 12:39:07.204705 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 03/23/25 12:39:07.204
  I0323 12:39:07.204778 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-5527 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0323 12:39:07.245597 23 builder.go:146] stderr: ""
  I0323 12:39:07.245627 23 builder.go:147] stdout: "update-demo-nautilus-qnxb7 update-demo-nautilus-sfbj8 "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 03/23/25 12:39:07.245
  I0323 12:39:12.247714 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-5527 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0323 12:39:12.288106 23 builder.go:146] stderr: ""
  I0323 12:39:12.288138 23 builder.go:147] stdout: "update-demo-nautilus-sfbj8 "
  I0323 12:39:12.288179 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-5527 get pods update-demo-nautilus-sfbj8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0323 12:39:12.326993 23 builder.go:146] stderr: ""
  I0323 12:39:12.327023 23 builder.go:147] stdout: "true"
  I0323 12:39:12.327062 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-5527 get pods update-demo-nautilus-sfbj8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0323 12:39:12.365452 23 builder.go:146] stderr: ""
  I0323 12:39:12.365483 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0323 12:39:12.365494 23 kubectl.go:2400] validating pod update-demo-nautilus-sfbj8
  I0323 12:39:12.370144 23 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0323 12:39:12.370183 23 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0323 12:39:12.370196 23 kubectl.go:2527] update-demo-nautilus-sfbj8 is verified up and running
  STEP: scaling up the replication controller @ 03/23/25 12:39:12.37
  I0323 12:39:12.370904 23 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0323 12:39:12.370927 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-5527 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I0323 12:39:13.415160 23 builder.go:146] stderr: ""
  I0323 12:39:13.415189 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 03/23/25 12:39:13.415
  I0323 12:39:13.415316 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-5527 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0323 12:39:13.456426 23 builder.go:146] stderr: ""
  I0323 12:39:13.456455 23 builder.go:147] stdout: "update-demo-nautilus-bswqd update-demo-nautilus-sfbj8 "
  I0323 12:39:13.456489 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-5527 get pods update-demo-nautilus-bswqd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0323 12:39:13.495766 23 builder.go:146] stderr: ""
  I0323 12:39:13.495796 23 builder.go:147] stdout: "true"
  I0323 12:39:13.495829 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-5527 get pods update-demo-nautilus-bswqd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0323 12:39:13.535461 23 builder.go:146] stderr: ""
  I0323 12:39:13.535491 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0323 12:39:13.535501 23 kubectl.go:2400] validating pod update-demo-nautilus-bswqd
  I0323 12:39:13.541677 23 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0323 12:39:13.541718 23 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0323 12:39:13.541729 23 kubectl.go:2527] update-demo-nautilus-bswqd is verified up and running
  I0323 12:39:13.541772 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-5527 get pods update-demo-nautilus-sfbj8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0323 12:39:13.580261 23 builder.go:146] stderr: ""
  I0323 12:39:13.580290 23 builder.go:147] stdout: "true"
  I0323 12:39:13.580324 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-5527 get pods update-demo-nautilus-sfbj8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0323 12:39:13.618983 23 builder.go:146] stderr: ""
  I0323 12:39:13.619013 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0323 12:39:13.619022 23 kubectl.go:2400] validating pod update-demo-nautilus-sfbj8
  I0323 12:39:13.630520 23 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0323 12:39:13.630558 23 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0323 12:39:13.630574 23 kubectl.go:2527] update-demo-nautilus-sfbj8 is verified up and running
  STEP: using delete to clean up resources @ 03/23/25 12:39:13.63
  I0323 12:39:13.630668 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-5527 delete --grace-period=0 --force -f -'
  I0323 12:39:13.670207 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0323 12:39:13.670237 23 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0323 12:39:13.670321 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-5527 get rc,svc -l name=update-demo --no-headers'
  I0323 12:39:13.711911 23 builder.go:146] stderr: "No resources found in kubectl-5527 namespace.\n"
  I0323 12:39:13.711941 23 builder.go:147] stdout: ""
  I0323 12:39:13.711974 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-5527 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0323 12:39:13.751939 23 builder.go:146] stderr: ""
  I0323 12:39:13.751972 23 builder.go:147] stdout: ""
  I0323 12:39:13.752117 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5527" for this suite. @ 03/23/25 12:39:13.753
• [18.132 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 03/23/25 12:39:13.756
  I0323 12:39:13.756411 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename services @ 03/23/25 12:39:13.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:39:13.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:39:13.764
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-463 @ 03/23/25 12:39:13.766
  STEP: changing the ExternalName service to type=NodePort @ 03/23/25 12:39:13.767
  STEP: creating replication controller externalname-service in namespace services-463 @ 03/23/25 12:39:13.778
  I0323 12:39:13.781059      23 runners.go:193] Created replication controller with name: externalname-service, namespace: services-463, replica count: 2
  I0323 12:39:16.833923      23 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0323 12:39:16.833947 23 resource.go:361] Creating new exec pod
  I0323 12:39:19.843866 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-463 exec execpodp2x6g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0323 12:39:19.909436 23 builder.go:146] stderr: "+ + ncecho -v hostName -t\n -w 2 externalname-service 80\nConnection to externalname-service (10.68.217.75) 80 port [tcp/http] succeeded!\n"
  I0323 12:39:19.909467 23 builder.go:147] stdout: "externalname-service-7l7kp"
  I0323 12:39:19.909527 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-463 exec execpodp2x6g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.217.75 80'
  I0323 12:39:19.973330 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.217.75 80\nConnection to 10.68.217.75 80 port [tcp/http] succeeded!\n"
  I0323 12:39:19.973364 23 builder.go:147] stdout: "externalname-service-slsrv"
  I0323 12:39:19.973427 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-463 exec execpodp2x6g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.208 31152'
  I0323 12:39:20.049079 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.208 31152\nConnection to 10.255.0.208 31152 port [tcp/*] succeeded!\n"
  I0323 12:39:20.049111 23 builder.go:147] stdout: ""
  I0323 12:39:20.974215 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-463 exec execpodp2x6g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.208 31152'
  I0323 12:39:21.038809 23 builder.go:146] stderr: "+ + ncecho -v -t hostName -w\n 2 10.255.0.208 31152\nConnection to 10.255.0.208 31152 port [tcp/*] succeeded!\n"
  I0323 12:39:21.038842 23 builder.go:147] stdout: ""
  I0323 12:39:21.973921 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-463 exec execpodp2x6g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.208 31152'
  I0323 12:39:22.037647 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.208 31152\nConnection to 10.255.0.208 31152 port [tcp/*] succeeded!\n"
  I0323 12:39:22.037678 23 builder.go:147] stdout: "externalname-service-7l7kp"
  I0323 12:39:22.037778 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-463 exec execpodp2x6g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.207 31152'
  I0323 12:39:22.101216 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.207 31152\nConnection to 10.255.0.207 31152 port [tcp/*] succeeded!\n"
  I0323 12:39:22.101246 23 builder.go:147] stdout: ""
  I0323 12:39:23.037833 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-463 exec execpodp2x6g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.207 31152'
  I0323 12:39:23.102046 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.207 31152\nConnection to 10.255.0.207 31152 port [tcp/*] succeeded!\n"
  I0323 12:39:23.102080 23 builder.go:147] stdout: "externalname-service-slsrv"
  I0323 12:39:23.102150 23 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I0323 12:39:23.112461 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-463" for this suite. @ 03/23/25 12:39:23.114
• [9.362 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 03/23/25 12:39:23.118
  I0323 12:39:23.118462 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename custom-resource-definition @ 03/23/25 12:39:23.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:39:23.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:39:23.127
  STEP: fetching the /apis discovery document @ 03/23/25 12:39:23.128
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 03/23/25 12:39:23.129
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 03/23/25 12:39:23.129
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 03/23/25 12:39:23.129
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 03/23/25 12:39:23.129
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 03/23/25 12:39:23.129
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 03/23/25 12:39:23.13
  I0323 12:39:23.130497 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8122" for this suite. @ 03/23/25 12:39:23.215
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 03/23/25 12:39:23.218
  I0323 12:39:23.218715 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename sched-pred @ 03/23/25 12:39:23.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:39:23.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:39:23.228
  I0323 12:39:23.230057 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0323 12:39:23.317317 23 util.go:396] Waiting for terminating namespaces to be deleted...
  I0323 12:39:23.318686 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-206 before test
  I0323 12:39:23.320379 23 predicates.go:957] calico-kube-controllers-54cdc99cb-5bglc from kube-system started at 2025-03-23 11:45:09 +0000 UTC (1 container statuses recorded)
  I0323 12:39:23.320395 23 predicates.go:959] 	Container calico-kube-controllers ready: true, restart count 0
  I0323 12:39:23.320403 23 predicates.go:957] calico-node-mqzhm from kube-system started at 2025-03-23 11:45:09 +0000 UTC (1 container statuses recorded)
  I0323 12:39:23.320411 23 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0323 12:39:23.320422 23 predicates.go:957] coredns-75dd46b86b-bnz46 from kube-system started at 2025-03-23 11:45:35 +0000 UTC (1 container statuses recorded)
  I0323 12:39:23.320428 23 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0323 12:39:23.320437 23 predicates.go:957] dashboard-metrics-scraper-65c7c4ffff-mtscp from kube-system started at 2025-03-23 11:45:39 +0000 UTC (1 container statuses recorded)
  I0323 12:39:23.320443 23 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0323 12:39:23.320451 23 predicates.go:957] kubernetes-dashboard-75c65df89-967jc from kube-system started at 2025-03-23 11:45:39 +0000 UTC (1 container statuses recorded)
  I0323 12:39:23.320462 23 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I0323 12:39:23.320470 23 predicates.go:957] metrics-server-74f6d6fdd5-skz98 from kube-system started at 2025-03-23 11:45:37 +0000 UTC (1 container statuses recorded)
  I0323 12:39:23.320477 23 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0323 12:39:23.320486 23 predicates.go:957] node-local-dns-gdfpz from kube-system started at 2025-03-23 11:45:36 +0000 UTC (1 container statuses recorded)
  I0323 12:39:23.320494 23 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0323 12:39:23.320502 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-a86d0fcbee4c468c-6hxkh from sonobuoy started at 2025-03-23 12:20:56 +0000 UTC (2 container statuses recorded)
  I0323 12:39:23.320510 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0323 12:39:23.320519 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0323 12:39:23.320529 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-207 before test
  I0323 12:39:23.321912 23 predicates.go:957] calico-node-7blhd from kube-system started at 2025-03-23 11:47:32 +0000 UTC (1 container statuses recorded)
  I0323 12:39:23.321923 23 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0323 12:39:23.321928 23 predicates.go:957] node-local-dns-ldf5h from kube-system started at 2025-03-23 11:47:32 +0000 UTC (1 container statuses recorded)
  I0323 12:39:23.321934 23 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0323 12:39:23.321942 23 predicates.go:957] execpodp2x6g from services-463 started at 2025-03-23 12:39:16 +0000 UTC (1 container statuses recorded)
  I0323 12:39:23.321952 23 predicates.go:959] 	Container agnhost-container ready: true, restart count 0
  I0323 12:39:23.321959 23 predicates.go:957] externalname-service-slsrv from services-463 started at 2025-03-23 12:39:13 +0000 UTC (1 container statuses recorded)
  I0323 12:39:23.321966 23 predicates.go:959] 	Container externalname-service ready: true, restart count 0
  I0323 12:39:23.321973 23 predicates.go:957] sonobuoy from sonobuoy started at 2025-03-23 12:20:55 +0000 UTC (1 container statuses recorded)
  I0323 12:39:23.321982 23 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0323 12:39:23.321988 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-a86d0fcbee4c468c-tp5gf from sonobuoy started at 2025-03-23 12:20:56 +0000 UTC (2 container statuses recorded)
  I0323 12:39:23.321995 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0323 12:39:23.322002 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0323 12:39:23.322008 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-208 before test
  I0323 12:39:23.323351 23 predicates.go:957] downwardapi-volume-31b78f8c-16b6-46c8-b790-2e6458886022 from downward-api-3007 started at 2025-03-23 12:19:04 +0000 UTC (1 container statuses recorded)
  I0323 12:39:23.323365 23 predicates.go:959] 	Container client-container ready: false, restart count 0
  I0323 12:39:23.323373 23 predicates.go:957] calico-node-pbb56 from kube-system started at 2025-03-23 11:49:26 +0000 UTC (1 container statuses recorded)
  I0323 12:39:23.323380 23 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0323 12:39:23.323387 23 predicates.go:957] node-local-dns-hzw7f from kube-system started at 2025-03-23 11:49:26 +0000 UTC (1 container statuses recorded)
  I0323 12:39:23.323393 23 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0323 12:39:23.323402 23 predicates.go:957] externalname-service-7l7kp from services-463 started at 2025-03-23 12:39:13 +0000 UTC (1 container statuses recorded)
  I0323 12:39:23.323411 23 predicates.go:959] 	Container externalname-service ready: true, restart count 0
  I0323 12:39:23.323419 23 predicates.go:957] sonobuoy-e2e-job-19250caba0af4cb0 from sonobuoy started at 2025-03-23 12:20:56 +0000 UTC (2 container statuses recorded)
  I0323 12:39:23.323428 23 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0323 12:39:23.323436 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0323 12:39:23.323443 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-a86d0fcbee4c468c-78fxb from sonobuoy started at 2025-03-23 12:20:56 +0000 UTC (2 container statuses recorded)
  I0323 12:39:23.323452 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0323 12:39:23.323458 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node k8s-10-255-0-206 @ 03/23/25 12:39:23.331
  STEP: verifying the node has the label node k8s-10-255-0-207 @ 03/23/25 12:39:23.34
  STEP: verifying the node has the label node k8s-10-255-0-208 @ 03/23/25 12:39:23.35
  I0323 12:39:23.423024 23 predicates.go:372] Pod calico-kube-controllers-54cdc99cb-5bglc requesting resource cpu=0m on Node k8s-10-255-0-206
  I0323 12:39:23.423048 23 predicates.go:372] Pod calico-node-7blhd requesting resource cpu=250m on Node k8s-10-255-0-207
  I0323 12:39:23.423053 23 predicates.go:372] Pod calico-node-mqzhm requesting resource cpu=250m on Node k8s-10-255-0-206
  I0323 12:39:23.423059 23 predicates.go:372] Pod calico-node-pbb56 requesting resource cpu=250m on Node k8s-10-255-0-208
  I0323 12:39:23.423067 23 predicates.go:372] Pod coredns-75dd46b86b-bnz46 requesting resource cpu=100m on Node k8s-10-255-0-206
  I0323 12:39:23.423072 23 predicates.go:372] Pod dashboard-metrics-scraper-65c7c4ffff-mtscp requesting resource cpu=0m on Node k8s-10-255-0-206
  I0323 12:39:23.423079 23 predicates.go:372] Pod kubernetes-dashboard-75c65df89-967jc requesting resource cpu=0m on Node k8s-10-255-0-206
  I0323 12:39:23.423084 23 predicates.go:372] Pod metrics-server-74f6d6fdd5-skz98 requesting resource cpu=100m on Node k8s-10-255-0-206
  I0323 12:39:23.423090 23 predicates.go:372] Pod node-local-dns-gdfpz requesting resource cpu=25m on Node k8s-10-255-0-206
  I0323 12:39:23.423096 23 predicates.go:372] Pod node-local-dns-hzw7f requesting resource cpu=25m on Node k8s-10-255-0-208
  I0323 12:39:23.423104 23 predicates.go:372] Pod node-local-dns-ldf5h requesting resource cpu=25m on Node k8s-10-255-0-207
  I0323 12:39:23.423111 23 predicates.go:372] Pod execpodp2x6g requesting resource cpu=0m on Node k8s-10-255-0-207
  I0323 12:39:23.423119 23 predicates.go:372] Pod externalname-service-7l7kp requesting resource cpu=0m on Node k8s-10-255-0-208
  I0323 12:39:23.423126 23 predicates.go:372] Pod externalname-service-slsrv requesting resource cpu=0m on Node k8s-10-255-0-207
  I0323 12:39:23.423133 23 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node k8s-10-255-0-207
  I0323 12:39:23.423142 23 predicates.go:372] Pod sonobuoy-e2e-job-19250caba0af4cb0 requesting resource cpu=0m on Node k8s-10-255-0-208
  I0323 12:39:23.423161 23 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-a86d0fcbee4c468c-6hxkh requesting resource cpu=0m on Node k8s-10-255-0-206
  I0323 12:39:23.423169 23 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-a86d0fcbee4c468c-78fxb requesting resource cpu=0m on Node k8s-10-255-0-208
  I0323 12:39:23.423175 23 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-a86d0fcbee4c468c-tp5gf requesting resource cpu=0m on Node k8s-10-255-0-207
  STEP: Starting Pods to consume most of the cluster CPU. @ 03/23/25 12:39:23.423
  I0323 12:39:23.423205 23 predicates.go:382] Creating a pod which consumes cpu=2607m on Node k8s-10-255-0-208
  I0323 12:39:23.428528 23 predicates.go:382] Creating a pod which consumes cpu=2467m on Node k8s-10-255-0-206
  I0323 12:39:23.432247 23 predicates.go:382] Creating a pod which consumes cpu=2607m on Node k8s-10-255-0-207
  STEP: Creating another pod that requires unavailable amount of CPU. @ 03/23/25 12:39:25.444
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-249345bd-047c-4bd3-90ae-bdb514a6498a.182f6ef14acbad9f], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7072/filler-pod-249345bd-047c-4bd3-90ae-bdb514a6498a to k8s-10-255-0-206] @ 03/23/25 12:39:25.446
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-249345bd-047c-4bd3-90ae-bdb514a6498a.182f6ef166d78b6d], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 03/23/25 12:39:25.446
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-249345bd-047c-4bd3-90ae-bdb514a6498a.182f6ef167e692d0], Reason = [Created], Message = [Created container: filler-pod-249345bd-047c-4bd3-90ae-bdb514a6498a] @ 03/23/25 12:39:25.446
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-249345bd-047c-4bd3-90ae-bdb514a6498a.182f6ef16acda383], Reason = [Started], Message = [Started container filler-pod-249345bd-047c-4bd3-90ae-bdb514a6498a] @ 03/23/25 12:39:25.446
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-3934ad89-0b38-4798-a3f6-6fb23e7cf6e8.182f6ef14a835203], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7072/filler-pod-3934ad89-0b38-4798-a3f6-6fb23e7cf6e8 to k8s-10-255-0-208] @ 03/23/25 12:39:25.446
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-3934ad89-0b38-4798-a3f6-6fb23e7cf6e8.182f6ef1659b134b], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 03/23/25 12:39:25.446
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-3934ad89-0b38-4798-a3f6-6fb23e7cf6e8.182f6ef1666353e3], Reason = [Created], Message = [Created container: filler-pod-3934ad89-0b38-4798-a3f6-6fb23e7cf6e8] @ 03/23/25 12:39:25.446
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-3934ad89-0b38-4798-a3f6-6fb23e7cf6e8.182f6ef1691a7c31], Reason = [Started], Message = [Started container filler-pod-3934ad89-0b38-4798-a3f6-6fb23e7cf6e8] @ 03/23/25 12:39:25.446
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bc7b689f-7d47-4043-94f9-c3d9c0515720.182f6ef14b10a230], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7072/filler-pod-bc7b689f-7d47-4043-94f9-c3d9c0515720 to k8s-10-255-0-207] @ 03/23/25 12:39:25.446
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bc7b689f-7d47-4043-94f9-c3d9c0515720.182f6ef1669f3486], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 03/23/25 12:39:25.446
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bc7b689f-7d47-4043-94f9-c3d9c0515720.182f6ef1676dc1a6], Reason = [Created], Message = [Created container: filler-pod-bc7b689f-7d47-4043-94f9-c3d9c0515720] @ 03/23/25 12:39:25.446
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bc7b689f-7d47-4043-94f9-c3d9c0515720.182f6ef16a3f4297], Reason = [Started], Message = [Started container filler-pod-bc7b689f-7d47-4043-94f9-c3d9c0515720] @ 03/23/25 12:39:25.446
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.182f6ef1c2c88961], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 Insufficient cpu. preemption: 0/3 nodes are available: 3 No preemption victims found for incoming pod.] @ 03/23/25 12:39:25.452
  STEP: removing the label node off the node k8s-10-255-0-206 @ 03/23/25 12:39:26.452
  STEP: verifying the node doesn't have the label node @ 03/23/25 12:39:26.458
  STEP: removing the label node off the node k8s-10-255-0-207 @ 03/23/25 12:39:26.463
  STEP: verifying the node doesn't have the label node @ 03/23/25 12:39:26.471
  STEP: removing the label node off the node k8s-10-255-0-208 @ 03/23/25 12:39:26.472
  STEP: verifying the node doesn't have the label node @ 03/23/25 12:39:26.48
  I0323 12:39:26.483389 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7072" for this suite. @ 03/23/25 12:39:26.485
• [3.270 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 03/23/25 12:39:26.489
  I0323 12:39:26.489342 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename aggregateddiscovery @ 03/23/25 12:39:26.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:39:26.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:39:26.498
  I0323 12:39:26.502950 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-2450" for this suite. @ 03/23/25 12:39:26.586
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 03/23/25 12:39:26.589
  I0323 12:39:26.589247 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename aggregateddiscovery @ 03/23/25 12:39:26.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:39:26.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:39:26.595
  I0323 12:39:26.598940 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-2426" for this suite. @ 03/23/25 12:39:26.686
• [0.101 seconds]
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 03/23/25 12:39:26.69
  I0323 12:39:26.690279 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename projected @ 03/23/25 12:39:26.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:39:26.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:39:26.697
  STEP: Creating the pod @ 03/23/25 12:39:26.698
  I0323 12:39:29.216107 23 pod_client.go:173] Successfully updated pod "labelsupdatea25ce602-2993-48c9-991b-7713943e6d22"
  I0323 12:39:31.224062 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1421" for this suite. @ 03/23/25 12:39:31.225
• [4.538 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3373
  STEP: Creating a kubernetes client @ 03/23/25 12:39:31.228
  I0323 12:39:31.228583 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename services @ 03/23/25 12:39:31.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:39:31.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:39:31.236
  STEP: creating a Service @ 03/23/25 12:39:31.239
  STEP: watching for the Service to be added @ 03/23/25 12:39:31.244
  I0323 12:39:31.245527 23 service.go:3425] Found Service test-service-wcx7b in namespace services-7644 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31274}]
  I0323 12:39:31.245549 23 service.go:3432] Service test-service-wcx7b created
  STEP: Getting /status @ 03/23/25 12:39:31.245
  I0323 12:39:31.247067 23 service.go:3443] Service test-service-wcx7b has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 03/23/25 12:39:31.247
  STEP: watching for the Service to be patched @ 03/23/25 12:39:31.25
  I0323 12:39:31.251582 23 service.go:3466] observed Service test-service-wcx7b in namespace services-7644 with annotations: map[] & LoadBalancer: {[]}
  I0323 12:39:31.251606 23 service.go:3469] Found Service test-service-wcx7b in namespace services-7644 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc00088ce00 []}]}
  I0323 12:39:31.251616 23 service.go:3476] Service test-service-wcx7b has service status patched
  STEP: updating the ServiceStatus @ 03/23/25 12:39:31.251
  I0323 12:39:31.256242 23 service.go:3496] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 03/23/25 12:39:31.256
  I0323 12:39:31.256930 23 service.go:3507] Observed Service test-service-wcx7b in namespace services-7644 with annotations: map[] & Conditions: []
  I0323 12:39:31.257011 23 service.go:3518] Observed Service test-service-wcx7b in namespace services-7644 with annotations: map[patchedstatus:true] & Conditions: []
  I0323 12:39:31.257033 23 service.go:3514] Found Service test-service-wcx7b in namespace services-7644 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0323 12:39:31.257046 23 service.go:3525] Service test-service-wcx7b has service status updated
  STEP: patching the service @ 03/23/25 12:39:31.257
  STEP: watching for the Service to be patched @ 03/23/25 12:39:31.263
  I0323 12:39:31.264623 23 service.go:3548] observed Service test-service-wcx7b in namespace services-7644 with labels: map[test-service-static:true]
  I0323 12:39:31.264657 23 service.go:3548] observed Service test-service-wcx7b in namespace services-7644 with labels: map[test-service-static:true]
  I0323 12:39:31.264705 23 service.go:3548] observed Service test-service-wcx7b in namespace services-7644 with labels: map[test-service-static:true]
  I0323 12:39:31.264720 23 service.go:3551] Found Service test-service-wcx7b in namespace services-7644 with labels: map[test-service:patched test-service-static:true]
  I0323 12:39:31.264728 23 service.go:3558] Service test-service-wcx7b patched
  STEP: deleting the service @ 03/23/25 12:39:31.264
  STEP: watching for the Service to be deleted @ 03/23/25 12:39:31.272
  I0323 12:39:31.274064 23 service.go:3582] Observed event: ADDED
  I0323 12:39:31.274090 23 service.go:3582] Observed event: MODIFIED
  I0323 12:39:31.274109 23 service.go:3582] Observed event: MODIFIED
  I0323 12:39:31.274208 23 service.go:3582] Observed event: MODIFIED
  I0323 12:39:31.274263 23 service.go:3578] Found Service test-service-wcx7b in namespace services-7644 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0323 12:39:31.274275 23 service.go:3587] Service test-service-wcx7b deleted
  I0323 12:39:31.274358 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7644" for this suite. @ 03/23/25 12:39:31.326
• [0.102 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 03/23/25 12:39:31.33
  I0323 12:39:31.330645 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename projected @ 03/23/25 12:39:31.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:39:31.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:39:31.338
  STEP: Creating configMap with name projected-configmap-test-volume-map-2bee889f-8567-44a6-b7fd-04778fda2d02 @ 03/23/25 12:39:31.34
  STEP: Creating a pod to test consume configMaps @ 03/23/25 12:39:31.342
  STEP: Saw pod success @ 03/23/25 12:39:35.353
  I0323 12:39:35.354546 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-projected-configmaps-f5221b04-4883-4e10-91a7-a31779052da5 container agnhost-container: <nil>
  STEP: delete the pod @ 03/23/25 12:39:35.357
  I0323 12:39:35.363994 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3561" for this suite. @ 03/23/25 12:39:35.365
• [4.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 03/23/25 12:39:35.368
  I0323 12:39:35.368024 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename crd-selectable-fields @ 03/23/25 12:39:35.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:39:35.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:39:35.377
  STEP: Setting up server cert @ 03/23/25 12:39:35.378
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 03/23/25 12:39:35.686
  STEP: Deploying the custom resource conversion webhook pod @ 03/23/25 12:39:35.689
  STEP: Wait for the deployment to be ready @ 03/23/25 12:39:35.695
  I0323 12:39:35.699422 23 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 03/23/25 12:39:37.704
  STEP: Verifying the service has paired with the endpoint @ 03/23/25 12:39:37.709
  I0323 12:39:38.709584 23 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 03/23/25 12:39:38.712
  I0323 12:39:38.712702 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Creating a custom resource conversion webhook @ 03/23/25 12:39:39.223
  STEP: Watching with field selectors @ 03/23/25 12:39:41.247
  STEP: Registering informers with field selectors @ 03/23/25 12:39:41.25
  STEP: Creating custom resources @ 03/23/25 12:39:41.25
  STEP: Listing v2 custom resources with field selector host=host1 @ 03/23/25 12:39:41.26
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 03/23/25 12:39:41.261
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 03/23/25 12:39:41.262
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 03/23/25 12:39:41.264
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 03/23/25 12:39:41.265
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 03/23/25 12:39:41.27
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 03/23/25 12:39:41.27
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 03/23/25 12:39:41.27
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 03/23/25 12:39:41.27
  STEP: Deleting one custom resources to ensure that deletions are observed @ 03/23/25 12:39:41.27
  STEP: Updating one custom resources to ensure that deletions are observed @ 03/23/25 12:39:41.274
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 03/23/25 12:39:41.281
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 03/23/25 12:39:41.282
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 03/23/25 12:39:41.283
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 03/23/25 12:39:41.289
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 03/23/25 12:39:41.289
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 03/23/25 12:39:41.289
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 03/23/25 12:39:41.289
  I0323 12:39:41.823224 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-6937" for this suite. @ 03/23/25 12:39:41.825
• [6.460 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:799
  STEP: Creating a kubernetes client @ 03/23/25 12:39:41.828
  I0323 12:39:41.828763 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename statefulset @ 03/23/25 12:39:41.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:39:41.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:39:41.838
  STEP: Creating service test in namespace statefulset-3561 @ 03/23/25 12:39:41.841
  STEP: Looking for a node to schedule stateful set and pod @ 03/23/25 12:39:41.843
  STEP: Creating pod with conflicting port in namespace statefulset-3561 @ 03/23/25 12:39:41.925
  STEP: Waiting until pod test-pod will start running in namespace statefulset-3561 @ 03/23/25 12:39:41.931
  STEP: Creating statefulset with conflicting port in namespace statefulset-3561 @ 03/23/25 12:39:43.936
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-3561 @ 03/23/25 12:39:43.94
  I0323 12:39:43.951131 23 statefulset.go:872] Observed stateful pod in namespace: statefulset-3561, name: ss-0, uid: dc356526-3b0b-45ca-9b34-2b389973768b, status phase: Pending. Waiting for statefulset controller to delete.
  I0323 12:39:43.957313 23 statefulset.go:872] Observed stateful pod in namespace: statefulset-3561, name: ss-0, uid: dc356526-3b0b-45ca-9b34-2b389973768b, status phase: Failed. Waiting for statefulset controller to delete.
  I0323 12:39:43.961805 23 statefulset.go:872] Observed stateful pod in namespace: statefulset-3561, name: ss-0, uid: dc356526-3b0b-45ca-9b34-2b389973768b, status phase: Failed. Waiting for statefulset controller to delete.
  I0323 12:39:43.964388 23 statefulset.go:866] Observed delete event for stateful pod ss-0 in namespace statefulset-3561
  STEP: Removing pod with conflicting port in namespace statefulset-3561 @ 03/23/25 12:39:43.964
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-3561 and will be in running state @ 03/23/25 12:39:43.972
  I0323 12:39:45.977228 23 statefulset.go:138] Deleting all statefulset in ns statefulset-3561
  I0323 12:39:45.978618 23 rest.go:152] Scaling statefulset ss to 0
  I0323 12:39:55.985942 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0323 12:39:55.987175 23 rest.go:90] Deleting statefulset ss
  I0323 12:39:56.001001 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3561" for this suite. @ 03/23/25 12:39:56.002
• [14.177 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:832
  STEP: Creating a kubernetes client @ 03/23/25 12:39:56.005
  I0323 12:39:56.005818 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename job @ 03/23/25 12:39:56.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:39:56.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:39:56.013
  STEP: Creating a job @ 03/23/25 12:39:56.015
  STEP: Ensuring active pods == parallelism @ 03/23/25 12:39:56.017
  STEP: delete a job @ 03/23/25 12:39:58.024
  STEP: deleting Job.batch foo in namespace job-4259, will wait for the garbage collector to delete the pods @ 03/23/25 12:39:58.024
  I0323 12:39:58.079017 23 resources.go:139] Deleting Job.batch foo took: 2.662446ms
  I0323 12:39:58.180103 23 resources.go:163] Terminating Job.batch foo pods took: 101.083023ms
  STEP: Ensuring job was deleted @ 03/23/25 12:39:59.58
  I0323 12:39:59.582312 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4259" for this suite. @ 03/23/25 12:39:59.583
• [3.580 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 03/23/25 12:39:59.586
  I0323 12:39:59.586423 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename webhook @ 03/23/25 12:39:59.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:39:59.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:39:59.594
  STEP: Setting up server cert @ 03/23/25 12:39:59.605
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/23/25 12:39:59.779
  STEP: Deploying the webhook pod @ 03/23/25 12:39:59.782
  STEP: Wait for the deployment to be ready @ 03/23/25 12:39:59.789
  I0323 12:39:59.792629 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 03/23/25 12:40:01.797
  STEP: Verifying the service has paired with the endpoint @ 03/23/25 12:40:01.802
  I0323 12:40:02.802560 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 03/23/25 12:40:02.805
  STEP: create a pod that should be updated by the webhook @ 03/23/25 12:40:02.813
  I0323 12:40:02.844138 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2561" for this suite. @ 03/23/25 12:40:02.847
  STEP: Destroying namespace "webhook-markers-2565" for this suite. @ 03/23/25 12:40:02.851
• [3.268 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 03/23/25 12:40:02.854
  I0323 12:40:02.854116 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename deployment @ 03/23/25 12:40:02.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:40:02.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:40:02.863
  I0323 12:40:02.865359 23 deployment.go:1196] Creating deployment "webserver-deployment"
  I0323 12:40:02.867573 23 deployment.go:1200] Waiting for observed generation 1
  I0323 12:40:04.871539 23 deployment.go:1205] Waiting for all required pods to come up
  I0323 12:40:04.873756 23 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 03/23/25 12:40:04.873
  I0323 12:40:04.873821 23 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0323 12:40:04.876405 23 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0323 12:40:04.879990 23 deployment.go:314] Updating deployment webserver-deployment
  I0323 12:40:04.880012 23 deployment.go:1224] Waiting for observed generation 2
  I0323 12:40:06.883822 23 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0323 12:40:06.885179 23 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0323 12:40:06.886185 23 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0323 12:40:06.889405 23 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0323 12:40:06.889425 23 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0323 12:40:06.890412 23 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0323 12:40:06.892191 23 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0323 12:40:06.892205 23 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0323 12:40:06.897170 23 deployment.go:314] Updating deployment webserver-deployment
  I0323 12:40:06.897187 23 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0323 12:40:06.899069 23 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0323 12:40:06.900108 23 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0323 12:40:08.904392 23 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c354ee44-ab73-497c-8866-d8e49dfb4fb8",
      ResourceVersion: (string) (len=5) "10871",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 20,
      AvailableReplicas: (int32) 20,
      UnavailableReplicas: (int32) 13,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0323 12:40:08.906520 23 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "74b7ae42-719c-48b7-be15-4266f4fd7885",
      ResourceVersion: (string) (len=5) "10660",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330404,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "c354ee44-ab73-497c-8866-d8e49dfb4fb8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 33 35 34 65 65  34 34 2d 61 62 37 33 2d  |\"c354ee44-ab73-|
              00000120  34 39 37 63 2d 38 38 36  36 2d 64 38 65 34 39 64  |497c-8866-d8e49d|
              00000130  66 62 34 66 62 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |fb4fb8\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0323 12:40:08.907106 23 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0323 12:40:08.907266 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "10ed4531-31f0-4ddf-bb09-e6895744fcdd",
      ResourceVersion: (string) (len=5) "10870",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "c354ee44-ab73-497c-8866-d8e49dfb4fb8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 33 35 34 65 65  34 34 2d 61 62 37 33 2d  |\"c354ee44-ab73-|
              00000120  34 39 37 63 2d 38 38 36  36 2d 64 38 65 34 39 64  |497c-8866-d8e49d|
              00000130  66 62 34 66 62 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |fb4fb8\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 20,
      AvailableReplicas: (int32) 20,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0323 12:40:08.910316 23 deployment.go:68] Pod "webserver-deployment-685b768f58-27wpc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-27wpc",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "194a9db1-2563-4f9a-8e60-728f41030d91",
      ResourceVersion: (string) (len=5) "10850",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "10ed4531-31f0-4ddf-bb09-e6895744fcdd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  65 64 34 35 33 31 2d 33  |d\":\"10ed4531-3|
              00000090  31 66 30 2d 34 64 64 66  2d 62 62 30 39 2d 65 36  |1f0-4ddf-bb09-e6|
              000000a0  38 39 35 37 34 34 66 63  64 64 5c 22 7d 22 3a 7b  |895744fcdd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 33 2e  32 31 34 5c 22 7d 22 3a  |2.20.63.214\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x2kjg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x2kjg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) (len=13) "172.20.63.214",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.63.214"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878330407,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6d6ff1b2eed198cc6c309a70f40c1fb1c2d0fc4c3f48cd3ec06c73bc318339bb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-x2kjg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:40:08.911754 23 deployment.go:68] Pod "webserver-deployment-685b768f58-5l4cv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-5l4cv",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0a2948f9-a4ea-4301-9352-bd445b632def",
      ResourceVersion: (string) (len=5) "10484",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "10ed4531-31f0-4ddf-bb09-e6895744fcdd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  65 64 34 35 33 31 2d 33  |d\":\"10ed4531-3|
              00000090  31 66 30 2d 34 64 64 66  2d 62 62 30 39 2d 65 36  |1f0-4ddf-bb09-e6|
              000000a0  38 39 35 37 34 34 66 63  64 64 5c 22 7d 22 3a 7b  |895744fcdd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 33 2e  32 30 37 5c 22 7d 22 3a  |2.20.63.207\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x76x5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x76x5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) (len=13) "172.20.63.207",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.63.207"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878330403,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2dcac0981bf5b4eb37aeb49cf7248c89ab93de2d6c5092012433c5903fd844d1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-x76x5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:40:08.913168 23 deployment.go:68] Pod "webserver-deployment-685b768f58-6m555" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-6m555",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "87a4498e-92f8-4b2c-9275-c9c4c2335aac",
      ResourceVersion: (string) (len=5) "10854",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "10ed4531-31f0-4ddf-bb09-e6895744fcdd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  65 64 34 35 33 31 2d 33  |d\":\"10ed4531-3|
              00000090  31 66 30 2d 34 64 64 66  2d 62 62 30 39 2d 65 36  |1f0-4ddf-bb09-e6|
              000000a0  38 39 35 37 34 34 66 63  64 64 5c 22 7d 22 3a 7b  |895744fcdd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 34 2e  31 36 39 5c 22 7d 22 3a  |2.20.64.169\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6p6n7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6p6n7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.169",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.169"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878330407,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://46635f287afdfdb643ed9b44564fc94be78e9d3ae70d41a03e5e849d5c313e9e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6p6n7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:40:08.914580 23 deployment.go:68] Pod "webserver-deployment-685b768f58-6xsw2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-6xsw2",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2efdc638-0c3d-4ff6-acc2-bd3e07a78534",
      ResourceVersion: (string) (len=5) "10853",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "10ed4531-31f0-4ddf-bb09-e6895744fcdd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  65 64 34 35 33 31 2d 33  |d\":\"10ed4531-3|
              00000090  31 66 30 2d 34 64 64 66  2d 62 62 30 39 2d 65 36  |1f0-4ddf-bb09-e6|
              000000a0  38 39 35 37 34 34 66 63  64 64 5c 22 7d 22 3a 7b  |895744fcdd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 33 2e  32 31 32 5c 22 7d 22 3a  |2.20.63.212\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7g5kt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7g5kt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) (len=13) "172.20.63.212",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.63.212"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878330407,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c229d4c30400a63a30bccf60f48cfad5d03a6cb7db728c9b31d01edf04e9b00d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7g5kt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:40:08.916170 23 deployment.go:68] Pod "webserver-deployment-685b768f58-8jhfr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-8jhfr",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e8619d37-8f46-4176-90f0-f464b272ed0b",
      ResourceVersion: (string) (len=5) "10461",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "10ed4531-31f0-4ddf-bb09-e6895744fcdd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  65 64 34 35 33 31 2d 33  |d\":\"10ed4531-3|
              00000090  31 66 30 2d 34 64 64 66  2d 62 62 30 39 2d 65 36  |1f0-4ddf-bb09-e6|
              000000a0  38 39 35 37 34 34 66 63  64 64 5c 22 7d 22 3a 7b  |895744fcdd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 35 34  2e 35 38 5c 22 7d 22 3a  |2.20.254.58\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dd74x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dd74x",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=13) "172.20.254.58",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.254.58"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878330403,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d07c1d5c11a91b46b69987064330691b4a374490ce2eb0f6a90dd8b8372c659c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dd74x",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:40:08.917660 23 deployment.go:68] Pod "webserver-deployment-685b768f58-98vts" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-98vts",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c243ba08-7013-49fb-a652-4f3e0990ae8f",
      ResourceVersion: (string) (len=5) "10835",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "10ed4531-31f0-4ddf-bb09-e6895744fcdd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  65 64 34 35 33 31 2d 33  |d\":\"10ed4531-3|
              00000090  31 66 30 2d 34 64 64 66  2d 62 62 30 39 2d 65 36  |1f0-4ddf-bb09-e6|
              000000a0  38 39 35 37 34 34 66 63  64 64 5c 22 7d 22 3a 7b  |895744fcdd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 35 34  2e 31 5c 22 7d 22 3a 7b  |2.20.254.1\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m2g5n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m2g5n",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=12) "172.20.254.1",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.20.254.1"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878330407,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://932bda7608893a57a583ff3e9619668ff283bfe93212e5e5db63fdca1e4cf629",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-m2g5n",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:40:08.919160 23 deployment.go:68] Pod "webserver-deployment-685b768f58-9fv6f" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-9fv6f",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c611c626-aabb-4a0b-b2c8-e535d9810388",
      ResourceVersion: (string) (len=5) "10862",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "10ed4531-31f0-4ddf-bb09-e6895744fcdd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  65 64 34 35 33 31 2d 33  |d\":\"10ed4531-3|
              00000090  31 66 30 2d 34 64 64 66  2d 62 62 30 39 2d 65 36  |1f0-4ddf-bb09-e6|
              000000a0  38 39 35 37 34 34 66 63  64 64 5c 22 7d 22 3a 7b  |895744fcdd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 34 2e  31 36 34 5c 22 7d 22 3a  |2.20.64.164\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nlgsv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nlgsv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.164",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.164"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878330407,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ac52fc5b888667d12d32648f300a3701025d1357f227cc900b87e102eb139013",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nlgsv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:40:08.920628 23 deployment.go:68] Pod "webserver-deployment-685b768f58-9plgq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-9plgq",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "baf7d068-7999-4835-ada0-09f74708979e",
      ResourceVersion: (string) (len=5) "10866",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "10ed4531-31f0-4ddf-bb09-e6895744fcdd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  65 64 34 35 33 31 2d 33  |d\":\"10ed4531-3|
              00000090  31 66 30 2d 34 64 64 66  2d 62 62 30 39 2d 65 36  |1f0-4ddf-bb09-e6|
              000000a0  38 39 35 37 34 34 66 63  64 64 5c 22 7d 22 3a 7b  |895744fcdd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 34 2e  31 36 37 5c 22 7d 22 3a  |2.20.64.167\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bd8vd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bd8vd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.167",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.167"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878330407,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2979e68436c20af2d68960713b8fb2faa41eec891f920475699212dcf32ad235",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bd8vd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:40:08.922168 23 deployment.go:68] Pod "webserver-deployment-685b768f58-ccdzw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-ccdzw",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2ae3a759-e063-4f40-b9e5-92a3540038d1",
      ResourceVersion: (string) (len=5) "10840",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "10ed4531-31f0-4ddf-bb09-e6895744fcdd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  65 64 34 35 33 31 2d 33  |d\":\"10ed4531-3|
              00000090  31 66 30 2d 34 64 64 66  2d 62 62 30 39 2d 65 36  |1f0-4ddf-bb09-e6|
              000000a0  38 39 35 37 34 34 66 63  64 64 5c 22 7d 22 3a 7b  |895744fcdd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 35 34  2e 34 5c 22 7d 22 3a 7b  |2.20.254.4\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lspq6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lspq6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=12) "172.20.254.4",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.20.254.4"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878330407,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6e4ab8e6d5ae2fcc0d8c2485eaeb32a25d0c6206aa69a08326ab61c33c9af656",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lspq6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:40:08.923566 23 deployment.go:68] Pod "webserver-deployment-685b768f58-cxsds" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-cxsds",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9270c869-417d-4337-8a47-82b435aeb79c",
      ResourceVersion: (string) (len=5) "10468",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "10ed4531-31f0-4ddf-bb09-e6895744fcdd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  65 64 34 35 33 31 2d 33  |d\":\"10ed4531-3|
              00000090  31 66 30 2d 34 64 64 66  2d 62 62 30 39 2d 65 36  |1f0-4ddf-bb09-e6|
              000000a0  38 39 35 37 34 34 66 63  64 64 5c 22 7d 22 3a 7b  |895744fcdd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 34 2e  31 36 30 5c 22 7d 22 3a  |2.20.64.160\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lrsg6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lrsg6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.160",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.160"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878330403,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f2b9069a200d38eca1baf827b22cc4ddc3d294b81e45f02214e696113b2b8422",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lrsg6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:40:08.924931 23 deployment.go:68] Pod "webserver-deployment-685b768f58-dnzwf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-dnzwf",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "385b59d5-25bc-47c5-bec4-36778a3f88a4",
      ResourceVersion: (string) (len=5) "10848",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "10ed4531-31f0-4ddf-bb09-e6895744fcdd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  65 64 34 35 33 31 2d 33  |d\":\"10ed4531-3|
              00000090  31 66 30 2d 34 64 64 66  2d 62 62 30 39 2d 65 36  |1f0-4ddf-bb09-e6|
              000000a0  38 39 35 37 34 34 66 63  64 64 5c 22 7d 22 3a 7b  |895744fcdd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 33 2e  32 31 33 5c 22 7d 22 3a  |2.20.63.213\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wvn4x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wvn4x",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) (len=13) "172.20.63.213",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.63.213"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878330407,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b6432ede7d177f58f7c00f8106eba9051a651d29a0b2a3c72d33dc603b11d3f2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wvn4x",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:40:08.926296 23 deployment.go:68] Pod "webserver-deployment-685b768f58-gxzpw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-gxzpw",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "68274f0b-060c-49e5-ad87-95d3a879ded8",
      ResourceVersion: (string) (len=5) "10859",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "10ed4531-31f0-4ddf-bb09-e6895744fcdd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  65 64 34 35 33 31 2d 33  |d\":\"10ed4531-3|
              00000090  31 66 30 2d 34 64 64 66  2d 62 62 30 39 2d 65 36  |1f0-4ddf-bb09-e6|
              000000a0  38 39 35 37 34 34 66 63  64 64 5c 22 7d 22 3a 7b  |895744fcdd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 34 2e  31 36 36 5c 22 7d 22 3a  |2.20.64.166\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s9kvk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s9kvk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.166",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.166"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878330407,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ac0ad05da3df3eb245311f2aec9aa40635186d436bbf07b7a1dff1b5446587ee",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-s9kvk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:40:08.927690 23 deployment.go:68] Pod "webserver-deployment-685b768f58-j6h6j" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-j6h6j",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7730c00c-d571-4cf3-87ce-89cbf95d639b",
      ResourceVersion: (string) (len=5) "10868",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "10ed4531-31f0-4ddf-bb09-e6895744fcdd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  65 64 34 35 33 31 2d 33  |d\":\"10ed4531-3|
              00000090  31 66 30 2d 34 64 64 66  2d 62 62 30 39 2d 65 36  |1f0-4ddf-bb09-e6|
              000000a0  38 39 35 37 34 34 66 63  64 64 5c 22 7d 22 3a 7b  |895744fcdd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 34 2e  31 36 35 5c 22 7d 22 3a  |2.20.64.165\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z75ps",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z75ps",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.165",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.165"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878330407,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d5b14ecb1dc9e610c8ce98d6a415e0783bbe8c0063ffca71a94320f119602cc7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-z75ps",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:40:08.929027 23 deployment.go:68] Pod "webserver-deployment-685b768f58-j8c76" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-j8c76",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ddb57e70-b3e6-4444-9cd6-088ad257eef1",
      ResourceVersion: (string) (len=5) "10478",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "10ed4531-31f0-4ddf-bb09-e6895744fcdd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  65 64 34 35 33 31 2d 33  |d\":\"10ed4531-3|
              00000090  31 66 30 2d 34 64 64 66  2d 62 62 30 39 2d 65 36  |1f0-4ddf-bb09-e6|
              000000a0  38 39 35 37 34 34 66 63  64 64 5c 22 7d 22 3a 7b  |895744fcdd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 34 2e  31 35 39 5c 22 7d 22 3a  |2.20.64.159\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2kb5z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2kb5z",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.159",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.159"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878330403,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://997ed8c28cf4f15164c34f9cebf7707339ecb3de7c7322821fa7d240bfc4b1ee",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2kb5z",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:40:08.930501 23 deployment.go:68] Pod "webserver-deployment-685b768f58-j9vlb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-j9vlb",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "68aecf45-8498-40e6-96bb-0a8353929560",
      ResourceVersion: (string) (len=5) "10465",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "10ed4531-31f0-4ddf-bb09-e6895744fcdd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  65 64 34 35 33 31 2d 33  |d\":\"10ed4531-3|
              00000090  31 66 30 2d 34 64 64 66  2d 62 62 30 39 2d 65 36  |1f0-4ddf-bb09-e6|
              000000a0  38 39 35 37 34 34 66 63  64 64 5c 22 7d 22 3a 7b  |895744fcdd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 35 34  2e 36 30 5c 22 7d 22 3a  |2.20.254.60\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sbrwr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sbrwr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=13) "172.20.254.60",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.254.60"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878330403,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://31a68600b68fb2c7affe13aa4d15c431edbc89f081d4298f391cfa934cfbe46f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-sbrwr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:40:08.931720 23 deployment.go:68] Pod "webserver-deployment-685b768f58-ld62k" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-ld62k",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "941dd359-fda1-4b47-b3bf-4080157dda7b",
      ResourceVersion: (string) (len=5) "10843",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "10ed4531-31f0-4ddf-bb09-e6895744fcdd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  65 64 34 35 33 31 2d 33  |d\":\"10ed4531-3|
              00000090  31 66 30 2d 34 64 64 66  2d 62 62 30 39 2d 65 36  |1f0-4ddf-bb09-e6|
              000000a0  38 39 35 37 34 34 66 63  64 64 5c 22 7d 22 3a 7b  |895744fcdd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 35 34  2e 36 33 5c 22 7d 22 3a  |2.20.254.63\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fkrx5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fkrx5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=13) "172.20.254.63",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.254.63"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878330407,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0873b4b66812ecb50fdd0bd7bec23dfe3683c2712242863252ee0bdbf8b3ab6a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fkrx5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:40:08.932735 23 deployment.go:68] Pod "webserver-deployment-685b768f58-lw8qn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-lw8qn",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6d03ff9e-8539-4909-99d2-1c803a0d0075",
      ResourceVersion: (string) (len=5) "10482",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "10ed4531-31f0-4ddf-bb09-e6895744fcdd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  65 64 34 35 33 31 2d 33  |d\":\"10ed4531-3|
              00000090  31 66 30 2d 34 64 64 66  2d 62 62 30 39 2d 65 36  |1f0-4ddf-bb09-e6|
              000000a0  38 39 35 37 34 34 66 63  64 64 5c 22 7d 22 3a 7b  |895744fcdd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 33 2e  32 30 38 5c 22 7d 22 3a  |2.20.63.208\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nl8f6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nl8f6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) (len=13) "172.20.63.208",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.63.208"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878330403,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://bb975cd8cc347e0c262a27f4b3a67f410d4cb4b904c59dd10e6f67ca5a607999",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nl8f6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:40:08.934276 23 deployment.go:68] Pod "webserver-deployment-685b768f58-tqf65" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-tqf65",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1b251870-c798-4608-8178-4bb1741fef9c",
      ResourceVersion: (string) (len=5) "10444",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "10ed4531-31f0-4ddf-bb09-e6895744fcdd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  65 64 34 35 33 31 2d 33  |d\":\"10ed4531-3|
              00000090  31 66 30 2d 34 64 64 66  2d 62 62 30 39 2d 65 36  |1f0-4ddf-bb09-e6|
              000000a0  38 39 35 37 34 34 66 63  64 64 5c 22 7d 22 3a 7b  |895744fcdd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 33 2e  32 30 36 5c 22 7d 22 3a  |2.20.63.206\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8kdrn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8kdrn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) (len=13) "172.20.63.206",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.63.206"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878330403,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b73261c3780d350cc647433e290ff4316bd55833a37db6458a6b9dc37ff44a5a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8kdrn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:40:08.935704 23 deployment.go:68] Pod "webserver-deployment-685b768f58-wxgrl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-wxgrl",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "081a21b8-9a54-4144-a8b3-406238b7f990",
      ResourceVersion: (string) (len=5) "10838",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "10ed4531-31f0-4ddf-bb09-e6895744fcdd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  65 64 34 35 33 31 2d 33  |d\":\"10ed4531-3|
              00000090  31 66 30 2d 34 64 64 66  2d 62 62 30 39 2d 65 36  |1f0-4ddf-bb09-e6|
              000000a0  38 39 35 37 34 34 66 63  64 64 5c 22 7d 22 3a 7b  |895744fcdd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 35 34  2e 35 5c 22 7d 22 3a 7b  |2.20.254.5\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dphgc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dphgc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=12) "172.20.254.5",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.20.254.5"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878330407,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a584edc007a0e0de92552c613796cf4ddd49064946f79684809123056085b65f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dphgc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:40:08.937262 23 deployment.go:68] Pod "webserver-deployment-685b768f58-xqmdw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-xqmdw",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3ba7849d-53dd-4082-81b4-8534fc5a3950",
      ResourceVersion: (string) (len=5) "10470",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "10ed4531-31f0-4ddf-bb09-e6895744fcdd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 30  65 64 34 35 33 31 2d 33  |d\":\"10ed4531-3|
              00000090  31 66 30 2d 34 64 64 66  2d 62 62 30 39 2d 65 36  |1f0-4ddf-bb09-e6|
              000000a0  38 39 35 37 34 34 66 63  64 64 5c 22 7d 22 3a 7b  |895744fcdd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 35 34  2e 35 39 5c 22 7d 22 3a  |2.20.254.59\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fd8xl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fd8xl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=13) "172.20.254.59",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.254.59"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878330403,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://fd2b4b477c175d9496ab16becf9009ef8829a8b2751a7d3636856e7664a0e16e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fd8xl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:40:08.938729 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-24kvd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-24kvd",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "efa3b7c6-900e-48ee-b257-f71409257111",
      ResourceVersion: (string) (len=5) "10694",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "74b7ae42-719c-48b7-be15-4266f4fd7885",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 34  62 37 61 65 34 32 2d 37  |d\":\"74b7ae42-7|
              00000090  31 39 63 2d 34 38 62 37  2d 62 65 31 35 2d 34 32  |19c-48b7-be15-42|
              000000a0  36 36 66 34 66 64 37 38  38 35 5c 22 7d 22 3a 7b  |66f4fd7885\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-txvxt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-txvxt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-txvxt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:40:08.940168 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-2kh2r" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-2kh2r",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5528a755-93b6-48c3-b9b9-ca1ab7b9a51e",
      ResourceVersion: (string) (len=5) "10618",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "74b7ae42-719c-48b7-be15-4266f4fd7885",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 34  62 37 61 65 34 32 2d 37  |d\":\"74b7ae42-7|
              00000090  31 39 63 2d 34 38 62 37  2d 62 65 31 35 2d 34 32  |19c-48b7-be15-42|
              000000a0  36 36 66 34 66 64 37 38  38 35 5c 22 7d 22 3a 7b  |66f4fd7885\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r8tsz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r8tsz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-r8tsz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:40:08.941541 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-2v6c8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-2v6c8",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1703e3b8-a952-445e-91b8-26d0026c4616",
      ResourceVersion: (string) (len=5) "10781",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330404,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "74b7ae42-719c-48b7-be15-4266f4fd7885",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 34  62 37 61 65 34 32 2d 37  |d\":\"74b7ae42-7|
              00000090  31 39 63 2d 34 38 62 37  2d 62 65 31 35 2d 34 32  |19c-48b7-be15-42|
              000000a0  36 36 66 34 66 64 37 38  38 35 5c 22 7d 22 3a 7b  |66f4fd7885\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 37 32 2e 32  |:{\"ip\":\"172.2|
              00000290  30 2e 36 34 2e 31 36 32  5c 22 7d 22 3a 7b 22 2e  |0.64.162\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kx76x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kx76x",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.162",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.162"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330404,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kx76x",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:40:08.943128 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-7t5bj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-7t5bj",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "17615ea7-52b8-4fe9-a6b3-98117aa68a49",
      ResourceVersion: (string) (len=5) "10756",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330404,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "74b7ae42-719c-48b7-be15-4266f4fd7885",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 34  62 37 61 65 34 32 2d 37  |d\":\"74b7ae42-7|
              00000090  31 39 63 2d 34 38 62 37  2d 62 65 31 35 2d 34 32  |19c-48b7-be15-42|
              000000a0  36 36 66 34 66 64 37 38  38 35 5c 22 7d 22 3a 7b  |66f4fd7885\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 37 32 2e 32  |:{\"ip\":\"172.2|
              00000290  30 2e 32 35 34 2e 36 31  5c 22 7d 22 3a 7b 22 2e  |0.254.61\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ln882",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ln882",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=13) "172.20.254.61",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.254.61"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330404,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ln882",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:40:08.944562 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-cb9t9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-cb9t9",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1af34292-6de7-4d66-940a-44650f0aa361",
      ResourceVersion: (string) (len=5) "10666",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "74b7ae42-719c-48b7-be15-4266f4fd7885",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 34  62 37 61 65 34 32 2d 37  |d\":\"74b7ae42-7|
              00000090  31 39 63 2d 34 38 62 37  2d 62 65 31 35 2d 34 32  |19c-48b7-be15-42|
              000000a0  36 36 66 34 66 64 37 38  38 35 5c 22 7d 22 3a 7b  |66f4fd7885\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nvkjc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nvkjc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nvkjc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:40:08.946110 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-d26rb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-d26rb",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e4f21b12-eeab-416f-ba82-f32ce2835bed",
      ResourceVersion: (string) (len=5) "10747",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330404,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "74b7ae42-719c-48b7-be15-4266f4fd7885",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 34  62 37 61 65 34 32 2d 37  |d\":\"74b7ae42-7|
              00000090  31 39 63 2d 34 38 62 37  2d 62 65 31 35 2d 34 32  |19c-48b7-be15-42|
              000000a0  36 36 66 34 66 64 37 38  38 35 5c 22 7d 22 3a 7b  |66f4fd7885\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 37 32 2e 32  |:{\"ip\":\"172.2|
              00000290  30 2e 32 35 34 2e 36 32  5c 22 7d 22 3a 7b 22 2e  |0.254.62\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bspph",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bspph",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=13) "172.20.254.62",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.254.62"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330404,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bspph",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:40:08.947586 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-dj6fw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-dj6fw",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "898a4496-8100-4d46-965f-d2a3626e19a0",
      ResourceVersion: (string) (len=5) "10696",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "74b7ae42-719c-48b7-be15-4266f4fd7885",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 34  62 37 61 65 34 32 2d 37  |d\":\"74b7ae42-7|
              00000090  31 39 63 2d 34 38 62 37  2d 62 65 31 35 2d 34 32  |19c-48b7-be15-42|
              000000a0  36 36 66 34 66 64 37 38  38 35 5c 22 7d 22 3a 7b  |66f4fd7885\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nfrmk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nfrmk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nfrmk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:40:08.949192 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-frs44" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-frs44",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1dc2577d-f2c5-4b10-8759-dbc1e9c466fd",
      ResourceVersion: (string) (len=5) "10697",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "74b7ae42-719c-48b7-be15-4266f4fd7885",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 34  62 37 61 65 34 32 2d 37  |d\":\"74b7ae42-7|
              00000090  31 39 63 2d 34 38 62 37  2d 62 65 31 35 2d 34 32  |19c-48b7-be15-42|
              000000a0  36 36 66 34 66 64 37 38  38 35 5c 22 7d 22 3a 7b  |66f4fd7885\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kqm56",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kqm56",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kqm56",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:40:08.950803 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-fz524" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-fz524",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "71407d6c-378d-4f00-bfac-6d4f100d99a0",
      ResourceVersion: (string) (len=5) "10656",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "74b7ae42-719c-48b7-be15-4266f4fd7885",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 34  62 37 61 65 34 32 2d 37  |d\":\"74b7ae42-7|
              00000090  31 39 63 2d 34 38 62 37  2d 62 65 31 35 2d 34 32  |19c-48b7-be15-42|
              000000a0  36 36 66 34 66 64 37 38  38 35 5c 22 7d 22 3a 7b  |66f4fd7885\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g259j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g259j",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-g259j",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:40:08.952235 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-kx76d" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-kx76d",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a2b1eac9-d6fe-4487-b984-59823e11fdd4",
      ResourceVersion: (string) (len=5) "10693",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "74b7ae42-719c-48b7-be15-4266f4fd7885",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 34  62 37 61 65 34 32 2d 37  |d\":\"74b7ae42-7|
              00000090  31 39 63 2d 34 38 62 37  2d 62 65 31 35 2d 34 32  |19c-48b7-be15-42|
              000000a0  36 36 66 34 66 64 37 38  38 35 5c 22 7d 22 3a 7b  |66f4fd7885\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bt2jp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bt2jp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bt2jp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:40:08.953532 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-qcqrv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-qcqrv",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "842b3e95-5b2b-4d5f-a1b0-79cf2f448985",
      ResourceVersion: (string) (len=5) "10764",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330404,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "74b7ae42-719c-48b7-be15-4266f4fd7885",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 34  62 37 61 65 34 32 2d 37  |d\":\"74b7ae42-7|
              00000090  31 39 63 2d 34 38 62 37  2d 62 65 31 35 2d 34 32  |19c-48b7-be15-42|
              000000a0  36 36 66 34 66 64 37 38  38 35 5c 22 7d 22 3a 7b  |66f4fd7885\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 37 32 2e 32  |:{\"ip\":\"172.2|
              00000290  30 2e 36 33 2e 32 30 39  5c 22 7d 22 3a 7b 22 2e  |0.63.209\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s8t59",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s8t59",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-206",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.206",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.206"
        }
      },
      PodIP: (string) (len=13) "172.20.63.209",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.63.209"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330404,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-s8t59",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:40:08.954547 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-tgkx5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-tgkx5",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "499f4671-b0ec-4204-ad33-6a9a2ecc8c9f",
      ResourceVersion: (string) (len=5) "10673",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "74b7ae42-719c-48b7-be15-4266f4fd7885",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 34  62 37 61 65 34 32 2d 37  |d\":\"74b7ae42-7|
              00000090  31 39 63 2d 34 38 62 37  2d 62 65 31 35 2d 34 32  |19c-48b7-be15-42|
              000000a0  36 36 66 34 66 64 37 38  38 35 5c 22 7d 22 3a 7b  |66f4fd7885\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hv2j5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hv2j5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hv2j5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:40:08.955921 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-wdfm9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-wdfm9",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7166",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f69366ab-ac6f-49f5-a872-85f3d82b48a7",
      ResourceVersion: (string) (len=5) "10772",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330404,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "74b7ae42-719c-48b7-be15-4266f4fd7885",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 34  62 37 61 65 34 32 2d 37  |d\":\"74b7ae42-7|
              00000090  31 39 63 2d 34 38 62 37  2d 62 65 31 35 2d 34 32  |19c-48b7-be15-42|
              000000a0  36 36 66 34 66 64 37 38  38 35 5c 22 7d 22 3a 7b  |66f4fd7885\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 37 32 2e 32  |:{\"ip\":\"172.2|
              00000290  30 2e 36 34 2e 31 36 33  5c 22 7d 22 3a 7b 22 2e  |0.64.163\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bpvdr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bpvdr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.163",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.163"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330404,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bpvdr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:40:08.957192 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7166" for this suite. @ 03/23/25 12:40:08.959
• [6.110 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 03/23/25 12:40:08.964
  I0323 12:40:08.964488 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename webhook @ 03/23/25 12:40:08.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:40:08.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:40:08.973
  STEP: Setting up server cert @ 03/23/25 12:40:08.984
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/23/25 12:40:09.316
  STEP: Deploying the webhook pod @ 03/23/25 12:40:09.32
  STEP: Wait for the deployment to be ready @ 03/23/25 12:40:09.325
  I0323 12:40:09.329661 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 03/23/25 12:40:11.334
  STEP: Verifying the service has paired with the endpoint @ 03/23/25 12:40:11.34
  I0323 12:40:12.340746 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 03/23/25 12:40:12.344
  STEP: verifying the validating webhook match conditions @ 03/23/25 12:40:12.352
  STEP: updating the validating webhook match conditions @ 03/23/25 12:40:12.353
  STEP: verifying the validating webhook match conditions @ 03/23/25 12:40:12.357
  I0323 12:40:12.375936 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1441" for this suite. @ 03/23/25 12:40:12.378
  STEP: Destroying namespace "webhook-markers-7464" for this suite. @ 03/23/25 12:40:12.384
• [3.423 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:401
  STEP: Creating a kubernetes client @ 03/23/25 12:40:12.387
  I0323 12:40:12.387953 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename namespaces @ 03/23/25 12:40:12.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:40:12.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:40:12.398
  STEP: Creating namespace "e2e-ns-tnqkg" @ 03/23/25 12:40:12.399
  I0323 12:40:12.405338 23 namespace.go:412] Namespace "e2e-ns-tnqkg-8187" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-tnqkg-8187" @ 03/23/25 12:40:12.405
  I0323 12:40:12.411841 23 namespace.go:435] Namespace "e2e-ns-tnqkg-8187" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-tnqkg-8187" @ 03/23/25 12:40:12.411
  I0323 12:40:12.415491 23 namespace.go:464] Namespace "e2e-ns-tnqkg-8187" has []v1.FinalizerName{"kubernetes"}
  I0323 12:40:12.415557 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9396" for this suite. @ 03/23/25 12:40:12.479
  STEP: Destroying namespace "e2e-ns-tnqkg-8187" for this suite. @ 03/23/25 12:40:12.482
• [0.097 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 03/23/25 12:40:12.485
  I0323 12:40:12.485520 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename runtimeclass @ 03/23/25 12:40:12.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:40:12.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:40:12.494
  I0323 12:40:12.498633 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3698" for this suite. @ 03/23/25 12:40:12.58
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 03/23/25 12:40:12.583
  I0323 12:40:12.583587 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename emptydir @ 03/23/25 12:40:12.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:40:12.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:40:12.592
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 03/23/25 12:40:12.594
  STEP: Saw pod success @ 03/23/25 12:40:16.608
  I0323 12:40:16.609590 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-9b96a559-ee43-4d8b-a9a3-0e95109b0835 container test-container: <nil>
  STEP: delete the pod @ 03/23/25 12:40:16.612
  I0323 12:40:16.618118 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6503" for this suite. @ 03/23/25 12:40:16.619
• [4.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 03/23/25 12:40:16.622
  I0323 12:40:16.622446 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename cronjob @ 03/23/25 12:40:16.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:40:16.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:40:16.63
  STEP: Creating a suspended cronjob @ 03/23/25 12:40:16.68
  STEP: Ensuring no jobs are scheduled @ 03/23/25 12:40:16.683
  STEP: Ensuring no job exists by listing jobs explicitly @ 03/23/25 12:45:16.683
  STEP: Removing cronjob @ 03/23/25 12:45:16.685
  I0323 12:45:16.688287 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8562" for this suite. @ 03/23/25 12:45:16.689
• [300.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 03/23/25 12:45:16.692
  I0323 12:45:16.692413 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename ingress @ 03/23/25 12:45:16.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:45:16.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:45:16.699
  STEP: getting /apis @ 03/23/25 12:45:16.701
  STEP: getting /apis/networking.k8s.io @ 03/23/25 12:45:16.702
  STEP: getting /apis/networking.k8s.iov1 @ 03/23/25 12:45:16.703
  STEP: creating @ 03/23/25 12:45:16.703
  STEP: getting @ 03/23/25 12:45:16.71
  STEP: listing @ 03/23/25 12:45:16.711
  STEP: watching @ 03/23/25 12:45:16.712
  I0323 12:45:16.712559 23 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 03/23/25 12:45:16.713
  STEP: cluster-wide watching @ 03/23/25 12:45:16.714
  I0323 12:45:16.714037 23 ingress.go:198] starting watch
  STEP: patching @ 03/23/25 12:45:16.714
  STEP: updating @ 03/23/25 12:45:16.716
  I0323 12:45:16.720281 23 ingress.go:221] waiting for watch events with expected annotations
  I0323 12:45:16.720305 23 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 03/23/25 12:45:16.72
  STEP: updating /status @ 03/23/25 12:45:16.722
  STEP: get /status @ 03/23/25 12:45:16.726
  STEP: deleting @ 03/23/25 12:45:16.727
  STEP: deleting a collection @ 03/23/25 12:45:16.738
  I0323 12:45:16.743224 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-392" for this suite. @ 03/23/25 12:45:16.79
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 03/23/25 12:45:16.793
  I0323 12:45:16.793054 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename var-expansion @ 03/23/25 12:45:16.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:45:16.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:45:16.802
  STEP: Creating a pod to test substitution in volume subpath @ 03/23/25 12:45:16.804
  STEP: Saw pod success @ 03/23/25 12:45:20.815
  I0323 12:45:20.816537 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod var-expansion-e5694058-d5ea-4077-b747-12dc286af21f container dapi-container: <nil>
  STEP: delete the pod @ 03/23/25 12:45:20.83
  I0323 12:45:20.837318 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1460" for this suite. @ 03/23/25 12:45:20.838
• [4.048 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 03/23/25 12:45:20.841
  I0323 12:45:20.841116 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename var-expansion @ 03/23/25 12:45:20.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:45:20.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:45:20.848
  STEP: Creating a pod to test substitution in container's command @ 03/23/25 12:45:20.85
  STEP: Saw pod success @ 03/23/25 12:45:24.861
  I0323 12:45:24.862782 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod var-expansion-0357a8a8-9559-4f7e-8781-b34fd5b2ae41 container dapi-container: <nil>
  STEP: delete the pod @ 03/23/25 12:45:24.873
  I0323 12:45:24.879544 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9210" for this suite. @ 03/23/25 12:45:24.881
• [4.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 03/23/25 12:45:24.884
  I0323 12:45:24.884375 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename crd-webhook @ 03/23/25 12:45:24.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:45:24.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:45:24.892
  STEP: Setting up server cert @ 03/23/25 12:45:24.894
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 03/23/25 12:45:25.373
  STEP: Deploying the custom resource conversion webhook pod @ 03/23/25 12:45:25.376
  STEP: Wait for the deployment to be ready @ 03/23/25 12:45:25.382
  I0323 12:45:25.385816 23 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 03/23/25 12:45:27.391
  STEP: Verifying the service has paired with the endpoint @ 03/23/25 12:45:27.396
  I0323 12:45:28.397407 23 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0323 12:45:28.400763 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Creating a v1 custom resource @ 03/23/25 12:45:30.943
  STEP: v2 custom resource should be converted @ 03/23/25 12:45:30.947
  I0323 12:45:31.484924 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-6748" for this suite. @ 03/23/25 12:45:31.487
• [6.607 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 03/23/25 12:45:31.491
  I0323 12:45:31.491808 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename downward-api @ 03/23/25 12:45:31.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:45:31.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:45:31.501
  STEP: Creating the pod @ 03/23/25 12:45:31.502
  I0323 12:45:34.022761 23 pod_client.go:173] Successfully updated pod "annotationupdate52bd7762-4fd1-403c-a0e0-47d0cf1ced9f"
  I0323 12:45:36.030000 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2653" for this suite. @ 03/23/25 12:45:36.031
• [4.542 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 03/23/25 12:45:36.034
  I0323 12:45:36.034111 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename deployment @ 03/23/25 12:45:36.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:45:36.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:45:36.044
  I0323 12:45:36.046091 23 deployment.go:1645] Creating simple deployment test-new-deployment
  I0323 12:45:36.051945 23 deployment.go:223] deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 03/23/25 12:45:38.058
  STEP: updating a scale subresource @ 03/23/25 12:45:38.059
  STEP: verifying the deployment Spec.Replicas was modified @ 03/23/25 12:45:38.062
  STEP: Patch a scale subresource @ 03/23/25 12:45:38.063
  I0323 12:45:38.074579 23 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8163",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b3b86ea1-7855-4390-a98c-aaf44e0a7702",
      ResourceVersion: (string) (len=5) "12154",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330736,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330736,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330736,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-685b768f58\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0323 12:45:38.080513 23 deployment.go:40] New ReplicaSet "test-new-deployment-685b768f58" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8163",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b738a8d2-e4c6-4b12-b2ac-705b9ec57f70",
      ResourceVersion: (string) (len=5) "12161",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330736,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "b3b86ea1-7855-4390-a98c-aaf44e0a7702",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 33 62 38 36 65  61 31 2d 37 38 35 35 2d  |\"b3b86ea1-7855-|
              00000120  34 33 39 30 2d 61 39 38  63 2d 61 61 66 34 34 65  |4390-a98c-aaf44e|
              00000130  30 61 37 37 30 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0a7702\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0323 12:45:38.083123 23 deployment.go:68] Pod "test-new-deployment-685b768f58-fsl5l" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-fsl5l",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8163",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8df335d1-ee6c-4072-832f-2e551bb1ccc9",
      ResourceVersion: (string) (len=5) "12149",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330736,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "b738a8d2-e4c6-4b12-b2ac-705b9ec57f70",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330736,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 37  33 38 61 38 64 32 2d 65  |d\":\"b738a8d2-e|
              00000090  34 63 36 2d 34 62 31 32  2d 62 32 61 63 2d 37 30  |4c6-4b12-b2ac-70|
              000000a0  35 62 39 65 63 35 37 66  37 30 5c 22 7d 22 3a 7b  |5b9ec57f70\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 34 2e  31 37 32 5c 22 7d 22 3a  |2.20.64.172\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8xw4m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8xw4m",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330736,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330736,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.172",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.172"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330736,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878330736,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1c142d5e8218e821c57023bafb9571cf9d2150ecfe514e648c0c644195246a8f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8xw4m",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:45:38.084520 23 deployment.go:68] Pod "test-new-deployment-685b768f58-xtxj8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-xtxj8",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8163",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e8fe45e8-5da5-4bf9-89cc-ccc8a133d70f",
      ResourceVersion: (string) (len=5) "12162",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330738,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "b738a8d2-e4c6-4b12-b2ac-705b9ec57f70",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 37  33 38 61 38 64 32 2d 65  |d\":\"b738a8d2-e|
              00000090  34 63 36 2d 34 62 31 32  2d 62 32 61 63 2d 37 30  |4c6-4b12-b2ac-70|
              000000a0  35 62 39 65 63 35 37 66  37 30 5c 22 7d 22 3a 7b  |5b9ec57f70\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-95k49",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-95k49",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878330738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878330738,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-95k49",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:45:38.085695 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8163" for this suite. @ 03/23/25 12:45:38.089
• [2.065 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 03/23/25 12:45:38.099
  I0323 12:45:38.099508 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename subjectreview @ 03/23/25 12:45:38.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:45:38.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:45:38.112
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-5325" @ 03/23/25 12:45:38.114
  I0323 12:45:38.118611 23 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-5325:e2e"
  I0323 12:45:38.118628 23 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-5325"}
  I0323 12:45:38.118637 23 subjectreviews.go:71] saUID: "3746726b-aaae-47fd-b36f-4e7d395238b4"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-5325:e2e" @ 03/23/25 12:45:38.118
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-5325:e2e" @ 03/23/25 12:45:38.118
  I0323 12:45:38.119962 23 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-5325:e2e" api 'list' configmaps in "subjectreview-5325" namespace @ 03/23/25 12:45:38.119
  I0323 12:45:38.120900 23 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-5325:e2e" @ 03/23/25 12:45:38.12
  I0323 12:45:38.121874 23 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0323 12:45:38.121887 23 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0323 12:45:38.121974 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-5325" for this suite. @ 03/23/25 12:45:38.19
• [0.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:306
  STEP: Creating a kubernetes client @ 03/23/25 12:45:38.193
  I0323 12:45:38.193066 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename namespaces @ 03/23/25 12:45:38.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:45:38.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:45:38.201
  STEP: Read namespace status @ 03/23/25 12:45:38.202
  I0323 12:45:38.204200 23 namespace.go:319] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 03/23/25 12:45:38.204
  I0323 12:45:38.206436 23 namespace.go:339] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 03/23/25 12:45:38.206
  I0323 12:45:38.210623 23 namespace.go:364] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0323 12:45:38.210703 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1089" for this suite. @ 03/23/25 12:45:38.29
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 03/23/25 12:45:38.293
  I0323 12:45:38.293019 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename custom-resource-definition @ 03/23/25 12:45:38.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:45:38.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:45:38.299
  I0323 12:45:38.301118 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  I0323 12:45:41.352092 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2663" for this suite. @ 03/23/25 12:45:41.354
• [3.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 03/23/25 12:45:41.358
  I0323 12:45:41.358963 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename container-probe @ 03/23/25 12:45:41.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:45:41.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:45:41.366
  STEP: Creating pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672 @ 03/23/25 12:45:41.368
  STEP: checking the pod's current state and verifying that restartCount is present @ 03/23/25 12:45:43.377
  I0323 12:45:43.378162 23 container_probe.go:1749] Initial restart count of pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f is 0
  I0323 12:45:43.379274 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:45:45.381603 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:45:47.384087 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:45:49.386882 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:45:51.389733 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:45:53.392598 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:45:55.394533 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:45:57.396522 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:45:59.399407 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:46:01.402471 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:46:03.405095 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:46:05.408016 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:46:07.410622 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:46:09.413348 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:46:11.415515 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:46:13.418320 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:46:15.421144 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:46:17.424112 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:46:19.426910 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:46:21.429663 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:46:23.432485 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:46:25.434485 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:46:27.436531 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:46:29.439312 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:46:31.442358 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:46:33.445096 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:46:35.447063 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:46:37.449550 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:46:39.452041 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:46:41.454806 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:46:43.457194 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:46:45.460094 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:46:47.462573 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:46:49.464856 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:46:51.467882 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:46:53.470579 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:46:55.473522 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:46:57.476187 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:46:59.478206 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:47:01.481348 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:47:03.483245 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:47:05.485564 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:47:07.488453 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:47:09.490872 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:47:11.493819 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:47:13.496334 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:47:15.498565 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:47:17.501516 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:47:19.503755 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:47:21.506737 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:47:23.509516 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:47:25.512084 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:47:27.514566 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:47:29.517401 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:47:31.520491 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:47:33.523244 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:47:35.525541 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:47:37.528484 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:47:39.531256 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:47:41.534486 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:47:43.537322 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:47:45.540149 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:47:47.542594 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:47:49.545454 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:47:51.548524 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:47:53.551381 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:47:55.554021 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:47:57.556933 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:47:59.559818 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:48:01.561977 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:48:03.564315 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:48:05.566328 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:48:07.568171 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:48:09.570531 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:48:11.573358 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:48:13.575374 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:48:15.577532 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:48:17.579862 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:48:19.582667 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:48:21.585676 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:48:23.588466 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:48:25.590354 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:48:27.592366 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:48:29.594343 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:48:31.596434 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:48:33.599309 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:48:35.601579 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:48:37.603559 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:48:39.606323 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:48:41.609336 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:48:43.612110 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:48:45.614054 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:48:47.616901 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:48:49.619645 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:48:51.621780 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:48:53.624434 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:48:55.627303 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:48:57.629432 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:48:59.631283 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:49:01.633694 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:49:03.636313 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:49:05.639246 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:49:07.641447 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:49:09.644310 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:49:11.647431 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:49:13.650207 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:49:15.653296 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:49:17.656203 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:49:19.658101 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:49:21.661246 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:49:23.663441 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:49:25.665459 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:49:27.668335 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:49:29.670514 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:49:31.673183 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:49:33.676050 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:49:35.678534 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:49:37.681458 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:49:39.684313 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  I0323 12:49:41.686763 23 container_probe.go:1759] Get pod liveness-9f6750a6-c129-4a2c-a02d-c2236c50991f in namespace container-probe-8672
  STEP: deleting the pod @ 03/23/25 12:49:43.687
  I0323 12:49:43.695190 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8672" for this suite. @ 03/23/25 12:49:43.697
• [242.340 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 03/23/25 12:49:43.699
  I0323 12:49:43.699478 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename downward-api @ 03/23/25 12:49:43.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:49:43.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:49:43.707
  STEP: Creating a pod to test downward API volume plugin @ 03/23/25 12:49:43.708
  STEP: Saw pod success @ 03/23/25 12:49:45.717
  I0323 12:49:45.718897 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod downwardapi-volume-4c9868c7-3e30-4689-b820-998c322efca6 container client-container: <nil>
  STEP: delete the pod @ 03/23/25 12:49:45.732
  I0323 12:49:45.739990 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8498" for this suite. @ 03/23/25 12:49:45.741
• [2.045 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1730
  STEP: Creating a kubernetes client @ 03/23/25 12:49:45.745
  I0323 12:49:45.745025 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename kubectl @ 03/23/25 12:49:45.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:49:45.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:49:45.752
  I0323 12:49:45.753918 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-2479 version'
  I0323 12:49:45.789888 23 builder.go:146] stderr: ""
  I0323 12:49:45.789921 23 builder.go:147] stdout: "Client Version: v1.32.3\nKustomize Version: v5.5.0\nServer Version: v1.32.3\n"
  I0323 12:49:45.790163 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2479" for this suite. @ 03/23/25 12:49:45.842
• [0.100 seconds]
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 03/23/25 12:49:45.844
  I0323 12:49:45.844825 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename subpath @ 03/23/25 12:49:45.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:49:45.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:49:45.85
  STEP: Setting up data @ 03/23/25 12:49:45.852
  STEP: Creating pod pod-subpath-test-projected-6kxw @ 03/23/25 12:49:45.856
  STEP: Creating a pod to test atomic-volume-subpath @ 03/23/25 12:49:45.856
  STEP: Saw pod success @ 03/23/25 12:50:07.89
  I0323 12:50:07.891695 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-subpath-test-projected-6kxw container test-container-subpath-projected-6kxw: <nil>
  STEP: delete the pod @ 03/23/25 12:50:07.894
  STEP: Deleting pod pod-subpath-test-projected-6kxw @ 03/23/25 12:50:07.901
  I0323 12:50:07.901482 23 delete.go:62] Deleting pod "pod-subpath-test-projected-6kxw" in namespace "subpath-4207"
  I0323 12:50:07.902540 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4207" for this suite. @ 03/23/25 12:50:07.903
• [22.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 03/23/25 12:50:07.906
  I0323 12:50:07.906433 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename configmap @ 03/23/25 12:50:07.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:50:07.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:50:07.914
  STEP: Creating configMap configmap-7869/configmap-test-38d79eff-6641-40bb-90df-cb80d769bce5 @ 03/23/25 12:50:07.916
  STEP: Creating a pod to test consume configMaps @ 03/23/25 12:50:07.917
  STEP: Saw pod success @ 03/23/25 12:50:11.929
  I0323 12:50:11.930637 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-configmaps-867980b0-448d-4f4e-903e-da4c59fee0ae container env-test: <nil>
  STEP: delete the pod @ 03/23/25 12:50:11.933
  I0323 12:50:11.940087 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7869" for this suite. @ 03/23/25 12:50:11.941
• [4.038 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 03/23/25 12:50:11.944
  I0323 12:50:11.944259 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename pv @ 03/23/25 12:50:11.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:50:11.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:50:11.955
  STEP: Creating initial PV and PVC @ 03/23/25 12:50:11.957
  I0323 12:50:11.957088 23 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-2963" @ 03/23/25 12:50:11.963
  STEP: Listing PVCs in namespace "pv-2963" @ 03/23/25 12:50:11.964
  STEP: Patching the PV "pv-2963-ccdrl" @ 03/23/25 12:50:11.966
  STEP: Patching the PVC "pvc-t4vg8" @ 03/23/25 12:50:11.973
  STEP: Getting PV "pv-2963-ccdrl" @ 03/23/25 12:50:11.978
  STEP: Getting PVC "pvc-t4vg8" @ 03/23/25 12:50:11.979
  STEP: Deleting PVC "pvc-t4vg8" @ 03/23/25 12:50:11.98
  STEP: Confirm deletion of PVC "pvc-t4vg8" @ 03/23/25 12:50:11.982
  STEP: Deleting PV "pv-2963-ccdrl" @ 03/23/25 12:50:13.99
  STEP: Confirm deletion of PV "pv-2963-ccdrl" @ 03/23/25 12:50:13.993
  STEP: Recreating another PV & PVC @ 03/23/25 12:50:16.005
  I0323 12:50:16.005944 23 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-2963-5x9b5" @ 03/23/25 12:50:16.01
  STEP: Updating the PVC "pvc-5sbfb" @ 03/23/25 12:50:16.015
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-5sbfb=updated" @ 03/23/25 12:50:16.018
  STEP: Deleting PVC "pvc-5sbfb" via DeleteCollection @ 03/23/25 12:50:16.019
  STEP: Confirm deletion of PVC "pvc-5sbfb" @ 03/23/25 12:50:16.022
  STEP: Deleting PV "pv-2963-5x9b5" via DeleteCollection @ 03/23/25 12:50:16.027
  STEP: Confirm deletion of PV "pv-2963-5x9b5" @ 03/23/25 12:50:16.101
  I0323 12:50:18.105519 23 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0323 12:50:18.105542 23 pv.go:205] Deleting PersistentVolumeClaim "pvc-5sbfb"
  I0323 12:50:18.106793 23 pv.go:193] Deleting PersistentVolume "pv-2963-5x9b5"
  I0323 12:50:18.107872 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-2963" for this suite. @ 03/23/25 12:50:18.109
• [6.167 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 03/23/25 12:50:18.111
  I0323 12:50:18.111569 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename endpointslice @ 03/23/25 12:50:18.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:50:18.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:50:18.119
  I0323 12:50:20.141878 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5700" for this suite. @ 03/23/25 12:50:20.143
• [2.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 03/23/25 12:50:20.15
  I0323 12:50:20.150430 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename events @ 03/23/25 12:50:20.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:50:20.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:50:20.158
  STEP: Create set of events @ 03/23/25 12:50:20.16
  STEP: get a list of Events with a label in the current namespace @ 03/23/25 12:50:20.166
  STEP: delete a list of events @ 03/23/25 12:50:20.167
  I0323 12:50:20.167285 23 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 03/23/25 12:50:20.174
  I0323 12:50:20.175292 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8293" for this suite. @ 03/23/25 12:50:20.244
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 03/23/25 12:50:20.248
  I0323 12:50:20.248895 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename emptydir @ 03/23/25 12:50:20.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:50:20.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:50:20.258
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 03/23/25 12:50:20.26
  STEP: Saw pod success @ 03/23/25 12:50:24.27
  I0323 12:50:24.271988 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-3af37373-1e2d-4f35-becd-cfccf5fe1b67 container test-container: <nil>
  STEP: delete the pod @ 03/23/25 12:50:24.275
  I0323 12:50:24.282832 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1749" for this suite. @ 03/23/25 12:50:24.284
• [4.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 03/23/25 12:50:24.286
  I0323 12:50:24.286613 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename aggregator @ 03/23/25 12:50:24.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:50:24.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:50:24.297
  I0323 12:50:24.298265 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Registering the sample API server. @ 03/23/25 12:50:24.298
  I0323 12:50:24.440344 23 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0323 12:50:24.452281 23 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I0323 12:50:26.469235 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0323 12:50:28.472118 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0323 12:50:30.472932 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0323 12:50:32.472911 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0323 12:50:34.472339 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0323 12:50:36.473147 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0323 12:50:38.472057 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0323 12:50:40.472699 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0323 12:50:42.471983 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0323 12:50:44.471406 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0323 12:50:46.471285 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0323 12:50:48.471330 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0323 12:50:50.471285 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0323 12:50:52.473061 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 12, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0323 12:50:54.581682 23 aggregator.go:755] Waited 106.61932ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 03/23/25 12:50:54.607
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 03/23/25 12:50:54.608
  STEP: List APIServices @ 03/23/25 12:50:54.611
  I0323 12:50:54.613185 23 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 03/23/25 12:50:54.613
  I0323 12:50:54.619301 23 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 03/23/25 12:50:54.619
  I0323 12:50:54.623526 23 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.March, 23, 12, 50, 54, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 03/23/25 12:50:54.623
  I0323 12:50:54.624748 23 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-03-23 12:50:54 +0000 UTC Passed all checks passed}
  I0323 12:50:54.624767 23 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0323 12:50:54.624780 23 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 03/23/25 12:50:54.624
  I0323 12:50:54.629097 23 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-651491078" @ 03/23/25 12:50:54.629
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 03/23/25 12:50:54.636
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 03/23/25 12:50:54.639
  STEP: Patch APIService Status @ 03/23/25 12:50:54.64
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 03/23/25 12:50:54.644
  I0323 12:50:54.645485 23 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-03-23 12:50:54 +0000 UTC Passed all checks passed}
  I0323 12:50:54.645505 23 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0323 12:50:54.645519 23 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0323 12:50:54.645535 23 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 03/23/25 12:50:54.645
  STEP: Confirm that the generated APIService has been deleted @ 03/23/25 12:50:54.648
  I0323 12:50:54.648333 23 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I0323 12:50:54.649308 23 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0323 12:50:54.649323 23 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I0323 12:50:54.692931 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-8831" for this suite. @ 03/23/25 12:50:54.694
• [30.411 seconds]
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 03/23/25 12:50:54.697
  I0323 12:50:54.697465 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename deployment @ 03/23/25 12:50:54.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:50:54.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:50:54.706
  I0323 12:50:54.708712 23 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0323 12:50:54.710966 23 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0323 12:50:54.714611 23 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  I0323 12:50:56.718006 23 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0323 12:50:56.719090 23 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0323 12:50:56.723842 23 deployment.go:314] Updating deployment test-recreate-deployment
  I0323 12:50:56.723863 23 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0323 12:50:56.765307 23 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "88d5e60d-24bd-4174-aee2-ddb01258e048",
      ResourceVersion: (string) (len=5) "13175",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878331054,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878331056,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878331056,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878331056,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878331056,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878331056,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878331054,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-59cddbdd4b\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0323 12:50:56.818868 23 deployment.go:40] New ReplicaSet "test-recreate-deployment-59cddbdd4b" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bf5eccf3-7d17-4169-ab99-496afdc778f2",
      ResourceVersion: (string) (len=5) "13173",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878331056,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "88d5e60d-24bd-4174-aee2-ddb01258e048",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878331056,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 38 64 35 65 36  30 64 2d 32 34 62 64 2d  |\"88d5e60d-24bd-|
              00000120  34 31 37 34 2d 61 65 65  32 2d 64 64 62 30 31 32  |4174-aee2-ddb012|
              00000130  35 38 65 30 34 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |58e048\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878331056,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0323 12:50:56.819461 23 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0323 12:50:56.819730 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-db85869db",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e9253719-7b4b-4e02-b278-047797f6ea4a",
      ResourceVersion: (string) (len=5) "13163",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878331054,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "88d5e60d-24bd-4174-aee2-ddb01258e048",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878331056,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 38 64 35 65 36  30 64 2d 32 34 62 64 2d  |\"88d5e60d-24bd-|
              00000120  34 31 37 34 2d 61 65 65  32 2d 64 64 62 30 31 32  |4174-aee2-ddb012|
              00000130  35 38 65 30 34 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |58e048\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878331056,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0323 12:50:56.822229 23 deployment.go:68] Pod "test-recreate-deployment-59cddbdd4b-cvl59" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-59cddbdd4b-cvl59",
      GenerateName: (string) (len=36) "test-recreate-deployment-59cddbdd4b-",
      Namespace: (string) (len=15) "deployment-9183",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7ded63e3-e18f-4a46-8c7b-ede3b0bfa930",
      ResourceVersion: (string) (len=5) "13174",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878331056,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
          UID: (types.UID) (len=36) "bf5eccf3-7d17-4169-ab99-496afdc778f2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878331056,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 66  35 65 63 63 66 33 2d 37  |d\":\"bf5eccf3-7|
              00000090  64 31 37 2d 34 31 36 39  2d 61 62 39 39 2d 34 39  |d17-4169-ab99-49|
              000000a0  36 61 66 64 63 37 37 38  66 32 5c 22 7d 22 3a 7b  |6afdc778f2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878331056,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2rqkc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2rqkc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878331056,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878331056,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878331056,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878331056,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878331056,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878331056,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2rqkc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 12:50:56.823496 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9183" for this suite. @ 03/23/25 12:50:56.825
• [2.130 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 03/23/25 12:50:56.827
  I0323 12:50:56.827489 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename emptydir @ 03/23/25 12:50:56.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:50:56.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:50:56.835
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 03/23/25 12:50:56.837
  STEP: Saw pod success @ 03/23/25 12:50:58.845
  I0323 12:50:58.846433 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-7830b64d-20cc-4dd7-adad-1b6137f5ea12 container test-container: <nil>
  STEP: delete the pod @ 03/23/25 12:50:58.849
  I0323 12:50:58.856026 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9459" for this suite. @ 03/23/25 12:50:58.857
• [2.032 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 03/23/25 12:50:58.859
  I0323 12:50:58.859712 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/23/25 12:50:58.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:50:58.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:50:58.868
  I0323 12:50:58.869559 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 03/23/25 12:51:00.075
  I0323 12:51:00.075498 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=crd-publish-openapi-2940 --namespace=crd-publish-openapi-2940 create -f -'
  I0323 12:51:00.126186 23 builder.go:146] stderr: ""
  I0323 12:51:00.126217 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8970-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0323 12:51:00.126252 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=crd-publish-openapi-2940 --namespace=crd-publish-openapi-2940 delete e2e-test-crd-publish-openapi-8970-crds test-cr'
  I0323 12:51:00.167171 23 builder.go:146] stderr: ""
  I0323 12:51:00.167203 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8970-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0323 12:51:00.167296 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=crd-publish-openapi-2940 --namespace=crd-publish-openapi-2940 apply -f -'
  I0323 12:51:00.212230 23 builder.go:146] stderr: ""
  I0323 12:51:00.212259 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8970-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0323 12:51:00.212293 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=crd-publish-openapi-2940 --namespace=crd-publish-openapi-2940 delete e2e-test-crd-publish-openapi-8970-crds test-cr'
  I0323 12:51:00.253900 23 builder.go:146] stderr: ""
  I0323 12:51:00.253976 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8970-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 03/23/25 12:51:00.253
  I0323 12:51:00.254046 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=crd-publish-openapi-2940 explain e2e-test-crd-publish-openapi-8970-crds'
  I0323 12:51:00.294244 23 builder.go:146] stderr: ""
  I0323 12:51:00.294291 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-8970-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0323 12:51:01.461402 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2940" for this suite. @ 03/23/25 12:51:01.465
• [2.609 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 03/23/25 12:51:01.468
  I0323 12:51:01.468737 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename kubectl @ 03/23/25 12:51:01.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:51:01.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:51:01.476
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 03/23/25 12:51:01.477
  I0323 12:51:01.477935 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-2609 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0323 12:51:01.520997 23 builder.go:146] stderr: ""
  I0323 12:51:01.521027 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 03/23/25 12:51:01.521
  STEP: verifying the pod e2e-test-httpd-pod was created @ 03/23/25 12:51:06.572
  I0323 12:51:06.572843 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-2609 get pod e2e-test-httpd-pod -o json'
  I0323 12:51:06.611667 23 builder.go:146] stderr: ""
  I0323 12:51:06.611760 23 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2025-03-23T12:51:01Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-2609\",\n        \"resourceVersion\": \"13285\",\n        \"uid\": \"9e53df3c-0052-4047-bfee-35c1e384cb79\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-t7xsv\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"k8s-10-255-0-208\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-t7xsv\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-03-23T12:51:02Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-03-23T12:51:01Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-03-23T12:51:02Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-03-23T12:51:02Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-03-23T12:51:01Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://ab35840da2179df58d83f911fa65d4c2ce26106279dd92a307b1656a02d6dfc1\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-03-23T12:51:01Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-t7xsv\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"10.255.0.208\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"10.255.0.208\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"172.20.64.173\",\n        \"podIPs\": [\n            {\n                \"ip\": \"172.20.64.173\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-03-23T12:51:01Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 03/23/25 12:51:06.611
  I0323 12:51:06.611840 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-2609 replace -f -'
  I0323 12:51:06.690989 23 builder.go:146] stderr: ""
  I0323 12:51:06.691020 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 03/23/25 12:51:06.691
  I0323 12:51:06.692387 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-2609 delete pods e2e-test-httpd-pod'
  I0323 12:51:08.575812 23 builder.go:146] stderr: ""
  I0323 12:51:08.575839 23 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0323 12:51:08.575948 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2609" for this suite. @ 03/23/25 12:51:08.577
• [7.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:214
  STEP: Creating a kubernetes client @ 03/23/25 12:51:08.579
  I0323 12:51:08.579915 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename sched-preemption @ 03/23/25 12:51:08.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:51:08.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:51:08.587
  I0323 12:51:08.594654 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0323 12:52:08.597170 23 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 03/23/25 12:52:08.598
  STEP: Adding a custom resource @ 03/23/25 12:52:08.598
  I0323 12:52:08.608757 23 preemption.go:255] Created pod: pod0-0-sched-preemption-low-priority
  I0323 12:52:08.614645 23 preemption.go:255] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 03/23/25 12:52:08.614
  I0323 12:52:08.626481 23 preemption.go:255] Created pod: pod1-0-sched-preemption-medium-priority
  I0323 12:52:08.630356 23 preemption.go:255] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 03/23/25 12:52:08.63
  I0323 12:52:08.639041 23 preemption.go:255] Created pod: pod2-0-sched-preemption-medium-priority
  I0323 12:52:08.643071 23 preemption.go:255] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 03/23/25 12:52:08.643
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 03/23/25 12:52:10.653
  STEP: Removing a custom resource @ 03/23/25 12:52:14.684
  STEP: Removing a custom resource @ 03/23/25 12:52:14.69
  STEP: Removing a custom resource @ 03/23/25 12:52:14.703
  I0323 12:52:14.714041 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8557" for this suite. @ 03/23/25 12:52:14.715
• [66.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 03/23/25 12:52:14.719
  I0323 12:52:14.719458 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename endpointslice @ 03/23/25 12:52:14.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:52:14.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:52:14.729
  STEP: getting /apis @ 03/23/25 12:52:14.731
  STEP: getting /apis/discovery.k8s.io @ 03/23/25 12:52:14.733
  STEP: getting /apis/discovery.k8s.iov1 @ 03/23/25 12:52:14.735
  STEP: creating @ 03/23/25 12:52:14.736
  STEP: getting @ 03/23/25 12:52:14.744
  STEP: listing @ 03/23/25 12:52:14.745
  STEP: watching @ 03/23/25 12:52:14.746
  I0323 12:52:14.746139 23 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 03/23/25 12:52:14.746
  STEP: cluster-wide watching @ 03/23/25 12:52:14.747
  I0323 12:52:14.747540 23 endpointslice.go:459] starting watch
  STEP: patching @ 03/23/25 12:52:14.748
  STEP: updating @ 03/23/25 12:52:14.751
  I0323 12:52:14.755437 23 endpointslice.go:482] waiting for watch events with expected annotations
  I0323 12:52:14.755458 23 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 03/23/25 12:52:14.755
  STEP: deleting a collection @ 03/23/25 12:52:14.759
  I0323 12:52:14.764176 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2242" for this suite. @ 03/23/25 12:52:14.765
• [0.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 03/23/25 12:52:14.769
  I0323 12:52:14.769480 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename projected @ 03/23/25 12:52:14.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:52:14.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:52:14.779
  STEP: Creating a pod to test downward API volume plugin @ 03/23/25 12:52:14.78
  STEP: Saw pod success @ 03/23/25 12:52:18.795
  I0323 12:52:18.797245 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod downwardapi-volume-382b1984-bf7e-43eb-9f5a-9c5823148376 container client-container: <nil>
  STEP: delete the pod @ 03/23/25 12:52:18.799
  I0323 12:52:18.806786 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4144" for this suite. @ 03/23/25 12:52:18.809
• [4.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 03/23/25 12:52:18.812
  I0323 12:52:18.813000 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename webhook @ 03/23/25 12:52:18.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:52:18.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:52:18.821
  STEP: Setting up server cert @ 03/23/25 12:52:18.831
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/23/25 12:52:19.16
  STEP: Deploying the webhook pod @ 03/23/25 12:52:19.163
  STEP: Wait for the deployment to be ready @ 03/23/25 12:52:19.17
  I0323 12:52:19.173062 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 03/23/25 12:52:21.178
  STEP: Verifying the service has paired with the endpoint @ 03/23/25 12:52:21.182
  I0323 12:52:22.183452 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 03/23/25 12:52:22.186
  STEP: create the configmap with a random name @ 03/23/25 12:52:22.197
  STEP: verify the configmap is mutated @ 03/23/25 12:52:22.202
  STEP: create the configmap with 'skip-me' name @ 03/23/25 12:52:22.202
  I0323 12:52:22.231228 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9809" for this suite. @ 03/23/25 12:52:22.233
  STEP: Destroying namespace "webhook-markers-853" for this suite. @ 03/23/25 12:52:22.235
• [3.426 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 03/23/25 12:52:22.239
  I0323 12:52:22.239227 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename downward-api @ 03/23/25 12:52:22.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:52:22.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:52:22.247
  STEP: Creating a pod to test downward API volume plugin @ 03/23/25 12:52:22.249
  STEP: Saw pod success @ 03/23/25 12:52:26.26
  I0323 12:52:26.261869 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod downwardapi-volume-ae2fcb4e-3051-4c3c-8736-3fd9fe6bab26 container client-container: <nil>
  STEP: delete the pod @ 03/23/25 12:52:26.264
  I0323 12:52:26.271203 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4586" for this suite. @ 03/23/25 12:52:26.272
• [4.037 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 03/23/25 12:52:26.275
  I0323 12:52:26.275963 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename subpath @ 03/23/25 12:52:26.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:52:26.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:52:26.333
  STEP: Setting up data @ 03/23/25 12:52:26.334
  STEP: Creating pod pod-subpath-test-downwardapi-8f2p @ 03/23/25 12:52:26.338
  STEP: Creating a pod to test atomic-volume-subpath @ 03/23/25 12:52:26.338
  STEP: Saw pod success @ 03/23/25 12:52:50.373
  I0323 12:52:50.375078 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-subpath-test-downwardapi-8f2p container test-container-subpath-downwardapi-8f2p: <nil>
  STEP: delete the pod @ 03/23/25 12:52:50.378
  STEP: Deleting pod pod-subpath-test-downwardapi-8f2p @ 03/23/25 12:52:50.385
  I0323 12:52:50.385101 23 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-8f2p" in namespace "subpath-5252"
  I0323 12:52:50.386116 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5252" for this suite. @ 03/23/25 12:52:50.387
• [24.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295
  STEP: Creating a kubernetes client @ 03/23/25 12:52:50.389
  I0323 12:52:50.389857 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename downward-api @ 03/23/25 12:52:50.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:52:50.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:52:50.405
  STEP: Creating a pod to test downward api env vars @ 03/23/25 12:52:50.406
  STEP: Saw pod success @ 03/23/25 12:52:54.416
  I0323 12:52:54.418168 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod downward-api-a1da5b06-7844-4b2a-92d4-2072eda26f22 container dapi-container: <nil>
  STEP: delete the pod @ 03/23/25 12:52:54.42
  I0323 12:52:54.428203 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4542" for this suite. @ 03/23/25 12:52:54.429
• [4.042 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 03/23/25 12:52:54.432
  I0323 12:52:54.432049 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename disruption @ 03/23/25 12:52:54.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:52:54.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:52:54.439
  STEP: Creating a pdb that targets all three pods in a test replica set @ 03/23/25 12:52:54.441
  STEP: Waiting for the pdb to be processed @ 03/23/25 12:52:54.443
  STEP: First trying to evict a pod which shouldn't be evictable @ 03/23/25 12:52:56.447
  STEP: Waiting for all pods to be running @ 03/23/25 12:52:56.447
  I0323 12:52:56.457433 23 disruption.go:680] pods: 0 < 3
  STEP: locating a running pod @ 03/23/25 12:52:58.45
  STEP: Updating the pdb to allow a pod to be evicted @ 03/23/25 12:52:58.454
  STEP: Waiting for the pdb to be processed @ 03/23/25 12:52:58.457
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 03/23/25 12:53:00.461
  STEP: Waiting for all pods to be running @ 03/23/25 12:53:00.461
  STEP: Waiting for the pdb to observed all healthy pods @ 03/23/25 12:53:00.463
  STEP: Patching the pdb to disallow a pod to be evicted @ 03/23/25 12:53:00.474
  STEP: Waiting for the pdb to be processed @ 03/23/25 12:53:00.489
  STEP: Waiting for all pods to be running @ 03/23/25 12:53:02.492
  STEP: locating a running pod @ 03/23/25 12:53:02.493
  STEP: Deleting the pdb to allow a pod to be evicted @ 03/23/25 12:53:02.497
  STEP: Waiting for the pdb to be deleted @ 03/23/25 12:53:02.499
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 03/23/25 12:53:02.5
  STEP: Waiting for all pods to be running @ 03/23/25 12:53:02.5
  I0323 12:53:02.602634 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-727" for this suite. @ 03/23/25 12:53:02.606
• [8.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 03/23/25 12:53:02.613
  I0323 12:53:02.613611 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename svc-latency @ 03/23/25 12:53:02.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:53:02.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:53:02.623
  I0323 12:53:02.625093 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-2767 @ 03/23/25 12:53:02.625
  I0323 12:53:02.627701      23 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-2767, replica count: 1
  I0323 12:53:03.678687      23 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0323 12:53:04.679243      23 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0323 12:53:04.785844 23 service_latency.go:356] Created: latency-svc-gq2jm
  I0323 12:53:04.789145 23 service_latency.go:363] Got endpoints: latency-svc-gq2jm [8.92524ms]
  I0323 12:53:04.795502 23 service_latency.go:356] Created: latency-svc-2cth2
  I0323 12:53:04.799835 23 service_latency.go:356] Created: latency-svc-xg279
  I0323 12:53:04.800220 23 service_latency.go:363] Got endpoints: latency-svc-2cth2 [10.837912ms]
  I0323 12:53:04.802104 23 service_latency.go:363] Got endpoints: latency-svc-xg279 [12.585852ms]
  I0323 12:53:04.804814 23 service_latency.go:356] Created: latency-svc-zh69x
  I0323 12:53:04.807604 23 service_latency.go:356] Created: latency-svc-ww4kb
  I0323 12:53:04.807989 23 service_latency.go:363] Got endpoints: latency-svc-zh69x [18.332297ms]
  I0323 12:53:04.810327 23 service_latency.go:363] Got endpoints: latency-svc-ww4kb [20.873502ms]
  I0323 12:53:04.812892 23 service_latency.go:356] Created: latency-svc-zd6tk
  I0323 12:53:04.815717 23 service_latency.go:363] Got endpoints: latency-svc-zd6tk [26.519048ms]
  I0323 12:53:04.818342 23 service_latency.go:356] Created: latency-svc-wf6xc
  I0323 12:53:04.821341 23 service_latency.go:356] Created: latency-svc-lcv8b
  I0323 12:53:04.822021 23 service_latency.go:363] Got endpoints: latency-svc-wf6xc [32.404289ms]
  I0323 12:53:04.826573 23 service_latency.go:363] Got endpoints: latency-svc-lcv8b [37.233891ms]
  I0323 12:53:04.827182 23 service_latency.go:356] Created: latency-svc-qbg4z
  I0323 12:53:04.834949 23 service_latency.go:363] Got endpoints: latency-svc-qbg4z [45.312762ms]
  I0323 12:53:04.835319 23 service_latency.go:356] Created: latency-svc-sfq7h
  I0323 12:53:04.839909 23 service_latency.go:356] Created: latency-svc-tjz8m
  I0323 12:53:04.843412 23 service_latency.go:363] Got endpoints: latency-svc-sfq7h [53.846181ms]
  I0323 12:53:04.845183 23 service_latency.go:363] Got endpoints: latency-svc-tjz8m [55.706946ms]
  I0323 12:53:04.845436 23 service_latency.go:356] Created: latency-svc-d55j7
  I0323 12:53:04.850344 23 service_latency.go:363] Got endpoints: latency-svc-d55j7 [60.665544ms]
  I0323 12:53:04.851746 23 service_latency.go:356] Created: latency-svc-bx24c
  I0323 12:53:04.855027 23 service_latency.go:363] Got endpoints: latency-svc-bx24c [65.486074ms]
  I0323 12:53:04.860098 23 service_latency.go:356] Created: latency-svc-jpdcf
  I0323 12:53:04.863606 23 service_latency.go:356] Created: latency-svc-kmgnj
  I0323 12:53:04.863847 23 service_latency.go:363] Got endpoints: latency-svc-jpdcf [74.423308ms]
  I0323 12:53:04.866600 23 service_latency.go:356] Created: latency-svc-mb9bn
  I0323 12:53:04.869325 23 service_latency.go:356] Created: latency-svc-6b6qp
  I0323 12:53:04.874809 23 service_latency.go:363] Got endpoints: latency-svc-kmgnj [85.220575ms]
  I0323 12:53:04.875419 23 service_latency.go:363] Got endpoints: latency-svc-6b6qp [75.181234ms]
  I0323 12:53:04.877500 23 service_latency.go:356] Created: latency-svc-mgkgc
  I0323 12:53:04.878172 23 service_latency.go:363] Got endpoints: latency-svc-mb9bn [88.677069ms]
  I0323 12:53:04.882570 23 service_latency.go:356] Created: latency-svc-7jnqj
  I0323 12:53:04.883283 23 service_latency.go:363] Got endpoints: latency-svc-mgkgc [81.154248ms]
  I0323 12:53:04.884875 23 service_latency.go:356] Created: latency-svc-78dlf
  I0323 12:53:04.885798 23 service_latency.go:363] Got endpoints: latency-svc-7jnqj [77.785303ms]
  I0323 12:53:04.891929 23 service_latency.go:363] Got endpoints: latency-svc-78dlf [81.573597ms]
  I0323 12:53:04.892106 23 service_latency.go:356] Created: latency-svc-jb99p
  I0323 12:53:04.894915 23 service_latency.go:363] Got endpoints: latency-svc-jb99p [79.175981ms]
  I0323 12:53:04.898298 23 service_latency.go:356] Created: latency-svc-dv85g
  I0323 12:53:04.900897 23 service_latency.go:356] Created: latency-svc-5fjvw
  I0323 12:53:04.902272 23 service_latency.go:363] Got endpoints: latency-svc-dv85g [80.222871ms]
  I0323 12:53:04.905223 23 service_latency.go:363] Got endpoints: latency-svc-5fjvw [78.630541ms]
  I0323 12:53:04.907205 23 service_latency.go:356] Created: latency-svc-56wtd
  I0323 12:53:04.910978 23 service_latency.go:356] Created: latency-svc-vxf9v
  I0323 12:53:04.912698 23 service_latency.go:363] Got endpoints: latency-svc-56wtd [77.730966ms]
  I0323 12:53:04.917634 23 service_latency.go:356] Created: latency-svc-9s2c5
  I0323 12:53:04.919209 23 service_latency.go:363] Got endpoints: latency-svc-vxf9v [74.006431ms]
  I0323 12:53:04.924281 23 service_latency.go:356] Created: latency-svc-kwtn5
  I0323 12:53:04.924497 23 service_latency.go:363] Got endpoints: latency-svc-9s2c5 [81.06792ms]
  I0323 12:53:04.925093 23 service_latency.go:356] Created: latency-svc-fzsmh
  I0323 12:53:04.926670 23 service_latency.go:363] Got endpoints: latency-svc-kwtn5 [76.306803ms]
  I0323 12:53:04.929211 23 service_latency.go:363] Got endpoints: latency-svc-fzsmh [74.158696ms]
  I0323 12:53:04.931069 23 service_latency.go:356] Created: latency-svc-9cq6q
  I0323 12:53:04.933632 23 service_latency.go:363] Got endpoints: latency-svc-9cq6q [69.769027ms]
  I0323 12:53:04.933894 23 service_latency.go:356] Created: latency-svc-rr6md
  I0323 12:53:04.939886 23 service_latency.go:363] Got endpoints: latency-svc-rr6md [65.0537ms]
  I0323 12:53:04.942324 23 service_latency.go:356] Created: latency-svc-7x7pz
  I0323 12:53:04.943963 23 service_latency.go:363] Got endpoints: latency-svc-7x7pz [68.491752ms]
  I0323 12:53:04.944280 23 service_latency.go:356] Created: latency-svc-hnvrb
  I0323 12:53:04.946770 23 service_latency.go:363] Got endpoints: latency-svc-hnvrb [68.570812ms]
  I0323 12:53:04.950613 23 service_latency.go:356] Created: latency-svc-48vkf
  I0323 12:53:04.955117 23 service_latency.go:363] Got endpoints: latency-svc-48vkf [71.810944ms]
  I0323 12:53:04.955635 23 service_latency.go:356] Created: latency-svc-mr5sv
  I0323 12:53:04.959288 23 service_latency.go:356] Created: latency-svc-t8njz
  I0323 12:53:04.963276 23 service_latency.go:356] Created: latency-svc-lvx8n
  I0323 12:53:04.966720 23 service_latency.go:356] Created: latency-svc-jzgcp
  I0323 12:53:04.969903 23 service_latency.go:356] Created: latency-svc-mt2ns
  I0323 12:53:04.973292 23 service_latency.go:356] Created: latency-svc-6hbvl
  I0323 12:53:04.977209 23 service_latency.go:356] Created: latency-svc-dfgst
  I0323 12:53:04.982156 23 service_latency.go:356] Created: latency-svc-7b95v
  I0323 12:53:04.986209 23 service_latency.go:356] Created: latency-svc-vq7kp
  I0323 12:53:04.989171 23 service_latency.go:356] Created: latency-svc-knzrf
  I0323 12:53:04.990203 23 service_latency.go:363] Got endpoints: latency-svc-mr5sv [104.38657ms]
  I0323 12:53:04.995662 23 service_latency.go:356] Created: latency-svc-6nt6t
  I0323 12:53:04.998482 23 service_latency.go:356] Created: latency-svc-v5lzb
  I0323 12:53:05.002344 23 service_latency.go:356] Created: latency-svc-vlctn
  I0323 12:53:05.006054 23 service_latency.go:356] Created: latency-svc-kdfsw
  I0323 12:53:05.009568 23 service_latency.go:356] Created: latency-svc-zxjjc
  I0323 12:53:05.012529 23 service_latency.go:356] Created: latency-svc-sgm5k
  I0323 12:53:05.039578 23 service_latency.go:363] Got endpoints: latency-svc-t8njz [147.524146ms]
  I0323 12:53:05.043969 23 service_latency.go:356] Created: latency-svc-kpfwg
  I0323 12:53:05.090661 23 service_latency.go:363] Got endpoints: latency-svc-lvx8n [195.725596ms]
  I0323 12:53:05.097055 23 service_latency.go:356] Created: latency-svc-5mf2s
  I0323 12:53:05.141119 23 service_latency.go:363] Got endpoints: latency-svc-jzgcp [238.812199ms]
  I0323 12:53:05.149250 23 service_latency.go:356] Created: latency-svc-2x7t5
  I0323 12:53:05.189821 23 service_latency.go:363] Got endpoints: latency-svc-mt2ns [284.574095ms]
  I0323 12:53:05.196156 23 service_latency.go:356] Created: latency-svc-f2pg8
  I0323 12:53:05.239208 23 service_latency.go:363] Got endpoints: latency-svc-6hbvl [326.486377ms]
  I0323 12:53:05.244018 23 service_latency.go:356] Created: latency-svc-74x48
  I0323 12:53:05.291000 23 service_latency.go:363] Got endpoints: latency-svc-dfgst [371.769228ms]
  I0323 12:53:05.296595 23 service_latency.go:356] Created: latency-svc-rlfl9
  I0323 12:53:05.339162 23 service_latency.go:363] Got endpoints: latency-svc-7b95v [414.625386ms]
  I0323 12:53:05.344826 23 service_latency.go:356] Created: latency-svc-8stsb
  I0323 12:53:05.389341 23 service_latency.go:363] Got endpoints: latency-svc-vq7kp [462.645643ms]
  I0323 12:53:05.395017 23 service_latency.go:356] Created: latency-svc-m8p25
  I0323 12:53:05.440241 23 service_latency.go:363] Got endpoints: latency-svc-knzrf [511.006753ms]
  I0323 12:53:05.445066 23 service_latency.go:356] Created: latency-svc-6lxsb
  I0323 12:53:05.489180 23 service_latency.go:363] Got endpoints: latency-svc-6nt6t [555.522697ms]
  I0323 12:53:05.494618 23 service_latency.go:356] Created: latency-svc-gvtdt
  I0323 12:53:05.539630 23 service_latency.go:363] Got endpoints: latency-svc-v5lzb [599.723727ms]
  I0323 12:53:05.546081 23 service_latency.go:356] Created: latency-svc-z57ps
  I0323 12:53:05.589717 23 service_latency.go:363] Got endpoints: latency-svc-vlctn [645.736987ms]
  I0323 12:53:05.594621 23 service_latency.go:356] Created: latency-svc-kb755
  I0323 12:53:05.641003 23 service_latency.go:363] Got endpoints: latency-svc-kdfsw [694.211851ms]
  I0323 12:53:05.646474 23 service_latency.go:356] Created: latency-svc-2jjdw
  I0323 12:53:05.689611 23 service_latency.go:363] Got endpoints: latency-svc-zxjjc [734.472804ms]
  I0323 12:53:05.694607 23 service_latency.go:356] Created: latency-svc-z9spz
  I0323 12:53:05.739724 23 service_latency.go:363] Got endpoints: latency-svc-sgm5k [749.501022ms]
  I0323 12:53:05.744725 23 service_latency.go:356] Created: latency-svc-5hm44
  I0323 12:53:05.790973 23 service_latency.go:363] Got endpoints: latency-svc-kpfwg [751.357985ms]
  I0323 12:53:05.795985 23 service_latency.go:356] Created: latency-svc-ph9x9
  I0323 12:53:05.840750 23 service_latency.go:363] Got endpoints: latency-svc-5mf2s [750.053027ms]
  I0323 12:53:05.846033 23 service_latency.go:356] Created: latency-svc-wd78r
  I0323 12:53:05.892192 23 service_latency.go:363] Got endpoints: latency-svc-2x7t5 [751.042912ms]
  I0323 12:53:05.896875 23 service_latency.go:356] Created: latency-svc-9rvqt
  I0323 12:53:05.939476 23 service_latency.go:363] Got endpoints: latency-svc-f2pg8 [749.624293ms]
  I0323 12:53:05.944636 23 service_latency.go:356] Created: latency-svc-2zchv
  I0323 12:53:05.990884 23 service_latency.go:363] Got endpoints: latency-svc-74x48 [751.633503ms]
  I0323 12:53:05.996853 23 service_latency.go:356] Created: latency-svc-zcczn
  I0323 12:53:06.039228 23 service_latency.go:363] Got endpoints: latency-svc-rlfl9 [748.182027ms]
  I0323 12:53:06.044428 23 service_latency.go:356] Created: latency-svc-7gvxq
  I0323 12:53:06.089590 23 service_latency.go:363] Got endpoints: latency-svc-8stsb [750.378748ms]
  I0323 12:53:06.095814 23 service_latency.go:356] Created: latency-svc-426c9
  I0323 12:53:06.139103 23 service_latency.go:363] Got endpoints: latency-svc-m8p25 [749.722087ms]
  I0323 12:53:06.145144 23 service_latency.go:356] Created: latency-svc-t6w76
  I0323 12:53:06.189515 23 service_latency.go:363] Got endpoints: latency-svc-6lxsb [749.236308ms]
  I0323 12:53:06.194423 23 service_latency.go:356] Created: latency-svc-xt72j
  I0323 12:53:06.241040 23 service_latency.go:363] Got endpoints: latency-svc-gvtdt [751.824534ms]
  I0323 12:53:06.246357 23 service_latency.go:356] Created: latency-svc-j4qhk
  I0323 12:53:06.289435 23 service_latency.go:363] Got endpoints: latency-svc-z57ps [749.758119ms]
  I0323 12:53:06.296165 23 service_latency.go:356] Created: latency-svc-f2lj4
  I0323 12:53:06.343589 23 service_latency.go:363] Got endpoints: latency-svc-kb755 [753.838775ms]
  I0323 12:53:06.350371 23 service_latency.go:356] Created: latency-svc-hsvbc
  I0323 12:53:06.389467 23 service_latency.go:363] Got endpoints: latency-svc-2jjdw [748.426391ms]
  I0323 12:53:06.395163 23 service_latency.go:356] Created: latency-svc-5tsng
  I0323 12:53:06.442231 23 service_latency.go:363] Got endpoints: latency-svc-z9spz [752.58358ms]
  I0323 12:53:06.447568 23 service_latency.go:356] Created: latency-svc-fmfck
  I0323 12:53:06.490179 23 service_latency.go:363] Got endpoints: latency-svc-5hm44 [750.412987ms]
  I0323 12:53:06.497064 23 service_latency.go:356] Created: latency-svc-s48h7
  I0323 12:53:06.540286 23 service_latency.go:363] Got endpoints: latency-svc-ph9x9 [749.252219ms]
  I0323 12:53:06.546451 23 service_latency.go:356] Created: latency-svc-cbsnc
  I0323 12:53:06.592827 23 service_latency.go:363] Got endpoints: latency-svc-wd78r [752.042301ms]
  I0323 12:53:06.597877 23 service_latency.go:356] Created: latency-svc-px6vx
  I0323 12:53:06.639474 23 service_latency.go:363] Got endpoints: latency-svc-9rvqt [747.245053ms]
  I0323 12:53:06.644567 23 service_latency.go:356] Created: latency-svc-45dcz
  I0323 12:53:06.689162 23 service_latency.go:363] Got endpoints: latency-svc-2zchv [749.652465ms]
  I0323 12:53:06.694403 23 service_latency.go:356] Created: latency-svc-vhmz6
  I0323 12:53:06.740402 23 service_latency.go:363] Got endpoints: latency-svc-zcczn [749.471981ms]
  I0323 12:53:06.745546 23 service_latency.go:356] Created: latency-svc-dzxsz
  I0323 12:53:06.790021 23 service_latency.go:363] Got endpoints: latency-svc-7gvxq [750.756606ms]
  I0323 12:53:06.795806 23 service_latency.go:356] Created: latency-svc-p49pb
  I0323 12:53:06.838698 23 service_latency.go:363] Got endpoints: latency-svc-426c9 [749.075809ms]
  I0323 12:53:06.845126 23 service_latency.go:356] Created: latency-svc-v7dp5
  I0323 12:53:06.890609 23 service_latency.go:363] Got endpoints: latency-svc-t6w76 [751.464176ms]
  I0323 12:53:06.895920 23 service_latency.go:356] Created: latency-svc-m85ds
  I0323 12:53:06.939885 23 service_latency.go:363] Got endpoints: latency-svc-xt72j [750.337797ms]
  I0323 12:53:06.945019 23 service_latency.go:356] Created: latency-svc-hc9k2
  I0323 12:53:06.990154 23 service_latency.go:363] Got endpoints: latency-svc-j4qhk [749.078195ms]
  I0323 12:53:07.003171 23 service_latency.go:356] Created: latency-svc-9w4jd
  I0323 12:53:07.040215 23 service_latency.go:363] Got endpoints: latency-svc-f2lj4 [750.748126ms]
  I0323 12:53:07.046574 23 service_latency.go:356] Created: latency-svc-xgm45
  I0323 12:53:07.089377 23 service_latency.go:363] Got endpoints: latency-svc-hsvbc [745.756142ms]
  I0323 12:53:07.094325 23 service_latency.go:356] Created: latency-svc-gfzq9
  I0323 12:53:07.141014 23 service_latency.go:363] Got endpoints: latency-svc-5tsng [751.512931ms]
  I0323 12:53:07.146160 23 service_latency.go:356] Created: latency-svc-gbllc
  I0323 12:53:07.189854 23 service_latency.go:363] Got endpoints: latency-svc-fmfck [747.582557ms]
  I0323 12:53:07.194458 23 service_latency.go:356] Created: latency-svc-kjc92
  I0323 12:53:07.240321 23 service_latency.go:363] Got endpoints: latency-svc-s48h7 [750.101833ms]
  I0323 12:53:07.246635 23 service_latency.go:356] Created: latency-svc-thvdv
  I0323 12:53:07.289556 23 service_latency.go:363] Got endpoints: latency-svc-cbsnc [749.234213ms]
  I0323 12:53:07.294866 23 service_latency.go:356] Created: latency-svc-9qzf8
  I0323 12:53:07.339170 23 service_latency.go:363] Got endpoints: latency-svc-px6vx [746.308343ms]
  I0323 12:53:07.344370 23 service_latency.go:356] Created: latency-svc-zgb6m
  I0323 12:53:07.389300 23 service_latency.go:363] Got endpoints: latency-svc-45dcz [749.791447ms]
  I0323 12:53:07.395330 23 service_latency.go:356] Created: latency-svc-mjfjd
  I0323 12:53:07.439808 23 service_latency.go:363] Got endpoints: latency-svc-vhmz6 [750.610069ms]
  I0323 12:53:07.445309 23 service_latency.go:356] Created: latency-svc-tn7pp
  I0323 12:53:07.489380 23 service_latency.go:363] Got endpoints: latency-svc-dzxsz [748.946182ms]
  I0323 12:53:07.494466 23 service_latency.go:356] Created: latency-svc-p5tm5
  I0323 12:53:07.541455 23 service_latency.go:363] Got endpoints: latency-svc-p49pb [751.400399ms]
  I0323 12:53:07.546741 23 service_latency.go:356] Created: latency-svc-6gpcl
  I0323 12:53:07.588665 23 service_latency.go:363] Got endpoints: latency-svc-v7dp5 [749.846244ms]
  I0323 12:53:07.593859 23 service_latency.go:356] Created: latency-svc-d87j6
  I0323 12:53:07.640693 23 service_latency.go:363] Got endpoints: latency-svc-m85ds [750.048378ms]
  I0323 12:53:07.645912 23 service_latency.go:356] Created: latency-svc-2ds56
  I0323 12:53:07.689468 23 service_latency.go:363] Got endpoints: latency-svc-hc9k2 [749.549919ms]
  I0323 12:53:07.694446 23 service_latency.go:356] Created: latency-svc-7whtv
  I0323 12:53:07.742386 23 service_latency.go:363] Got endpoints: latency-svc-9w4jd [752.199204ms]
  I0323 12:53:07.748560 23 service_latency.go:356] Created: latency-svc-vhmsj
  I0323 12:53:07.788813 23 service_latency.go:363] Got endpoints: latency-svc-xgm45 [748.556343ms]
  I0323 12:53:07.794769 23 service_latency.go:356] Created: latency-svc-gzc8n
  I0323 12:53:07.841642 23 service_latency.go:363] Got endpoints: latency-svc-gfzq9 [752.229665ms]
  I0323 12:53:07.847525 23 service_latency.go:356] Created: latency-svc-zf9v4
  I0323 12:53:07.889384 23 service_latency.go:363] Got endpoints: latency-svc-gbllc [748.33246ms]
  I0323 12:53:07.894360 23 service_latency.go:356] Created: latency-svc-qpjlv
  I0323 12:53:07.941816 23 service_latency.go:363] Got endpoints: latency-svc-kjc92 [751.927457ms]
  I0323 12:53:07.950388 23 service_latency.go:356] Created: latency-svc-qhjtt
  I0323 12:53:07.993732 23 service_latency.go:363] Got endpoints: latency-svc-thvdv [753.375416ms]
  I0323 12:53:08.000461 23 service_latency.go:356] Created: latency-svc-7r2mm
  I0323 12:53:08.039739 23 service_latency.go:363] Got endpoints: latency-svc-9qzf8 [750.147989ms]
  I0323 12:53:08.045580 23 service_latency.go:356] Created: latency-svc-wkcb9
  I0323 12:53:08.095514 23 service_latency.go:363] Got endpoints: latency-svc-zgb6m [756.303472ms]
  I0323 12:53:08.103976 23 service_latency.go:356] Created: latency-svc-cjhsp
  I0323 12:53:08.138309 23 service_latency.go:363] Got endpoints: latency-svc-mjfjd [748.97207ms]
  I0323 12:53:08.143941 23 service_latency.go:356] Created: latency-svc-6fr8x
  I0323 12:53:08.191956 23 service_latency.go:363] Got endpoints: latency-svc-tn7pp [752.102388ms]
  I0323 12:53:08.197440 23 service_latency.go:356] Created: latency-svc-nlnpp
  I0323 12:53:08.238670 23 service_latency.go:363] Got endpoints: latency-svc-p5tm5 [749.252789ms]
  I0323 12:53:08.243910 23 service_latency.go:356] Created: latency-svc-69kfh
  I0323 12:53:08.291708 23 service_latency.go:363] Got endpoints: latency-svc-6gpcl [750.216733ms]
  I0323 12:53:08.298216 23 service_latency.go:356] Created: latency-svc-q5jf7
  I0323 12:53:08.340144 23 service_latency.go:363] Got endpoints: latency-svc-d87j6 [751.444722ms]
  I0323 12:53:08.344874 23 service_latency.go:356] Created: latency-svc-9mrgz
  I0323 12:53:08.390671 23 service_latency.go:363] Got endpoints: latency-svc-2ds56 [749.938889ms]
  I0323 12:53:08.396252 23 service_latency.go:356] Created: latency-svc-5krpz
  I0323 12:53:08.439118 23 service_latency.go:363] Got endpoints: latency-svc-7whtv [749.612041ms]
  I0323 12:53:08.445045 23 service_latency.go:356] Created: latency-svc-vvkr7
  I0323 12:53:08.490367 23 service_latency.go:363] Got endpoints: latency-svc-vhmsj [747.947738ms]
  I0323 12:53:08.496606 23 service_latency.go:356] Created: latency-svc-d77kp
  I0323 12:53:08.539333 23 service_latency.go:363] Got endpoints: latency-svc-gzc8n [750.484159ms]
  I0323 12:53:08.544574 23 service_latency.go:356] Created: latency-svc-2k5px
  I0323 12:53:08.591165 23 service_latency.go:363] Got endpoints: latency-svc-zf9v4 [749.34156ms]
  I0323 12:53:08.596320 23 service_latency.go:356] Created: latency-svc-nppqz
  I0323 12:53:08.639474 23 service_latency.go:363] Got endpoints: latency-svc-qpjlv [750.059429ms]
  I0323 12:53:08.646262 23 service_latency.go:356] Created: latency-svc-gtpr2
  I0323 12:53:08.690329 23 service_latency.go:363] Got endpoints: latency-svc-qhjtt [748.477481ms]
  I0323 12:53:08.695566 23 service_latency.go:356] Created: latency-svc-7cgdl
  I0323 12:53:08.739967 23 service_latency.go:363] Got endpoints: latency-svc-7r2mm [746.198995ms]
  I0323 12:53:08.747024 23 service_latency.go:356] Created: latency-svc-w6xld
  I0323 12:53:08.788852 23 service_latency.go:363] Got endpoints: latency-svc-wkcb9 [749.067728ms]
  I0323 12:53:08.794403 23 service_latency.go:356] Created: latency-svc-ksjw8
  I0323 12:53:08.841823 23 service_latency.go:363] Got endpoints: latency-svc-cjhsp [746.273192ms]
  I0323 12:53:08.848745 23 service_latency.go:356] Created: latency-svc-vsdjh
  I0323 12:53:08.891076 23 service_latency.go:363] Got endpoints: latency-svc-6fr8x [752.727839ms]
  I0323 12:53:08.895982 23 service_latency.go:356] Created: latency-svc-b5k7s
  I0323 12:53:08.940254 23 service_latency.go:363] Got endpoints: latency-svc-nlnpp [748.254108ms]
  I0323 12:53:08.945673 23 service_latency.go:356] Created: latency-svc-dm7hd
  I0323 12:53:08.989957 23 service_latency.go:363] Got endpoints: latency-svc-69kfh [751.251803ms]
  I0323 12:53:08.995091 23 service_latency.go:356] Created: latency-svc-v5wms
  I0323 12:53:09.041252 23 service_latency.go:363] Got endpoints: latency-svc-q5jf7 [749.504203ms]
  I0323 12:53:09.046574 23 service_latency.go:356] Created: latency-svc-8vppj
  I0323 12:53:09.089774 23 service_latency.go:363] Got endpoints: latency-svc-9mrgz [749.587968ms]
  I0323 12:53:09.095313 23 service_latency.go:356] Created: latency-svc-qq6dm
  I0323 12:53:09.141391 23 service_latency.go:363] Got endpoints: latency-svc-5krpz [750.682173ms]
  I0323 12:53:09.146926 23 service_latency.go:356] Created: latency-svc-b5d2j
  I0323 12:53:09.188626 23 service_latency.go:363] Got endpoints: latency-svc-vvkr7 [749.471647ms]
  I0323 12:53:09.194863 23 service_latency.go:356] Created: latency-svc-rl4bp
  I0323 12:53:09.239943 23 service_latency.go:363] Got endpoints: latency-svc-d77kp [749.534477ms]
  I0323 12:53:09.245194 23 service_latency.go:356] Created: latency-svc-82ldh
  I0323 12:53:09.289981 23 service_latency.go:363] Got endpoints: latency-svc-2k5px [750.612619ms]
  I0323 12:53:09.294882 23 service_latency.go:356] Created: latency-svc-p9wdx
  I0323 12:53:09.339815 23 service_latency.go:363] Got endpoints: latency-svc-nppqz [748.615208ms]
  I0323 12:53:09.345291 23 service_latency.go:356] Created: latency-svc-bw5bb
  I0323 12:53:09.389545 23 service_latency.go:363] Got endpoints: latency-svc-gtpr2 [750.036933ms]
  I0323 12:53:09.395865 23 service_latency.go:356] Created: latency-svc-vtptj
  I0323 12:53:09.440656 23 service_latency.go:363] Got endpoints: latency-svc-7cgdl [750.278906ms]
  I0323 12:53:09.446453 23 service_latency.go:356] Created: latency-svc-jxj4b
  I0323 12:53:09.490668 23 service_latency.go:363] Got endpoints: latency-svc-w6xld [750.643803ms]
  I0323 12:53:09.495412 23 service_latency.go:356] Created: latency-svc-h74g7
  I0323 12:53:09.542034 23 service_latency.go:363] Got endpoints: latency-svc-ksjw8 [753.131029ms]
  I0323 12:53:09.547417 23 service_latency.go:356] Created: latency-svc-j5wqv
  I0323 12:53:09.589172 23 service_latency.go:363] Got endpoints: latency-svc-vsdjh [747.31311ms]
  I0323 12:53:09.595099 23 service_latency.go:356] Created: latency-svc-5t9rg
  I0323 12:53:09.639690 23 service_latency.go:363] Got endpoints: latency-svc-b5k7s [748.58117ms]
  I0323 12:53:09.645797 23 service_latency.go:356] Created: latency-svc-kfvrp
  I0323 12:53:09.690276 23 service_latency.go:363] Got endpoints: latency-svc-dm7hd [749.985505ms]
  I0323 12:53:09.695213 23 service_latency.go:356] Created: latency-svc-69flk
  I0323 12:53:09.741156 23 service_latency.go:363] Got endpoints: latency-svc-v5wms [751.15986ms]
  I0323 12:53:09.746767 23 service_latency.go:356] Created: latency-svc-chltq
  I0323 12:53:09.790583 23 service_latency.go:363] Got endpoints: latency-svc-8vppj [749.295364ms]
  I0323 12:53:09.796508 23 service_latency.go:356] Created: latency-svc-t89gj
  I0323 12:53:09.839083 23 service_latency.go:363] Got endpoints: latency-svc-qq6dm [749.265974ms]
  I0323 12:53:09.844392 23 service_latency.go:356] Created: latency-svc-m9b96
  I0323 12:53:09.889266 23 service_latency.go:363] Got endpoints: latency-svc-b5d2j [747.836969ms]
  I0323 12:53:09.896329 23 service_latency.go:356] Created: latency-svc-vg967
  I0323 12:53:09.939353 23 service_latency.go:363] Got endpoints: latency-svc-rl4bp [750.693603ms]
  I0323 12:53:09.945326 23 service_latency.go:356] Created: latency-svc-4zblf
  I0323 12:53:09.989651 23 service_latency.go:363] Got endpoints: latency-svc-82ldh [749.663756ms]
  I0323 12:53:09.994771 23 service_latency.go:356] Created: latency-svc-bbmrr
  I0323 12:53:10.039764 23 service_latency.go:363] Got endpoints: latency-svc-p9wdx [749.7475ms]
  I0323 12:53:10.044549 23 service_latency.go:356] Created: latency-svc-mrh8j
  I0323 12:53:10.091197 23 service_latency.go:363] Got endpoints: latency-svc-bw5bb [751.334108ms]
  I0323 12:53:10.096490 23 service_latency.go:356] Created: latency-svc-f95t9
  I0323 12:53:10.139260 23 service_latency.go:363] Got endpoints: latency-svc-vtptj [749.680961ms]
  I0323 12:53:10.145915 23 service_latency.go:356] Created: latency-svc-g4822
  I0323 12:53:10.190061 23 service_latency.go:363] Got endpoints: latency-svc-jxj4b [749.372487ms]
  I0323 12:53:10.195090 23 service_latency.go:356] Created: latency-svc-fnnkz
  I0323 12:53:10.244429 23 service_latency.go:363] Got endpoints: latency-svc-h74g7 [753.728738ms]
  I0323 12:53:10.249483 23 service_latency.go:356] Created: latency-svc-8sdw2
  I0323 12:53:10.290502 23 service_latency.go:363] Got endpoints: latency-svc-j5wqv [748.431036ms]
  I0323 12:53:10.295613 23 service_latency.go:356] Created: latency-svc-qwzdd
  I0323 12:53:10.339919 23 service_latency.go:363] Got endpoints: latency-svc-5t9rg [750.705271ms]
  I0323 12:53:10.346563 23 service_latency.go:356] Created: latency-svc-gzxhz
  I0323 12:53:10.389108 23 service_latency.go:363] Got endpoints: latency-svc-kfvrp [749.383212ms]
  I0323 12:53:10.394213 23 service_latency.go:356] Created: latency-svc-jpwg8
  I0323 12:53:10.439539 23 service_latency.go:363] Got endpoints: latency-svc-69flk [749.223772ms]
  I0323 12:53:10.445015 23 service_latency.go:356] Created: latency-svc-ktmjm
  I0323 12:53:10.489178 23 service_latency.go:363] Got endpoints: latency-svc-chltq [747.978055ms]
  I0323 12:53:10.494409 23 service_latency.go:356] Created: latency-svc-4jlfc
  I0323 12:53:10.541493 23 service_latency.go:363] Got endpoints: latency-svc-t89gj [750.874801ms]
  I0323 12:53:10.546963 23 service_latency.go:356] Created: latency-svc-9d6lf
  I0323 12:53:10.591405 23 service_latency.go:363] Got endpoints: latency-svc-m9b96 [752.286558ms]
  I0323 12:53:10.599053 23 service_latency.go:356] Created: latency-svc-fsdv9
  I0323 12:53:10.640449 23 service_latency.go:363] Got endpoints: latency-svc-vg967 [751.135311ms]
  I0323 12:53:10.645137 23 service_latency.go:356] Created: latency-svc-wbs6w
  I0323 12:53:10.690209 23 service_latency.go:363] Got endpoints: latency-svc-4zblf [750.808816ms]
  I0323 12:53:10.696641 23 service_latency.go:356] Created: latency-svc-lmkcf
  I0323 12:53:10.739735 23 service_latency.go:363] Got endpoints: latency-svc-bbmrr [750.042248ms]
  I0323 12:53:10.744851 23 service_latency.go:356] Created: latency-svc-mv5fm
  I0323 12:53:10.789281 23 service_latency.go:363] Got endpoints: latency-svc-mrh8j [749.483394ms]
  I0323 12:53:10.794234 23 service_latency.go:356] Created: latency-svc-4flbn
  I0323 12:53:10.842652 23 service_latency.go:363] Got endpoints: latency-svc-f95t9 [751.408456ms]
  I0323 12:53:10.847750 23 service_latency.go:356] Created: latency-svc-stlsg
  I0323 12:53:10.888567 23 service_latency.go:363] Got endpoints: latency-svc-g4822 [749.274029ms]
  I0323 12:53:10.894767 23 service_latency.go:356] Created: latency-svc-9ngzn
  I0323 12:53:10.940077 23 service_latency.go:363] Got endpoints: latency-svc-fnnkz [749.972315ms]
  I0323 12:53:10.945994 23 service_latency.go:356] Created: latency-svc-z8b2n
  I0323 12:53:10.989199 23 service_latency.go:363] Got endpoints: latency-svc-8sdw2 [744.736475ms]
  I0323 12:53:10.994881 23 service_latency.go:356] Created: latency-svc-5p459
  I0323 12:53:11.039751 23 service_latency.go:363] Got endpoints: latency-svc-qwzdd [749.204807ms]
  I0323 12:53:11.045290 23 service_latency.go:356] Created: latency-svc-kp9vk
  I0323 12:53:11.089401 23 service_latency.go:363] Got endpoints: latency-svc-gzxhz [749.44341ms]
  I0323 12:53:11.095055 23 service_latency.go:356] Created: latency-svc-plxmq
  I0323 12:53:11.139641 23 service_latency.go:363] Got endpoints: latency-svc-jpwg8 [750.498671ms]
  I0323 12:53:11.145525 23 service_latency.go:356] Created: latency-svc-xp9qx
  I0323 12:53:11.191074 23 service_latency.go:363] Got endpoints: latency-svc-ktmjm [751.474674ms]
  I0323 12:53:11.198020 23 service_latency.go:356] Created: latency-svc-dm9tc
  I0323 12:53:11.240234 23 service_latency.go:363] Got endpoints: latency-svc-4jlfc [751.012834ms]
  I0323 12:53:11.252368 23 service_latency.go:356] Created: latency-svc-vtv59
  I0323 12:53:11.288770 23 service_latency.go:363] Got endpoints: latency-svc-9d6lf [747.241578ms]
  I0323 12:53:11.296721 23 service_latency.go:356] Created: latency-svc-r9zbz
  I0323 12:53:11.339387 23 service_latency.go:363] Got endpoints: latency-svc-fsdv9 [747.933016ms]
  I0323 12:53:11.344846 23 service_latency.go:356] Created: latency-svc-jr7tp
  I0323 12:53:11.389615 23 service_latency.go:363] Got endpoints: latency-svc-wbs6w [749.130884ms]
  I0323 12:53:11.396555 23 service_latency.go:356] Created: latency-svc-ctqg6
  I0323 12:53:11.441037 23 service_latency.go:363] Got endpoints: latency-svc-lmkcf [750.781242ms]
  I0323 12:53:11.446480 23 service_latency.go:356] Created: latency-svc-znn7m
  I0323 12:53:11.489596 23 service_latency.go:363] Got endpoints: latency-svc-mv5fm [749.825252ms]
  I0323 12:53:11.497977 23 service_latency.go:356] Created: latency-svc-r5hbw
  I0323 12:53:11.539541 23 service_latency.go:363] Got endpoints: latency-svc-4flbn [750.217625ms]
  I0323 12:53:11.545308 23 service_latency.go:356] Created: latency-svc-vg4m9
  I0323 12:53:11.590565 23 service_latency.go:363] Got endpoints: latency-svc-stlsg [747.87718ms]
  I0323 12:53:11.595536 23 service_latency.go:356] Created: latency-svc-p5ktg
  I0323 12:53:11.641483 23 service_latency.go:363] Got endpoints: latency-svc-9ngzn [752.879743ms]
  I0323 12:53:11.647108 23 service_latency.go:356] Created: latency-svc-dj28d
  I0323 12:53:11.690348 23 service_latency.go:363] Got endpoints: latency-svc-z8b2n [750.234425ms]
  I0323 12:53:11.696494 23 service_latency.go:356] Created: latency-svc-bspcp
  I0323 12:53:11.740255 23 service_latency.go:363] Got endpoints: latency-svc-5p459 [751.02097ms]
  I0323 12:53:11.745856 23 service_latency.go:356] Created: latency-svc-x9nxj
  I0323 12:53:11.791194 23 service_latency.go:363] Got endpoints: latency-svc-kp9vk [751.392865ms]
  I0323 12:53:11.796637 23 service_latency.go:356] Created: latency-svc-4bnt6
  I0323 12:53:11.838708 23 service_latency.go:363] Got endpoints: latency-svc-plxmq [749.270521ms]
  I0323 12:53:11.843775 23 service_latency.go:356] Created: latency-svc-67qrb
  I0323 12:53:11.890730 23 service_latency.go:363] Got endpoints: latency-svc-xp9qx [750.968441ms]
  I0323 12:53:11.895763 23 service_latency.go:356] Created: latency-svc-krbvj
  I0323 12:53:11.940536 23 service_latency.go:363] Got endpoints: latency-svc-dm9tc [749.424929ms]
  I0323 12:53:11.945552 23 service_latency.go:356] Created: latency-svc-bwh5j
  I0323 12:53:11.989611 23 service_latency.go:363] Got endpoints: latency-svc-vtv59 [749.329963ms]
  I0323 12:53:11.996202 23 service_latency.go:356] Created: latency-svc-9djrk
  I0323 12:53:12.039860 23 service_latency.go:363] Got endpoints: latency-svc-r9zbz [751.051514ms]
  I0323 12:53:12.045101 23 service_latency.go:356] Created: latency-svc-n4cmt
  I0323 12:53:12.090373 23 service_latency.go:363] Got endpoints: latency-svc-jr7tp [750.946767ms]
  I0323 12:53:12.095040 23 service_latency.go:356] Created: latency-svc-xpvrx
  I0323 12:53:12.139482 23 service_latency.go:363] Got endpoints: latency-svc-ctqg6 [749.826317ms]
  I0323 12:53:12.145997 23 service_latency.go:356] Created: latency-svc-prbgf
  I0323 12:53:12.189180 23 service_latency.go:363] Got endpoints: latency-svc-znn7m [748.111457ms]
  I0323 12:53:12.195452 23 service_latency.go:356] Created: latency-svc-fp574
  I0323 12:53:12.239820 23 service_latency.go:363] Got endpoints: latency-svc-r5hbw [750.077279ms]
  I0323 12:53:12.245795 23 service_latency.go:356] Created: latency-svc-h4szp
  I0323 12:53:12.290958 23 service_latency.go:363] Got endpoints: latency-svc-vg4m9 [751.381624ms]
  I0323 12:53:12.298676 23 service_latency.go:356] Created: latency-svc-z9zff
  I0323 12:53:12.341209 23 service_latency.go:363] Got endpoints: latency-svc-p5ktg [750.600678ms]
  I0323 12:53:12.346923 23 service_latency.go:356] Created: latency-svc-nkt9t
  I0323 12:53:12.391046 23 service_latency.go:363] Got endpoints: latency-svc-dj28d [749.528342ms]
  I0323 12:53:12.396132 23 service_latency.go:356] Created: latency-svc-gf9nq
  I0323 12:53:12.438938 23 service_latency.go:363] Got endpoints: latency-svc-bspcp [748.554943ms]
  I0323 12:53:12.444863 23 service_latency.go:356] Created: latency-svc-mkcd2
  I0323 12:53:12.489943 23 service_latency.go:363] Got endpoints: latency-svc-x9nxj [749.648487ms]
  I0323 12:53:12.496444 23 service_latency.go:356] Created: latency-svc-xvzm7
  I0323 12:53:12.540709 23 service_latency.go:363] Got endpoints: latency-svc-4bnt6 [749.4751ms]
  I0323 12:53:12.545618 23 service_latency.go:356] Created: latency-svc-h7df8
  I0323 12:53:12.589692 23 service_latency.go:363] Got endpoints: latency-svc-67qrb [750.943557ms]
  I0323 12:53:12.594906 23 service_latency.go:356] Created: latency-svc-zk5h5
  I0323 12:53:12.649034 23 service_latency.go:363] Got endpoints: latency-svc-krbvj [758.257511ms]
  I0323 12:53:12.690122 23 service_latency.go:363] Got endpoints: latency-svc-bwh5j [749.519613ms]
  I0323 12:53:12.740098 23 service_latency.go:363] Got endpoints: latency-svc-9djrk [750.444588ms]
  I0323 12:53:12.790011 23 service_latency.go:363] Got endpoints: latency-svc-n4cmt [750.113732ms]
  I0323 12:53:12.840071 23 service_latency.go:363] Got endpoints: latency-svc-xpvrx [749.656362ms]
  I0323 12:53:12.890891 23 service_latency.go:363] Got endpoints: latency-svc-prbgf [751.373482ms]
  I0323 12:53:12.941300 23 service_latency.go:363] Got endpoints: latency-svc-fp574 [752.082039ms]
  I0323 12:53:12.990245 23 service_latency.go:363] Got endpoints: latency-svc-h4szp [750.38502ms]
  I0323 12:53:13.041125 23 service_latency.go:363] Got endpoints: latency-svc-z9zff [750.125223ms]
  I0323 12:53:13.090810 23 service_latency.go:363] Got endpoints: latency-svc-nkt9t [749.569074ms]
  I0323 12:53:13.140601 23 service_latency.go:363] Got endpoints: latency-svc-gf9nq [749.506975ms]
  I0323 12:53:13.190587 23 service_latency.go:363] Got endpoints: latency-svc-mkcd2 [751.613422ms]
  I0323 12:53:13.243106 23 service_latency.go:363] Got endpoints: latency-svc-xvzm7 [753.123491ms]
  I0323 12:53:13.290120 23 service_latency.go:363] Got endpoints: latency-svc-h7df8 [749.373946ms]
  I0323 12:53:13.339240 23 service_latency.go:363] Got endpoints: latency-svc-zk5h5 [749.501263ms]
  I0323 12:53:13.339344 23 service_latency.go:114] Latencies: [10.837912ms 12.585852ms 18.332297ms 20.873502ms 26.519048ms 32.404289ms 37.233891ms 45.312762ms 53.846181ms 55.706946ms 60.665544ms 65.0537ms 65.486074ms 68.491752ms 68.570812ms 69.769027ms 71.810944ms 74.006431ms 74.158696ms 74.423308ms 75.181234ms 76.306803ms 77.730966ms 77.785303ms 78.630541ms 79.175981ms 80.222871ms 81.06792ms 81.154248ms 81.573597ms 85.220575ms 88.677069ms 104.38657ms 147.524146ms 195.725596ms 238.812199ms 284.574095ms 326.486377ms 371.769228ms 414.625386ms 462.645643ms 511.006753ms 555.522697ms 599.723727ms 645.736987ms 694.211851ms 734.472804ms 744.736475ms 745.756142ms 746.198995ms 746.273192ms 746.308343ms 747.241578ms 747.245053ms 747.31311ms 747.582557ms 747.836969ms 747.87718ms 747.933016ms 747.947738ms 747.978055ms 748.111457ms 748.182027ms 748.254108ms 748.33246ms 748.426391ms 748.431036ms 748.477481ms 748.554943ms 748.556343ms 748.58117ms 748.615208ms 748.946182ms 748.97207ms 749.067728ms 749.075809ms 749.078195ms 749.130884ms 749.204807ms 749.223772ms 749.234213ms 749.236308ms 749.252219ms 749.252789ms 749.265974ms 749.270521ms 749.274029ms 749.295364ms 749.329963ms 749.34156ms 749.372487ms 749.373946ms 749.383212ms 749.424929ms 749.44341ms 749.471647ms 749.471981ms 749.4751ms 749.483394ms 749.501022ms 749.501263ms 749.504203ms 749.506975ms 749.519613ms 749.528342ms 749.534477ms 749.549919ms 749.569074ms 749.587968ms 749.612041ms 749.624293ms 749.648487ms 749.652465ms 749.656362ms 749.663756ms 749.680961ms 749.722087ms 749.7475ms 749.758119ms 749.791447ms 749.825252ms 749.826317ms 749.846244ms 749.938889ms 749.972315ms 749.985505ms 750.036933ms 750.042248ms 750.048378ms 750.053027ms 750.059429ms 750.077279ms 750.101833ms 750.113732ms 750.125223ms 750.147989ms 750.216733ms 750.217625ms 750.234425ms 750.278906ms 750.337797ms 750.378748ms 750.38502ms 750.412987ms 750.444588ms 750.484159ms 750.498671ms 750.600678ms 750.610069ms 750.612619ms 750.643803ms 750.682173ms 750.693603ms 750.705271ms 750.748126ms 750.756606ms 750.781242ms 750.808816ms 750.874801ms 750.943557ms 750.946767ms 750.968441ms 751.012834ms 751.02097ms 751.042912ms 751.051514ms 751.135311ms 751.15986ms 751.251803ms 751.334108ms 751.357985ms 751.373482ms 751.381624ms 751.392865ms 751.400399ms 751.408456ms 751.444722ms 751.464176ms 751.474674ms 751.512931ms 751.613422ms 751.633503ms 751.824534ms 751.927457ms 752.042301ms 752.082039ms 752.102388ms 752.199204ms 752.229665ms 752.286558ms 752.58358ms 752.727839ms 752.879743ms 753.123491ms 753.131029ms 753.375416ms 753.728738ms 753.838775ms 756.303472ms 758.257511ms]
  I0323 12:53:13.339432 23 service_latency.go:118] 50 %ile: 749.501263ms
  I0323 12:53:13.339444 23 service_latency.go:119] 90 %ile: 751.613422ms
  I0323 12:53:13.339450 23 service_latency.go:120] 99 %ile: 756.303472ms
  I0323 12:53:13.339455 23 service_latency.go:121] Total sample count: 200
  I0323 12:53:13.339536 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-2767" for this suite. @ 03/23/25 12:53:13.341
• [10.734 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 03/23/25 12:53:13.347
  I0323 12:53:13.347713 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename daemonsets @ 03/23/25 12:53:13.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:53:13.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:53:13.358
  I0323 12:53:13.449611 23 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 03/23/25 12:53:13.452
  I0323 12:53:13.545361 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0323 12:53:13.545388 23 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0323 12:53:14.456280 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0323 12:53:14.456309 23 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0323 12:53:15.455805 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0323 12:53:15.455831 23 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 03/23/25 12:53:15.46
  STEP: Check that daemon pods images are updated. @ 03/23/25 12:53:15.464
  I0323 12:53:15.469514 23 daemon_set.go:1193] Wrong image for pod: daemon-set-gzmgn. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0323 12:53:15.469534 23 daemon_set.go:1193] Wrong image for pod: daemon-set-nvkgp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0323 12:53:16.472809 23 daemon_set.go:1198] Pod daemon-set-7rstf is not available
  I0323 12:53:16.472837 23 daemon_set.go:1193] Wrong image for pod: daemon-set-gzmgn. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0323 12:53:16.472845 23 daemon_set.go:1193] Wrong image for pod: daemon-set-nvkgp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0323 12:53:17.466530 23 daemon_set.go:1193] Wrong image for pod: daemon-set-gzmgn. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0323 12:53:17.466556 23 daemon_set.go:1198] Pod daemon-set-j679h is not available
  I0323 12:53:18.467631 23 daemon_set.go:1198] Pod daemon-set-dgvs9 is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 03/23/25 12:53:18.469
  I0323 12:53:18.571372 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0323 12:53:18.571401 23 fixtures.go:131] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  I0323 12:53:19.476338 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0323 12:53:19.476368 23 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 03/23/25 12:53:19.58
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6850, will wait for the garbage collector to delete the pods @ 03/23/25 12:53:19.58
  I0323 12:53:19.636591 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 3.651546ms
  I0323 12:53:23.137385 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 3.500778575s
  I0323 12:53:23.939434 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0323 12:53:23.939461 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0323 12:53:23.940760 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"16024"},"items":null}

  I0323 12:53:23.941708 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"16024"},"items":null}

  I0323 12:53:23.946227 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6850" for this suite. @ 03/23/25 12:53:23.947
• [10.602 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 03/23/25 12:53:23.949
  I0323 12:53:23.949891 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename webhook @ 03/23/25 12:53:23.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:53:23.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:53:23.957
  STEP: Setting up server cert @ 03/23/25 12:53:23.967
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/23/25 12:53:24.327
  STEP: Deploying the webhook pod @ 03/23/25 12:53:24.329
  STEP: Wait for the deployment to be ready @ 03/23/25 12:53:24.336
  I0323 12:53:24.340532 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 03/23/25 12:53:26.344
  STEP: Verifying the service has paired with the endpoint @ 03/23/25 12:53:26.349
  I0323 12:53:27.349582 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0323 12:53:27.351204 23 util.go:426] Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  I0323 12:53:28.350340 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0323 12:53:28.351864 23 util.go:426] Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  I0323 12:53:29.349927 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0323 12:53:29.351544 23 util.go:426] Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  I0323 12:53:30.349608 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 03/23/25 12:53:30.352
  I0323 12:53:30.371019 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-646" for this suite. @ 03/23/25 12:53:30.373
  STEP: Destroying namespace "webhook-markers-5073" for this suite. @ 03/23/25 12:53:30.378
• [6.432 seconds]
------------------------------
SSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 03/23/25 12:53:30.381
  I0323 12:53:30.381985 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename init-container @ 03/23/25 12:53:30.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:53:30.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:53:30.442
  STEP: creating the pod @ 03/23/25 12:53:30.443
  I0323 12:53:30.443436 23 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I0323 12:53:33.803992 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-682" for this suite. @ 03/23/25 12:53:33.805
• [3.426 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 03/23/25 12:53:33.808
  I0323 12:53:33.808384 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename secrets @ 03/23/25 12:53:33.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:53:33.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:53:33.817
  STEP: Creating secret with name secret-test-586d8642-5aaa-45dc-89f4-7b4b7641ee63 @ 03/23/25 12:53:33.818
  STEP: Creating a pod to test consume secrets @ 03/23/25 12:53:33.82
  STEP: Saw pod success @ 03/23/25 12:53:37.83
  I0323 12:53:37.831794 23 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-secrets-25dc0539-36f5-47b8-8df7-34e99af9e43f container secret-volume-test: <nil>
  STEP: delete the pod @ 03/23/25 12:53:37.839
  I0323 12:53:37.851313 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5019" for this suite. @ 03/23/25 12:53:37.853
• [4.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 03/23/25 12:53:37.856
  I0323 12:53:37.856149 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename watch @ 03/23/25 12:53:37.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:53:37.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:53:37.866
  STEP: creating a watch on configmaps with a certain label @ 03/23/25 12:53:37.868
  STEP: creating a new configmap @ 03/23/25 12:53:37.87
  STEP: modifying the configmap once @ 03/23/25 12:53:37.873
  STEP: changing the label value of the configmap @ 03/23/25 12:53:37.877
  STEP: Expecting to observe a delete notification for the watched object @ 03/23/25 12:53:37.88
  I0323 12:53:37.880859 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3203  a32ca073-ce62-477a-bd59-0adede380940 16218 0 2025-03-23 12:53:37 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-03-23 12:53:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0323 12:53:37.880952 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3203  a32ca073-ce62-477a-bd59-0adede380940 16219 0 2025-03-23 12:53:37 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-03-23 12:53:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0323 12:53:37.881011 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3203  a32ca073-ce62-477a-bd59-0adede380940 16220 0 2025-03-23 12:53:37 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-03-23 12:53:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 03/23/25 12:53:37.881
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 03/23/25 12:53:37.884
  STEP: changing the label value of the configmap back @ 03/23/25 12:53:47.887
  STEP: modifying the configmap a third time @ 03/23/25 12:53:47.891
  STEP: deleting the configmap @ 03/23/25 12:53:47.894
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 03/23/25 12:53:47.896
  I0323 12:53:47.896681 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3203  a32ca073-ce62-477a-bd59-0adede380940 16272 0 2025-03-23 12:53:37 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-03-23 12:53:47 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0323 12:53:47.896758 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3203  a32ca073-ce62-477a-bd59-0adede380940 16273 0 2025-03-23 12:53:37 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-03-23 12:53:47 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0323 12:53:47.896827 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3203  a32ca073-ce62-477a-bd59-0adede380940 16274 0 2025-03-23 12:53:37 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-03-23 12:53:47 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0323 12:53:47.896908 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3203" for this suite. @ 03/23/25 12:53:47.898
• [10.045 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 03/23/25 12:53:47.901
  I0323 12:53:47.901487 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename resourcequota @ 03/23/25 12:53:47.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:53:47.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:53:47.908
  STEP: Counting existing ResourceQuota @ 03/23/25 12:54:04.912
  STEP: Creating a ResourceQuota @ 03/23/25 12:54:09.915
  STEP: Ensuring resource quota status is calculated @ 03/23/25 12:54:09.918
  STEP: Creating a ConfigMap @ 03/23/25 12:54:11.921
  STEP: Ensuring resource quota status captures configMap creation @ 03/23/25 12:54:11.927
  STEP: Deleting a ConfigMap @ 03/23/25 12:54:13.93
  STEP: Ensuring resource quota status released usage @ 03/23/25 12:54:13.934
  I0323 12:54:15.936296 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7576" for this suite. @ 03/23/25 12:54:15.937
• [28.039 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1697
  STEP: Creating a kubernetes client @ 03/23/25 12:54:15.94
  I0323 12:54:15.940306 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename kubectl @ 03/23/25 12:54:15.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:54:15.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:54:15.947
  STEP: creating Agnhost RC @ 03/23/25 12:54:15.949
  I0323 12:54:15.949414 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-1761 create -f -'
  I0323 12:54:16.029963 23 builder.go:146] stderr: ""
  I0323 12:54:16.029991 23 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 03/23/25 12:54:16.03
  I0323 12:54:17.032341 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0323 12:54:17.032365 23 framework.go:733] Found 1 / 1
  I0323 12:54:17.032376 23 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 03/23/25 12:54:17.032
  I0323 12:54:17.033663 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0323 12:54:17.033678 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0323 12:54:17.033717 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-1761 patch pod agnhost-primary-xq9hl -p {"metadata":{"annotations":{"x":"y"}}}'
  I0323 12:54:17.078421 23 builder.go:146] stderr: ""
  I0323 12:54:17.078452 23 builder.go:147] stdout: "pod/agnhost-primary-xq9hl patched\n"
  STEP: checking annotations @ 03/23/25 12:54:17.078
  I0323 12:54:17.079751 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0323 12:54:17.079770 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0323 12:54:17.079858 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1761" for this suite. @ 03/23/25 12:54:17.081
• [1.143 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 03/23/25 12:54:17.083
  I0323 12:54:17.083627 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename cronjob @ 03/23/25 12:54:17.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:54:17.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:54:17.093
  STEP: Creating a cronjob @ 03/23/25 12:54:17.094
  STEP: Ensuring more than one job is running at a time @ 03/23/25 12:54:17.097
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 03/23/25 12:56:01.1
  STEP: Removing cronjob @ 03/23/25 12:56:01.102
  I0323 12:56:01.104310 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8042" for this suite. @ 03/23/25 12:56:01.105
• [104.025 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 03/23/25 12:56:01.108
  I0323 12:56:01.108534 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename replicaset @ 03/23/25 12:56:01.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:56:01.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:56:01.119
  STEP: Create a Replicaset @ 03/23/25 12:56:01.127
  STEP: Verify that the required pods have come up. @ 03/23/25 12:56:01.13
  I0323 12:56:01.140501 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0323 12:56:06.143269 23 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 03/23/25 12:56:06.143
  STEP: Getting /status @ 03/23/25 12:56:06.143
  I0323 12:56:06.144972 23 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 03/23/25 12:56:06.144
  I0323 12:56:06.149981 23 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 03/23/25 12:56:06.15
  I0323 12:56:06.150845 23 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0323 12:56:06.150912 23 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0323 12:56:06.150973 23 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0323 12:56:06.151097 23 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0323 12:56:06.151130 23 replica_set.go:682] Found replicaset test-rs in namespace replicaset-8865 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0323 12:56:06.151142 23 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 03/23/25 12:56:06.151
  I0323 12:56:06.151174 23 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0323 12:56:06.153953 23 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 03/23/25 12:56:06.153
  I0323 12:56:06.154717 23 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0323 12:56:06.154780 23 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0323 12:56:06.154841 23 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0323 12:56:06.154953 23 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0323 12:56:06.154968 23 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-8865 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0323 12:56:06.155021 23 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0323 12:56:06.155038 23 replica_set.go:718] Found replicaset test-rs in namespace replicaset-8865 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0323 12:56:06.155051 23 replica_set.go:729] Replicaset test-rs has a patched status
  I0323 12:56:06.155126 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8865" for this suite. @ 03/23/25 12:56:06.156
• [5.050 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:839
  STEP: Creating a kubernetes client @ 03/23/25 12:56:06.158
  I0323 12:56:06.158845 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename svcaccounts @ 03/23/25 12:56:06.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:56:06.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:56:06.17
  STEP: Creating ServiceAccount "e2e-sa-kn5f5"  @ 03/23/25 12:56:06.171
  I0323 12:56:06.173814 23 service_accounts.go:854] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-kn5f5"  @ 03/23/25 12:56:06.173
  I0323 12:56:06.177226 23 service_accounts.go:868] AutomountServiceAccountToken: true
  I0323 12:56:06.177298 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1995" for this suite. @ 03/23/25 12:56:06.256
• [0.100 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 03/23/25 12:56:06.259
  I0323 12:56:06.259348 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename endpointslicemirroring @ 03/23/25 12:56:06.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:56:06.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:56:06.269
  STEP: mirroring a new custom Endpoint @ 03/23/25 12:56:06.277
  I0323 12:56:06.282545 23 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 03/23/25 12:56:08.285
  STEP: mirroring deletion of a custom Endpoint @ 03/23/25 12:56:08.29
  I0323 12:56:08.297321 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-6151" for this suite. @ 03/23/25 12:56:08.299
• [2.042 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 03/23/25 12:56:08.301
  I0323 12:56:08.301494 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename pods @ 03/23/25 12:56:08.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:56:08.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:56:08.31
  I0323 12:56:08.312352 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: creating the pod @ 03/23/25 12:56:08.312
  STEP: submitting the pod to kubernetes @ 03/23/25 12:56:08.312
  I0323 12:56:10.341262 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-678" for this suite. @ 03/23/25 12:56:10.342
• [2.044 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:757
  STEP: Creating a kubernetes client @ 03/23/25 12:56:10.345
  I0323 12:56:10.345409 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename statefulset @ 03/23/25 12:56:10.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:56:10.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:56:10.403
  STEP: Creating service test in namespace statefulset-9180 @ 03/23/25 12:56:10.404
  STEP: Creating stateful set ss in namespace statefulset-9180 @ 03/23/25 12:56:10.408
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-9180 @ 03/23/25 12:56:10.41
  I0323 12:56:10.413289 23 wait.go:40] Found 0 stateful pods, waiting for 1
  I0323 12:56:20.414044 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 03/23/25 12:56:20.414
  I0323 12:56:20.415617 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=statefulset-9180 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0323 12:56:20.486270 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0323 12:56:20.486304 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0323 12:56:20.486316 23 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0323 12:56:20.487807 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0323 12:56:30.489922 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0323 12:56:30.489951 23 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0323 12:56:30.499671 23 resource.go:168] POD   NODE              PHASE    GRACE  CONDITIONS
  I0323 12:56:30.499708 23 resource.go:175] ss-0  k8s-10-255-0-208  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-03-23 12:56:11 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-03-23 12:56:10 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-03-23 12:56:21 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-03-23 12:56:21 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-03-23 12:56:10 +0000 UTC  }]
  I0323 12:56:30.499717 23 resource.go:175] ss-1                    Pending         []
  I0323 12:56:30.499724 23 resource.go:178] 
  I0323 12:56:30.499731 23 statefulset.go:2416] StatefulSet ss has not reached scale 3, at 2
  I0323 12:56:31.502737 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 8.994038962s
  I0323 12:56:32.504911 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 7.99197876s
  I0323 12:56:33.508028 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 6.988873585s
  I0323 12:56:34.510640 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 5.986041402s
  I0323 12:56:35.512897 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 4.984076733s
  I0323 12:56:36.515097 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 3.981820734s
  I0323 12:56:37.517252 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 2.979620312s
  I0323 12:56:38.520432 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 1.976529135s
  I0323 12:56:39.522960 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 974.040419ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-9180 @ 03/23/25 12:56:40.523
  I0323 12:56:40.525477 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=statefulset-9180 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0323 12:56:40.588964 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0323 12:56:40.588994 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0323 12:56:40.589005 23 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0323 12:56:40.589034 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=statefulset-9180 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0323 12:56:40.653757 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0323 12:56:40.653789 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0323 12:56:40.653797 23 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0323 12:56:40.653842 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=statefulset-9180 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0323 12:56:40.719529 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0323 12:56:40.719563 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0323 12:56:40.719573 23 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0323 12:56:40.721232 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  I0323 12:56:50.722000 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0323 12:56:50.722028 23 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0323 12:56:50.722039 23 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 03/23/25 12:56:50.722
  I0323 12:56:50.723334 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=statefulset-9180 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0323 12:56:50.785331 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0323 12:56:50.785362 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0323 12:56:50.785373 23 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0323 12:56:50.785408 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=statefulset-9180 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0323 12:56:50.851228 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0323 12:56:50.851262 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0323 12:56:50.851271 23 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0323 12:56:50.851317 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=statefulset-9180 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0323 12:56:50.915113 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0323 12:56:50.915147 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0323 12:56:50.915157 23 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0323 12:56:50.915168 23 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0323 12:56:50.916728 23 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I0323 12:57:00.919978 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0323 12:57:00.920007 23 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0323 12:57:00.920013 23 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0323 12:57:00.929632 23 resource.go:168] POD   NODE              PHASE    GRACE  CONDITIONS
  I0323 12:57:00.929681 23 resource.go:175] ss-0  k8s-10-255-0-208  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-03-23 12:56:11 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-03-23 12:56:10 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-03-23 12:56:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-03-23 12:56:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-03-23 12:56:10 +0000 UTC  }]
  I0323 12:57:00.929705 23 resource.go:175] ss-1  k8s-10-255-0-207  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-03-23 12:56:31 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-03-23 12:56:30 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-03-23 12:56:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-03-23 12:56:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-03-23 12:56:30 +0000 UTC  }]
  I0323 12:57:00.929728 23 resource.go:175] ss-2  k8s-10-255-0-206  Running  30s    [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-03-23 12:56:31 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-03-23 12:56:30 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-03-23 12:56:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-03-23 12:56:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-03-23 12:56:30 +0000 UTC  }]
  I0323 12:57:00.929736 23 resource.go:178] 
  I0323 12:57:00.929743 23 statefulset.go:2416] StatefulSet ss has not reached scale 0, at 3
  I0323 12:57:01.932599 23 resource.go:168] POD   NODE              PHASE      GRACE  CONDITIONS
  I0323 12:57:01.932649 23 resource.go:175] ss-0  k8s-10-255-0-208  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-03-23 12:57:01 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-03-23 12:56:10 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-03-23 12:56:51 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-03-23 12:56:51 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-03-23 12:56:10 +0000 UTC  }]
  I0323 12:57:01.932674 23 resource.go:175] ss-1  k8s-10-255-0-207  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-03-23 12:57:01 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-03-23 12:56:30 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-03-23 12:56:51 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-03-23 12:56:51 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-03-23 12:56:30 +0000 UTC  }]
  I0323 12:57:01.932681 23 resource.go:178] 
  I0323 12:57:01.932688 23 statefulset.go:2416] StatefulSet ss has not reached scale 0, at 2
  I0323 12:57:02.934743 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 7.991046037s
  I0323 12:57:03.936823 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 6.988988326s
  I0323 12:57:04.938923 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 5.986890926s
  I0323 12:57:05.941885 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 4.983938582s
  I0323 12:57:06.943981 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 3.981824791s
  I0323 12:57:07.946948 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 2.978801207s
  I0323 12:57:08.949080 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 1.976758873s
  I0323 12:57:09.951152 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 974.631224ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-9180 @ 03/23/25 12:57:10.951
  I0323 12:57:10.953224 23 rest.go:152] Scaling statefulset ss to 0
  I0323 12:57:10.955642 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0323 12:57:10.956699 23 statefulset.go:138] Deleting all statefulset in ns statefulset-9180
  I0323 12:57:10.957866 23 rest.go:152] Scaling statefulset ss to 0
  I0323 12:57:10.959639 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0323 12:57:10.960606 23 rest.go:90] Deleting statefulset ss
  I0323 12:57:10.965486 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9180" for this suite. @ 03/23/25 12:57:10.967
• [60.624 seconds]
------------------------------
S
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 03/23/25 12:57:10.969
  I0323 12:57:10.969605 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename disruption @ 03/23/25 12:57:10.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:57:10.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:57:10.977
  STEP: creating the pdb @ 03/23/25 12:57:10.978
  STEP: Waiting for the pdb to be processed @ 03/23/25 12:57:10.981
  STEP: updating the pdb @ 03/23/25 12:57:10.983
  STEP: Waiting for the pdb to be processed @ 03/23/25 12:57:10.987
  STEP: patching the pdb @ 03/23/25 12:57:12.989
  STEP: Waiting for the pdb to be processed @ 03/23/25 12:57:12.993
  STEP: Waiting for the pdb to be deleted @ 03/23/25 12:57:14.998
  I0323 12:57:14.999158 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2482" for this suite. @ 03/23/25 12:57:15
• [4.033 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 03/23/25 12:57:15.002
  I0323 12:57:15.002878 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename security-context @ 03/23/25 12:57:15.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:57:15.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:57:15.01
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 03/23/25 12:57:15.012
  STEP: Saw pod success @ 03/23/25 12:57:19.022
  I0323 12:57:19.024106 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod security-context-67ab69e0-b542-4b85-bd1a-8034ed99ce8e container test-container: <nil>
  STEP: delete the pod @ 03/23/25 12:57:19.034
  I0323 12:57:19.040657 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-8136" for this suite. @ 03/23/25 12:57:19.042
• [4.041 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 03/23/25 12:57:19.044
  I0323 12:57:19.044236 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename replication-controller @ 03/23/25 12:57:19.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:57:19.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:57:19.052
  STEP: creating a ReplicationController @ 03/23/25 12:57:19.054
  STEP: waiting for RC to be added @ 03/23/25 12:57:19.057
  STEP: waiting for available Replicas @ 03/23/25 12:57:19.057
  STEP: patching ReplicationController @ 03/23/25 12:57:20.135
  STEP: waiting for RC to be modified @ 03/23/25 12:57:20.14
  STEP: patching ReplicationController status @ 03/23/25 12:57:20.14
  STEP: waiting for RC to be modified @ 03/23/25 12:57:20.144
  STEP: waiting for available Replicas @ 03/23/25 12:57:20.144
  STEP: fetching ReplicationController status @ 03/23/25 12:57:20.146
  STEP: patching ReplicationController scale @ 03/23/25 12:57:20.147
  STEP: waiting for RC to be modified @ 03/23/25 12:57:20.151
  STEP: waiting for ReplicationController's scale to be the max amount @ 03/23/25 12:57:20.151
  STEP: fetching ReplicationController; ensuring that it's patched @ 03/23/25 12:57:21.116
  STEP: updating ReplicationController status @ 03/23/25 12:57:21.117
  STEP: waiting for RC to be modified @ 03/23/25 12:57:21.121
  STEP: listing all ReplicationControllers @ 03/23/25 12:57:21.121
  STEP: checking that ReplicationController has expected values @ 03/23/25 12:57:21.122
  STEP: deleting ReplicationControllers by collection @ 03/23/25 12:57:21.122
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 03/23/25 12:57:21.126
  I0323 12:57:21.156486 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0323 12:57:21.156618      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-9579" for this suite. @ 03/23/25 12:57:21.157
• [2.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 03/23/25 12:57:21.16
  I0323 12:57:21.160969 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename apf @ 03/23/25 12:57:21.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:57:21.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:57:21.168
  STEP: getting /apis @ 03/23/25 12:57:21.17
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 03/23/25 12:57:21.172
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 03/23/25 12:57:21.172
  STEP: creating @ 03/23/25 12:57:21.173
  STEP: getting @ 03/23/25 12:57:21.179
  STEP: listing @ 03/23/25 12:57:21.18
  STEP: watching @ 03/23/25 12:57:21.181
  I0323 12:57:21.181777 23 flowcontrol.go:620] starting watch
  STEP: patching @ 03/23/25 12:57:21.182
  STEP: updating @ 03/23/25 12:57:21.184
  I0323 12:57:21.187213 23 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 03/23/25 12:57:21.187
  STEP: patching /status @ 03/23/25 12:57:21.188
  STEP: updating /status @ 03/23/25 12:57:21.191
  STEP: deleting @ 03/23/25 12:57:21.194
  STEP: deleting a collection @ 03/23/25 12:57:21.198
  I0323 12:57:21.203692 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-9697" for this suite. @ 03/23/25 12:57:21.258
• [0.100 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1398
  STEP: Creating a kubernetes client @ 03/23/25 12:57:21.261
  I0323 12:57:21.261141 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename kubectl @ 03/23/25 12:57:21.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:57:21.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:57:21.269
  I0323 12:57:21.270504 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-8500 create -f -'
  I0323 12:57:21.349626 23 builder.go:146] stderr: ""
  I0323 12:57:21.349663 23 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0323 12:57:21.349700 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-8500 create -f -'
  I0323 12:57:21.429316 23 builder.go:146] stderr: ""
  I0323 12:57:21.429351 23 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 03/23/25 12:57:21.429
  E0323 12:57:22.157149      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 12:57:22.432528 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0323 12:57:22.432555 23 framework.go:733] Found 1 / 1
  I0323 12:57:22.432566 23 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0323 12:57:22.433761 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0323 12:57:22.433782 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0323 12:57:22.433819 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-8500 describe pod agnhost-primary-4tfzs'
  I0323 12:57:22.476128 23 builder.go:146] stderr: ""
  I0323 12:57:22.476192 23 builder.go:147] stdout: "Name:             agnhost-primary-4tfzs\nNamespace:        kubectl-8500\nPriority:         0\nService Account:  default\nNode:             k8s-10-255-0-207/10.255.0.207\nStart Time:       Sun, 23 Mar 2025 12:57:21 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               172.20.254.40\nIPs:\n  IP:           172.20.254.40\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://8e9bb4c8d0de02d51b7b97ac2e6ae95ce39a28f42ad649d85d7fb0f0b0f06579\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.53\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sun, 23 Mar 2025 12:57:21 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-xl5ft (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-xl5ft:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-8500/agnhost-primary-4tfzs to k8s-10-255-0-207\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.53\" already present on machine\n  Normal  Created    1s    kubelet            Created container: agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I0323 12:57:22.476252 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-8500 describe rc agnhost-primary'
  I0323 12:57:22.519383 23 builder.go:146] stderr: ""
  I0323 12:57:22.519422 23 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-8500\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-4tfzs\n"
  I0323 12:57:22.519468 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-8500 describe service agnhost-primary'
  I0323 12:57:22.565707 23 builder.go:146] stderr: ""
  I0323 12:57:22.565745 23 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-8500\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.68.162.252\nIPs:                      10.68.162.252\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                172.20.254.40:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0323 12:57:22.567181 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-8500 describe node k8s-10-255-0-206'
  I0323 12:57:22.625766 23 builder.go:146] stderr: ""
  I0323 12:57:22.625859 23 builder.go:147] stdout: "Name:               k8s-10-255-0-206\nRoles:              master\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=k8s-10-255-0-206\n                    kubernetes.io/os=linux\n                    kubernetes.io/role=master\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sun, 23 Mar 2025 11:45:04 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  k8s-10-255-0-206\n  AcquireTime:     <unset>\n  RenewTime:       Sun, 23 Mar 2025 12:57:22 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sun, 23 Mar 2025 11:45:25 +0000   Sun, 23 Mar 2025 11:45:25 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sun, 23 Mar 2025 12:57:20 +0000   Sun, 23 Mar 2025 11:45:04 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sun, 23 Mar 2025 12:57:20 +0000   Sun, 23 Mar 2025 11:45:04 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sun, 23 Mar 2025 12:57:20 +0000   Sun, 23 Mar 2025 11:45:04 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sun, 23 Mar 2025 12:57:20 +0000   Sun, 23 Mar 2025 11:45:24 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  10.255.0.206\n  Hostname:    k8s-10-255-0-206\nCapacity:\n  cpu:                4\n  ephemeral-storage:  40901312Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7441156Ki\n  pods:               110\nAllocatable:\n  cpu:                4\n  ephemeral-storage:  37694649077\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7133956Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 fcbd136fba814ae9b95314dd47930595\n  System UUID:                fcbd136f-ba81-4ae9-b953-14dd47930595\n  Boot ID:                    bd67d6d0-22ec-4e9e-a384-9e32dfa75925\n  Kernel Version:             5.15.0-131-generic\n  OS Image:                   Ubuntu 22.04.5 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://2.0.4\n  Kubelet Version:            v1.32.3\n  Kube-Proxy Version:         v1.32.3\nPodCIDR:                      172.20.0.0/24\nPodCIDRs:                     172.20.0.0/24\nNon-terminated Pods:          (8 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-kube-controllers-54cdc99cb-5bglc                    0 (0%)        0 (0%)      0 (0%)           0 (0%)         72m\n  kube-system                 calico-node-mqzhm                                          250m (6%)     0 (0%)      0 (0%)           0 (0%)         72m\n  kube-system                 coredns-75dd46b86b-bnz46                                   100m (2%)     0 (0%)      70Mi (1%)        500Mi (7%)     71m\n  kube-system                 dashboard-metrics-scraper-65c7c4ffff-mtscp                 0 (0%)        0 (0%)      0 (0%)           0 (0%)         71m\n  kube-system                 kubernetes-dashboard-75c65df89-967jc                       0 (0%)        0 (0%)      0 (0%)           0 (0%)         71m\n  kube-system                 metrics-server-74f6d6fdd5-skz98                            100m (2%)     0 (0%)      200Mi (2%)       0 (0%)         71m\n  kube-system                 node-local-dns-gdfpz                                       25m (0%)      0 (0%)      5Mi (0%)         0 (0%)         71m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-a86d0fcbee4c468c-6hxkh    0 (0%)        0 (0%)      0 (0%)           0 (0%)         36m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                475m (11%)  0 (0%)\n  memory             275Mi (3%)  500Mi (7%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  I0323 12:57:22.625949 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-8500 describe namespace kubectl-8500'
  I0323 12:57:22.669426 23 builder.go:146] stderr: ""
  I0323 12:57:22.669459 23 builder.go:147] stdout: "Name:         kubectl-8500\nLabels:       e2e-framework=kubectl\n              e2e-run=807e9663-23d0-49d7-8aea-ec7ce4004c5d\n              kubernetes.io/metadata.name=kubectl-8500\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0323 12:57:22.669575 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8500" for this suite. @ 03/23/25 12:57:22.671
• [1.412 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 03/23/25 12:57:22.673
  I0323 12:57:22.673535 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename containers @ 03/23/25 12:57:22.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:57:22.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:57:22.68
  E0323 12:57:23.157741      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:57:24.157870      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 12:57:24.776825 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7960" for this suite. @ 03/23/25 12:57:24.778
• [2.108 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 03/23/25 12:57:24.781
  I0323 12:57:24.781701 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename webhook @ 03/23/25 12:57:24.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:57:24.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:57:24.79
  STEP: Setting up server cert @ 03/23/25 12:57:24.799
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/23/25 12:57:25.104
  STEP: Deploying the webhook pod @ 03/23/25 12:57:25.109
  STEP: Wait for the deployment to be ready @ 03/23/25 12:57:25.114
  I0323 12:57:25.117032 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0323 12:57:25.158178      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:57:26.158746      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/23/25 12:57:27.122
  STEP: Verifying the service has paired with the endpoint @ 03/23/25 12:57:27.129
  E0323 12:57:27.159449      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 12:57:28.129372 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 03/23/25 12:57:28.132
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 03/23/25 12:57:28.133
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 03/23/25 12:57:28.133
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 03/23/25 12:57:28.133
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 03/23/25 12:57:28.133
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 03/23/25 12:57:28.133
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 03/23/25 12:57:28.134
  I0323 12:57:28.151016 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4235" for this suite. @ 03/23/25 12:57:28.154
  STEP: Destroying namespace "webhook-markers-9058" for this suite. @ 03/23/25 12:57:28.159
  E0323 12:57:28.159457      23 retrywatcher.go:160] "Watch failed" err="context canceled"
• [3.383 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 03/23/25 12:57:28.164
  I0323 12:57:28.164727 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename webhook @ 03/23/25 12:57:28.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:57:28.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:57:28.173
  STEP: Setting up server cert @ 03/23/25 12:57:28.184
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/23/25 12:57:28.453
  STEP: Deploying the webhook pod @ 03/23/25 12:57:28.456
  STEP: Wait for the deployment to be ready @ 03/23/25 12:57:28.462
  I0323 12:57:28.465969 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0323 12:57:29.159569      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:57:30.159658      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/23/25 12:57:30.471
  STEP: Verifying the service has paired with the endpoint @ 03/23/25 12:57:30.476
  E0323 12:57:31.159781      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 12:57:31.477101 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0323 12:57:31.480161 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 03/23/25 12:57:31.989
  STEP: Creating a custom resource that should be denied by the webhook @ 03/23/25 12:57:31.998
  E0323 12:57:32.160367      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:57:33.160815      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 03/23/25 12:57:34.003
  STEP: Updating the custom resource with disallowed data should be denied @ 03/23/25 12:57:34.008
  STEP: Deleting the custom resource should be denied @ 03/23/25 12:57:34.011
  STEP: Remove the offending key and value from the custom resource data @ 03/23/25 12:57:34.013
  STEP: Deleting the updated custom resource should be successful @ 03/23/25 12:57:34.017
  E0323 12:57:34.161322      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 12:57:34.549716 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-101" for this suite. @ 03/23/25 12:57:34.551
  STEP: Destroying namespace "webhook-markers-2530" for this suite. @ 03/23/25 12:57:34.554
• [6.392 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 03/23/25 12:57:34.556
  I0323 12:57:34.556583 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename chunking @ 03/23/25 12:57:34.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 12:57:34.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 12:57:34.565
  STEP: creating a large number of resources @ 03/23/25 12:57:34.566
  E0323 12:57:35.161588      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:57:36.162617      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:57:37.163516      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:57:38.164037      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:57:39.164870      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:57:40.165056      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:57:41.165480      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:57:42.165692      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:57:43.166240      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:57:44.166834      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:57:45.166862      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:57:46.167112      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:57:47.168000      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:57:48.168593      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:57:49.169407      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:57:50.170361      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:57:51.171408      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:57:52.172034      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 03/23/25 12:57:52.26
  I0323 12:57:52.310137 23 chunking.go:163] Retrieved 40/40 results with rv 17952 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc5NTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ
  STEP: retrieving the second page until the token expires @ 03/23/25 12:57:52.31
  E0323 12:57:53.172510      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:57:54.172835      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:57:55.172990      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:57:56.173116      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:57:57.173832      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:57:58.174396      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:57:59.174563      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:00.174696      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:01.174834      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:02.174970      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:03.174999      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:04.175140      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:05.175195      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:06.175465      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:07.176149      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:08.176328      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:09.176814      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:10.176910      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:11.177064      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:12.177119      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 12:58:12.312888 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc5NTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0323 12:58:13.177663      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:14.177800      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:15.177929      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:16.178071      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:17.178221      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:18.178361      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:19.178492      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:20.178629      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:21.178911      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:22.178841      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:23.179200      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:24.179337      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:25.179470      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:26.179601      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:27.179745      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:28.179896      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:29.180811      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:30.181508      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:31.181642      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:32.181769      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 12:58:32.313763 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc5NTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0323 12:58:33.182637      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:34.182717      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:35.182842      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:36.182977      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:37.183111      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:38.183252      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:39.183377      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:40.183504      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:41.183631      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:42.183763      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:43.183983      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:44.184815      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:45.184949      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:46.185077      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:47.185203      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:48.185480      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:49.185616      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:50.185759      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:51.185893      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:52.186025      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 12:58:52.313771 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc5NTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0323 12:58:53.186684      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:54.186765      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:55.186848      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:56.186938      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:57.187023      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:58.187061      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:58:59.187136      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:00.187228      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:01.187307      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:02.187385      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:03.188304      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:04.188401      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:05.188479      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:06.188560      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:07.188644      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:08.189306      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:09.189391      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:10.189470      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:11.189565      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:12.189652      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 12:59:12.313486 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc5NTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0323 12:59:13.190359      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:14.190497      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:15.190635      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:16.190770      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:17.190896      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:18.191041      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:19.191169      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:20.191300      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:21.191424      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:22.191510      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:23.191727      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:24.191754      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:25.192813      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:26.192957      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:27.193536      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:28.193668      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:29.193803      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:30.193934      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:31.194072      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:32.194210      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 12:59:32.312772 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc5NTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0323 12:59:33.194706      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:34.194846      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:35.194982      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:36.195116      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:37.195248      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:38.195390      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:39.195527      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:40.195664      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:41.195757      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:42.196814      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:43.197074      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:44.197201      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:45.197343      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:46.197479      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:47.197614      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:48.197757      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:49.197893      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:50.198030      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:51.198167      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:52.198297      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 12:59:52.313047 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc5NTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0323 12:59:53.198941      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:54.199081      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:55.199221      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:56.199358      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:57.199491      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:58.199624      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 12:59:59.199754      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:00.200811      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:01.200944      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:02.201083      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:03.201289      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:04.201427      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:05.201575      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:06.201720      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:07.201866      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:08.202092      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:09.202229      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:10.202353      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:11.202489      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:12.202622      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:00:12.313315 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc5NTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0323 13:00:13.203263      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:14.203722      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:15.203761      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:16.203842      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:17.204812      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:18.204949      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:19.205078      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:20.205211      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:21.205529      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:22.205512      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:23.206075      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:24.206217      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:25.206360      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:26.206492      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:27.206618      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:28.206764      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:29.206890      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:30.207021      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:31.207148      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:32.207279      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:00:32.313179 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc5NTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0323 13:00:33.208079      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:34.208816      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:35.208952      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:36.209088      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:37.209226      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:38.209352      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:39.209484      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:40.209774      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:41.209915      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:42.210047      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:43.210247      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:44.210386      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:45.210512      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:46.210650      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:47.210779      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:48.210858      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:49.210987      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:50.211073      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:51.211214      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:52.211351      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:00:52.313009 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc5NTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0323 13:00:53.211892      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:54.212032      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:55.212823      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:56.213639      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:57.213724      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:58.213790      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:00:59.213880      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:00.214025      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:01.214161      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:02.214295      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:03.214496      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:04.214633      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:05.214793      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:06.214934      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:07.215065      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:08.215134      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:09.215275      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:10.215409      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:11.215546      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:12.215687      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:01:12.313423 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc5NTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0323 13:01:13.216254      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:14.216391      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:15.216816      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:16.216948      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:17.217271      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:18.217342      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:19.217473      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:20.217606      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:21.217747      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:22.217883      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:23.218073      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:24.218209      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:25.218349      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:26.218475      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:27.218609      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:28.218868      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:29.218953      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:30.219089      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:31.219227      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:32.219363      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:01:32.313078 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc5NTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0323 13:01:33.219974      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:34.220112      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:35.220825      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:36.220966      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:37.221101      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:38.221281      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:39.221412      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:40.221493      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:41.221622      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:42.221751      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:43.221932      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:44.222630      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:45.223231      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:46.223358      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:47.223446      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:48.224317      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:49.224397      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:50.224479      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:51.224562      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:52.224644      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:01:52.313298 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc5NTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0323 13:01:53.225243      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:54.225378      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:55.226027      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:56.226169      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:57.226256      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:58.226320      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:01:59.226457      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:00.226587      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:01.226722      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:02.226853      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:03.227045      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:04.227173      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:05.227325      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:06.227458      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:07.227591      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:08.227674      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:09.227761      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:10.228813      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:11.228941      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:12.229731      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:02:12.313345 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc5NTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0323 13:02:13.230212      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:14.230347      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:15.230473      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:16.230613      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:17.230743      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:18.230810      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:19.231436      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:20.231577      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:21.231928      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:22.231808      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:23.232097      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:24.232820      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:25.233675      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:26.234006      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:27.234151      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:28.234230      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:29.234353      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:30.234485      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:31.234612      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:32.234745      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:02:32.313672 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc5NTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0323 13:02:33.235597      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:34.235741      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:35.235765      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:36.236816      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:37.236948      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:38.237010      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:39.237140      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:40.237269      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:41.237402      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:42.237539      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:43.237713      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:44.237844      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:45.237975      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:46.238110      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:47.238247      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:48.238312      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:49.238442      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:50.238581      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:51.238713      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:52.238845      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:02:52.313573 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc5NTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0323 13:02:53.239496      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:54.239626      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:55.239759      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:56.240813      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:57.240950      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:58.241011      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:02:59.241102      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:00.241235      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:01.241372      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:02.241504      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:03.241696      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:04.241829      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:05.242864      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:06.243099      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:07.243178      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:08.243242      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:09.244260      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:10.244818      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:11.244896      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:12.245028      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:03:12.313784 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc5NTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0323 13:03:13.245695      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:14.245837      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:15.245971      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:16.246121      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:17.246255      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:18.246330      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:19.246463      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:20.246603      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:21.246740      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:22.246869      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:23.247054      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:24.247181      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:25.247311      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:26.247448      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:27.247569      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:28.247636      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:29.247758      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:30.247888      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:31.248814      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:32.248950      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:03:32.313661 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc5NTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0323 13:03:33.249600      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:34.249731      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:35.249867      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:36.249998      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:37.250133      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:38.250301      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:39.250439      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:40.250569      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:41.250703      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:42.250830      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:43.251023      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:44.251939      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:45.252077      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:46.252871      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:47.253000      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:48.253063      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:49.253199      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:50.253665      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:51.253798      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:52.253926      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:03:52.313700 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc5NTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0323 13:03:53.254527      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:54.254613      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:55.254743      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:56.254872      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:57.254998      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:58.255059      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:03:59.255185      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:00.255425      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:01.255563      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:02.255641      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:03.255820      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:04.256812      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:05.256939      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:06.257082      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:07.257218      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:08.257295      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:09.257429      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:10.257566      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:11.257722      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:12.257853      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:04:12.313490 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc5NTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0323 13:04:13.258281      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:14.258415      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:15.258502      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:16.258635      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:17.258770      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:18.258830      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:19.258971      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:20.259102      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:21.259465      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:22.259326      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:23.259756      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:24.259832      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:25.260830      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:26.260960      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:27.261091      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:28.261253      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:29.261382      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:30.261518      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:31.261587      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:32.261728      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:04:32.313520 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTc5NTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0323 13:04:33.262416      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:34.262506      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:35.262639      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:36.263579      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:37.264260      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:38.264323      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:39.264412      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:40.264813      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:41.264941      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:42.265074      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:43.265318      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:44.265447      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:45.265573      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:46.265704      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:47.265830      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:48.265902      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:49.266031      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:50.266165      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:51.266292      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:52.266426      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:04:52.312136 23 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0323 13:04:52.312161 23 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 03/23/25 13:04:52.312
  STEP: retrieving all remaining pages @ 03/23/25 13:04:52.314
  I0323 13:04:52.315941 23 chunking.go:221] Retrieved 40/40 results with rv 18603 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg2MDMsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0323 13:04:52.317546 23 chunking.go:221] Retrieved 40/40 results with rv 18603 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg2MDMsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0323 13:04:52.319109 23 chunking.go:221] Retrieved 40/40 results with rv 18603 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg2MDMsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0323 13:04:52.320695 23 chunking.go:221] Retrieved 40/40 results with rv 18603 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg2MDMsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0323 13:04:52.322203 23 chunking.go:221] Retrieved 40/40 results with rv 18603 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg2MDMsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0323 13:04:52.323860 23 chunking.go:221] Retrieved 40/40 results with rv 18603 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg2MDMsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0323 13:04:52.325505 23 chunking.go:221] Retrieved 40/40 results with rv 18603 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTg2MDMsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0323 13:04:52.327162 23 chunking.go:221] Retrieved 40/40 results with rv 18603 and continue 
  I0323 13:04:52.327286 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-6112" for this suite. @ 03/23/25 13:04:52.328
• [437.774 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 03/23/25 13:04:52.331
  I0323 13:04:52.331362 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 03/23/25 13:04:52.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:04:52.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:04:52.341
  STEP: create the container to handle the HTTPGet hook request. @ 03/23/25 13:04:52.429
  E0323 13:04:53.266879      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:54.267022      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 03/23/25 13:04:54.44
  E0323 13:04:55.267118      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:56.267255      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 03/23/25 13:04:56.447
  STEP: delete the pod with lifecycle hook @ 03/23/25 13:04:56.454
  E0323 13:04:57.267356      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:04:58.268065      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:04:58.462120 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4795" for this suite. @ 03/23/25 13:04:58.463
• [6.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 03/23/25 13:04:58.466
  I0323 13:04:58.466581 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename fake-node @ 03/23/25 13:04:58.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:04:58.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:04:58.473
  STEP: Create "e2e-fake-node-qqdc8" @ 03/23/25 13:04:58.474
  STEP: Getting "e2e-fake-node-qqdc8" @ 03/23/25 13:04:58.476
  STEP: Patching "e2e-fake-node-qqdc8" @ 03/23/25 13:04:58.478
  STEP: Listing nodes with LabelSelector "e2e-fake-node-qqdc8=patched" @ 03/23/25 13:04:58.481
  STEP: Updating "e2e-fake-node-qqdc8" @ 03/23/25 13:04:58.488
  STEP: Delete "e2e-fake-node-qqdc8" @ 03/23/25 13:04:58.509
  STEP: Confirm deletion of "e2e-fake-node-qqdc8" @ 03/23/25 13:04:58.511
  I0323 13:04:58.513307 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-9757" for this suite. @ 03/23/25 13:04:58.514
• [0.050 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:908
  STEP: Creating a kubernetes client @ 03/23/25 13:04:58.516
  I0323 13:04:58.516544 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename statefulset @ 03/23/25 13:04:58.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:04:58.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:04:58.526
  STEP: Creating service test in namespace statefulset-4034 @ 03/23/25 13:04:58.527
  STEP: Creating statefulset ss in namespace statefulset-4034 @ 03/23/25 13:04:58.529
  I0323 13:04:58.537277 23 wait.go:40] Found 0 stateful pods, waiting for 1
  E0323 13:04:59.268815      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:00.268915      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:01.269050      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:02.269150      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:03.269266      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:04.269435      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:05.269491      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:06.269645      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:07.269794      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:08.269846      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:05:08.536289 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 03/23/25 13:05:08.538
  STEP: updating a scale subresource @ 03/23/25 13:05:08.539
  STEP: verifying the statefulset Spec.Replicas was modified @ 03/23/25 13:05:08.541
  STEP: Patch a scale subresource @ 03/23/25 13:05:08.543
  STEP: verifying the statefulset Spec.Replicas was modified @ 03/23/25 13:05:08.548
  I0323 13:05:08.551408 23 statefulset.go:138] Deleting all statefulset in ns statefulset-4034
  I0323 13:05:08.553034 23 rest.go:152] Scaling statefulset ss to 0
  E0323 13:05:09.270359      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:10.270516      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:11.270659      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:12.270751      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:13.270799      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:14.270951      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:15.271096      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:16.271241      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:17.271396      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:18.271457      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:05:18.560970 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0323 13:05:18.562176 23 rest.go:90] Deleting statefulset ss
  I0323 13:05:18.567264 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4034" for this suite. @ 03/23/25 13:05:18.568
• [20.056 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 03/23/25 13:05:18.572
  I0323 13:05:18.572749 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename kubectl-logs @ 03/23/25 13:05:18.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:05:18.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:05:18.58
  STEP: creating a pod @ 03/23/25 13:05:18.581
  I0323 13:05:18.581942 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-logs-9670 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0323 13:05:18.626469 23 builder.go:146] stderr: ""
  I0323 13:05:18.626503 23 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 03/23/25 13:05:18.626
  I0323 13:05:18.626586 23 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0323 13:05:19.271772      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:20.272813      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:05:20.631029 23 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 03/23/25 13:05:20.631
  I0323 13:05:20.631106 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-logs-9670 logs logs-generator logs-generator'
  I0323 13:05:20.679956 23 builder.go:146] stderr: ""
  I0323 13:05:20.679994 23 builder.go:147] stdout: "I0323 13:05:19.118570       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/dq92 243\nI0323 13:05:19.318919       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/kube-system/pods/gbqd 286\nI0323 13:05:19.519202       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/v6mp 378\nI0323 13:05:19.719529       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/8x2n 358\nI0323 13:05:19.918647       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/6x8b 311\nI0323 13:05:20.118922       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/default/pods/g22d 376\nI0323 13:05:20.319219       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/vb6p 216\nI0323 13:05:20.519512       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/x6c 298\n"
  STEP: limiting log lines @ 03/23/25 13:05:20.68
  I0323 13:05:20.680064 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-logs-9670 logs logs-generator logs-generator --tail=1'
  I0323 13:05:20.723622 23 builder.go:146] stderr: ""
  I0323 13:05:20.723664 23 builder.go:147] stdout: "I0323 13:05:20.718746       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/2qz 533\n"
  I0323 13:05:20.723674 23 logs.go:180] got output "I0323 13:05:20.718746       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/2qz 533\n"
  STEP: limiting log bytes @ 03/23/25 13:05:20.723
  I0323 13:05:20.723779 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-logs-9670 logs logs-generator logs-generator --limit-bytes=1'
  I0323 13:05:20.766053 23 builder.go:146] stderr: ""
  I0323 13:05:20.766086 23 builder.go:147] stdout: "I"
  I0323 13:05:20.766094 23 logs.go:186] got output "I"
  STEP: exposing timestamps @ 03/23/25 13:05:20.766
  I0323 13:05:20.766167 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-logs-9670 logs logs-generator logs-generator --tail=1 --timestamps'
  I0323 13:05:20.809549 23 builder.go:146] stderr: ""
  I0323 13:05:20.809582 23 builder.go:147] stdout: "2025-03-23T21:05:20.718808018+08:00 I0323 13:05:20.718746       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/2qz 533\n"
  I0323 13:05:20.809594 23 logs.go:192] got output "2025-03-23T21:05:20.718808018+08:00 I0323 13:05:20.718746       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/2qz 533\n"
  STEP: restricting to a time range @ 03/23/25 13:05:20.809
  E0323 13:05:21.273885      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:22.274015      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:23.274077      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:05:23.310190 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-logs-9670 logs logs-generator logs-generator --since=1s'
  I0323 13:05:23.353758 23 builder.go:146] stderr: ""
  I0323 13:05:23.353794 23 builder.go:147] stdout: "I0323 13:05:22.519228       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/kwfs 244\nI0323 13:05:22.719513       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/w6j 296\nI0323 13:05:22.918737       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/m5fk 448\nI0323 13:05:23.119029       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/65c 427\nI0323 13:05:23.319315       1 logs_generator.go:76] 21 GET /api/v1/namespaces/ns/pods/qgkx 431\n"
  I0323 13:05:23.353834 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-logs-9670 logs logs-generator logs-generator --since=24h'
  I0323 13:05:23.396594 23 builder.go:146] stderr: ""
  I0323 13:05:23.396640 23 builder.go:147] stdout: "I0323 13:05:19.118570       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/dq92 243\nI0323 13:05:19.318919       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/kube-system/pods/gbqd 286\nI0323 13:05:19.519202       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/v6mp 378\nI0323 13:05:19.719529       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/8x2n 358\nI0323 13:05:19.918647       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/6x8b 311\nI0323 13:05:20.118922       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/default/pods/g22d 376\nI0323 13:05:20.319219       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/vb6p 216\nI0323 13:05:20.519512       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/x6c 298\nI0323 13:05:20.718746       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/2qz 533\nI0323 13:05:20.919034       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/default/pods/l48 480\nI0323 13:05:21.119323       1 logs_generator.go:76] 10 GET /api/v1/namespaces/kube-system/pods/2sd 458\nI0323 13:05:21.319609       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/ns/pods/mnf8 241\nI0323 13:05:21.518895       1 logs_generator.go:76] 12 GET /api/v1/namespaces/kube-system/pods/tcq 382\nI0323 13:05:21.719186       1 logs_generator.go:76] 13 GET /api/v1/namespaces/ns/pods/mhj 347\nI0323 13:05:21.919487       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/ns/pods/b2q 255\nI0323 13:05:22.118650       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/ns/pods/4d9c 454\nI0323 13:05:22.318936       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/ns/pods/j7m4 214\nI0323 13:05:22.519228       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/kwfs 244\nI0323 13:05:22.719513       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/w6j 296\nI0323 13:05:22.918737       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/m5fk 448\nI0323 13:05:23.119029       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/65c 427\nI0323 13:05:23.319315       1 logs_generator.go:76] 21 GET /api/v1/namespaces/ns/pods/qgkx 431\n"
  I0323 13:05:23.396727 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-logs-9670 delete pod logs-generator'
  I0323 13:05:23.798250 23 builder.go:146] stderr: ""
  I0323 13:05:23.798282 23 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0323 13:05:23.798456 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-9670" for this suite. @ 03/23/25 13:05:23.8
• [5.230 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 03/23/25 13:05:23.803
  I0323 13:05:23.803515 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename disruption @ 03/23/25 13:05:23.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:05:23.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:05:23.812
  STEP: Waiting for the pdb to be processed @ 03/23/25 13:05:23.817
  E0323 13:05:24.275045      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:25.275193      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 03/23/25 13:05:25.819
  STEP: Waiting for all pods to be running @ 03/23/25 13:05:25.823
  I0323 13:05:25.824992 23 disruption.go:691] running pods: 0 < 1
  E0323 13:05:26.275471      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:27.275616      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 03/23/25 13:05:27.825
  STEP: Waiting for the pdb to be processed @ 03/23/25 13:05:27.83
  STEP: Patching PodDisruptionBudget status @ 03/23/25 13:05:27.833
  STEP: Waiting for the pdb to be processed @ 03/23/25 13:05:27.836
  I0323 13:05:27.837690 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7732" for this suite. @ 03/23/25 13:05:27.84
• [4.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 03/23/25 13:05:27.842
  I0323 13:05:27.842764 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename emptydir @ 03/23/25 13:05:27.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:05:27.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:05:27.849
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 03/23/25 13:05:27.85
  E0323 13:05:28.275909      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:29.276004      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:30.276834      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:31.276976      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:05:31.861
  I0323 13:05:31.862240 23 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-23fa832d-e752-495c-b4ab-ed94b2336f80 container test-container: <nil>
  STEP: delete the pod @ 03/23/25 13:05:31.869
  I0323 13:05:31.876364 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-143" for this suite. @ 03/23/25 13:05:31.877
• [4.037 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 03/23/25 13:05:31.88
  I0323 13:05:31.880247 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename webhook @ 03/23/25 13:05:31.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:05:31.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:05:31.888
  STEP: Setting up server cert @ 03/23/25 13:05:31.901
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/23/25 13:05:32.098
  STEP: Deploying the webhook pod @ 03/23/25 13:05:32.101
  STEP: Wait for the deployment to be ready @ 03/23/25 13:05:32.108
  I0323 13:05:32.110534 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0323 13:05:32.277835      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:33.278379      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/23/25 13:05:34.115
  STEP: Verifying the service has paired with the endpoint @ 03/23/25 13:05:34.12
  E0323 13:05:34.278899      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:05:35.120681 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 03/23/25 13:05:35.153
  E0323 13:05:35.279349      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 03/23/25 13:05:36.201
  STEP: Deleting the collection of validation webhooks @ 03/23/25 13:05:36.222
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 03/23/25 13:05:36.239
  I0323 13:05:36.261467 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4744" for this suite. @ 03/23/25 13:05:36.263
  STEP: Destroying namespace "webhook-markers-6235" for this suite. @ 03/23/25 13:05:36.269
• [4.392 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 03/23/25 13:05:36.273
  I0323 13:05:36.273185 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 03/23/25 13:05:36.274
  E0323 13:05:36.280115      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:05:36.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:05:36.284
  STEP: creating a target pod @ 03/23/25 13:05:36.286
  E0323 13:05:37.280254      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:38.280324      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 03/23/25 13:05:38.294
  E0323 13:05:39.280395      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:40.280824      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 03/23/25 13:05:40.302
  I0323 13:05:40.302841 23 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-3444 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0323 13:05:40.302858 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0323 13:05:40.302896 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/ephemeral-containers-test-3444/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0323 13:05:40.334111 23 exec_util.go:108] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 03/23/25 13:05:40.344
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 03/23/25 13:05:40.346
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 03/23/25 13:05:40.351
  I0323 13:05:40.353376 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-3444" for this suite. @ 03/23/25 13:05:40.354
• [4.086 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 03/23/25 13:05:40.358
  I0323 13:05:40.358818 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename taint-single-pod @ 03/23/25 13:05:40.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:05:40.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:05:40.366
  I0323 13:05:40.369931 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0323 13:05:41.281855      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:42.281886      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:43.282485      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:44.283050      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:45.284085      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:46.284837      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:47.285247      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:48.285326      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:49.285933      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:50.286004      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:51.286554      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:52.286716      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:53.287318      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:54.287491      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:55.287761      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:56.288816      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:57.288922      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:58.289389      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:05:59.290097      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:00.290238      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:01.290981      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:02.291142      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:03.291733      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:04.291781      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:05.292793      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:06.293761      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:07.293852      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:08.294356      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:09.294768      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:10.294917      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:11.295012      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:12.295145      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:13.295738      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:14.295785      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:15.295974      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:16.296833      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:17.297328      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:18.297372      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:19.297684      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:20.297813      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:21.298367      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:22.298430      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:23.299044      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:24.300067      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:25.300823      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:26.300956      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:27.301224      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:28.301274      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:29.301639      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:30.301798      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:31.301891      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:32.302025      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:33.302615      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:34.303505      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:35.303769      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:36.304816      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:37.305115      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:38.305242      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:39.305326      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:40.305462      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:06:40.370633 23 util.go:396] Waiting for terminating namespaces to be deleted...
  I0323 13:06:40.372396 23 taints.go:144] Starting informer...
  STEP: Starting pod... @ 03/23/25 13:06:40.372
  I0323 13:06:40.580295 23 taints.go:294] Pod is running on k8s-10-255-0-207. Tainting Node
  STEP: Trying to apply a taint on the Node @ 03/23/25 13:06:40.58
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 03/23/25 13:06:40.586
  STEP: Waiting short time to make sure Pod is queued for deletion @ 03/23/25 13:06:40.588
  I0323 13:06:40.588416 23 taints.go:313] Pod wasn't evicted. Proceeding
  I0323 13:06:40.588427 23 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 03/23/25 13:06:40.594
  STEP: Waiting some time to make sure that toleration time passed. @ 03/23/25 13:06:40.597
  E0323 13:06:41.305514      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:42.305579      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:43.305655      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:44.305818      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:45.305959      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:46.306057      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:47.306203      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:48.306277      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:49.306356      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:50.306505      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:51.306587      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:52.306650      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:53.307407      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:54.307543      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:55.307626      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:56.307754      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:57.307835      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:58.307901      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:06:59.307988      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:00.308815      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:01.308950      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:02.309081      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:03.309331      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:04.309481      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:05.310023      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:06.310164      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:07.310240      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:08.310309      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:09.310444      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:10.310579      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:11.310969      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:12.311061      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:13.311122      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:14.311260      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:15.311398      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:16.311532      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:17.311678      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:18.311746      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:19.311882      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:20.312812      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:21.313609      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:22.313693      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:23.313756      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:24.313891      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:25.314029      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:26.314164      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:27.314297      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:28.314365      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:29.314500      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:30.315387      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:31.315512      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:32.315659      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:33.315720      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:34.315771      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:35.316813      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:36.316940      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:37.317072      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:38.317154      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:39.317291      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:40.318193      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:41.318211      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:42.318352      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:43.318424      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:44.318576      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:45.318713      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:46.318864      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:47.319007      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:48.319247      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:49.319417      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:50.319559      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:51.319697      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:52.319755      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:53.320812      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:54.320949      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:55.321074      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:07:55.597317 23 taints.go:329] Pod wasn't evicted. Test successful
  I0323 13:07:55.597462 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-4803" for this suite. @ 03/23/25 13:07:55.599
• [135.243 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194
  STEP: Creating a kubernetes client @ 03/23/25 13:07:55.602
  I0323 13:07:55.602062 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename downward-api @ 03/23/25 13:07:55.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:07:55.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:07:55.611
  STEP: Creating a pod to test downward api env vars @ 03/23/25 13:07:55.613
  E0323 13:07:56.321180      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:57.321316      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:58.322360      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:07:59.322493      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:07:59.622
  I0323 13:07:59.624027 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod downward-api-a71167f7-9baa-4458-8bc2-7edfb0aa6e17 container dapi-container: <nil>
  STEP: delete the pod @ 03/23/25 13:07:59.635
  I0323 13:07:59.642464 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9765" for this suite. @ 03/23/25 13:07:59.643
• [4.044 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 03/23/25 13:07:59.646
  I0323 13:07:59.646216 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename validating-admission-policy @ 03/23/25 13:07:59.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:07:59.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:07:59.653
  STEP: creating the policy @ 03/23/25 13:07:59.657
  STEP: waiting until the marker is denied @ 03/23/25 13:07:59.663
  STEP: testing a replicated Deployment to be allowed @ 03/23/25 13:08:00.167
  STEP: testing a non-replicated ReplicaSet not to be denied @ 03/23/25 13:08:00.172
  I0323 13:08:00.199216 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-2063" for this suite. @ 03/23/25 13:08:00.204
• [0.561 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 03/23/25 13:08:00.208
  I0323 13:08:00.208165 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename configmap @ 03/23/25 13:08:00.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:08:00.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:08:00.215
  STEP: Creating configMap with name configmap-test-upd-6af40ab6-0858-43e9-8d2d-ee380827a6d5 @ 03/23/25 13:08:00.304
  STEP: Creating the pod @ 03/23/25 13:08:00.307
  E0323 13:08:00.323390      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:01.323518      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 03/23/25 13:08:02.315
  STEP: Waiting for pod with binary data @ 03/23/25 13:08:02.323
  E0323 13:08:02.323864      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:08:02.328709 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5616" for this suite. @ 03/23/25 13:08:02.33
• [2.124 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 03/23/25 13:08:02.332
  I0323 13:08:02.332509 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename configmap @ 03/23/25 13:08:02.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:08:02.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:08:02.34
  STEP: Creating configMap with name configmap-test-volume-a48223f3-9cd9-4e4c-bcd5-5151fedff0dd @ 03/23/25 13:08:02.342
  STEP: Creating a pod to test consume configMaps @ 03/23/25 13:08:02.344
  E0323 13:08:03.323969      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:04.324818      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:08:04.353
  I0323 13:08:04.355051 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-configmaps-f680ad8e-782d-45b5-aad5-0aa17372da3f container agnhost-container: <nil>
  STEP: delete the pod @ 03/23/25 13:08:04.357
  I0323 13:08:04.365021 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1004" for this suite. @ 03/23/25 13:08:04.366
• [2.037 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 03/23/25 13:08:04.369
  I0323 13:08:04.369229 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename configmap @ 03/23/25 13:08:04.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:08:04.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:08:04.375
  STEP: Creating configMap with name configmap-test-volume-map-d0c26833-2c65-4a9f-9a4b-c786b64f7240 @ 03/23/25 13:08:04.377
  STEP: Creating a pod to test consume configMaps @ 03/23/25 13:08:04.379
  E0323 13:08:05.325529      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:06.325615      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:08:06.386
  I0323 13:08:06.388003 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-configmaps-ffff7646-8338-4b6e-9126-f0f7982e8b62 container agnhost-container: <nil>
  STEP: delete the pod @ 03/23/25 13:08:06.39
  I0323 13:08:06.397545 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9490" for this suite. @ 03/23/25 13:08:06.399
• [2.032 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 03/23/25 13:08:06.401
  I0323 13:08:06.401431 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename limitrange @ 03/23/25 13:08:06.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:08:06.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:08:06.409
  STEP: Creating LimitRange "e2e-limitrange-vq59r" in namespace "limitrange-377" @ 03/23/25 13:08:06.411
  STEP: Creating another limitRange in another namespace @ 03/23/25 13:08:06.414
  I0323 13:08:06.418864 23 limit_range.go:299] Namespace "e2e-limitrange-vq59r-6084" created
  I0323 13:08:06.418879 23 limit_range.go:300] Creating LimitRange "e2e-limitrange-vq59r" in namespace "e2e-limitrange-vq59r-6084"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-vq59r" @ 03/23/25 13:08:06.42
  I0323 13:08:06.422190 23 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-vq59r" in "limitrange-377" namespace @ 03/23/25 13:08:06.422
  I0323 13:08:06.425831 23 limit_range.go:335] LimitRange "e2e-limitrange-vq59r" has been patched
  STEP: Delete LimitRange "e2e-limitrange-vq59r" by Collection with labelSelector: "e2e-limitrange-vq59r=patched" @ 03/23/25 13:08:06.425
  STEP: Confirm that the limitRange "e2e-limitrange-vq59r" has been deleted @ 03/23/25 13:08:06.428
  I0323 13:08:06.428342 23 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0323 13:08:06.429285 23 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-vq59r=patched"
  I0323 13:08:06.429302 23 limit_range.go:344] LimitRange "e2e-limitrange-vq59r" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-vq59r" @ 03/23/25 13:08:06.429
  I0323 13:08:06.430270 23 limit_range.go:350] Found 1 limitRange
  I0323 13:08:06.430343 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-377" for this suite. @ 03/23/25 13:08:06.499
  STEP: Destroying namespace "e2e-limitrange-vq59r-6084" for this suite. @ 03/23/25 13:08:06.503
• [0.104 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 03/23/25 13:08:06.505
  I0323 13:08:06.505441 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename projected @ 03/23/25 13:08:06.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:08:06.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:08:06.524
  STEP: Creating configMap with name projected-configmap-test-volume-c10e8ec2-54a7-443e-b212-c0aba8f33bec @ 03/23/25 13:08:06.525
  STEP: Creating a pod to test consume configMaps @ 03/23/25 13:08:06.527
  E0323 13:08:07.325717      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:08.326400      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:09.327013      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:10.327147      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:08:10.536
  I0323 13:08:10.538027 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-projected-configmaps-58593e91-6247-4396-b198-c400fa007a95 container agnhost-container: <nil>
  STEP: delete the pod @ 03/23/25 13:08:10.54
  I0323 13:08:10.547380 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4072" for this suite. @ 03/23/25 13:08:10.548
• [4.046 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 03/23/25 13:08:10.551
  I0323 13:08:10.551057 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename csinodes @ 03/23/25 13:08:10.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:08:10.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:08:10.559
  STEP: Creating initial csiNode "e2e-csinode-v7b8w" @ 03/23/25 13:08:10.56
  STEP: Getting initial csiNode "e2e-csinode-v7b8w" @ 03/23/25 13:08:10.562
  STEP: Patching initial csiNode: "e2e-csinode-v7b8w" @ 03/23/25 13:08:10.563
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-v7b8w=patched" @ 03/23/25 13:08:10.565
  STEP: Delete initial csiNode: "e2e-csinode-v7b8w" @ 03/23/25 13:08:10.566
  STEP: Confirm deletion of csiNode "e2e-csinode-v7b8w" @ 03/23/25 13:08:10.568
  STEP: Creating replacement csiNode "e2e-csinode-ksxxm" @ 03/23/25 13:08:10.569
  STEP: Getting replacement csiNode "e2e-csinode-ksxxm" @ 03/23/25 13:08:10.572
  STEP: Updating replacement csiNode "e2e-csinode-ksxxm" @ 03/23/25 13:08:10.573
  STEP: DeleteCollection of CSINodes with "e2e-csinode-ksxxm=updated" label @ 03/23/25 13:08:10.575
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-ksxxm=updated" @ 03/23/25 13:08:10.577
  I0323 13:08:10.587826 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-838" for this suite. @ 03/23/25 13:08:10.65
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:208
  STEP: Creating a kubernetes client @ 03/23/25 13:08:10.655
  I0323 13:08:10.655107 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename dns @ 03/23/25 13:08:10.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:08:10.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:08:10.663
  STEP: Creating a test headless service @ 03/23/25 13:08:10.664
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9987 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-9987;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9987 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-9987;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9987.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-9987.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9987.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-9987.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9987.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-9987.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9987.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-9987.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9987.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-9987.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9987.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-9987.svc;check="$$(dig +notcp +noall +answer +search 218.117.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.117.218_udp@PTR;check="$$(dig +tcp +noall +answer +search 218.117.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.117.218_tcp@PTR;sleep 1; done
   @ 03/23/25 13:08:10.674
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9987 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9987;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9987 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9987;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9987.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9987.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9987.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9987.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9987.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9987.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9987.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9987.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9987.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9987.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9987.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9987.svc;check="$$(dig +notcp +noall +answer +search 218.117.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.117.218_udp@PTR;check="$$(dig +tcp +noall +answer +search 218.117.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.117.218_tcp@PTR;sleep 1; done
   @ 03/23/25 13:08:10.674
  STEP: creating a pod to probe DNS @ 03/23/25 13:08:10.674
  STEP: submitting the pod to kubernetes @ 03/23/25 13:08:10.674
  E0323 13:08:11.328191      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:12.328828      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 03/23/25 13:08:12.685
  STEP: looking for the results for each expected name from probers @ 03/23/25 13:08:12.686
  I0323 13:08:12.694957 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:12.704977 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:12.706259 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9987 from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:12.716254 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9987 from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:12.726244 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:12.736252 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:12.737505 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:12.747516 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:12.797525 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:12.807554 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:12.817536 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9987 from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:12.827534 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9987 from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:12.837557 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:12.847582 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:12.857594 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:12.867582 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:12.898943 23 dns_common.go:506] Lookups using dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-9987 agnhost_tcp@dns-test-service.dns-9987 agnhost_udp@dns-test-service.dns-9987.svc agnhost_tcp@dns-test-service.dns-9987.svc agnhost_udp@_http._tcp.dns-test-service.dns-9987.svc agnhost_tcp@_http._tcp.dns-test-service.dns-9987.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9987 jessie_tcp@dns-test-service.dns-9987 jessie_udp@dns-test-service.dns-9987.svc jessie_tcp@dns-test-service.dns-9987.svc jessie_udp@_http._tcp.dns-test-service.dns-9987.svc jessie_tcp@_http._tcp.dns-test-service.dns-9987.svc]

  I0323 13:08:12.901531 23 dns_common.go:514] Pod client logs for webserver: 
  I0323 13:08:12.910839 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0323 13:08:12.920359 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0323 13:08:13.328967      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:14.329102      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:15.329247      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:16.329400      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:17.329545      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:08:17.689226 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:17.699137 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:17.709112 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9987 from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:17.719121 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9987 from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:17.720442 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:17.730426 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:17.731623 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:17.739118 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:17.789141 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:17.799136 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:17.809163 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9987 from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:17.819139 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9987 from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:17.829139 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:17.830399 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:17.840400 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:17.850387 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:17.879207 23 dns_common.go:506] Lookups using dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-9987 agnhost_tcp@dns-test-service.dns-9987 agnhost_udp@dns-test-service.dns-9987.svc agnhost_tcp@dns-test-service.dns-9987.svc agnhost_udp@_http._tcp.dns-test-service.dns-9987.svc agnhost_tcp@_http._tcp.dns-test-service.dns-9987.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9987 jessie_tcp@dns-test-service.dns-9987 jessie_udp@dns-test-service.dns-9987.svc jessie_tcp@dns-test-service.dns-9987.svc jessie_udp@_http._tcp.dns-test-service.dns-9987.svc jessie_tcp@_http._tcp.dns-test-service.dns-9987.svc]

  I0323 13:08:17.889204 23 dns_common.go:514] Pod client logs for webserver: 
  I0323 13:08:17.899164 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0323 13:08:17.902427 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0323 13:08:18.330109      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:19.330261      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:20.330399      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:21.330550      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:22.330703      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:08:22.699028 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:22.700586 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:22.710286 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9987 from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:22.720611 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9987 from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:22.730606 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:22.740572 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:22.741826 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:22.743022 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:22.793039 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:22.803054 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:22.804239 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9987 from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:22.814253 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9987 from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:22.824273 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:22.834262 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:22.844289 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:22.854297 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:22.875517 23 dns_common.go:506] Lookups using dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-9987 agnhost_tcp@dns-test-service.dns-9987 agnhost_udp@dns-test-service.dns-9987.svc agnhost_tcp@dns-test-service.dns-9987.svc agnhost_udp@_http._tcp.dns-test-service.dns-9987.svc agnhost_tcp@_http._tcp.dns-test-service.dns-9987.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9987 jessie_tcp@dns-test-service.dns-9987 jessie_udp@dns-test-service.dns-9987.svc jessie_tcp@dns-test-service.dns-9987.svc jessie_udp@_http._tcp.dns-test-service.dns-9987.svc jessie_tcp@_http._tcp.dns-test-service.dns-9987.svc]

  I0323 13:08:22.878483 23 dns_common.go:514] Pod client logs for webserver: 
  I0323 13:08:22.887482 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0323 13:08:22.897501 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0323 13:08:23.331188      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:24.331325      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:25.331474      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:26.331625      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:27.331772      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:08:27.689537 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:27.699476 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:27.709461 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9987 from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:27.710972 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9987 from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:27.719437 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:27.729472 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:27.739495 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:27.749476 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:27.790805 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:27.800825 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:27.811864 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9987 from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:27.821881 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9987 from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:27.831874 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:27.833173 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:27.843157 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:27.851827 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:27.874155 23 dns_common.go:506] Lookups using dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-9987 agnhost_tcp@dns-test-service.dns-9987 agnhost_udp@dns-test-service.dns-9987.svc agnhost_tcp@dns-test-service.dns-9987.svc agnhost_udp@_http._tcp.dns-test-service.dns-9987.svc agnhost_tcp@_http._tcp.dns-test-service.dns-9987.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9987 jessie_tcp@dns-test-service.dns-9987 jessie_udp@dns-test-service.dns-9987.svc jessie_tcp@dns-test-service.dns-9987.svc jessie_udp@_http._tcp.dns-test-service.dns-9987.svc jessie_tcp@_http._tcp.dns-test-service.dns-9987.svc]

  I0323 13:08:27.881830 23 dns_common.go:514] Pod client logs for webserver: 
  I0323 13:08:27.884292 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0323 13:08:27.894165 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0323 13:08:28.332813      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:29.332958      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:30.333446      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:31.333598      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:32.334048      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:08:32.699126 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:32.700744 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:32.710734 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9987 from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:32.720716 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9987 from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:32.730716 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:32.740734 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:32.750719 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:32.751946 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:32.782996 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:32.791845 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:32.803011 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9987 from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:32.811853 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9987 from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:32.821858 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:32.831878 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:32.841877 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:32.843121 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:32.863108 23 dns_common.go:506] Lookups using dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-9987 agnhost_tcp@dns-test-service.dns-9987 agnhost_udp@dns-test-service.dns-9987.svc agnhost_tcp@dns-test-service.dns-9987.svc agnhost_udp@_http._tcp.dns-test-service.dns-9987.svc agnhost_tcp@_http._tcp.dns-test-service.dns-9987.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9987 jessie_tcp@dns-test-service.dns-9987 jessie_udp@dns-test-service.dns-9987.svc jessie_tcp@dns-test-service.dns-9987.svc jessie_udp@_http._tcp.dns-test-service.dns-9987.svc jessie_tcp@_http._tcp.dns-test-service.dns-9987.svc]

  I0323 13:08:32.865610 23 dns_common.go:514] Pod client logs for webserver: 
  I0323 13:08:32.875675 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0323 13:08:32.885656 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0323 13:08:33.334352      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:34.334493      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:35.334597      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:36.334730      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:37.334824      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:08:37.699218 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:37.700968 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:37.710966 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9987 from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:37.720964 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9987 from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:37.730964 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:37.740979 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:37.750988 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:37.760993 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:37.793384 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:37.803389 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:37.804641 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9987 from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:37.813354 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9987 from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:37.823367 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:37.824578 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:37.834594 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:37.843838 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9987.svc from pod dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97: the server could not find the requested resource (get pods dns-test-80d9d291-153f-4399-b94b-1406f9669d97)
  I0323 13:08:37.874618 23 dns_common.go:506] Lookups using dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-9987 agnhost_tcp@dns-test-service.dns-9987 agnhost_udp@dns-test-service.dns-9987.svc agnhost_tcp@dns-test-service.dns-9987.svc agnhost_udp@_http._tcp.dns-test-service.dns-9987.svc agnhost_tcp@_http._tcp.dns-test-service.dns-9987.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9987 jessie_tcp@dns-test-service.dns-9987 jessie_udp@dns-test-service.dns-9987.svc jessie_tcp@dns-test-service.dns-9987.svc jessie_udp@_http._tcp.dns-test-service.dns-9987.svc jessie_tcp@_http._tcp.dns-test-service.dns-9987.svc]

  I0323 13:08:37.877154 23 dns_common.go:514] Pod client logs for webserver: 
  I0323 13:08:37.887234 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0323 13:08:37.897203 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0323 13:08:38.335895      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:39.336840      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:40.337002      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:41.337074      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:42.337216      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:08:42.890935 23 dns_common.go:546] DNS probes using dns-9987/dns-test-80d9d291-153f-4399-b94b-1406f9669d97 succeeded

  STEP: deleting the pod @ 03/23/25 13:08:42.891
  STEP: deleting the test service @ 03/23/25 13:08:42.898
  STEP: deleting the test headless service @ 03/23/25 13:08:42.91
  I0323 13:08:42.914549 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9987" for this suite. @ 03/23/25 13:08:42.916
• [32.265 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:746
  STEP: Creating a kubernetes client @ 03/23/25 13:08:42.919
  I0323 13:08:42.919987 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename sched-preemption @ 03/23/25 13:08:42.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:08:42.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:08:42.929
  I0323 13:08:42.937010 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0323 13:08:43.337724      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:44.337880      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:45.337983      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:46.338127      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:47.339090      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:48.339191      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:49.339817      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:50.340835      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:51.341390      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:52.341522      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:53.342018      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:54.342164      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:55.342843      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:56.343744      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:57.344827      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:58.344886      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:08:59.345637      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:00.345711      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:01.346157      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:02.346312      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:03.346886      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:04.347029      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:05.347602      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:06.347772      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:07.348095      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:08.348148      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:09.348824      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:10.348897      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:11.349027      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:12.349114      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:13.349447      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:14.349597      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:15.350136      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:16.350264      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:17.350819      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:18.350874      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:19.351581      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:20.351663      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:21.351780      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:22.352813      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:23.353352      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:24.353493      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:25.353601      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:26.354362      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:27.354933      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:28.354999      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:29.355339      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:30.355472      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:31.356211      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:32.356284      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:33.356829      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:34.356972      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:35.357533      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:36.357668      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:37.357718      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:38.357769      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:39.358738      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:40.358812      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:41.359347      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:42.359417      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:09:42.940195 23 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 03/23/25 13:09:42.941
  I0323 13:09:42.941690 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename sched-preemption-path @ 03/23/25 13:09:42.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:09:42.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:09:42.951
  STEP: Finding an available node @ 03/23/25 13:09:42.953
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 03/23/25 13:09:42.953
  E0323 13:09:43.359763      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:44.360828      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 03/23/25 13:09:44.962
  I0323 13:09:44.966905 23 preemption.go:709] found a healthy node: k8s-10-255-0-207
  STEP: Adding a custom resource @ 03/23/25 13:09:44.968
  E0323 13:09:45.360915      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:46.361612      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:47.361889      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:48.362162      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:49.362257      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:50.362629      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:09:50.995986 23 preemption.go:828] pods created so far: [1 1 1]
  I0323 13:09:50.996010 23 preemption.go:829] length of pods created so far: 3
  E0323 13:09:51.362784      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:52.363765      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:53.364407      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:54.364825      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:09:55.001249 23 preemption.go:846] pods created so far: [2 2 1]
  E0323 13:09:55.365635      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:56.365772      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:57.365870      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:58.365924      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:09:59.366068      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:00.366201      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:01.366342      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 03/23/25 13:10:02.002
  STEP: Removing a custom resource @ 03/23/25 13:10:02.023
  STEP: Removing a custom resource @ 03/23/25 13:10:02.027
  STEP: Removing a custom resource @ 03/23/25 13:10:02.03
  I0323 13:10:02.034296 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-8616" for this suite. @ 03/23/25 13:10:02.035
  I0323 13:10:02.038654 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8727" for this suite. @ 03/23/25 13:10:02.136
• [79.220 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 03/23/25 13:10:02.139
  I0323 13:10:02.139782 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename watch @ 03/23/25 13:10:02.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:10:02.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:10:02.148
  STEP: getting a starting resourceVersion @ 03/23/25 13:10:02.149
  STEP: starting a background goroutine to produce watch events @ 03/23/25 13:10:02.15
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 03/23/25 13:10:02.15
  E0323 13:10:02.367029      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:03.367519      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:04.368578      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:10:04.943972 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1496" for this suite. @ 03/23/25 13:10:04.993
• [2.905 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 03/23/25 13:10:05.044
  I0323 13:10:05.044590 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename webhook @ 03/23/25 13:10:05.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:10:05.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:10:05.052
  STEP: Setting up server cert @ 03/23/25 13:10:05.062
  E0323 13:10:05.368643      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/23/25 13:10:05.623
  STEP: Deploying the webhook pod @ 03/23/25 13:10:05.627
  STEP: Wait for the deployment to be ready @ 03/23/25 13:10:05.633
  I0323 13:10:05.636518 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0323 13:10:06.369350      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:07.369486      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/23/25 13:10:07.64
  STEP: Verifying the service has paired with the endpoint @ 03/23/25 13:10:07.644
  E0323 13:10:08.369713      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:10:08.644940 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 03/23/25 13:10:08.648
  STEP: Registering slow webhook via the AdmissionRegistration API @ 03/23/25 13:10:08.648
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 03/23/25 13:10:08.656
  E0323 13:10:09.369810      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 03/23/25 13:10:09.661
  STEP: Registering slow webhook via the AdmissionRegistration API @ 03/23/25 13:10:09.661
  E0323 13:10:10.370064      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 03/23/25 13:10:10.676
  STEP: Registering slow webhook via the AdmissionRegistration API @ 03/23/25 13:10:10.676
  E0323 13:10:11.370906      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:12.371043      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:13.371464      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:14.371619      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:15.371802      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 03/23/25 13:10:15.691
  STEP: Registering slow webhook via the AdmissionRegistration API @ 03/23/25 13:10:15.691
  E0323 13:10:16.372829      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:17.372922      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:18.372969      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:19.373122      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:20.373198      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:10:20.728916 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3749" for this suite. @ 03/23/25 13:10:20.732
  STEP: Destroying namespace "webhook-markers-9536" for this suite. @ 03/23/25 13:10:20.735
• [15.693 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 03/23/25 13:10:20.737
  I0323 13:10:20.737958 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename kubectl @ 03/23/25 13:10:20.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:10:20.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:10:20.749
  STEP: creating all guestbook components @ 03/23/25 13:10:20.752
  I0323 13:10:20.752404 23 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0323 13:10:20.752490 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-2961 create -f -'
  I0323 13:10:20.861686 23 builder.go:146] stderr: ""
  I0323 13:10:20.861718 23 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0323 13:10:20.861751 23 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0323 13:10:20.861796 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-2961 create -f -'
  I0323 13:10:20.970390 23 builder.go:146] stderr: ""
  I0323 13:10:20.970421 23 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0323 13:10:20.970455 23 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0323 13:10:20.970520 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-2961 create -f -'
  I0323 13:10:21.061739 23 builder.go:146] stderr: ""
  I0323 13:10:21.061777 23 builder.go:147] stdout: "service/frontend created\n"
  I0323 13:10:21.061910 23 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0323 13:10:21.061986 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-2961 create -f -'
  I0323 13:10:21.128622 23 builder.go:146] stderr: ""
  I0323 13:10:21.128660 23 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0323 13:10:21.128861 23 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0323 13:10:21.128956 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-2961 create -f -'
  I0323 13:10:21.193821 23 builder.go:146] stderr: ""
  I0323 13:10:21.193851 23 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0323 13:10:21.194037 23 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0323 13:10:21.194128 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-2961 create -f -'
  I0323 13:10:21.255613 23 builder.go:146] stderr: ""
  I0323 13:10:21.255644 23 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 03/23/25 13:10:21.255
  I0323 13:10:21.255689 23 kubectl.go:2279] Waiting for all frontend pods to be Running.
  E0323 13:10:21.373861      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:22.374855      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:23.374906      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:24.375052      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:25.375195      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:10:26.307080 23 kubectl.go:2283] Waiting for frontend to serve content.
  I0323 13:10:26.311809 23 kubectl.go:2288] Trying to add a new entry to the guestbook.
  I0323 13:10:26.317411 23 kubectl.go:2293] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 03/23/25 13:10:26.329
  I0323 13:10:26.329701 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-2961 delete --grace-period=0 --force -f -'
  E0323 13:10:26.376096      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:10:26.379244 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0323 13:10:26.379281 23 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 03/23/25 13:10:26.379
  I0323 13:10:26.379381 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-2961 delete --grace-period=0 --force -f -'
  I0323 13:10:26.429121 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0323 13:10:26.429158 23 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 03/23/25 13:10:26.429
  I0323 13:10:26.429294 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-2961 delete --grace-period=0 --force -f -'
  I0323 13:10:26.477612 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0323 13:10:26.477649 23 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 03/23/25 13:10:26.477
  I0323 13:10:26.477784 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-2961 delete --grace-period=0 --force -f -'
  I0323 13:10:26.531412 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0323 13:10:26.531440 23 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 03/23/25 13:10:26.531
  I0323 13:10:26.531572 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-2961 delete --grace-period=0 --force -f -'
  I0323 13:10:26.589089 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0323 13:10:26.589136 23 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 03/23/25 13:10:26.589
  I0323 13:10:26.589238 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-2961 delete --grace-period=0 --force -f -'
  I0323 13:10:26.643462 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0323 13:10:26.643493 23 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0323 13:10:26.643635 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2961" for this suite. @ 03/23/25 13:10:26.645
• [5.911 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:560
  STEP: Creating a kubernetes client @ 03/23/25 13:10:26.649
  I0323 13:10:26.649708 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename svcaccounts @ 03/23/25 13:10:26.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:10:26.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:10:26.661
  I0323 13:10:26.674807 23 service_accounts.go:647] created pod
  E0323 13:10:27.376212      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:28.376312      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:10:28.687
  E0323 13:10:29.376828      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:30.376961      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:31.377060      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:32.377196      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:33.377336      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:34.377418      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:35.377892      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:36.377961      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:37.378122      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:38.378235      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:39.378317      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:40.378388      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:41.378492      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:42.378620      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:43.378730      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:44.378862      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:45.379022      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:46.379079      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:47.379161      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:48.379244      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:49.379379      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:50.379510      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:51.379640      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:52.379774      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:53.380817      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:54.380951      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:55.381080      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:56.381206      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:57.381341      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:10:58.381410      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:10:58.687690 23 service_accounts.go:653] polling logs
  I0323 13:10:58.696438 23 service_accounts.go:663] Pod logs: 
  I0323 13:10:27.173160       1 log.go:245] OK: Got token
  I0323 13:10:27.173208       1 log.go:245] validating with in-cluster discovery
  I0323 13:10:27.173384       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0323 13:10:27.173403       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-1615:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00051f648), NotBefore:(*jwt.NumericDate)(0xc00051f730), IssuedAt:(*jwt.NumericDate)(0xc00051f658), ID:"1d200fcc-8ddb-42db-9f17-65185bc738e4"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-1615", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"c4be24d4-9d24-443d-8610-d4ee24ac1b54"}}}
  I0323 13:10:27.178368       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0323 13:10:27.182155       1 log.go:245] OK: Validated signature on JWT
  I0323 13:10:27.182231       1 log.go:245] OK: Got valid claims from token!
  I0323 13:10:27.182256       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-1615:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00051e5d8), NotBefore:(*jwt.NumericDate)(0xc00051e600), IssuedAt:(*jwt.NumericDate)(0xc00051e5e0), ID:"1d200fcc-8ddb-42db-9f17-65185bc738e4"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-1615", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"c4be24d4-9d24-443d-8610-d4ee24ac1b54"}}}

  I0323 13:10:58.696480 23 service_accounts.go:667] completed pod
  I0323 13:10:58.698831 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1615" for this suite. @ 03/23/25 13:10:58.7
• [32.053 seconds]
------------------------------
S
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3164
  STEP: Creating a kubernetes client @ 03/23/25 13:10:58.702
  I0323 13:10:58.702990 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename services @ 03/23/25 13:10:58.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:10:58.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:10:58.71
  STEP: fetching services @ 03/23/25 13:10:58.712
  I0323 13:10:58.713935 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7394" for this suite. @ 03/23/25 13:10:58.801
• [0.101 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 03/23/25 13:10:58.804
  I0323 13:10:58.804576 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename gc @ 03/23/25 13:10:58.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:10:58.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:10:58.812
  STEP: create the rc1 @ 03/23/25 13:10:58.902
  STEP: create the rc2 @ 03/23/25 13:10:58.904
  E0323 13:10:59.381947      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:00.382124      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:01.382607      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:02.383135      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:03.383274      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:04.383834      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 03/23/25 13:11:04.91
  STEP: delete the rc simpletest-rc-to-be-deleted @ 03/23/25 13:11:05.203
  STEP: wait for the rc to be deleted @ 03/23/25 13:11:05.209
  E0323 13:11:05.384829      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:06.384992      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:07.385764      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:08.385801      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:09.385898      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:11:10.215174 23 garbage_collector.go:762] 70 pods remaining
  I0323 13:11:10.215199 23 garbage_collector.go:769] 70 pods has nil DeletionTimestamp
  I0323 13:11:10.215205 23 garbage_collector.go:770] 
  E0323 13:11:10.386203      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:11.386231      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:12.386312      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:13.386382      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:14.386514      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 03/23/25 13:11:15.215
  W0323 13:11:15.216995      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0323 13:11:15.217018 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0323 13:11:15.217074 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-25zpj" in namespace "gc-7268"
  I0323 13:11:15.222676 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2bm82" in namespace "gc-7268"
  I0323 13:11:15.228700 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2chpm" in namespace "gc-7268"
  I0323 13:11:15.233339 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2mr68" in namespace "gc-7268"
  I0323 13:11:15.238225 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2wbnt" in namespace "gc-7268"
  I0323 13:11:15.243792 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-46rwg" in namespace "gc-7268"
  I0323 13:11:15.250022 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4hghw" in namespace "gc-7268"
  I0323 13:11:15.261726 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4txs6" in namespace "gc-7268"
  I0323 13:11:15.267228 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4wxzm" in namespace "gc-7268"
  I0323 13:11:15.274397 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4xcqs" in namespace "gc-7268"
  I0323 13:11:15.281858 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-55sr8" in namespace "gc-7268"
  I0323 13:11:15.288735 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-56sw2" in namespace "gc-7268"
  I0323 13:11:15.294586 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-58mvf" in namespace "gc-7268"
  I0323 13:11:15.300362 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5g9ft" in namespace "gc-7268"
  I0323 13:11:15.313073 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5lbwf" in namespace "gc-7268"
  I0323 13:11:15.320666 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5qrg2" in namespace "gc-7268"
  I0323 13:11:15.330995 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5s4q7" in namespace "gc-7268"
  I0323 13:11:15.353808 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5vhnr" in namespace "gc-7268"
  I0323 13:11:15.360089 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6cfqs" in namespace "gc-7268"
  I0323 13:11:15.366313 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6kvz2" in namespace "gc-7268"
  I0323 13:11:15.374077 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6pzll" in namespace "gc-7268"
  I0323 13:11:15.384231 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7hkjg" in namespace "gc-7268"
  E0323 13:11:15.387327      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:11:15.397393 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7kj8q" in namespace "gc-7268"
  I0323 13:11:15.409233 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7lcg9" in namespace "gc-7268"
  I0323 13:11:15.420558 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7nvjl" in namespace "gc-7268"
  I0323 13:11:15.429470 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7p5mq" in namespace "gc-7268"
  I0323 13:11:15.437080 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8825n" in namespace "gc-7268"
  I0323 13:11:15.454830 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8sjdk" in namespace "gc-7268"
  I0323 13:11:15.471061 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-975lk" in namespace "gc-7268"
  I0323 13:11:15.483832 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9nl42" in namespace "gc-7268"
  I0323 13:11:15.493083 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b26c7" in namespace "gc-7268"
  I0323 13:11:15.511602 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b6wft" in namespace "gc-7268"
  I0323 13:11:15.519938 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bbhmn" in namespace "gc-7268"
  I0323 13:11:15.530347 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bkps2" in namespace "gc-7268"
  I0323 13:11:15.537777 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-btmns" in namespace "gc-7268"
  I0323 13:11:15.549061 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c5bxt" in namespace "gc-7268"
  I0323 13:11:15.562362 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d5zqz" in namespace "gc-7268"
  I0323 13:11:15.575976 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-djbct" in namespace "gc-7268"
  I0323 13:11:15.588184 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dn28j" in namespace "gc-7268"
  I0323 13:11:15.601974 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fjh4v" in namespace "gc-7268"
  I0323 13:11:15.614685 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g69qk" in namespace "gc-7268"
  I0323 13:11:15.626431 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g8f5c" in namespace "gc-7268"
  I0323 13:11:15.633705 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gj9k6" in namespace "gc-7268"
  I0323 13:11:15.644752 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gm7g9" in namespace "gc-7268"
  I0323 13:11:15.656133 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hglzp" in namespace "gc-7268"
  I0323 13:11:15.685719 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hvwzd" in namespace "gc-7268"
  I0323 13:11:15.697433 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-j29jj" in namespace "gc-7268"
  I0323 13:11:15.706706 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jbqfl" in namespace "gc-7268"
  I0323 13:11:15.726123 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jh4bq" in namespace "gc-7268"
  I0323 13:11:15.747111 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jlzzq" in namespace "gc-7268"
  I0323 13:11:15.756914 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7268" for this suite. @ 03/23/25 13:11:15.76
• [16.960 seconds]
------------------------------
S
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 03/23/25 13:11:15.765
  I0323 13:11:15.765198 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename secrets @ 03/23/25 13:11:15.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:11:15.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:11:15.784
  STEP: creating a secret @ 03/23/25 13:11:15.787
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 03/23/25 13:11:15.799
  STEP: patching the secret @ 03/23/25 13:11:15.809
  STEP: deleting the secret using a LabelSelector @ 03/23/25 13:11:15.815
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 03/23/25 13:11:15.82
  I0323 13:11:15.821996 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9898" for this suite. @ 03/23/25 13:11:15.867
• [0.109 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 03/23/25 13:11:15.874
  I0323 13:11:15.875043 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename containers @ 03/23/25 13:11:15.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:11:15.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:11:15.884
  STEP: Creating a pod to test override command @ 03/23/25 13:11:15.887
  E0323 13:11:16.387456      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:17.387532      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:18.388457      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:19.388830      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:11:19.901
  I0323 13:11:19.902253 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod client-containers-16222402-af81-4f12-ac59-467f1eb4fc45 container agnhost-container: <nil>
  STEP: delete the pod @ 03/23/25 13:11:19.904
  I0323 13:11:19.910419 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9589" for this suite. @ 03/23/25 13:11:19.911
• [4.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 03/23/25 13:11:19.915
  I0323 13:11:19.915207 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename watch @ 03/23/25 13:11:19.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:11:19.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:11:19.923
  STEP: creating a new configmap @ 03/23/25 13:11:19.924
  STEP: modifying the configmap once @ 03/23/25 13:11:19.926
  STEP: modifying the configmap a second time @ 03/23/25 13:11:19.929
  STEP: deleting the configmap @ 03/23/25 13:11:19.931
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 03/23/25 13:11:19.933
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 03/23/25 13:11:19.934
  I0323 13:11:19.934534 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-2009  1fdcdfdb-34b3-4d9f-85a0-a2cb9a56e4c5 23129 0 2025-03-23 13:11:19 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-03-23 13:11:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0323 13:11:19.934629 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-2009  1fdcdfdb-34b3-4d9f-85a0-a2cb9a56e4c5 23130 0 2025-03-23 13:11:19 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-03-23 13:11:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0323 13:11:19.934709 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2009" for this suite. @ 03/23/25 13:11:20.012
• [0.102 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 03/23/25 13:11:20.016
  I0323 13:11:20.016883 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename container-probe @ 03/23/25 13:11:20.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:11:20.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:11:20.025
  STEP: Creating pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640 @ 03/23/25 13:11:20.026
  E0323 13:11:20.389757      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:21.389839      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 03/23/25 13:11:22.033
  I0323 13:11:22.034407 23 container_probe.go:1749] Initial restart count of pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b is 0
  I0323 13:11:22.035471 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:11:22.389868      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:23.389945      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:11:24.037404 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:11:24.390786      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:25.390926      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:11:26.039340 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:11:26.391734      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:27.391780      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:11:28.042172 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:11:28.392713      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:29.393665      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:11:30.044211 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:11:30.394575      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:31.394724      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:11:32.046089 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:11:32.395508      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:33.396529      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:11:34.048927 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:11:34.397387      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:35.398167      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:11:36.051571 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:11:36.398977      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:37.399133      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:11:38.053733 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:11:38.399213      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:39.399284      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:11:40.055771 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:11:40.400184      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:41.400341      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:11:42.058627 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  I0323 13:11:42.058654 23 container_probe.go:1763] Restart count of pod container-probe-2640/liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b is now 1 (20.024228359s elapsed)
  E0323 13:11:42.400826      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:43.400896      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:11:44.061256 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:11:44.401642      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:45.401708      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:11:46.063107 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:11:46.402622      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:47.403669      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:11:48.065040 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:11:48.404464      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:49.404550      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:11:50.066978 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:11:50.405374      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:51.405512      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:11:52.069102 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:11:52.406483      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:53.406540      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:11:54.070816 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:11:54.407217      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:55.407353      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:11:56.072774 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:11:56.408157      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:57.408801      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:11:58.075233 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:11:58.409779      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:11:59.409916      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:12:00.077370 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:12:00.410761      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:12:01.410825      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:12:02.079175 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  I0323 13:12:02.079206 23 container_probe.go:1763] Restart count of pod container-probe-2640/liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b is now 2 (40.044779588s elapsed)
  E0323 13:12:02.411576      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:12:03.411667      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:12:04.081108 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:12:04.412509      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:12:05.412597      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:12:06.083060 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:12:06.413386      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:12:07.413485      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:12:08.085962 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:12:08.414456      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:12:09.414512      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:12:10.089242 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:12:10.414626      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:12:11.414762      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:12:12.091254 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:12:12.415626      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:12:13.416534      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:12:14.093962 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:12:14.417356      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:12:15.417487      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:12:16.096030 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:12:16.418465      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:12:17.418611      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:12:18.098539 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:12:18.418998      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:12:19.419148      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:12:20.100493 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:12:20.419892      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:12:21.420820      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:12:22.103377 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  I0323 13:12:22.103406 23 container_probe.go:1763] Restart count of pod container-probe-2640/liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b is now 3 (1m0.068979795s elapsed)
  E0323 13:12:22.421803      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:12:23.422532      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:12:24.106116 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:12:24.423482      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:12:25.423609      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:12:26.108010 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:12:26.424371      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:12:27.424641      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:12:28.110208 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:12:28.425312      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:12:29.425369      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:12:30.112943 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:12:30.426257      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:12:31.426383      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:12:32.115796 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:12:32.427160      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:12:33.427277      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:12:34.118688 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:12:34.428092      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:12:35.428814      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:12:36.121436 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:12:36.429758      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:12:37.429892      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:12:38.123324 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:12:38.430782      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:12:39.430912      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:12:40.125406 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:12:40.431743      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:12:41.431761      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:12:42.128336 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  I0323 13:12:42.128363 23 container_probe.go:1763] Restart count of pod container-probe-2640/liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b is now 4 (1m20.093936834s elapsed)
  E0323 13:12:42.432684      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:12:43.433517      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:12:44.130617 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:12:44.433869      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:12:45.433960      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:12:46.133509 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:12:46.434907      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:12:47.435035      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:12:48.135529 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:12:48.435972      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:12:49.436813      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:12:50.138319 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:12:50.437649      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:12:51.437777      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:12:52.140314 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:12:52.438618      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:12:53.438687      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:12:54.143397 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:12:54.439739      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:12:55.440812      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:12:56.145295 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:12:56.441655      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:12:57.441788      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:12:58.147336 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:12:58.442762      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:12:59.443542      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:13:00.150178 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:13:00.444467      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:13:01.444807      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:13:02.152379 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:13:02.445712      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:13:03.445768      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:13:04.154373 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:13:04.446729      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:13:05.446811      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:13:06.156452 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:13:06.447735      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:13:07.447833      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:13:08.159384 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:13:08.448820      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:13:09.448945      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:13:10.161430 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:13:10.449753      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:13:11.449890      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:13:12.164407 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:13:12.450729      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:13:13.451534      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:13:14.166685 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:13:14.452089      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:13:15.452973      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:13:16.169453 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:13:16.453784      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:13:17.453922      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:13:18.171021 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:13:18.454456      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:13:19.454590      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:13:20.173112 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:13:20.455456      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:13:21.455595      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:13:22.175774 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:13:22.456041      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:13:23.456554      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:13:24.178901 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:13:24.457214      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:13:25.457348      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:13:26.180884 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:13:26.458178      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:13:27.458315      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:13:28.182975 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:13:28.459303      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:13:29.459384      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:13:30.184972 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:13:30.460367      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:13:31.460824      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:13:32.187304 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:13:32.461627      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:13:33.461697      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:13:34.189303 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:13:34.462393      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:13:35.462520      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:13:36.191679 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:13:36.462945      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:13:37.463083      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:13:38.194030 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:13:38.463161      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:13:39.463240      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:13:40.196848 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:13:40.464125      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:13:41.464819      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:13:42.199306 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:13:42.465606      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:13:43.465675      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:13:44.201394 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:13:44.466707      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:13:45.466843      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:13:46.203409 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  E0323 13:13:46.467693      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:13:47.467760      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:13:48.205260 23 container_probe.go:1759] Get pod liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b in namespace container-probe-2640
  I0323 13:13:48.205287 23 container_probe.go:1763] Restart count of pod container-probe-2640/liveness-d9ab0f63-b2e8-4835-963c-2c75b280e39b is now 5 (2m26.170861385s elapsed)
  STEP: deleting the pod @ 03/23/25 13:13:48.205
  I0323 13:13:48.211221 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2640" for this suite. @ 03/23/25 13:13:48.213
• [148.199 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 03/23/25 13:13:48.215
  I0323 13:13:48.215982 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename emptydir @ 03/23/25 13:13:48.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:13:48.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:13:48.224
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 03/23/25 13:13:48.225
  E0323 13:13:48.468123      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:13:49.468209      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:13:50.234
  I0323 13:13:50.235887 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-cd8cc301-b1f3-4a7c-9346-7fe24f93141e container test-container: <nil>
  STEP: delete the pod @ 03/23/25 13:13:50.242
  I0323 13:13:50.249903 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5872" for this suite. @ 03/23/25 13:13:50.251
• [2.039 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 03/23/25 13:13:50.254
  I0323 13:13:50.254566 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename projected @ 03/23/25 13:13:50.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:13:50.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:13:50.263
  STEP: Creating configMap with name projected-configmap-test-volume-59e82826-8381-4f54-a8b7-f57eb4d90c19 @ 03/23/25 13:13:50.264
  STEP: Creating a pod to test consume configMaps @ 03/23/25 13:13:50.266
  E0323 13:13:50.469010      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:13:51.469089      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:13:52.272
  I0323 13:13:52.273994 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-projected-configmaps-4b63f83a-e9e6-4783-9a96-6d94fafeb879 container agnhost-container: <nil>
  STEP: delete the pod @ 03/23/25 13:13:52.276
  I0323 13:13:52.284247 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3526" for this suite. @ 03/23/25 13:13:52.285
• [2.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:436
  STEP: Creating a kubernetes client @ 03/23/25 13:13:52.288
  I0323 13:13:52.288429 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename dns @ 03/23/25 13:13:52.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:13:52.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:13:52.296
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 03/23/25 13:13:52.297
  I0323 13:13:52.301063 23 dns.go:448] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-1120  56c8845e-179c-4194-9586-e6d4bd33b63a 23882 0 2025-03-23 13:13:52 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-03-23 13:13:52 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-zh5nn,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-zh5nn,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0323 13:13:52.469409      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:13:53.469480      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 03/23/25 13:13:54.304
  I0323 13:13:54.304357 23 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-1120 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0323 13:13:54.304370 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0323 13:13:54.304404 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/dns-1120/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 03/23/25 13:13:54.339
  I0323 13:13:54.339766 23 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-1120 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0323 13:13:54.339783 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0323 13:13:54.339830 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/dns-1120/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0323 13:13:54.382747 23 dns.go:450] Deleting pod test-dns-nameservers...
  I0323 13:13:54.389159 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1120" for this suite. @ 03/23/25 13:13:54.39
• [2.105 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 03/23/25 13:13:54.393
  I0323 13:13:54.393981 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename services @ 03/23/25 13:13:54.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:13:54.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:13:54.401
  STEP: creating service multi-endpoint-test in namespace services-1221 @ 03/23/25 13:13:54.403
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1221 to expose endpoints map[] @ 03/23/25 13:13:54.407
  I0323 13:13:54.409282 23 service.go:4428] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0323 13:13:54.470465      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:13:55.412837 23 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-1221 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-1221 @ 03/23/25 13:13:55.412
  E0323 13:13:55.470905      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:13:56.471054      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1221 to expose endpoints map[pod1:[100]] @ 03/23/25 13:13:57.42
  I0323 13:13:57.424588 23 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-1221 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-1221 @ 03/23/25 13:13:57.424
  E0323 13:13:57.471465      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:13:58.471516      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1221 to expose endpoints map[pod1:[100] pod2:[101]] @ 03/23/25 13:13:59.431
  I0323 13:13:59.436389 23 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-1221 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 03/23/25 13:13:59.436
  I0323 13:13:59.436445 23 resource.go:361] Creating new exec pod
  E0323 13:13:59.471818      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:00.472815      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:01.473688      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:14:02.442789 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-1221 exec execpodv89g4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  E0323 13:14:02.474155      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:14:02.520080 23 builder.go:146] stderr: "+ + ncecho -v hostName\n -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test (10.68.205.221) 80 port [tcp/http] succeeded!\n"
  I0323 13:14:02.520139 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0323 13:14:02.520248 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-1221 exec execpodv89g4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.205.221 80'
  I0323 13:14:02.585992 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.205.221 80\nConnection to 10.68.205.221 80 port [tcp/http] succeeded!\n"
  I0323 13:14:02.586041 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0323 13:14:02.586109 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-1221 exec execpodv89g4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0323 13:14:02.664872 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test (10.68.205.221) 81 port [tcp/*] succeeded!\n"
  I0323 13:14:02.664904 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0323 13:14:02.665008 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-1221 exec execpodv89g4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.205.221 81'
  I0323 13:14:02.728062 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.205.221 81\nConnection to 10.68.205.221 81 port [tcp/*] succeeded!\n"
  I0323 13:14:02.728094 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-1221 @ 03/23/25 13:14:02.728
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1221 to expose endpoints map[pod2:[101]] @ 03/23/25 13:14:02.733
  E0323 13:14:03.474275      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:14:03.745304 23 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-1221 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-1221 @ 03/23/25 13:14:03.745
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1221 to expose endpoints map[] @ 03/23/25 13:14:03.751
  E0323 13:14:04.474513      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:14:04.759079 23 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-1221 exposes endpoints map[]
  I0323 13:14:04.769811 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1221" for this suite. @ 03/23/25 13:14:04.771
• [10.382 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 03/23/25 13:14:04.776
  I0323 13:14:04.776173 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename webhook @ 03/23/25 13:14:04.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:14:04.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:14:04.785
  STEP: Setting up server cert @ 03/23/25 13:14:04.795
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/23/25 13:14:05.145
  STEP: Deploying the webhook pod @ 03/23/25 13:14:05.148
  STEP: Wait for the deployment to be ready @ 03/23/25 13:14:05.155
  I0323 13:14:05.159636 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0323 13:14:05.474986      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:06.475124      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/23/25 13:14:07.165
  STEP: Verifying the service has paired with the endpoint @ 03/23/25 13:14:07.171
  E0323 13:14:07.475338      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:14:08.172755 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 03/23/25 13:14:08.175
  STEP: verifying the mutating webhook match conditions @ 03/23/25 13:14:08.18
  STEP: updating the mutating webhook match conditions @ 03/23/25 13:14:08.181
  STEP: verifying the mutating webhook match conditions @ 03/23/25 13:14:08.185
  I0323 13:14:08.205982 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9966" for this suite. @ 03/23/25 13:14:08.207
  STEP: Destroying namespace "webhook-markers-6425" for this suite. @ 03/23/25 13:14:08.211
• [3.439 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 03/23/25 13:14:08.214
  I0323 13:14:08.214913 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename webhook @ 03/23/25 13:14:08.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:14:08.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:14:08.225
  STEP: Setting up server cert @ 03/23/25 13:14:08.237
  E0323 13:14:08.475994      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/23/25 13:14:08.664
  STEP: Deploying the webhook pod @ 03/23/25 13:14:08.667
  STEP: Wait for the deployment to be ready @ 03/23/25 13:14:08.673
  I0323 13:14:08.676779 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0323 13:14:09.476821      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:10.476915      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/23/25 13:14:10.681
  STEP: Verifying the service has paired with the endpoint @ 03/23/25 13:14:10.687
  E0323 13:14:11.476961      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:14:11.688185 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 03/23/25 13:14:11.72
  STEP: Creating a configMap that should be mutated @ 03/23/25 13:14:11.726
  STEP: Deleting the collection of validation webhooks @ 03/23/25 13:14:11.738
  STEP: Creating a configMap that should not be mutated @ 03/23/25 13:14:11.754
  I0323 13:14:11.775307 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6604" for this suite. @ 03/23/25 13:14:11.777
  STEP: Destroying namespace "webhook-markers-1014" for this suite. @ 03/23/25 13:14:11.781
• [3.571 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 03/23/25 13:14:11.785
  I0323 13:14:11.785670 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename webhook @ 03/23/25 13:14:11.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:14:11.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:14:11.794
  STEP: Setting up server cert @ 03/23/25 13:14:11.808
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/23/25 13:14:12.084
  STEP: Deploying the webhook pod @ 03/23/25 13:14:12.088
  STEP: Wait for the deployment to be ready @ 03/23/25 13:14:12.094
  I0323 13:14:12.097691 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0323 13:14:12.477034      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:13.477107      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/23/25 13:14:14.102
  STEP: Verifying the service has paired with the endpoint @ 03/23/25 13:14:14.107
  E0323 13:14:14.477946      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:14:15.108566 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 03/23/25 13:14:15.111
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 03/23/25 13:14:15.119
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 03/23/25 13:14:15.123
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 03/23/25 13:14:15.128
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 03/23/25 13:14:15.132
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 03/23/25 13:14:15.135
  I0323 13:14:15.158677 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8989" for this suite. @ 03/23/25 13:14:15.16
  STEP: Destroying namespace "webhook-markers-4897" for this suite. @ 03/23/25 13:14:15.164
• [3.382 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 03/23/25 13:14:15.167
  I0323 13:14:15.167835 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/23/25 13:14:15.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:14:15.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:14:15.176
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 03/23/25 13:14:15.178
  I0323 13:14:15.178717 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  E0323 13:14:15.478432      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:14:16.341887 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  E0323 13:14:16.479293      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:17.479539      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:18.480027      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:19.480244      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:20.480818      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:14:21.080317 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6859" for this suite. @ 03/23/25 13:14:21.084
• [5.921 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 03/23/25 13:14:21.089
  I0323 13:14:21.089458 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename init-container @ 03/23/25 13:14:21.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:14:21.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:14:21.097
  STEP: creating the pod @ 03/23/25 13:14:21.098
  I0323 13:14:21.098825 23 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E0323 13:14:21.481441      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:22.482247      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:23.483117      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:24.483208      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:14:25.152893 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1785" for this suite. @ 03/23/25 13:14:25.154
• [4.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1865
  STEP: Creating a kubernetes client @ 03/23/25 13:14:25.157
  I0323 13:14:25.157666 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename kubectl @ 03/23/25 13:14:25.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:14:25.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:14:25.165
  STEP: Starting the proxy @ 03/23/25 13:14:25.167
  I0323 13:14:25.167274 23 util.go:590] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-2426 proxy --unix-socket=/tmp/kubectl-proxy-unix3189457351/test'
  STEP: retrieving proxy /api/ output @ 03/23/25 13:14:25.198
  I0323 13:14:25.199259 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2426" for this suite. @ 03/23/25 13:14:25.255
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 03/23/25 13:14:25.258
  I0323 13:14:25.258690 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename gc @ 03/23/25 13:14:25.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:14:25.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:14:25.267
  I0323 13:14:25.288788 23 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"6901e906-f434-4efd-8aef-ea6d8b71ab03", Controller:(*bool)(0xc005fc8596), BlockOwnerDeletion:(*bool)(0xc005fc8597)}}
  I0323 13:14:25.293605 23 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"a54bf9f1-0464-4d6a-8bc4-fa323eeac6ae", Controller:(*bool)(0xc003fabbaa), BlockOwnerDeletion:(*bool)(0xc003fabbab)}}
  I0323 13:14:25.296366 23 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"00adae24-7cbf-47fe-8b0e-7ad11ad7a53b", Controller:(*bool)(0xc004140f3e), BlockOwnerDeletion:(*bool)(0xc004140f3f)}}
  E0323 13:14:25.483286      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:26.483353      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:27.483500      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:28.483568      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:29.483923      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:14:30.302339 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6957" for this suite. @ 03/23/25 13:14:30.303
• [5.049 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 03/23/25 13:14:30.307
  I0323 13:14:30.307481 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename secrets @ 03/23/25 13:14:30.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:14:30.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:14:30.316
  STEP: Creating secret with name secret-test-c6c39ded-8382-438d-8ddc-db7b6c0105ab @ 03/23/25 13:14:30.318
  STEP: Creating a pod to test consume secrets @ 03/23/25 13:14:30.319
  E0323 13:14:30.484027      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:31.484817      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:14:32.328
  I0323 13:14:32.329886 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-secrets-4ac76b38-f053-4baa-8c5a-09e7d8d4538d container secret-volume-test: <nil>
  STEP: delete the pod @ 03/23/25 13:14:32.332
  I0323 13:14:32.339175 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4214" for this suite. @ 03/23/25 13:14:32.34
• [2.035 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:888
  STEP: Creating a kubernetes client @ 03/23/25 13:14:32.342
  I0323 13:14:32.342988 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename kubectl @ 03/23/25 13:14:32.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:14:32.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:14:32.351
  STEP: validating api versions @ 03/23/25 13:14:32.352
  I0323 13:14:32.352932 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-7785 api-versions'
  I0323 13:14:32.392314 23 builder.go:146] stderr: ""
  I0323 13:14:32.392356 23 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0323 13:14:32.392527 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7785" for this suite. @ 03/23/25 13:14:32.441
• [0.102 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 03/23/25 13:14:32.445
  I0323 13:14:32.445394 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename resourcequota @ 03/23/25 13:14:32.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:14:32.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:14:32.452
  STEP: Counting existing ResourceQuota @ 03/23/25 13:14:32.453
  E0323 13:14:32.485681      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:33.486280      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:34.486353      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:35.486894      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:36.487871      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 03/23/25 13:14:37.466
  STEP: Ensuring resource quota status is calculated @ 03/23/25 13:14:37.469
  E0323 13:14:37.488000      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:38.488243      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:14:39.471661 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8355" for this suite. @ 03/23/25 13:14:39.473
• [7.031 seconds]
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 03/23/25 13:14:39.476
  I0323 13:14:39.476809 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename prestop @ 03/23/25 13:14:39.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:14:39.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:14:39.485
  STEP: Creating server pod server in namespace prestop-8949 @ 03/23/25 13:14:39.486
  E0323 13:14:39.488515      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for pods to come up. @ 03/23/25 13:14:39.49
  E0323 13:14:40.489539      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:41.489607      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-8949 @ 03/23/25 13:14:41.494
  E0323 13:14:42.490499      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:43.490562      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 03/23/25 13:14:43.501
  E0323 13:14:44.491637      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:45.491768      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:46.492041      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:47.492254      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:48.492302      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:14:48.508682 23 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 03/23/25 13:14:48.508
  I0323 13:14:48.516093 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-8949" for this suite. @ 03/23/25 13:14:48.517
• [9.043 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 03/23/25 13:14:48.519
  I0323 13:14:48.519825 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename downward-api @ 03/23/25 13:14:48.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:14:48.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:14:48.528
  STEP: Creating a pod to test downward API volume plugin @ 03/23/25 13:14:48.529
  E0323 13:14:49.492721      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:50.492981      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:51.494032      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:52.494161      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:14:52.54
  I0323 13:14:52.541232 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod downwardapi-volume-5798fb75-eee3-4bb4-b748-4f2c2055f2d5 container client-container: <nil>
  STEP: delete the pod @ 03/23/25 13:14:52.543
  I0323 13:14:52.549879 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1382" for this suite. @ 03/23/25 13:14:52.551
• [4.034 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 03/23/25 13:14:52.553
  I0323 13:14:52.553780 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename security-context-test @ 03/23/25 13:14:52.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:14:52.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:14:52.561
  E0323 13:14:53.494672      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:54.494822      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:55.495742      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:56.495771      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:14:56.574424 23 security_context.go:538] Got logs for pod "busybox-privileged-false-a15d9cd8-49aa-4478-a6ce-045bda4e946c": "ip: RTNETLINK answers: Operation not permitted\n"
  I0323 13:14:56.574526 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2630" for this suite. @ 03/23/25 13:14:56.576
• [4.026 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:968
  STEP: Creating a kubernetes client @ 03/23/25 13:14:56.579
  I0323 13:14:56.579667 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename statefulset @ 03/23/25 13:14:56.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:14:56.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:14:56.586
  STEP: Creating service test in namespace statefulset-4204 @ 03/23/25 13:14:56.588
  I0323 13:14:56.596550 23 wait.go:40] Found 0 stateful pods, waiting for 1
  E0323 13:14:57.496822      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:58.497590      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:14:59.497726      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:00.497877      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:01.498015      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:02.498160      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:03.498266      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:04.498417      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:05.498561      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:06.498726      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:15:06.594673 23 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 03/23/25 13:15:06.596
  I0323 13:15:06.608112 23 wait.go:40] Found 1 stateful pods, waiting for 2
  E0323 13:15:07.498813      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:08.498886      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:09.499025      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:10.499182      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:11.499334      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:12.499475      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:13.499542      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:14.499702      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:15.499786      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:16.500821      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:15:16.609167 23 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0323 13:15:16.609190 23 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 03/23/25 13:15:16.611
  STEP: Delete all of the StatefulSets @ 03/23/25 13:15:16.617
  STEP: Verify that StatefulSets have been deleted @ 03/23/25 13:15:16.619
  I0323 13:15:16.621487 23 statefulset.go:138] Deleting all statefulset in ns statefulset-4204
  I0323 13:15:16.632581 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4204" for this suite. @ 03/23/25 13:15:16.635
• [20.058 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 03/23/25 13:15:16.638
  I0323 13:15:16.638244 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename configmap @ 03/23/25 13:15:16.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:15:16.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:15:16.645
  STEP: Creating configMap with name configmap-test-volume-065c2ed7-28ef-448e-8e3c-d1f673df8552 @ 03/23/25 13:15:16.647
  STEP: Creating a pod to test consume configMaps @ 03/23/25 13:15:16.65
  E0323 13:15:17.501211      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:18.501307      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:19.502191      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:20.503211      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:15:20.659
  I0323 13:15:20.660604 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-configmaps-6831feaa-1b78-4855-b34b-b0cddb042672 container agnhost-container: <nil>
  STEP: delete the pod @ 03/23/25 13:15:20.663
  I0323 13:15:20.673259 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6250" for this suite. @ 03/23/25 13:15:20.674
• [4.039 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 03/23/25 13:15:20.677
  I0323 13:15:20.677273 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/23/25 13:15:20.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:15:20.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:15:20.684
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 03/23/25 13:15:20.686
  I0323 13:15:20.686789 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  E0323 13:15:21.503692      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:22.504342      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:23.504894      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:24.505115      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 03/23/25 13:15:25.456
  I0323 13:15:25.457298 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  E0323 13:15:25.505923      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:26.506081      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:15:26.620387 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  E0323 13:15:27.506164      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:28.506573      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:29.507074      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:30.507869      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:15:31.301535 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-605" for this suite. @ 03/23/25 13:15:31.305
• [10.633 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 03/23/25 13:15:31.309
  I0323 13:15:31.309998 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename csistoragecapacity @ 03/23/25 13:15:31.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:15:31.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:15:31.317
  STEP: getting /apis @ 03/23/25 13:15:31.319
  STEP: getting /apis/storage.k8s.io @ 03/23/25 13:15:31.321
  STEP: getting /apis/storage.k8s.io/v1 @ 03/23/25 13:15:31.321
  STEP: creating @ 03/23/25 13:15:31.322
  STEP: watching @ 03/23/25 13:15:31.327
  I0323 13:15:31.327670 23 csistoragecapacity.go:143] starting watch
  STEP: getting @ 03/23/25 13:15:31.331
  STEP: listing in namespace @ 03/23/25 13:15:31.332
  STEP: listing across namespaces @ 03/23/25 13:15:31.333
  STEP: patching @ 03/23/25 13:15:31.334
  STEP: updating @ 03/23/25 13:15:31.337
  I0323 13:15:31.358277 23 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0323 13:15:31.358317 23 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 03/23/25 13:15:31.358
  STEP: deleting a collection @ 03/23/25 13:15:31.364
  I0323 13:15:31.370832 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-6432" for this suite. @ 03/23/25 13:15:31.406
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:327
  STEP: Creating a kubernetes client @ 03/23/25 13:15:31.409
  I0323 13:15:31.409434 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename statefulset @ 03/23/25 13:15:31.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:15:31.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:15:31.417
  STEP: Creating service test in namespace statefulset-9075 @ 03/23/25 13:15:31.418
  STEP: Creating a new StatefulSet @ 03/23/25 13:15:31.42
  I0323 13:15:31.430234 23 wait.go:40] Found 0 stateful pods, waiting for 3
  E0323 13:15:31.508461      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:32.508877      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:33.509696      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:34.509824      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:35.510000      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:36.510060      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:37.510172      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:38.510262      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:39.510396      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:40.510528      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:15:41.425234 23 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0323 13:15:41.425263 23 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0323 13:15:41.425270 23 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0323 13:15:41.428652 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=statefulset-9075 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0323 13:15:41.498825 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0323 13:15:41.498856 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0323 13:15:41.498865 23 statefulset.go:2453] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0323 13:15:41.511526      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:42.511678      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:43.512314      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:44.512838      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:45.512999      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:46.513778      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:47.513863      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:48.513941      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:49.514013      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:50.514151      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 03/23/25 13:15:51.503
  I0323 13:15:51.506682 23 statefulset.go:2510] Updating stateful set ss2
  STEP: Creating a new revision @ 03/23/25 13:15:51.506
  E0323 13:15:51.514463      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:52.517483      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:53.517992      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:54.518077      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:55.518630      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:56.518764      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:57.519102      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:58.519349      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:15:59.519953      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:00.520357      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 03/23/25 13:16:01.511
  I0323 13:16:01.512293 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=statefulset-9075 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0323 13:16:01.520552      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:16:01.576245 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0323 13:16:01.576278 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0323 13:16:01.576288 23 statefulset.go:2477] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0323 13:16:02.520831      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:03.520908      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:04.521043      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:05.521164      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:06.521298      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:07.521466      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:08.521513      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:09.521608      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:10.522490      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:11.522586      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:16:11.582813 23 wait.go:158] Waiting for StatefulSet statefulset-9075/ss2 to complete update
  I0323 13:16:11.582847 23 wait.go:165] Waiting for Pod statefulset-9075/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0323 13:16:11.582857 23 wait.go:165] Waiting for Pod statefulset-9075/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0323 13:16:12.522657      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:13.522690      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:14.522758      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:15.523374      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:16.523671      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:17.523778      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:18.524616      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:19.525063      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:20.525142      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:21.525275      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:16:21.584912 23 wait.go:158] Waiting for StatefulSet statefulset-9075/ss2 to complete update
  I0323 13:16:21.584952 23 wait.go:165] Waiting for Pod statefulset-9075/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0323 13:16:22.525462      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:23.525526      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:24.525679      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:25.525813      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:26.525957      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:27.526056      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:28.526126      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:29.526261      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:30.526414      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:31.526560      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:16:31.584281 23 wait.go:158] Waiting for StatefulSet statefulset-9075/ss2 to complete update
  E0323 13:16:32.527224      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:33.527336      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:34.527373      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:35.527509      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:36.527665      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:37.527777      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:38.528833      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:39.528964      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:40.529094      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:41.529218      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 03/23/25 13:16:41.584
  I0323 13:16:41.584640 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=statefulset-9075 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0323 13:16:41.649315 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0323 13:16:41.649346 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0323 13:16:41.649355 23 statefulset.go:2453] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0323 13:16:42.529849      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:43.529919      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:44.530074      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:45.530132      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:46.530283      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:47.530371      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:48.530491      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:49.530647      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:50.530800      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:51.530939      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:16:51.658486 23 statefulset.go:2510] Updating stateful set ss2
  E0323 13:16:52.531166      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:53.531294      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:54.531443      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:55.531575      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:56.531736      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:57.531776      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:58.532834      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:16:59.533695      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:00.533846      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:01.533947      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 03/23/25 13:17:01.662
  I0323 13:17:01.663330 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=statefulset-9075 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0323 13:17:01.725762 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0323 13:17:01.725793 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0323 13:17:01.725803 23 statefulset.go:2477] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0323 13:17:02.534297      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:03.534366      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:04.534501      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:05.534601      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:06.534767      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:07.534837      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:08.535636      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:09.535767      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:10.535773      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:11.535846      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:17:11.732016 23 statefulset.go:138] Deleting all statefulset in ns statefulset-9075
  I0323 13:17:11.733198 23 rest.go:152] Scaling statefulset ss2 to 0
  E0323 13:17:12.536862      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:13.536914      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:14.537059      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:15.537212      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:16.537255      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:17.537337      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:18.537443      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:19.537531      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:20.537657      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:21.537792      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:17:21.739200 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0323 13:17:21.740499 23 rest.go:90] Deleting statefulset ss2
  I0323 13:17:21.745451 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9075" for this suite. @ 03/23/25 13:17:21.747
• [110.340 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 03/23/25 13:17:21.75
  I0323 13:17:21.750104 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename webhook @ 03/23/25 13:17:21.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:17:21.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:17:21.758
  STEP: Setting up server cert @ 03/23/25 13:17:21.768
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/23/25 13:17:22.127
  STEP: Deploying the webhook pod @ 03/23/25 13:17:22.133
  STEP: Wait for the deployment to be ready @ 03/23/25 13:17:22.14
  I0323 13:17:22.143552 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0323 13:17:22.537878      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:23.537939      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/23/25 13:17:24.148
  STEP: Verifying the service has paired with the endpoint @ 03/23/25 13:17:24.153
  E0323 13:17:24.538683      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:17:25.153240 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 03/23/25 13:17:25.156
  STEP: create a namespace for the webhook @ 03/23/25 13:17:25.165
  STEP: create a configmap should be unconditionally rejected by the webhook @ 03/23/25 13:17:25.169
  I0323 13:17:25.193706 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7569" for this suite. @ 03/23/25 13:17:25.196
  STEP: Destroying namespace "webhook-markers-3275" for this suite. @ 03/23/25 13:17:25.199
  STEP: Destroying namespace "fail-closed-namespace-8958" for this suite. @ 03/23/25 13:17:25.202
• [3.455 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 03/23/25 13:17:25.204
  I0323 13:17:25.205001 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename projected @ 03/23/25 13:17:25.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:17:25.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:17:25.214
  STEP: Creating configMap with name projected-configmap-test-volume-6ca672f9-c1fa-43e5-8ba2-b4fcbcb54fa5 @ 03/23/25 13:17:25.216
  STEP: Creating a pod to test consume configMaps @ 03/23/25 13:17:25.219
  E0323 13:17:25.539410      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:26.539556      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:27.540141      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:28.540262      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:17:29.23
  I0323 13:17:29.231915 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-projected-configmaps-24b78396-7115-4f3c-b8dd-eef742b128d8 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 03/23/25 13:17:29.245
  I0323 13:17:29.253187 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7234" for this suite. @ 03/23/25 13:17:29.254
• [4.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 03/23/25 13:17:29.257
  I0323 13:17:29.257511 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename pod-network-test @ 03/23/25 13:17:29.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:17:29.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:17:29.266
  STEP: Performing setup for networking test in namespace pod-network-test-7380 @ 03/23/25 13:17:29.268
  STEP: creating a selector @ 03/23/25 13:17:29.268
  STEP: Creating the service pods in kubernetes @ 03/23/25 13:17:29.268
  I0323 13:17:29.268122 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0323 13:17:29.541294      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:30.541434      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:31.542401      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:32.543150      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:33.544189      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:34.544813      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:35.545487      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:36.545623      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:37.546512      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:38.546580      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:39.547574      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:40.547716      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:41.548626      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:42.548753      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 03/23/25 13:17:43.392
  E0323 13:17:43.549759      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:44.549894      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:17:45.399808 23 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0323 13:17:45.399835 23 networking.go:42] Breadth first check of 172.20.63.202 on host 10.255.0.206...
  I0323 13:17:45.400911 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.254.58:9080/dial?request=hostname&protocol=udp&host=172.20.63.202&port=8081&tries=1'] Namespace:pod-network-test-7380 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0323 13:17:45.400931 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0323 13:17:45.400971 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-7380/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.254.58%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.20.63.202%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0323 13:17:45.427661 23 utils.go:356] Waiting for responses: map[]
  I0323 13:17:45.427685 23 utils.go:360] reached 172.20.63.202 after 0/1 tries
  I0323 13:17:45.427695 23 networking.go:42] Breadth first check of 172.20.254.1 on host 10.255.0.207...
  I0323 13:17:45.429245 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.254.58:9080/dial?request=hostname&protocol=udp&host=172.20.254.1&port=8081&tries=1'] Namespace:pod-network-test-7380 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0323 13:17:45.429262 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0323 13:17:45.429304 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-7380/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.254.58%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.20.254.1%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0323 13:17:45.455361 23 utils.go:356] Waiting for responses: map[]
  I0323 13:17:45.455421 23 utils.go:360] reached 172.20.254.1 after 0/1 tries
  I0323 13:17:45.455431 23 networking.go:42] Breadth first check of 172.20.64.159 on host 10.255.0.208...
  I0323 13:17:45.456873 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.254.58:9080/dial?request=hostname&protocol=udp&host=172.20.64.159&port=8081&tries=1'] Namespace:pod-network-test-7380 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0323 13:17:45.456892 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0323 13:17:45.456927 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-7380/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.254.58%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.20.64.159%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0323 13:17:45.482313 23 utils.go:356] Waiting for responses: map[]
  I0323 13:17:45.482337 23 utils.go:360] reached 172.20.64.159 after 0/1 tries
  I0323 13:17:45.482347 23 networking.go:53] Going to retry 0 out of 3 pods....
  I0323 13:17:45.482429 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7380" for this suite. @ 03/23/25 13:17:45.484
• [16.229 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 03/23/25 13:17:45.486
  I0323 13:17:45.486830 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename webhook @ 03/23/25 13:17:45.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:17:45.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:17:45.495
  STEP: Setting up server cert @ 03/23/25 13:17:45.503
  E0323 13:17:45.550084      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/23/25 13:17:45.735
  STEP: Deploying the webhook pod @ 03/23/25 13:17:45.737
  STEP: Wait for the deployment to be ready @ 03/23/25 13:17:45.744
  I0323 13:17:45.747406 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0323 13:17:46.550198      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:47.550342      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/23/25 13:17:47.751
  STEP: Verifying the service has paired with the endpoint @ 03/23/25 13:17:47.756
  E0323 13:17:48.550543      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:17:48.757758 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0323 13:17:48.761128 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-236-crds.webhook.example.com via the AdmissionRegistration API @ 03/23/25 13:17:49.275
  STEP: Creating a custom resource that should be mutated by the webhook @ 03/23/25 13:17:49.283
  E0323 13:17:49.551220      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:50.551361      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:51.551599      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:17:51.835256 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3248" for this suite. @ 03/23/25 13:17:51.837
  STEP: Destroying namespace "webhook-markers-8881" for this suite. @ 03/23/25 13:17:51.841
• [6.357 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:54
  STEP: Creating a kubernetes client @ 03/23/25 13:17:51.843
  I0323 13:17:51.843438 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename dns @ 03/23/25 13:17:51.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:17:51.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:17:51.851
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 03/23/25 13:17:51.853
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 03/23/25 13:17:51.853
  STEP: creating a pod to probe DNS @ 03/23/25 13:17:51.853
  STEP: submitting the pod to kubernetes @ 03/23/25 13:17:51.853
  E0323 13:17:52.551831      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:53.552808      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 03/23/25 13:17:53.863
  STEP: looking for the results for each expected name from probers @ 03/23/25 13:17:53.864
  I0323 13:17:53.885532 23 dns_common.go:546] DNS probes using dns-9440/dns-test-a992e5c9-806c-47ff-8b7e-b2720e593dfb succeeded

  STEP: deleting the pod @ 03/23/25 13:17:53.885
  I0323 13:17:53.891694 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9440" for this suite. @ 03/23/25 13:17:53.893
• [2.052 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 03/23/25 13:17:53.895
  I0323 13:17:53.895531 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename secrets @ 03/23/25 13:17:53.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:17:53.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:17:53.905
  STEP: Creating secret with name s-test-opt-del-b5eb6945-5b47-4a55-b738-8cf9fe4bb079 @ 03/23/25 13:17:53.993
  STEP: Creating secret with name s-test-opt-upd-c614ff06-b256-442f-8094-c6e99ac61e58 @ 03/23/25 13:17:53.996
  STEP: Creating the pod @ 03/23/25 13:17:53.998
  E0323 13:17:54.552911      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:55.553043      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-b5eb6945-5b47-4a55-b738-8cf9fe4bb079 @ 03/23/25 13:17:56.016
  STEP: Updating secret s-test-opt-upd-c614ff06-b256-442f-8094-c6e99ac61e58 @ 03/23/25 13:17:56.018
  STEP: Creating secret with name s-test-opt-create-73257a7a-d037-41fe-a6ba-7368695d2364 @ 03/23/25 13:17:56.02
  STEP: waiting to observe update in volume @ 03/23/25 13:17:56.022
  E0323 13:17:56.553815      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:57.553915      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:58.554535      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:17:59.554629      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:00.555118      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:01.555246      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:02.555872      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:03.556828      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:04.557482      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:05.557644      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:06.557740      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:07.557901      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:08.558548      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:09.558628      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:10.559412      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:11.559567      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:12.560149      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:13.560282      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:14.560826      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:15.560914      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:16.561574      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:17.561717      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:18.562283      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:19.562437      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:20.562576      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:21.562718      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:22.563415      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:23.563574      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:24.563790      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:25.564805      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:26.565545      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:27.565698      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:28.566437      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:29.566567      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:30.567308      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:31.567447      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:32.568029      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:33.568830      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:34.569791      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:35.569929      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:36.570486      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:37.570640      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:38.571285      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:39.571439      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:40.572215      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:41.572830      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:42.573374      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:43.573498      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:44.574487      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:45.574618      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:46.575309      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:47.575392      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:48.576255      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:49.576827      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:50.577654      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:51.577783      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:52.578186      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:53.578302      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:54.579163      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:55.579252      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:56.580018      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:57.580828      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:58.581827      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:18:59.581960      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:00.582996      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:01.583141      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:02.583718      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:03.584692      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:04.584942      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:05.585086      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:06.585591      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:07.585739      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:19:08.202843 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2004" for this suite. @ 03/23/25 13:19:08.204
• [74.312 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 03/23/25 13:19:08.207
  I0323 13:19:08.207242 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename secrets @ 03/23/25 13:19:08.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:19:08.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:19:08.214
  STEP: creating secret secrets-1130/secret-test-7b225593-7dba-46a4-9ccb-e54625df39e0 @ 03/23/25 13:19:08.216
  STEP: Creating a pod to test consume secrets @ 03/23/25 13:19:08.218
  E0323 13:19:08.585833      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:09.585907      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:10.586972      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:11.587107      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:19:12.227
  I0323 13:19:12.228860 23 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-configmaps-83ce7e49-71a0-4b9b-ac10-661f7cafd590 container env-test: <nil>
  STEP: delete the pod @ 03/23/25 13:19:12.236
  I0323 13:19:12.242299 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1130" for this suite. @ 03/23/25 13:19:12.243
• [4.040 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 03/23/25 13:19:12.246
  I0323 13:19:12.246958 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename gc @ 03/23/25 13:19:12.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:19:12.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:19:12.254
  STEP: create the deployment @ 03/23/25 13:19:12.255
  W0323 13:19:12.258011      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 03/23/25 13:19:12.258
  E0323 13:19:12.591471      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 03/23/25 13:19:12.763
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 03/23/25 13:19:12.765
  STEP: Gathering metrics @ 03/23/25 13:19:13.335
  W0323 13:19:13.337193      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0323 13:19:13.337216 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0323 13:19:13.337356 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7503" for this suite. @ 03/23/25 13:19:13.338
• [1.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 03/23/25 13:19:13.341
  I0323 13:19:13.341334 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename aggregateddiscovery @ 03/23/25 13:19:13.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:19:13.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:19:13.349
  I0323 13:19:13.351193 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  E0323 13:19:13.591599      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:14.592589      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:15.593562      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:19:16.377051 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-9103" for this suite. @ 03/23/25 13:19:16.378
• [3.040 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 03/23/25 13:19:16.381
  I0323 13:19:16.381496 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename security-context-test @ 03/23/25 13:19:16.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:19:16.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:19:16.389
  E0323 13:19:16.594292      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:17.594439      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:18.595092      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:19.595182      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:19:20.400738 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9388" for this suite. @ 03/23/25 13:19:20.402
• [4.023 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 03/23/25 13:19:20.405
  I0323 13:19:20.405077 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename volumeattachment @ 03/23/25 13:19:20.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:19:20.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:19:20.413
  STEP: Create VolumeAttachment "va-e2e-nnwkj" on node "k8s-10-255-0-207" @ 03/23/25 13:19:20.503
  STEP: Get VolumeAttachment "va-e2e-nnwkj" on node "k8s-10-255-0-207" @ 03/23/25 13:19:20.505
  STEP: Patch VolumeAttachment "va-e2e-nnwkj" on node "k8s-10-255-0-207" @ 03/23/25 13:19:20.506
  STEP: List VolumeAttachments with "va-e2e-nnwkj=patched" label @ 03/23/25 13:19:20.51
  STEP: Delete VolumeAttachment "va-e2e-nnwkj" on node "k8s-10-255-0-207" @ 03/23/25 13:19:20.511
  STEP: Confirm deletion of VolumeAttachment "va-e2e-nnwkj" on node "k8s-10-255-0-207" @ 03/23/25 13:19:20.513
  E0323 13:19:20.595552      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create VolumeAttachment "va-e2e-zphw2" on node "k8s-10-255-0-206" @ 03/23/25 13:19:20.603
  STEP: Update the VolumeAttachment "va-e2e-zphw2" on node "k8s-10-255-0-206" with label "va-e2e=updated" @ 03/23/25 13:19:20.606
  STEP: Create VolumeAttachment "va-e2e-xfkxl" on node "k8s-10-255-0-208" @ 03/23/25 13:19:20.704
  STEP: Update the VolumeAttachment "va-e2e-xfkxl" on node "k8s-10-255-0-208" with label "va-e2e=updated" @ 03/23/25 13:19:20.706
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 03/23/25 13:19:20.709
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 03/23/25 13:19:20.713
  I0323 13:19:20.714503 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-6407" for this suite. @ 03/23/25 13:19:20.804
• [0.403 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 03/23/25 13:19:20.808
  I0323 13:19:20.808685 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename apf @ 03/23/25 13:19:20.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:19:20.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:19:20.816
  STEP: getting /apis @ 03/23/25 13:19:20.817
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 03/23/25 13:19:20.819
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 03/23/25 13:19:20.819
  STEP: creating @ 03/23/25 13:19:20.82
  STEP: getting @ 03/23/25 13:19:20.826
  STEP: listing @ 03/23/25 13:19:20.828
  STEP: watching @ 03/23/25 13:19:20.83
  I0323 13:19:20.830151 23 flowcontrol.go:394] starting watch
  STEP: patching @ 03/23/25 13:19:20.83
  STEP: updating @ 03/23/25 13:19:20.834
  I0323 13:19:20.837094 23 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 03/23/25 13:19:20.837
  STEP: patching /status @ 03/23/25 13:19:20.838
  STEP: updating /status @ 03/23/25 13:19:20.84
  STEP: deleting @ 03/23/25 13:19:20.859
  STEP: deleting a collection @ 03/23/25 13:19:20.863
  I0323 13:19:20.870299 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-928" for this suite. @ 03/23/25 13:19:20.905
• [0.099 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 03/23/25 13:19:20.908
  I0323 13:19:20.908065 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 03/23/25 13:19:20.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:19:20.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:19:20.915
  STEP: create the container to handle the HTTPGet hook request. @ 03/23/25 13:19:21.006
  E0323 13:19:21.596249      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:22.598324      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:23.599266      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:24.599415      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 03/23/25 13:19:25.017
  E0323 13:19:25.599513      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:26.599643      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 03/23/25 13:19:27.025
  E0323 13:19:27.600637      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:28.600725      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 03/23/25 13:19:29.031
  I0323 13:19:29.034860 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5446" for this suite. @ 03/23/25 13:19:29.036
• [8.131 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 03/23/25 13:19:29.038
  I0323 13:19:29.038689 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename security-context-test @ 03/23/25 13:19:29.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:19:29.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:19:29.046
  E0323 13:19:29.601603      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:30.601748      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:31.601982      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:32.602738      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:33.602903      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:34.602971      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:35.603490      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:36.603626      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:19:37.064957 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3518" for this suite. @ 03/23/25 13:19:37.066
• [8.030 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 03/23/25 13:19:37.068
  I0323 13:19:37.068824 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename subpath @ 03/23/25 13:19:37.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:19:37.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:19:37.079
  STEP: Setting up data @ 03/23/25 13:19:37.08
  STEP: Creating pod pod-subpath-test-configmap-rxpf @ 03/23/25 13:19:37.084
  STEP: Creating a pod to test atomic-volume-subpath @ 03/23/25 13:19:37.084
  E0323 13:19:37.604254      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:38.604809      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:39.605678      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:40.605814      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:41.606624      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:42.607799      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:43.608258      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:44.608338      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:45.608694      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:46.608818      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:47.609821      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:48.609888      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:49.610805      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:50.610959      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:51.611053      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:52.611182      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:53.612058      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:54.612812      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:55.613723      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:56.613859      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:57.613929      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:58.613996      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:19:59.614847      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:20:00.614984      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:20:01.114
  I0323 13:20:01.115609 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-subpath-test-configmap-rxpf container test-container-subpath-configmap-rxpf: <nil>
  STEP: delete the pod @ 03/23/25 13:20:01.118
  STEP: Deleting pod pod-subpath-test-configmap-rxpf @ 03/23/25 13:20:01.125
  I0323 13:20:01.125051 23 delete.go:62] Deleting pod "pod-subpath-test-configmap-rxpf" in namespace "subpath-5199"
  I0323 13:20:01.126059 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5199" for this suite. @ 03/23/25 13:20:01.127
• [24.061 seconds]
------------------------------
SS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 03/23/25 13:20:01.129
  I0323 13:20:01.129575 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename events @ 03/23/25 13:20:01.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:20:01.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:20:01.137
  STEP: creating a test event @ 03/23/25 13:20:01.139
  STEP: listing events in all namespaces @ 03/23/25 13:20:01.142
  STEP: listing events in test namespace @ 03/23/25 13:20:01.143
  STEP: listing events with field selection filtering on source @ 03/23/25 13:20:01.144
  STEP: listing events with field selection filtering on reportingController @ 03/23/25 13:20:01.145
  STEP: getting the test event @ 03/23/25 13:20:01.146
  STEP: patching the test event @ 03/23/25 13:20:01.147
  STEP: getting the test event @ 03/23/25 13:20:01.152
  STEP: updating the test event @ 03/23/25 13:20:01.153
  STEP: getting the test event @ 03/23/25 13:20:01.155
  STEP: deleting the test event @ 03/23/25 13:20:01.156
  STEP: listing events in all namespaces @ 03/23/25 13:20:01.158
  STEP: listing events in test namespace @ 03/23/25 13:20:01.159
  I0323 13:20:01.160907 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3238" for this suite. @ 03/23/25 13:20:01.228
• [0.102 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 03/23/25 13:20:01.231
  I0323 13:20:01.231367 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename secrets @ 03/23/25 13:20:01.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:20:01.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:20:01.24
  STEP: Creating secret with name secret-test-684769e6-dd29-427d-8370-8c632e06c30e @ 03/23/25 13:20:01.249
  STEP: Creating a pod to test consume secrets @ 03/23/25 13:20:01.251
  E0323 13:20:01.615733      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:20:02.615799      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:20:03.616566      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:20:04.616814      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:20:05.262
  I0323 13:20:05.263641 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-secrets-6482100e-12a7-4567-a308-dd7be8ecbd19 container secret-volume-test: <nil>
  STEP: delete the pod @ 03/23/25 13:20:05.266
  I0323 13:20:05.272761 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-595" for this suite. @ 03/23/25 13:20:05.274
  STEP: Destroying namespace "secret-namespace-3850" for this suite. @ 03/23/25 13:20:05.276
• [4.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 03/23/25 13:20:05.28
  I0323 13:20:05.280208 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename container-probe @ 03/23/25 13:20:05.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:20:05.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:20:05.287
  STEP: Creating pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe in namespace container-probe-1538 @ 03/23/25 13:20:05.289
  E0323 13:20:05.617260      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:20:06.617399      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 03/23/25 13:20:07.296
  I0323 13:20:07.297284 23 container_probe.go:1749] Initial restart count of pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe is 0
  I0323 13:20:07.298252 23 container_probe.go:1759] Get pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe in namespace container-probe-1538
  E0323 13:20:07.617492      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:20:08.617625      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:20:09.301185 23 container_probe.go:1759] Get pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe in namespace container-probe-1538
  E0323 13:20:09.618563      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:20:10.618711      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:20:11.303109 23 container_probe.go:1759] Get pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe in namespace container-probe-1538
  E0323 13:20:11.619471      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:20:12.619534      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:20:13.304964 23 container_probe.go:1759] Get pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe in namespace container-probe-1538
  E0323 13:20:13.620327      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:20:14.620474      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:20:15.306921 23 container_probe.go:1759] Get pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe in namespace container-probe-1538
  E0323 13:20:15.621369      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:20:16.621508      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:20:17.309255 23 container_probe.go:1759] Get pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe in namespace container-probe-1538
  E0323 13:20:17.621560      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:20:18.621644      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:20:19.312126 23 container_probe.go:1759] Get pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe in namespace container-probe-1538
  E0323 13:20:19.622503      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:20:20.623422      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:20:21.314497 23 container_probe.go:1759] Get pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe in namespace container-probe-1538
  E0323 13:20:21.623890      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:20:22.624842      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:20:23.317267 23 container_probe.go:1759] Get pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe in namespace container-probe-1538
  E0323 13:20:23.625632      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:20:24.625771      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:20:25.319199 23 container_probe.go:1759] Get pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe in namespace container-probe-1538
  E0323 13:20:25.626569      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:20:26.627475      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:20:27.322215 23 container_probe.go:1759] Get pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe in namespace container-probe-1538
  E0323 13:20:27.628537      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:20:28.628605      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:20:29.325216 23 container_probe.go:1759] Get pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe in namespace container-probe-1538
  E0323 13:20:29.629551      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:20:30.629708      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:20:31.327149 23 container_probe.go:1759] Get pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe in namespace container-probe-1538
  E0323 13:20:31.630520      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:20:32.630655      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:20:33.329268 23 container_probe.go:1759] Get pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe in namespace container-probe-1538
  E0323 13:20:33.631705      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:20:34.631781      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:20:35.331318 23 container_probe.go:1759] Get pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe in namespace container-probe-1538
  E0323 13:20:35.632631      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:20:36.633431      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:20:37.334159 23 container_probe.go:1759] Get pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe in namespace container-probe-1538
  E0323 13:20:37.633466      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:20:38.633523      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:20:39.337154 23 container_probe.go:1759] Get pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe in namespace container-probe-1538
  E0323 13:20:39.634557      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:20:40.634642      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:20:41.339057 23 container_probe.go:1759] Get pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe in namespace container-probe-1538
  E0323 13:20:41.635411      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:20:42.635543      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:20:43.341159 23 container_probe.go:1759] Get pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe in namespace container-probe-1538
  E0323 13:20:43.636531      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:20:44.636816      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:20:45.343391 23 container_probe.go:1759] Get pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe in namespace container-probe-1538
  E0323 13:20:45.637701      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:20:46.637858      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:20:47.345645 23 container_probe.go:1759] Get pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe in namespace container-probe-1538
  E0323 13:20:47.637905      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:20:48.637975      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:20:49.348577 23 container_probe.go:1759] Get pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe in namespace container-probe-1538
  E0323 13:20:49.638917      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:20:50.639005      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:20:51.350433 23 container_probe.go:1759] Get pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe in namespace container-probe-1538
  E0323 13:20:51.639879      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:20:52.639938      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:20:53.353227 23 container_probe.go:1759] Get pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe in namespace container-probe-1538
  E0323 13:20:53.640560      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:20:54.640811      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:20:55.355347 23 container_probe.go:1759] Get pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe in namespace container-probe-1538
  E0323 13:20:55.641680      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:20:56.641833      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:20:57.357525 23 container_probe.go:1759] Get pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe in namespace container-probe-1538
  E0323 13:20:57.641868      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:20:58.642752      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:20:59.360321 23 container_probe.go:1759] Get pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe in namespace container-probe-1538
  E0323 13:20:59.643491      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:00.643555      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:21:01.362574 23 container_probe.go:1759] Get pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe in namespace container-probe-1538
  E0323 13:21:01.643852      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:02.643923      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:21:03.364542 23 container_probe.go:1759] Get pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe in namespace container-probe-1538
  E0323 13:21:03.644822      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:04.644951      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:21:05.366519 23 container_probe.go:1759] Get pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe in namespace container-probe-1538
  E0323 13:21:05.645824      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:06.645966      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:21:07.368635 23 container_probe.go:1759] Get pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe in namespace container-probe-1538
  E0323 13:21:07.646998      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:08.647050      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:21:09.370577 23 container_probe.go:1759] Get pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe in namespace container-probe-1538
  E0323 13:21:09.647967      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:10.648828      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:21:11.373432 23 container_probe.go:1759] Get pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe in namespace container-probe-1538
  E0323 13:21:11.649710      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:12.649867      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:21:13.375390 23 container_probe.go:1759] Get pod test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe in namespace container-probe-1538
  I0323 13:21:13.375422 23 container_probe.go:1763] Restart count of pod container-probe-1538/test-grpc-5aa52e18-ce1e-4a69-aa67-e4af1e44aebe is now 1 (1m6.078116006s elapsed)
  STEP: deleting the pod @ 03/23/25 13:21:13.375
  I0323 13:21:13.382494 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1538" for this suite. @ 03/23/25 13:21:13.384
• [68.108 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 03/23/25 13:21:13.388
  I0323 13:21:13.388059 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename discovery @ 03/23/25 13:21:13.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:21:13.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:21:13.4
  STEP: Setting up server cert @ 03/23/25 13:21:13.402
  E0323 13:21:13.650090      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Requesting APIResourceList from "/api/v1" @ 03/23/25 13:21:13.837
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 03/23/25 13:21:13.838
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 03/23/25 13:21:13.839
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 03/23/25 13:21:13.839
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 03/23/25 13:21:13.84
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 03/23/25 13:21:13.84
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 03/23/25 13:21:13.841
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 03/23/25 13:21:13.841
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 03/23/25 13:21:13.841
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 03/23/25 13:21:13.842
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 03/23/25 13:21:13.842
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 03/23/25 13:21:13.843
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 03/23/25 13:21:13.843
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 03/23/25 13:21:13.844
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 03/23/25 13:21:13.844
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 03/23/25 13:21:13.844
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 03/23/25 13:21:13.845
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 03/23/25 13:21:13.845
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 03/23/25 13:21:13.846
  I0323 13:21:13.846697 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-6937" for this suite. @ 03/23/25 13:21:13.848
• [0.463 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 03/23/25 13:21:13.85
  I0323 13:21:13.850771 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename custom-resource-definition @ 03/23/25 13:21:13.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:21:13.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:21:13.858
  I0323 13:21:13.859743 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  E0323 13:21:14.650531      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:15.651058      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:16.651494      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:17.652356      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:18.653369      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:19.654146      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:21:19.957469 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2427" for this suite. @ 03/23/25 13:21:19.959
• [6.111 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 03/23/25 13:21:19.962
  I0323 13:21:19.962285 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename downward-api @ 03/23/25 13:21:19.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:21:19.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:21:19.97
  STEP: Creating the pod @ 03/23/25 13:21:19.972
  E0323 13:21:20.654790      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:21.654943      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:21:22.489837 23 pod_client.go:173] Successfully updated pod "labelsupdate37ba8295-126f-426f-861a-e60965753ea1"
  E0323 13:21:22.655933      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:23.656748      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:21:24.496833 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1353" for this suite. @ 03/23/25 13:21:24.498
• [4.539 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:878
  STEP: Creating a kubernetes client @ 03/23/25 13:21:24.501
  I0323 13:21:24.501268 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename svcaccounts @ 03/23/25 13:21:24.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:21:24.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:21:24.509
  STEP: Creating a Serviceaccount "e2e-sa-jqvkh" in namespace "svcaccounts-6428" @ 03/23/25 13:21:24.51
  STEP: Creating a ServiceaccountToken "e2e-sa-jqvkh" in namespace "svcaccounts-6428" @ 03/23/25 13:21:24.512
  STEP: Creating a TokenReview for "e2e-sa-jqvkh" in namespace "svcaccounts-6428" @ 03/23/25 13:21:24.515
  I0323 13:21:24.516483 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6428" for this suite. @ 03/23/25 13:21:24.599
• [0.102 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 03/23/25 13:21:24.603
  I0323 13:21:24.603172 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename field-validation @ 03/23/25 13:21:24.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:21:24.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:21:24.611
  I0323 13:21:24.612994 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  W0323 13:21:24.613475      23 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc00475b1d0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0323 13:21:24.657321      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:25.657421      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:26.657495      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  W0323 13:21:27.143741      23 warnings.go:70] unknown field "alpha"
  W0323 13:21:27.143757      23 warnings.go:70] unknown field "beta"
  W0323 13:21:27.143760      23 warnings.go:70] unknown field "delta"
  W0323 13:21:27.143763      23 warnings.go:70] unknown field "epsilon"
  W0323 13:21:27.143766      23 warnings.go:70] unknown field "gamma"
  E0323 13:21:27.658295      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:21:27.664097 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2745" for this suite. @ 03/23/25 13:21:27.665
• [3.065 seconds]
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 03/23/25 13:21:27.667
  I0323 13:21:27.667838 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename container-runtime @ 03/23/25 13:21:27.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:21:27.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:21:27.679
  STEP: create the container @ 03/23/25 13:21:27.681
  W0323 13:21:27.685876      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 03/23/25 13:21:27.685
  E0323 13:21:28.658864      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:29.659670      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:30.660217      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: get the container status @ 03/23/25 13:21:30.695
  STEP: the container should be terminated @ 03/23/25 13:21:30.696
  STEP: the termination message should be set @ 03/23/25 13:21:30.696
  I0323 13:21:30.696319 23 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 03/23/25 13:21:30.696
  I0323 13:21:30.702278 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4619" for this suite. @ 03/23/25 13:21:30.703
• [3.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 03/23/25 13:21:30.708
  I0323 13:21:30.708410 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename projected @ 03/23/25 13:21:30.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:21:30.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:21:30.716
  STEP: Creating projection with secret that has name projected-secret-test-11df5a5d-cb75-45a6-aeb2-7a353ad669a3 @ 03/23/25 13:21:30.717
  STEP: Creating a pod to test consume secrets @ 03/23/25 13:21:30.719
  E0323 13:21:31.660552      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:32.660409      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:33.660710      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:34.660845      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:21:34.729
  I0323 13:21:34.731113 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-projected-secrets-d79b2969-220d-4440-84f3-f3225ec39fbe container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 03/23/25 13:21:34.733
  I0323 13:21:34.740577 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4051" for this suite. @ 03/23/25 13:21:34.742
• [4.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 03/23/25 13:21:34.744
  I0323 13:21:34.744776 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename podtemplate @ 03/23/25 13:21:34.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:21:34.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:21:34.751
  STEP: Create a pod template @ 03/23/25 13:21:34.753
  STEP: Replace a pod template @ 03/23/25 13:21:34.755
  I0323 13:21:34.759145 23 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0323 13:21:34.759224 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4965" for this suite. @ 03/23/25 13:21:34.842
• [0.101 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 03/23/25 13:21:34.845
  I0323 13:21:34.845455 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename projected @ 03/23/25 13:21:34.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:21:34.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:21:34.851
  STEP: Creating secret with name s-test-opt-del-047e7754-96e7-49b2-97e0-2be028229858 @ 03/23/25 13:21:34.943
  STEP: Creating secret with name s-test-opt-upd-b4585d85-6866-48f4-a993-2a18ffcaf996 @ 03/23/25 13:21:34.945
  STEP: Creating the pod @ 03/23/25 13:21:34.947
  E0323 13:21:35.661655      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:36.661818      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-047e7754-96e7-49b2-97e0-2be028229858 @ 03/23/25 13:21:36.963
  STEP: Updating secret s-test-opt-upd-b4585d85-6866-48f4-a993-2a18ffcaf996 @ 03/23/25 13:21:36.965
  STEP: Creating secret with name s-test-opt-create-60df31c9-7807-4064-abf4-e896bba6f1ff @ 03/23/25 13:21:36.967
  STEP: waiting to observe update in volume @ 03/23/25 13:21:36.969
  E0323 13:21:37.662243      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:38.662373      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:39.663174      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:40.663319      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:41.663583      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:42.663741      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:43.664752      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:44.664880      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:45.665822      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:46.665959      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:47.666241      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:48.666354      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:49.666823      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:50.666964      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:51.667181      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:52.667329      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:53.667593      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:54.667733      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:55.668754      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:56.668819      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:57.669317      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:58.669424      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:21:59.670222      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:00.670312      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:01.670663      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:02.670806      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:03.671232      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:04.671309      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:05.671670      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:06.671770      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:07.672824      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:08.672898      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:09.673309      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:10.673455      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:11.673847      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:12.673920      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:13.674359      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:14.674512      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:15.674813      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:16.674944      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:17.675510      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:18.675640      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:19.675763      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:20.676818      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:21.677391      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:22.677540      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:23.677719      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:24.677866      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:25.677961      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:26.678114      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:27.678553      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:28.678685      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:29.679161      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:30.679293      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:31.679446      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:32.679591      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:33.679767      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:34.680816      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:35.681355      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:36.681510      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:37.682130      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:38.682269      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:39.682999      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:40.683846      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:41.684824      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:42.684917      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:43.685713      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:44.685854      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:22:45.160634 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9853" for this suite. @ 03/23/25 13:22:45.162
• [70.319 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 03/23/25 13:22:45.165
  I0323 13:22:45.165032 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename runtimeclass @ 03/23/25 13:22:45.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:22:45.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:22:45.173
  E0323 13:22:45.686501      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:46.686636      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:22:47.186600 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3345" for this suite. @ 03/23/25 13:22:47.188
• [2.025 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 03/23/25 13:22:47.19
  I0323 13:22:47.190714 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename configmap @ 03/23/25 13:22:47.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:22:47.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:22:47.198
  STEP: creating a ConfigMap @ 03/23/25 13:22:47.2
  STEP: fetching the ConfigMap @ 03/23/25 13:22:47.203
  STEP: patching the ConfigMap @ 03/23/25 13:22:47.204
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 03/23/25 13:22:47.207
  STEP: deleting the ConfigMap by collection with a label selector @ 03/23/25 13:22:47.208
  STEP: listing all ConfigMaps in test namespace @ 03/23/25 13:22:47.21
  I0323 13:22:47.211577 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-191" for this suite. @ 03/23/25 13:22:47.289
• [0.101 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 03/23/25 13:22:47.292
  I0323 13:22:47.292362 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename deployment @ 03/23/25 13:22:47.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:22:47.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:22:47.301
  STEP: creating a Deployment @ 03/23/25 13:22:47.303
  I0323 13:22:47.303810 23 deployment.go:507] Creating simple deployment test-deployment-nbvcn
  I0323 13:22:47.310160 23 deployment.go:223] deployment "test-deployment-nbvcn" doesn't have the required revision set
  E0323 13:22:47.687543      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:48.687710      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Getting /status @ 03/23/25 13:22:49.315
  I0323 13:22:49.317030 23 deployment.go:532] Deployment test-deployment-nbvcn has Conditions: [{Available True 2025-03-23 13:22:48 +0000 UTC 2025-03-23 13:22:48 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-03-23 13:22:48 +0000 UTC 2025-03-23 13:22:47 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-nbvcn-6fb4c74686" has successfully progressed.}]
  STEP: updating Deployment Status @ 03/23/25 13:22:49.317
  I0323 13:22:49.321715 23 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.March, 23, 13, 22, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 13, 22, 48, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 23, 13, 22, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 13, 22, 47, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-nbvcn-6fb4c74686\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 03/23/25 13:22:49.321
  I0323 13:22:49.322642 23 deployment.go:579] Observed &Deployment event: ADDED
  I0323 13:22:49.322670 23 deployment.go:575] Observed Deployment test-deployment-nbvcn in namespace deployment-6579 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-03-23 13:22:47 +0000 UTC 2025-03-23 13:22:47 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-nbvcn-6fb4c74686"}
  I0323 13:22:49.322764 23 deployment.go:579] Observed &Deployment event: MODIFIED
  I0323 13:22:49.322783 23 deployment.go:575] Observed Deployment test-deployment-nbvcn in namespace deployment-6579 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-03-23 13:22:47 +0000 UTC 2025-03-23 13:22:47 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-nbvcn-6fb4c74686"}
  I0323 13:22:49.322800 23 deployment.go:575] Observed Deployment test-deployment-nbvcn in namespace deployment-6579 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-03-23 13:22:47 +0000 UTC 2025-03-23 13:22:47 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0323 13:22:49.322878 23 deployment.go:579] Observed &Deployment event: MODIFIED
  I0323 13:22:49.323001 23 deployment.go:575] Observed Deployment test-deployment-nbvcn in namespace deployment-6579 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-03-23 13:22:47 +0000 UTC 2025-03-23 13:22:47 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0323 13:22:49.323013 23 deployment.go:575] Observed Deployment test-deployment-nbvcn in namespace deployment-6579 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-03-23 13:22:47 +0000 UTC 2025-03-23 13:22:47 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-nbvcn-6fb4c74686" is progressing.}
  I0323 13:22:49.323092 23 deployment.go:579] Observed &Deployment event: MODIFIED
  I0323 13:22:49.323102 23 deployment.go:575] Observed Deployment test-deployment-nbvcn in namespace deployment-6579 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-03-23 13:22:48 +0000 UTC 2025-03-23 13:22:48 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0323 13:22:49.323113 23 deployment.go:575] Observed Deployment test-deployment-nbvcn in namespace deployment-6579 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-03-23 13:22:48 +0000 UTC 2025-03-23 13:22:47 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-nbvcn-6fb4c74686" has successfully progressed.}
  I0323 13:22:49.323178 23 deployment.go:579] Observed &Deployment event: MODIFIED
  I0323 13:22:49.323190 23 deployment.go:575] Observed Deployment test-deployment-nbvcn in namespace deployment-6579 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-03-23 13:22:48 +0000 UTC 2025-03-23 13:22:48 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0323 13:22:49.323204 23 deployment.go:575] Observed Deployment test-deployment-nbvcn in namespace deployment-6579 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-03-23 13:22:48 +0000 UTC 2025-03-23 13:22:47 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-nbvcn-6fb4c74686" has successfully progressed.}
  I0323 13:22:49.323217 23 deployment.go:572] Found Deployment test-deployment-nbvcn in namespace deployment-6579 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0323 13:22:49.323228 23 deployment.go:583] Deployment test-deployment-nbvcn has an updated status
  STEP: patching the Statefulset Status @ 03/23/25 13:22:49.323
  I0323 13:22:49.323253 23 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0323 13:22:49.326194 23 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 03/23/25 13:22:49.326
  I0323 13:22:49.327012 23 deployment.go:616] Observed &Deployment event: ADDED
  I0323 13:22:49.327031 23 deployment.go:612] Observed deployment test-deployment-nbvcn in namespace deployment-6579 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-03-23 13:22:47 +0000 UTC 2025-03-23 13:22:47 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-nbvcn-6fb4c74686"}
  I0323 13:22:49.327105 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I0323 13:22:49.327120 23 deployment.go:612] Observed deployment test-deployment-nbvcn in namespace deployment-6579 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-03-23 13:22:47 +0000 UTC 2025-03-23 13:22:47 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-nbvcn-6fb4c74686"}
  I0323 13:22:49.327130 23 deployment.go:612] Observed deployment test-deployment-nbvcn in namespace deployment-6579 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-03-23 13:22:47 +0000 UTC 2025-03-23 13:22:47 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0323 13:22:49.327207 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I0323 13:22:49.327223 23 deployment.go:612] Observed deployment test-deployment-nbvcn in namespace deployment-6579 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-03-23 13:22:47 +0000 UTC 2025-03-23 13:22:47 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0323 13:22:49.327233 23 deployment.go:612] Observed deployment test-deployment-nbvcn in namespace deployment-6579 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-03-23 13:22:47 +0000 UTC 2025-03-23 13:22:47 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-nbvcn-6fb4c74686" is progressing.}
  I0323 13:22:49.327312 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I0323 13:22:49.327329 23 deployment.go:612] Observed deployment test-deployment-nbvcn in namespace deployment-6579 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-03-23 13:22:48 +0000 UTC 2025-03-23 13:22:48 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0323 13:22:49.327341 23 deployment.go:612] Observed deployment test-deployment-nbvcn in namespace deployment-6579 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-03-23 13:22:48 +0000 UTC 2025-03-23 13:22:47 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-nbvcn-6fb4c74686" has successfully progressed.}
  I0323 13:22:49.327445 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I0323 13:22:49.327460 23 deployment.go:612] Observed deployment test-deployment-nbvcn in namespace deployment-6579 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-03-23 13:22:48 +0000 UTC 2025-03-23 13:22:48 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0323 13:22:49.327475 23 deployment.go:612] Observed deployment test-deployment-nbvcn in namespace deployment-6579 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-03-23 13:22:48 +0000 UTC 2025-03-23 13:22:47 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-nbvcn-6fb4c74686" has successfully progressed.}
  I0323 13:22:49.327486 23 deployment.go:612] Observed deployment test-deployment-nbvcn in namespace deployment-6579 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0323 13:22:49.327569 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I0323 13:22:49.327587 23 deployment.go:609] Found deployment test-deployment-nbvcn in namespace deployment-6579 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0323 13:22:49.327600 23 deployment.go:620] Deployment test-deployment-nbvcn has a patched status
  I0323 13:22:49.330523 23 deployment.go:633] Deployment "test-deployment-nbvcn":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-nbvcn",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "28b6a2de-40f7-48dd-82c5-a85244da47d2",
      ResourceVersion: (string) (len=5) "27305",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878332967,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878332967,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878332969,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878332969,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878332969,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878332969,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-nbvcn-6fb4c74686\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0323 13:22:49.415280 23 deployment.go:40] New ReplicaSet "test-deployment-nbvcn-6fb4c74686" of Deployment "test-deployment-nbvcn":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-nbvcn-6fb4c74686",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "96ef2a0a-c997-4d7c-9267-0787d2dad525",
      ResourceVersion: (string) (len=5) "27300",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878332967,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-nbvcn",
          UID: (types.UID) (len=36) "28b6a2de-40f7-48dd-82c5-a85244da47d2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878332967,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 32 38 62  |k:{\"uid\":\"28b|
              00000120  36 61 32 64 65 2d 34 30  66 37 2d 34 38 64 64 2d  |6a2de-40f7-48dd-|
              00000130  38 32 63 35 2d 61 38 35  32 34 34 64 61 34 37 64  |82c5-a85244da47d|
              00000140  32 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |2\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878332968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686",
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0323 13:22:49.417936 23 deployment.go:68] Pod "test-deployment-nbvcn-6fb4c74686-68hrg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-nbvcn-6fb4c74686-68hrg",
      GenerateName: (string) (len=33) "test-deployment-nbvcn-6fb4c74686-",
      Namespace: (string) (len=15) "deployment-6579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f488f27b-a651-43ac-8946-8c09dd8e2e6f",
      ResourceVersion: (string) (len=5) "27299",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878332967,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-nbvcn-6fb4c74686",
          UID: (types.UID) (len=36) "96ef2a0a-c997-4d7c-9267-0787d2dad525",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878332967,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 39 36 65 66 32 61 30  61 2d 63 39 39 37 2d 34  |"96ef2a0a-c997-4|
              000000a0  64 37 63 2d 39 32 36 37  2d 30 37 38 37 64 32 64  |d7c-9267-0787d2d|
              000000b0  61 64 35 32 35 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |ad525\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878332968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 36 34 2e  31 37 35 5c 22 7d 22 3a  |2.20.64.175\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8sbf6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8sbf6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878332968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878332967,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878332968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878332968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878332967,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.208",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.208"
        }
      },
      PodIP: (string) (len=13) "172.20.64.175",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.64.175"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878332967,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878332967,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://58ab056bcc97d59df1119ef13b6cd614ed9adac55bf82e1b07010caa2ce822cc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8sbf6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 13:22:49.419085 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6579" for this suite. @ 03/23/25 13:22:49.42
• [2.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 03/23/25 13:22:49.423
  I0323 13:22:49.423769 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename resourcequota @ 03/23/25 13:22:49.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:22:49.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:22:49.43
  STEP: Discovering how many secrets are in namespace by default @ 03/23/25 13:22:49.432
  E0323 13:22:49.687774      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:50.688011      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:51.688079      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:52.688274      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:53.688492      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 03/23/25 13:22:54.435
  E0323 13:22:54.689456      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:55.689488      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:56.689546      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:57.689999      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:22:58.690659      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 03/23/25 13:22:59.437
  STEP: Ensuring resource quota status is calculated @ 03/23/25 13:22:59.439
  E0323 13:22:59.691278      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:00.691411      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 03/23/25 13:23:01.441
  STEP: Ensuring resource quota status captures secret creation @ 03/23/25 13:23:01.447
  E0323 13:23:01.692340      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:02.692839      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 03/23/25 13:23:03.45
  STEP: Ensuring resource quota status released usage @ 03/23/25 13:23:03.452
  E0323 13:23:03.692984      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:04.693673      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:23:05.454611 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1285" for this suite. @ 03/23/25 13:23:05.456
• [16.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 03/23/25 13:23:05.459
  I0323 13:23:05.459188 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename disruption @ 03/23/25 13:23:05.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:23:05.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:23:05.467
  STEP: Waiting for the pdb to be processed @ 03/23/25 13:23:05.47
  E0323 13:23:05.694306      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:06.694455      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 03/23/25 13:23:07.483
  I0323 13:23:07.487962 23 disruption.go:691] running pods: 0 < 3
  E0323 13:23:07.695230      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:08.695359      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:23:09.485834 23 disruption.go:691] running pods: 2 < 3
  E0323 13:23:09.696128      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:10.696795      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:23:11.487824 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5564" for this suite. @ 03/23/25 13:23:11.489
• [6.033 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 03/23/25 13:23:11.492
  I0323 13:23:11.492154 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename subpath @ 03/23/25 13:23:11.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:23:11.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:23:11.499
  STEP: Setting up data @ 03/23/25 13:23:11.501
  STEP: Creating pod pod-subpath-test-secret-tp24 @ 03/23/25 13:23:11.504
  STEP: Creating a pod to test atomic-volume-subpath @ 03/23/25 13:23:11.504
  E0323 13:23:11.697468      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:12.697603      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:13.698478      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:14.698550      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:15.699464      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:16.699700      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:17.700472      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:18.700604      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:19.701598      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:20.701738      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:21.702716      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:22.702949      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:23.703637      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:24.703765      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:25.704560      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:26.704811      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:27.705577      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:28.705692      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:29.706607      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:30.706740      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:31.707018      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:32.707642      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:33.707703      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:34.707764      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:23:35.534
  I0323 13:23:35.536228 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-subpath-test-secret-tp24 container test-container-subpath-secret-tp24: <nil>
  STEP: delete the pod @ 03/23/25 13:23:35.539
  STEP: Deleting pod pod-subpath-test-secret-tp24 @ 03/23/25 13:23:35.545
  I0323 13:23:35.545171 23 delete.go:62] Deleting pod "pod-subpath-test-secret-tp24" in namespace "subpath-4565"
  I0323 13:23:35.546166 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4565" for this suite. @ 03/23/25 13:23:35.547
• [24.058 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 03/23/25 13:23:35.549
  I0323 13:23:35.549779 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename csiinlinevolumes @ 03/23/25 13:23:35.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:23:35.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:23:35.555
  STEP: Creating two CSIDrivers @ 03/23/25 13:23:35.558
  STEP: Getting "inline-driver-d810c3e7-64b0-4cf1-b2f4-ac4ad6e2e9dd" & "inline-driver-1217301b-a3fa-4cde-b3ae-8cd4b1692b4b" @ 03/23/25 13:23:35.565
  STEP: Patching the CSIDriver "inline-driver-1217301b-a3fa-4cde-b3ae-8cd4b1692b4b" @ 03/23/25 13:23:35.567
  STEP: Updating the CSIDriver "inline-driver-1217301b-a3fa-4cde-b3ae-8cd4b1692b4b" @ 03/23/25 13:23:35.57
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-9130" @ 03/23/25 13:23:35.573
  STEP: Deleting CSIDriver "inline-driver-d810c3e7-64b0-4cf1-b2f4-ac4ad6e2e9dd" @ 03/23/25 13:23:35.574
  STEP: Confirm deletion of CSIDriver "inline-driver-d810c3e7-64b0-4cf1-b2f4-ac4ad6e2e9dd" @ 03/23/25 13:23:35.576
  STEP: Deleting CSIDriver "inline-driver-1217301b-a3fa-4cde-b3ae-8cd4b1692b4b" via DeleteCollection @ 03/23/25 13:23:35.577
  STEP: Confirm deletion of CSIDriver "inline-driver-1217301b-a3fa-4cde-b3ae-8cd4b1692b4b" @ 03/23/25 13:23:35.579
  I0323 13:23:35.580449 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-9130" for this suite. @ 03/23/25 13:23:35.648
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 03/23/25 13:23:35.652
  I0323 13:23:35.652580 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename podtemplate @ 03/23/25 13:23:35.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:23:35.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:23:35.661
  STEP: Create set of pod templates @ 03/23/25 13:23:35.662
  I0323 13:23:35.664867 23 podtemplates.go:143] created test-podtemplate-1
  I0323 13:23:35.666730 23 podtemplates.go:143] created test-podtemplate-2
  I0323 13:23:35.669590 23 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 03/23/25 13:23:35.669
  STEP: delete collection of pod templates @ 03/23/25 13:23:35.67
  I0323 13:23:35.670658 23 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 03/23/25 13:23:35.675
  I0323 13:23:35.675674 23 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0323 13:23:35.678202 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0323 13:23:35.708329      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "podtemplate-9099" for this suite. @ 03/23/25 13:23:35.748
• [0.099 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 03/23/25 13:23:35.751
  I0323 13:23:35.751271 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename volumeattachment @ 03/23/25 13:23:35.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:23:35.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:23:35.759
  STEP: Create VolumeAttachment "va-e2e-nsgnx" on node "k8s-10-255-0-208" @ 03/23/25 13:23:35.848
  STEP: Patch VolumeAttachment "va-e2e-nsgnx" on node "k8s-10-255-0-208" @ 03/23/25 13:23:35.85
  STEP: Reading "va-e2e-nsgnx" Status @ 03/23/25 13:23:35.854
  STEP: Patching "va-e2e-nsgnx" Status @ 03/23/25 13:23:35.855
  I0323 13:23:35.857573 23 volume_attachment.go:224] "va-e2e-nsgnx" Status.Attached: true
  STEP: Updating "va-e2e-nsgnx" Status @ 03/23/25 13:23:35.857
  I0323 13:23:35.860328 23 volume_attachment.go:240] "va-e2e-nsgnx" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-nsgnx" on node "k8s-10-255-0-208" @ 03/23/25 13:23:35.86
  STEP: Confirm deletion of VolumeAttachment "va-e2e-nsgnx" on node "k8s-10-255-0-208" @ 03/23/25 13:23:35.862
  I0323 13:23:35.863404 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-8143" for this suite. @ 03/23/25 13:23:35.948
• [0.200 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 03/23/25 13:23:35.951
  I0323 13:23:35.951820 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename resourcequota @ 03/23/25 13:23:35.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:23:35.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:23:35.96
  STEP: Counting existing ResourceQuota @ 03/23/25 13:23:35.961
  E0323 13:23:36.708437      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:37.708528      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:38.708721      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:39.708815      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:40.709092      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 03/23/25 13:23:41.045
  STEP: Ensuring resource quota status is calculated @ 03/23/25 13:23:41.047
  E0323 13:23:41.709518      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:42.709657      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 03/23/25 13:23:43.049
  STEP: Ensuring ResourceQuota status captures the pod usage @ 03/23/25 13:23:43.057
  E0323 13:23:43.710179      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:44.710330      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 03/23/25 13:23:45.059
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 03/23/25 13:23:45.06
  STEP: Ensuring a pod cannot update its resource requirements @ 03/23/25 13:23:45.062
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 03/23/25 13:23:45.063
  E0323 13:23:45.710640      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:46.710704      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 03/23/25 13:23:47.066
  STEP: Ensuring resource quota status released the pod usage @ 03/23/25 13:23:47.073
  E0323 13:23:47.711516      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:48.711628      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:23:49.075883 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3882" for this suite. @ 03/23/25 13:23:49.077
• [13.128 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 03/23/25 13:23:49.08
  I0323 13:23:49.080075 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename configmap @ 03/23/25 13:23:49.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:23:49.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:23:49.087
  STEP: Creating configMap with name configmap-test-upd-1f81672f-2c92-476f-bceb-209221bc0fc7 @ 03/23/25 13:23:49.178
  STEP: Creating the pod @ 03/23/25 13:23:49.18
  E0323 13:23:49.712290      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:50.712363      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-1f81672f-2c92-476f-bceb-209221bc0fc7 @ 03/23/25 13:23:51.192
  STEP: waiting to observe update in volume @ 03/23/25 13:23:51.194
  E0323 13:23:51.712868      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:52.713851      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:53.714030      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:54.714179      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:55.714481      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:56.714629      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:57.714984      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:58.715039      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:23:59.715189      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:00.715336      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:01.715642      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:02.715742      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:03.716371      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:04.716441      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:05.717405      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:06.717553      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:07.717635      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:08.717706      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:09.717725      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:10.717870      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:11.718529      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:12.718677      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:13.719007      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:14.719142      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:15.719620      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:16.719776      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:17.720815      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:18.720885      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:19.721485      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:20.722480      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:21.723152      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:22.723751      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:23.724372      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:24.724835      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:25.724937      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:26.725080      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:27.725648      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:28.725717      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:29.726140      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:30.726275      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:31.727118      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:32.727249      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:33.727981      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:34.728078      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:35.728490      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:36.728815      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:37.729423      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:38.729538      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:39.730378      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:40.730522      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:41.730824      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:42.730957      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:43.731246      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:44.731384      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:45.731644      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:46.731774      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:47.732518      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:48.732634      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:49.733499      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:50.733847      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:51.734431      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:52.734588      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:24:53.328217 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7173" for this suite. @ 03/23/25 13:24:53.33
• [64.252 seconds]
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 03/23/25 13:24:53.332
  I0323 13:24:53.332477 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename services @ 03/23/25 13:24:53.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:24:53.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:24:53.341
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-8612 @ 03/23/25 13:24:53.345
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 03/23/25 13:24:53.351
  STEP: creating service externalsvc in namespace services-8612 @ 03/23/25 13:24:53.352
  STEP: creating replication controller externalsvc in namespace services-8612 @ 03/23/25 13:24:53.359
  I0323 13:24:53.364099      23 runners.go:193] Created replication controller with name: externalsvc, namespace: services-8612, replica count: 2
  E0323 13:24:53.734683      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:54.735591      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:55.735728      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:24:56.416107      23 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 03/23/25 13:24:56.417
  I0323 13:24:56.424853 23 resource.go:361] Creating new exec pod
  E0323 13:24:56.736153      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:57.736313      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:24:58.431620 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-8612 exec execpodhpj2f -- /bin/sh -x -c nslookup nodeport-service.services-8612.svc.cluster.local'
  I0323 13:24:58.534012 23 builder.go:146] stderr: "+ nslookup nodeport-service.services-8612.svc.cluster.local\n"
  I0323 13:24:58.534048 23 builder.go:147] stdout: "Server:\t\t169.254.20.10\nAddress:\t169.254.20.10#53\n\nnodeport-service.services-8612.svc.cluster.local\tcanonical name = externalsvc.services-8612.svc.cluster.local.\nName:\texternalsvc.services-8612.svc.cluster.local\nAddress: 10.68.211.96\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-8612, will wait for the garbage collector to delete the pods @ 03/23/25 13:24:58.534
  I0323 13:24:58.588411 23 resources.go:139] Deleting ReplicationController externalsvc took: 2.554414ms
  I0323 13:24:58.689297 23 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.881058ms
  E0323 13:24:58.736505      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:24:59.737434      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:00.738309      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:25:01.698466 23 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I0323 13:25:01.703344 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8612" for this suite. @ 03/23/25 13:25:01.705
• [8.376 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 03/23/25 13:25:01.708
  I0323 13:25:01.708621 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename runtimeclass @ 03/23/25 13:25:01.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:25:01.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:25:01.717
  STEP: getting /apis @ 03/23/25 13:25:01.718
  STEP: getting /apis/node.k8s.io @ 03/23/25 13:25:01.721
  STEP: getting /apis/node.k8s.io/v1 @ 03/23/25 13:25:01.721
  STEP: creating @ 03/23/25 13:25:01.722
  STEP: watching @ 03/23/25 13:25:01.728
  I0323 13:25:01.728412 23 runtimeclass.go:275] starting watch
  STEP: getting @ 03/23/25 13:25:01.731
  STEP: listing @ 03/23/25 13:25:01.732
  STEP: patching @ 03/23/25 13:25:01.733
  STEP: updating @ 03/23/25 13:25:01.735
  I0323 13:25:01.737795 23 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 03/23/25 13:25:01.737
  E0323 13:25:01.738868      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting a collection @ 03/23/25 13:25:01.743
  I0323 13:25:01.748286 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2267" for this suite. @ 03/23/25 13:25:01.807
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 03/23/25 13:25:01.81
  I0323 13:25:01.810392 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename var-expansion @ 03/23/25 13:25:01.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:25:01.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:25:01.818
  STEP: Creating a pod to test substitution in container's args @ 03/23/25 13:25:01.82
  E0323 13:25:02.739768      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:03.739845      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:04.740828      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:05.740965      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:25:05.831
  I0323 13:25:05.833300 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod var-expansion-adcd1efc-b182-4528-91b3-9a1e5c542518 container dapi-container: <nil>
  STEP: delete the pod @ 03/23/25 13:25:05.835
  I0323 13:25:05.842394 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-551" for this suite. @ 03/23/25 13:25:05.843
• [4.036 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 03/23/25 13:25:05.846
  I0323 13:25:05.846160 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename projected @ 03/23/25 13:25:05.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:25:05.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:25:05.86
  STEP: Creating a pod to test downward API volume plugin @ 03/23/25 13:25:05.862
  E0323 13:25:06.741559      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:07.741647      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:08.742652      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:09.742728      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:25:09.871
  I0323 13:25:09.872996 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod downwardapi-volume-096dfb50-4c14-4cb7-ad55-97eb9559a462 container client-container: <nil>
  STEP: delete the pod @ 03/23/25 13:25:09.875
  I0323 13:25:09.882421 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-466" for this suite. @ 03/23/25 13:25:09.883
• [4.040 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 03/23/25 13:25:09.886
  I0323 13:25:09.886133 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename projected @ 03/23/25 13:25:09.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:25:09.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:25:09.893
  STEP: Creating a pod to test downward API volume plugin @ 03/23/25 13:25:09.894
  E0323 13:25:10.743572      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:11.743663      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:12.743948      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:13.744815      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:25:13.904
  I0323 13:25:13.906015 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod downwardapi-volume-d79b119a-43ce-4ed1-bd61-8a6486c8c399 container client-container: <nil>
  STEP: delete the pod @ 03/23/25 13:25:13.908
  I0323 13:25:13.915063 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-786" for this suite. @ 03/23/25 13:25:13.916
• [4.033 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 03/23/25 13:25:13.919
  I0323 13:25:13.919218 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename projected @ 03/23/25 13:25:13.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:25:13.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:25:13.925
  STEP: Creating the pod @ 03/23/25 13:25:13.927
  E0323 13:25:14.745765      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:15.745926      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:25:16.447506 23 pod_client.go:173] Successfully updated pod "annotationupdated770b141-26d2-459e-8275-40d4f31027f0"
  E0323 13:25:16.746516      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:17.746659      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:25:18.453673 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7930" for this suite. @ 03/23/25 13:25:18.455
• [4.539 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:647
  STEP: Creating a kubernetes client @ 03/23/25 13:25:18.458
  I0323 13:25:18.458062 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename statefulset @ 03/23/25 13:25:18.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:25:18.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:25:18.465
  STEP: Creating service test in namespace statefulset-6010 @ 03/23/25 13:25:18.467
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 03/23/25 13:25:18.469
  STEP: Creating stateful set ss in namespace statefulset-6010 @ 03/23/25 13:25:18.472
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6010 @ 03/23/25 13:25:18.474
  I0323 13:25:18.481916 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  E0323 13:25:18.747172      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:19.747342      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:20.748242      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:21.748821      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:22.748965      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:23.749043      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:24.749176      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:25.749315      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:26.749480      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:27.749629      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:25:28.477366 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 03/23/25 13:25:28.477
  I0323 13:25:28.478640 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=statefulset-6010 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0323 13:25:28.545487 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0323 13:25:28.545520 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0323 13:25:28.545529 23 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0323 13:25:28.547033 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0323 13:25:28.750294      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:29.750957      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:30.751107      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:31.751379      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:32.751308      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:33.751444      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:34.751570      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:35.751717      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:36.751754      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:37.752808      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:25:38.547818 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0323 13:25:38.547848 23 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0323 13:25:38.648425 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 9.999999912s
  E0323 13:25:38.753600      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:25:39.650719 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 8.903947579s
  E0323 13:25:39.753862      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:25:40.653920 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 7.90092302s
  E0323 13:25:40.754125      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:25:41.656453 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 6.898393227s
  E0323 13:25:41.754614      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:25:42.658810 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 5.895983122s
  E0323 13:25:42.754960      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:25:43.661903 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 4.89302244s
  E0323 13:25:43.754995      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:25:44.664756 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 3.890063472s
  E0323 13:25:44.755898      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:25:45.667990 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 2.886881438s
  E0323 13:25:45.756100      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:25:46.670885 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 1.883944113s
  E0323 13:25:46.756975      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:25:47.673742 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 881.008521ms
  E0323 13:25:47.757872      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6010 @ 03/23/25 13:25:48.673
  I0323 13:25:48.675991 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=statefulset-6010 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0323 13:25:48.741039 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0323 13:25:48.741073 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0323 13:25:48.741085 23 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0323 13:25:48.742551 23 wait.go:40] Found 1 stateful pods, waiting for 3
  E0323 13:25:48.758655      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:49.759284      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:50.759505      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:51.759581      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:52.759716      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:53.759761      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:54.760828      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:55.760894      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:56.760989      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:25:57.761059      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:25:58.744294 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0323 13:25:58.744323 23 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0323 13:25:58.744330 23 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 03/23/25 13:25:58.744
  STEP: Scale down will halt with unhealthy stateful pod @ 03/23/25 13:25:58.744
  I0323 13:25:58.746887 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=statefulset-6010 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0323 13:25:58.761204      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:25:58.824261 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0323 13:25:58.824290 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0323 13:25:58.824300 23 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0323 13:25:58.824344 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=statefulset-6010 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0323 13:25:58.890076 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0323 13:25:58.890105 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0323 13:25:58.890115 23 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0323 13:25:58.890153 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=statefulset-6010 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0323 13:25:58.956531 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0323 13:25:58.956560 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0323 13:25:58.956569 23 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0323 13:25:58.956579 23 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0323 13:25:58.957981 23 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0323 13:25:59.761239      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:26:00.761373      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:26:01.761471      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:26:02.761600      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:26:03.761739      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:26:04.761883      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:26:05.762711      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:26:06.763362      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:26:07.763426      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:26:08.763542      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:26:08.960242 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0323 13:26:08.960268 23 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0323 13:26:08.960275 23 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0323 13:26:09.061255 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 9.999999876s
  E0323 13:26:09.763773      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:26:10.064196 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 8.903001004s
  E0323 13:26:10.764828      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:26:11.067349 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 7.899945987s
  E0323 13:26:11.765071      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:26:12.070526 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 6.896701595s
  E0323 13:26:12.765177      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:26:13.073649 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 5.893588733s
  E0323 13:26:13.765434      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:26:14.075787 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 4.891375056s
  E0323 13:26:14.765497      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:26:15.078316 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 3.888330058s
  E0323 13:26:15.765974      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:26:16.081422 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 2.885784815s
  E0323 13:26:16.766115      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:26:17.084608 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 1.882630796s
  E0323 13:26:17.766293      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:26:18.087758 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 879.44522ms
  E0323 13:26:18.766462      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6010 @ 03/23/25 13:26:19.088
  I0323 13:26:19.091252 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=statefulset-6010 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0323 13:26:19.154859 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0323 13:26:19.154893 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0323 13:26:19.154904 23 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0323 13:26:19.155010 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=statefulset-6010 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0323 13:26:19.217892 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0323 13:26:19.217922 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0323 13:26:19.217931 23 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0323 13:26:19.218005 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=statefulset-6010 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0323 13:26:19.281239 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0323 13:26:19.281273 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0323 13:26:19.281284 23 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0323 13:26:19.281295 23 rest.go:152] Scaling statefulset ss to 0
  E0323 13:26:19.767402      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:26:20.767837      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:26:21.768834      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:26:22.769761      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:26:23.769790      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:26:24.769938      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:26:25.770028      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:26:26.770181      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:26:27.770288      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:26:28.770410      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 03/23/25 13:26:29.293
  I0323 13:26:29.294026 23 statefulset.go:138] Deleting all statefulset in ns statefulset-6010
  I0323 13:26:29.295502 23 rest.go:152] Scaling statefulset ss to 0
  I0323 13:26:29.297611 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0323 13:26:29.298597 23 rest.go:90] Deleting statefulset ss
  I0323 13:26:29.303142 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6010" for this suite. @ 03/23/25 13:26:29.304
• [70.849 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 03/23/25 13:26:29.307
  I0323 13:26:29.307480 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename hostport @ 03/23/25 13:26:29.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:26:29.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:26:29.313
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 03/23/25 13:26:29.405
  E0323 13:26:29.771311      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:26:30.771447      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 10.255.0.207 on the node which pod1 resides and expect scheduled @ 03/23/25 13:26:31.413
  E0323 13:26:31.772130      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:26:32.772211      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 10.255.0.207 but use UDP protocol on the node which pod2 resides @ 03/23/25 13:26:33.42
  E0323 13:26:33.772308      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:26:34.772828      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:26:35.773295      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:26:36.773432      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 03/23/25 13:26:37.436
  I0323 13:26:37.436985 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 10.255.0.207 http://127.0.0.1:54323/hostname] Namespace:hostport-4512 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0323 13:26:37.436999 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0323 13:26:37.437042 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/hostport-4512/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+10.255.0.207+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.255.0.207, port: 54323 @ 03/23/25 13:26:37.463
  I0323 13:26:37.463737 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://10.255.0.207:54323/hostname] Namespace:hostport-4512 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0323 13:26:37.463753 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0323 13:26:37.463809 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/hostport-4512/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F10.255.0.207%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.255.0.207, port: 54323 UDP @ 03/23/25 13:26:37.49
  I0323 13:26:37.490639 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 10.255.0.207 54323] Namespace:hostport-4512 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0323 13:26:37.490656 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0323 13:26:37.490710 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/hostport-4512/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+10.255.0.207+54323&container=e2e-host-exec&stderr=true&stdout=true)
  E0323 13:26:37.774340      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:26:38.774456      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:26:39.774606      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:26:40.774744      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:26:41.774891      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:26:42.519723 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-4512" for this suite. @ 03/23/25 13:26:42.521
• [13.217 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3189
  STEP: Creating a kubernetes client @ 03/23/25 13:26:42.524
  I0323 13:26:42.524568 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename services @ 03/23/25 13:26:42.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:26:42.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:26:42.531
  STEP: creating an Endpoint @ 03/23/25 13:26:42.534
  STEP: waiting for available Endpoint @ 03/23/25 13:26:42.535
  STEP: listing all Endpoints @ 03/23/25 13:26:42.536
  STEP: updating the Endpoint @ 03/23/25 13:26:42.537
  STEP: fetching the Endpoint @ 03/23/25 13:26:42.539
  STEP: patching the Endpoint @ 03/23/25 13:26:42.54
  STEP: fetching the Endpoint @ 03/23/25 13:26:42.546
  STEP: deleting the Endpoint by Collection @ 03/23/25 13:26:42.547
  STEP: waiting for Endpoint deletion @ 03/23/25 13:26:42.549
  STEP: fetching the Endpoint @ 03/23/25 13:26:42.55
  I0323 13:26:42.551408 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6727" for this suite. @ 03/23/25 13:26:42.622
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 03/23/25 13:26:42.625
  I0323 13:26:42.625597 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename sched-pred @ 03/23/25 13:26:42.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:26:42.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:26:42.635
  I0323 13:26:42.637255 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0323 13:26:42.723954 23 util.go:396] Waiting for terminating namespaces to be deleted...
  I0323 13:26:42.725224 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-206 before test
  I0323 13:26:42.726938 23 predicates.go:957] calico-kube-controllers-54cdc99cb-5bglc from kube-system started at 2025-03-23 11:45:09 +0000 UTC (1 container statuses recorded)
  I0323 13:26:42.726951 23 predicates.go:959] 	Container calico-kube-controllers ready: true, restart count 0
  I0323 13:26:42.726960 23 predicates.go:957] calico-node-mqzhm from kube-system started at 2025-03-23 11:45:09 +0000 UTC (1 container statuses recorded)
  I0323 13:26:42.726967 23 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0323 13:26:42.726976 23 predicates.go:957] coredns-75dd46b86b-bnz46 from kube-system started at 2025-03-23 11:45:35 +0000 UTC (1 container statuses recorded)
  I0323 13:26:42.726985 23 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0323 13:26:42.726994 23 predicates.go:957] dashboard-metrics-scraper-65c7c4ffff-mtscp from kube-system started at 2025-03-23 11:45:39 +0000 UTC (1 container statuses recorded)
  I0323 13:26:42.726999 23 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0323 13:26:42.727010 23 predicates.go:957] kubernetes-dashboard-75c65df89-967jc from kube-system started at 2025-03-23 11:45:39 +0000 UTC (1 container statuses recorded)
  I0323 13:26:42.727017 23 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I0323 13:26:42.727025 23 predicates.go:957] metrics-server-74f6d6fdd5-skz98 from kube-system started at 2025-03-23 11:45:37 +0000 UTC (1 container statuses recorded)
  I0323 13:26:42.727034 23 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0323 13:26:42.727041 23 predicates.go:957] node-local-dns-gdfpz from kube-system started at 2025-03-23 11:45:36 +0000 UTC (1 container statuses recorded)
  I0323 13:26:42.727049 23 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0323 13:26:42.727058 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-a86d0fcbee4c468c-6hxkh from sonobuoy started at 2025-03-23 12:20:56 +0000 UTC (2 container statuses recorded)
  I0323 13:26:42.727066 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0323 13:26:42.727074 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0323 13:26:42.727082 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-207 before test
  I0323 13:26:42.728490 23 predicates.go:957] e2e-host-exec from hostport-4512 started at 2025-03-23 13:26:35 +0000 UTC (1 container statuses recorded)
  I0323 13:26:42.728500 23 predicates.go:959] 	Container e2e-host-exec ready: true, restart count 0
  I0323 13:26:42.728506 23 predicates.go:957] pod1 from hostport-4512 started at 2025-03-23 13:26:29 +0000 UTC (1 container statuses recorded)
  I0323 13:26:42.728512 23 predicates.go:959] 	Container agnhost ready: true, restart count 0
  I0323 13:26:42.728521 23 predicates.go:957] pod2 from hostport-4512 started at 2025-03-23 13:26:31 +0000 UTC (1 container statuses recorded)
  I0323 13:26:42.728528 23 predicates.go:959] 	Container agnhost ready: true, restart count 0
  I0323 13:26:42.728536 23 predicates.go:957] pod3 from hostport-4512 started at 2025-03-23 13:26:33 +0000 UTC (1 container statuses recorded)
  I0323 13:26:42.728543 23 predicates.go:959] 	Container agnhost ready: true, restart count 0
  I0323 13:26:42.728552 23 predicates.go:957] calico-node-7blhd from kube-system started at 2025-03-23 11:47:32 +0000 UTC (1 container statuses recorded)
  I0323 13:26:42.728558 23 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0323 13:26:42.728566 23 predicates.go:957] node-local-dns-ldf5h from kube-system started at 2025-03-23 11:47:32 +0000 UTC (1 container statuses recorded)
  I0323 13:26:42.728573 23 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0323 13:26:42.728580 23 predicates.go:957] sonobuoy from sonobuoy started at 2025-03-23 12:20:55 +0000 UTC (1 container statuses recorded)
  I0323 13:26:42.728587 23 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0323 13:26:42.728595 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-a86d0fcbee4c468c-tp5gf from sonobuoy started at 2025-03-23 12:20:56 +0000 UTC (2 container statuses recorded)
  I0323 13:26:42.728604 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0323 13:26:42.728612 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0323 13:26:42.728619 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-208 before test
  I0323 13:26:42.729959 23 predicates.go:957] downwardapi-volume-31b78f8c-16b6-46c8-b790-2e6458886022 from downward-api-3007 started at 2025-03-23 12:19:04 +0000 UTC (1 container statuses recorded)
  I0323 13:26:42.729973 23 predicates.go:959] 	Container client-container ready: false, restart count 0
  I0323 13:26:42.729982 23 predicates.go:957] calico-node-pbb56 from kube-system started at 2025-03-23 11:49:26 +0000 UTC (1 container statuses recorded)
  I0323 13:26:42.729990 23 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0323 13:26:42.729998 23 predicates.go:957] node-local-dns-hzw7f from kube-system started at 2025-03-23 11:49:26 +0000 UTC (1 container statuses recorded)
  I0323 13:26:42.730004 23 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0323 13:26:42.730012 23 predicates.go:957] sonobuoy-e2e-job-19250caba0af4cb0 from sonobuoy started at 2025-03-23 12:20:56 +0000 UTC (2 container statuses recorded)
  I0323 13:26:42.730019 23 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0323 13:26:42.730037 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0323 13:26:42.730045 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-a86d0fcbee4c468c-78fxb from sonobuoy started at 2025-03-23 12:20:56 +0000 UTC (2 container statuses recorded)
  I0323 13:26:42.730055 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0323 13:26:42.730062 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 03/23/25 13:26:42.73
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.182f71865ee98de6], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.] @ 03/23/25 13:26:42.751
  E0323 13:26:42.775687      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:26:43.749772 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2689" for this suite. @ 03/23/25 13:26:43.751
• [1.128 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 03/23/25 13:26:43.753
  I0323 13:26:43.753843 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename daemonsets @ 03/23/25 13:26:43.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:26:43.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:26:43.761
  E0323 13:26:43.776464      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:26:43.857463 23 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0323 13:26:43.860876 23 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0323 13:26:43.954019 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0323 13:26:43.954045 23 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  E0323 13:26:44.776600      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:26:44.865006 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0323 13:26:44.865028 23 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  E0323 13:26:45.776910      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:26:45.864667 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0323 13:26:45.864691 23 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I0323 13:26:45.864703 23 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0323 13:26:45.869523 23 daemon_set.go:102] Updating DaemonSet daemon-set
  E0323 13:26:46.777036      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:26:46.874892 23 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0323 13:26:46.880001 23 daemon_set.go:102] Updating DaemonSet daemon-set
  I0323 13:26:46.880026 23 daemon_set.go:499] Make sure DaemonSet rollback is complete
  E0323 13:26:47.777290      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:26:48.777756      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:26:49.778459      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:26:50.779103      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:26:50.882272 23 daemon_set.go:1198] Pod daemon-set-dbjmv is not available
  STEP: Deleting DaemonSet "daemon-set" @ 03/23/25 13:26:50.889
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6496, will wait for the garbage collector to delete the pods @ 03/23/25 13:26:50.889
  I0323 13:26:50.944349 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 2.885361ms
  I0323 13:26:51.045288 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.923931ms
  E0323 13:26:51.780011      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:26:52.347118 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0323 13:26:52.347147 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0323 13:26:52.348471 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"28784"},"items":null}

  I0323 13:26:52.349415 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"28784"},"items":null}

  I0323 13:26:52.354161 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6496" for this suite. @ 03/23/25 13:26:52.355
• [8.605 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 03/23/25 13:26:52.359
  I0323 13:26:52.359426 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename projected @ 03/23/25 13:26:52.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:26:52.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:26:52.367
  STEP: Creating secret with name projected-secret-test-a37a99ba-71f1-49df-b27c-f7e39948f8d3 @ 03/23/25 13:26:52.368
  STEP: Creating a pod to test consume secrets @ 03/23/25 13:26:52.37
  E0323 13:26:52.780839      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:26:53.780894      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:26:54.377
  I0323 13:26:54.378975 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-projected-secrets-b204c6bd-0010-4ad3-bd8b-b0c721b84159 container secret-volume-test: <nil>
  STEP: delete the pod @ 03/23/25 13:26:54.392
  I0323 13:26:54.400758 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2712" for this suite. @ 03/23/25 13:26:54.402
• [2.045 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:192
  STEP: Creating a kubernetes client @ 03/23/25 13:26:54.405
  I0323 13:26:54.405027 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename svcaccounts @ 03/23/25 13:26:54.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:26:54.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:26:54.411
  I0323 13:26:54.421507 23 service_accounts.go:282] created pod pod-service-account-defaultsa
  I0323 13:26:54.421524 23 service_accounts.go:296] pod pod-service-account-defaultsa service account token volume mount: true
  I0323 13:26:54.424131 23 service_accounts.go:282] created pod pod-service-account-mountsa
  I0323 13:26:54.424148 23 service_accounts.go:296] pod pod-service-account-mountsa service account token volume mount: true
  I0323 13:26:54.427079 23 service_accounts.go:282] created pod pod-service-account-nomountsa
  I0323 13:26:54.427096 23 service_accounts.go:296] pod pod-service-account-nomountsa service account token volume mount: false
  I0323 13:26:54.432205 23 service_accounts.go:282] created pod pod-service-account-defaultsa-mountspec
  I0323 13:26:54.432223 23 service_accounts.go:296] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0323 13:26:54.436842 23 service_accounts.go:282] created pod pod-service-account-mountsa-mountspec
  I0323 13:26:54.436854 23 service_accounts.go:296] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0323 13:26:54.440798 23 service_accounts.go:282] created pod pod-service-account-nomountsa-mountspec
  I0323 13:26:54.440817 23 service_accounts.go:296] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0323 13:26:54.446583 23 service_accounts.go:282] created pod pod-service-account-defaultsa-nomountspec
  I0323 13:26:54.446606 23 service_accounts.go:296] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0323 13:26:54.448789 23 service_accounts.go:282] created pod pod-service-account-mountsa-nomountspec
  I0323 13:26:54.448806 23 service_accounts.go:296] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0323 13:26:54.451460 23 service_accounts.go:282] created pod pod-service-account-nomountsa-nomountspec
  I0323 13:26:54.451483 23 service_accounts.go:296] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0323 13:26:54.451583 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7823" for this suite. @ 03/23/25 13:26:54.508
• [0.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 03/23/25 13:26:54.512
  I0323 13:26:54.512876 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename kubelet-test @ 03/23/25 13:26:54.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:26:54.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:26:54.52
  E0323 13:26:54.780947      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:26:55.781059      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:26:56.541952 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7103" for this suite. @ 03/23/25 13:26:56.543
• [2.033 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 03/23/25 13:26:56.546
  I0323 13:26:56.546083 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename resourcequota @ 03/23/25 13:26:56.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:26:56.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:26:56.554
  STEP: Counting existing ResourceQuota @ 03/23/25 13:26:56.555
  E0323 13:26:56.781740      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:26:57.782256      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:26:58.782470      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:26:59.783346      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:00.783742      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 03/23/25 13:27:01.558
  STEP: Ensuring resource quota status is calculated @ 03/23/25 13:27:01.56
  E0323 13:27:01.784699      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:02.784856      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 03/23/25 13:27:03.562
  STEP: Ensuring resource quota status captures replicaset creation @ 03/23/25 13:27:03.57
  E0323 13:27:03.785513      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:04.785646      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 03/23/25 13:27:05.572
  STEP: Ensuring resource quota status released usage @ 03/23/25 13:27:05.575
  E0323 13:27:05.786375      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:06.786515      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:27:07.576997 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7374" for this suite. @ 03/23/25 13:27:07.578
• [11.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:742
  STEP: Creating a kubernetes client @ 03/23/25 13:27:07.582
  I0323 13:27:07.582382 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename job @ 03/23/25 13:27:07.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:27:07.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:27:07.591
  STEP: Creating a job @ 03/23/25 13:27:07.592
  STEP: Ensuring job reaches completions @ 03/23/25 13:27:07.596
  E0323 13:27:07.786840      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:08.787836      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:09.788639      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:10.788790      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:11.789470      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:12.789545      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:13.790607      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:14.790741      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:15.791267      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:16.791420      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:27:17.608160 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6218" for this suite. @ 03/23/25 13:27:17.609
• [10.030 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1037
  STEP: Creating a kubernetes client @ 03/23/25 13:27:17.612
  I0323 13:27:17.612117 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename statefulset @ 03/23/25 13:27:17.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:27:17.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:27:17.621
  STEP: Creating service test in namespace statefulset-6040 @ 03/23/25 13:27:17.622
  STEP: Creating statefulset ss in namespace statefulset-6040 @ 03/23/25 13:27:17.625
  I0323 13:27:17.638057 23 wait.go:40] Found 0 stateful pods, waiting for 1
  E0323 13:27:17.792352      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:18.792474      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:19.793452      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:20.794204      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:21.794286      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:22.794424      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:23.794544      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:24.794671      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:25.794797      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:26.794930      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:27:27.632097 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 03/23/25 13:27:27.634
  STEP: Getting /status @ 03/23/25 13:27:27.638
  I0323 13:27:27.640362 23 statefulset.go:1073] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 03/23/25 13:27:27.64
  I0323 13:27:27.644157 23 statefulset.go:1093] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 03/23/25 13:27:27.644
  I0323 13:27:27.645037 23 statefulset.go:1121] Observed &StatefulSet event: ADDED
  I0323 13:27:27.645061 23 statefulset.go:1114] Found Statefulset ss in namespace statefulset-6040 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0323 13:27:27.645071 23 statefulset.go:1125] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 03/23/25 13:27:27.645
  I0323 13:27:27.645097 23 statefulset.go:1129] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0323 13:27:27.649217 23 statefulset.go:1133] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 03/23/25 13:27:27.649
  I0323 13:27:27.649986 23 statefulset.go:1158] Observed &StatefulSet event: ADDED
  I0323 13:27:27.650034 23 statefulset.go:138] Deleting all statefulset in ns statefulset-6040
  I0323 13:27:27.651037 23 rest.go:152] Scaling statefulset ss to 0
  E0323 13:27:27.795626      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:28.795740      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:29.795775      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:30.795840      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:31.796133      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:32.796044      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:33.796823      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:34.796958      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:35.797084      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:36.797209      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:27:37.657887 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0323 13:27:37.659128 23 rest.go:90] Deleting statefulset ss
  I0323 13:27:37.665676 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6040" for this suite. @ 03/23/25 13:27:37.667
• [20.058 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 03/23/25 13:27:37.669
  I0323 13:27:37.669739 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename emptydir @ 03/23/25 13:27:37.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:27:37.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:27:37.727
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 03/23/25 13:27:37.728
  E0323 13:27:37.797801      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:38.797870      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:39.798844      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:40.798982      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:27:41.74
  I0323 13:27:41.742090 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-860cd9bb-ff26-4242-86b9-f922d9c74ff2 container test-container: <nil>
  STEP: delete the pod @ 03/23/25 13:27:41.745
  I0323 13:27:41.752375 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9737" for this suite. @ 03/23/25 13:27:41.753
• [4.086 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 03/23/25 13:27:41.756
  I0323 13:27:41.756287 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename projected @ 03/23/25 13:27:41.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:27:41.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:27:41.765
  STEP: Creating a pod to test downward API volume plugin @ 03/23/25 13:27:41.766
  E0323 13:27:41.799740      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:42.799778      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:43.800772      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:44.800863      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:27:45.777
  I0323 13:27:45.779155 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod downwardapi-volume-62e9a9d5-7925-462a-877e-da069ee0d9b4 container client-container: <nil>
  STEP: delete the pod @ 03/23/25 13:27:45.781
  I0323 13:27:45.787679 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7049" for this suite. @ 03/23/25 13:27:45.789
• [4.035 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 03/23/25 13:27:45.791
  I0323 13:27:45.791534 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename pods @ 03/23/25 13:27:45.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:27:45.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:27:45.799
  STEP: creating the pod @ 03/23/25 13:27:45.8
  STEP: setting up watch @ 03/23/25 13:27:45.8
  E0323 13:27:45.800902      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: submitting the pod to kubernetes @ 03/23/25 13:27:45.906
  STEP: verifying the pod is in kubernetes @ 03/23/25 13:27:45.912
  STEP: verifying pod creation was observed @ 03/23/25 13:27:45.913
  E0323 13:27:46.801030      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:47.801548      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 03/23/25 13:27:47.918
  STEP: verifying pod deletion was observed @ 03/23/25 13:27:47.922
  E0323 13:27:48.801624      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:27:49.249699 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2800" for this suite. @ 03/23/25 13:27:49.251
• [3.463 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 03/23/25 13:27:49.254
  I0323 13:27:49.254756 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename pods @ 03/23/25 13:27:49.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:27:49.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:27:49.261
  STEP: Create set of pods @ 03/23/25 13:27:49.263
  I0323 13:27:49.266723 23 pods.go:871] created test-pod-1
  I0323 13:27:49.270712 23 pods.go:871] created test-pod-2
  I0323 13:27:49.274957 23 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 03/23/25 13:27:49.274
  E0323 13:27:49.802002      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:50.802182      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 03/23/25 13:27:51.292
  I0323 13:27:51.382813 23 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E0323 13:27:51.803261      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:27:52.294559 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2878" for this suite. @ 03/23/25 13:27:52.296
• [3.044 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 03/23/25 13:27:52.299
  I0323 13:27:52.299388 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename emptydir @ 03/23/25 13:27:52.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:27:52.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:27:52.308
  STEP: Creating a pod to test emptydir volume type on node default medium @ 03/23/25 13:27:52.309
  E0323 13:27:52.804159      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:53.804829      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:54.804911      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:55.804986      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:27:56.319
  I0323 13:27:56.320407 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-653feea2-8e0d-4fa7-83c8-c857cb8dd69c container test-container: <nil>
  STEP: delete the pod @ 03/23/25 13:27:56.322
  I0323 13:27:56.329948 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8199" for this suite. @ 03/23/25 13:27:56.331
• [4.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 03/23/25 13:27:56.334
  I0323 13:27:56.334316 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename deployment @ 03/23/25 13:27:56.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:27:56.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:27:56.341
  I0323 13:27:56.351773 23 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  E0323 13:27:56.805141      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:57.805404      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:58.805497      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:27:59.805647      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:00.805781      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:28:01.355061 23 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 03/23/25 13:28:01.355
  I0323 13:28:01.355123 23 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0323 13:28:01.806617      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:02.806771      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:28:03.357101 23 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0323 13:28:03.360804 23 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  E0323 13:28:03.807024      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:04.807218      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:28:05.364592 23 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0323 13:28:05.367215 23 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0323 13:28:05.369241 23 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0323 13:28:05.373082 23 deployment.go:314] Updating deployment test-rollover-deployment
  I0323 13:28:05.373101 23 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0323 13:28:05.807295      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:06.807432      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:28:07.376783 23 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0323 13:28:07.379473 23 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0323 13:28:07.381643 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0323 13:28:07.381687 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.March, 23, 13, 28, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 13, 28, 3, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 23, 13, 28, 6, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 13, 28, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0323 13:28:07.808088      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:08.808827      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:28:09.385970 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0323 13:28:09.386019 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.March, 23, 13, 28, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 13, 28, 3, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 23, 13, 28, 6, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 13, 28, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0323 13:28:09.809421      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:10.809482      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:28:11.385147 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0323 13:28:11.385194 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.March, 23, 13, 28, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 13, 28, 3, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 23, 13, 28, 6, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 13, 28, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0323 13:28:11.809546      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:12.809687      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:28:13.385779 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0323 13:28:13.385830 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.March, 23, 13, 28, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 13, 28, 3, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 23, 13, 28, 6, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 13, 28, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0323 13:28:13.809778      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:14.809910      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:28:15.385544 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0323 13:28:15.385590 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.March, 23, 13, 28, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 13, 28, 3, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 23, 13, 28, 6, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 23, 13, 28, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0323 13:28:15.809948      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:16.810088      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:28:17.385892 23 deployment.go:95] 
  I0323 13:28:17.385928 23 deployment.go:974] Ensure that both old replica sets have no replicas
  I0323 13:28:17.389333 23 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4842",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5fc6fb12-4916-4895-b991-9d6f5906bb58",
      ResourceVersion: (string) (len=5) "29698",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878333283,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878333285,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878333296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878333283,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878333283,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878333296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878333283,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-7fb4c746bc\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0323 13:28:17.391409 23 deployment.go:40] New ReplicaSet "test-rollover-deployment-7fb4c746bc" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4842",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "64518ade-290f-4895-85f0-61be363b4edf",
      ResourceVersion: (string) (len=5) "29688",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878333285,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "5fc6fb12-4916-4895-b991-9d6f5906bb58",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878333285,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 66 63 36 66 62  31 32 2d 34 39 31 36 2d  |\"5fc6fb12-4916-|
              00000120  34 38 39 35 2d 62 39 39  31 2d 39 64 36 66 35 39  |4895-b991-9d6f59|
              00000130  30 36 62 62 35 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |06bb58\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878333296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0323 13:28:17.392045 23 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0323 13:28:17.392288 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4842",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "316f06ef-4297-4cb0-a8c2-78454c181f93",
      ResourceVersion: (string) (len=5) "29697",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878333276,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "5fc6fb12-4916-4895-b991-9d6f5906bb58",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878333276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878333296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  35 66 63 36 66 62 31 32  2d 34 39 31 36 2d 34 38  |5fc6fb12-4916-48|
              000000c0  39 35 2d 62 39 39 31 2d  39 64 36 66 35 39 30 36  |95-b991-9d6f5906|
              000000d0  62 62 35 38 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |bb58\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878333296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0323 13:28:17.393149 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4842",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "49d72cc6-807d-4783-98b4-2b4f512807ce",
      ResourceVersion: (string) (len=5) "29649",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878333283,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "5fc6fb12-4916-4895-b991-9d6f5906bb58",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878333285,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 66 63 36 66 62  31 32 2d 34 39 31 36 2d  |\"5fc6fb12-4916-|
              00000120  34 38 39 35 2d 62 39 39  31 2d 39 64 36 66 35 39  |4895-b991-9d6f59|
              00000130  30 36 62 62 35 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |06bb58\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878333285,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0323 13:28:17.395410 23 deployment.go:68] Pod "test-rollover-deployment-7fb4c746bc-5ph5j" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-7fb4c746bc-5ph5j",
      GenerateName: (string) (len=36) "test-rollover-deployment-7fb4c746bc-",
      Namespace: (string) (len=15) "deployment-4842",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9d798e94-ec9a-44e4-a867-a60a02584671",
      ResourceVersion: (string) (len=5) "29669",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878333285,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
          UID: (types.UID) (len=36) "64518ade-290f-4895-85f0-61be363b4edf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878333285,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 34  35 31 38 61 64 65 2d 32  |d\":\"64518ade-2|
              00000090  39 30 66 2d 34 38 39 35  2d 38 35 66 30 2d 36 31  |90f-4895-85f0-61|
              000000a0  62 65 33 36 33 62 34 65  64 66 5c 22 7d 22 3a 7b  |be363b4edf\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878333286,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 35 34  2e 33 37 5c 22 7d 22 3a  |2.20.254.37\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-stls6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-stls6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878333286,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878333285,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878333286,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878333286,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878333285,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=13) "172.20.254.37",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.254.37"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878333285,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878333285,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://90243f88a996d4f44ed0451479745cefc953185e67b5baa6dadd1a93189b75fe",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-stls6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 13:28:17.396621 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4842" for this suite. @ 03/23/25 13:28:17.398
• [21.066 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:338
  STEP: Creating a kubernetes client @ 03/23/25 13:28:17.4
  I0323 13:28:17.400471 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename statefulset @ 03/23/25 13:28:17.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:28:17.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:28:17.408
  STEP: Creating service test in namespace statefulset-6117 @ 03/23/25 13:28:17.409
  STEP: Creating a new StatefulSet @ 03/23/25 13:28:17.412
  I0323 13:28:17.427425 23 wait.go:40] Found 1 stateful pods, waiting for 3
  E0323 13:28:17.810613      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:18.810851      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:19.810995      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:20.811135      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:21.811285      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:22.811431      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:23.811557      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:24.811718      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:25.811760      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:26.811856      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:28:27.418592 23 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0323 13:28:27.418621 23 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0323 13:28:27.418628 23 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 03/23/25 13:28:27.422
  I0323 13:28:27.425766 23 statefulset.go:2510] Updating stateful set ss2
  STEP: Creating a new revision @ 03/23/25 13:28:27.425
  E0323 13:28:27.812363      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:28.813164      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:29.813677      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:30.813754      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:31.813820      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:32.813968      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:33.814029      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:34.814160      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:35.814290      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:36.814425      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 03/23/25 13:28:37.429
  STEP: Performing a canary update @ 03/23/25 13:28:37.429
  I0323 13:28:37.433317 23 statefulset.go:2510] Updating stateful set ss2
  I0323 13:28:37.438780 23 wait.go:74] Waiting for Pod statefulset-6117/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0323 13:28:37.815262      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:38.816090      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:39.816170      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:40.816835      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:41.816982      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:42.817076      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:43.817126      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:44.817256      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:45.817395      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:46.817526      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 03/23/25 13:28:47.437
  I0323 13:28:47.466062 23 wait.go:40] Found 2 stateful pods, waiting for 3
  E0323 13:28:47.818409      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:48.818540      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:49.818726      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:50.818890      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:51.819037      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:52.819077      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:53.819227      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:54.819367      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:55.819506      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:56.819638      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:28:57.459453 23 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0323 13:28:57.459481 23 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0323 13:28:57.459489 23 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 03/23/25 13:28:57.461
  I0323 13:28:57.465421 23 statefulset.go:2510] Updating stateful set ss2
  I0323 13:28:57.470087 23 wait.go:74] Waiting for Pod statefulset-6117/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0323 13:28:57.820542      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:58.820648      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:28:59.820794      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:00.820945      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:01.821081      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:02.821232      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:03.821339      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:04.821472      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:05.821607      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:06.821738      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:29:07.474723 23 statefulset.go:2510] Updating stateful set ss2
  I0323 13:29:07.479189 23 wait.go:56] Waiting for StatefulSet statefulset-6117/ss2 to complete update
  I0323 13:29:07.479222 23 wait.go:63] Waiting for Pod statefulset-6117/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0323 13:29:07.822771      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:08.823674      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:09.823763      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:10.824831      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:11.824971      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:12.825108      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:13.825218      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:14.825346      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:15.825479      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:16.825612      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:29:17.478405 23 statefulset.go:138] Deleting all statefulset in ns statefulset-6117
  I0323 13:29:17.479728 23 rest.go:152] Scaling statefulset ss2 to 0
  E0323 13:29:17.826124      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:18.826244      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:19.826377      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:20.826531      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:21.826679      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:22.826816      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:23.826897      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:24.827031      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:25.827177      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:26.827519      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:29:27.495198 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0323 13:29:27.496591 23 rest.go:90] Deleting statefulset ss2
  I0323 13:29:27.502408 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6117" for this suite. @ 03/23/25 13:29:27.504
• [70.107 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 03/23/25 13:29:27.507
  I0323 13:29:27.507681 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename configmap @ 03/23/25 13:29:27.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:29:27.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:29:27.513
  STEP: Creating configMap with name cm-test-opt-del-979f3b50-af53-4bb0-a045-5811eb01d6b9 @ 03/23/25 13:29:27.605
  STEP: Creating configMap with name cm-test-opt-upd-f7e44829-eccf-418c-bbb2-d6be94c9340a @ 03/23/25 13:29:27.607
  STEP: Creating the pod @ 03/23/25 13:29:27.61
  E0323 13:29:27.828186      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:28.828824      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-979f3b50-af53-4bb0-a045-5811eb01d6b9 @ 03/23/25 13:29:29.63
  STEP: Updating configmap cm-test-opt-upd-f7e44829-eccf-418c-bbb2-d6be94c9340a @ 03/23/25 13:29:29.633
  STEP: Creating configMap with name cm-test-opt-create-d87df771-f775-480f-bf1d-eb9d8375e85b @ 03/23/25 13:29:29.635
  STEP: waiting to observe update in volume @ 03/23/25 13:29:29.636
  E0323 13:29:29.829439      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:30.829584      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:31.829848      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:32.830051      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:33.830769      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:34.830902      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:35.831539      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:36.831678      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:37.832171      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:38.832830      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:39.833365      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:40.833491      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:41.833893      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:42.834282      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:43.834868      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:44.834990      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:45.835442      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:46.835569      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:47.836322      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:48.836437      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:49.836819      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:50.836953      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:51.837512      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:52.837644      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:53.838317      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:54.838446      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:55.839484      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:56.839619      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:57.840524      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:58.840645      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:29:59.840674      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:00.840802      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:01.841429      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:02.841563      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:03.842437      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:04.842511      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:05.843099      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:06.843236      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:07.843679      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:08.843769      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:09.844441      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:10.844815      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:11.845505      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:12.845626      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:13.846474      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:14.846557      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:15.847195      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:16.847343      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:17.848122      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:18.848831      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:19.849204      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:20.849329      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:21.850391      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:22.850521      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:23.851228      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:24.851356      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:25.852263      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:26.852815      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:27.853628      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:28.853711      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:29.854417      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:30.854590      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:31.855485      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:32.855626      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:33.856483      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:34.856829      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:35.857487      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:36.857648      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:37.858250      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:38.858763      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:39.859408      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:40.859564      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:41.860005      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:42.860825      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:43.861129      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:44.861272      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:45.862175      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:46.862316      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:47.862937      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:48.863414      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:49.864148      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:50.864815      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:51.865562      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:52.865690      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:30:53.839726 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4787" for this suite. @ 03/23/25 13:30:53.841
• [86.336 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 03/23/25 13:30:53.843
  I0323 13:30:53.843897 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename events @ 03/23/25 13:30:53.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:30:53.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:30:53.851
  STEP: Create set of events @ 03/23/25 13:30:53.853
  I0323 13:30:53.858840 23 core_events.go:198] created test-event-1
  I0323 13:30:53.860689 23 core_events.go:198] created test-event-2
  I0323 13:30:53.862323 23 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 03/23/25 13:30:53.862
  STEP: delete collection of events @ 03/23/25 13:30:53.863
  I0323 13:30:53.863422 23 core_events.go:213] requesting DeleteCollection of events
  E0323 13:30:53.866513      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check that the list of events matches the requested quantity @ 03/23/25 13:30:53.869
  I0323 13:30:53.869040 23 core_events.go:230] requesting list of events to confirm quantity
  I0323 13:30:53.870019 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8237" for this suite. @ 03/23/25 13:30:53.942
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 03/23/25 13:30:53.945
  I0323 13:30:53.945543 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename replication-controller @ 03/23/25 13:30:53.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:30:53.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:30:53.953
  STEP: Given a ReplicationController is created @ 03/23/25 13:30:53.955
  STEP: When the matched label of one of its pods change @ 03/23/25 13:30:53.957
  I0323 13:30:53.962697 23 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  E0323 13:30:54.866683      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:55.866781      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:56.866916      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:57.867010      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:30:58.867951      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:30:58.964781 23 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 03/23/25 13:30:58.969
  E0323 13:30:59.868827      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:30:59.974540 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8987" for this suite. @ 03/23/25 13:30:59.976
• [6.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 03/23/25 13:30:59.979
  I0323 13:30:59.979756 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename sysctl @ 03/23/25 13:30:59.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:30:59.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:30:59.987
  STEP: Creating a pod with one valid and two invalid sysctls @ 03/23/25 13:30:59.988
  I0323 13:30:59.991176 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-5906" for this suite. @ 03/23/25 13:31:00.077
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 03/23/25 13:31:00.08
  I0323 13:31:00.080817 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename services @ 03/23/25 13:31:00.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:31:00.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:31:00.086
  STEP: creating service in namespace services-1309 @ 03/23/25 13:31:00.088
  STEP: creating service affinity-nodeport in namespace services-1309 @ 03/23/25 13:31:00.088
  STEP: creating replication controller affinity-nodeport in namespace services-1309 @ 03/23/25 13:31:00.095
  I0323 13:31:00.099800      23 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-1309, replica count: 3
  E0323 13:31:00.869015      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:31:01.869096      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:31:02.869162      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:31:03.150477      23 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0323 13:31:03.154697 23 resource.go:361] Creating new exec pod
  E0323 13:31:03.870093      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:31:04.870226      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:31:05.871040      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:31:06.162401 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-1309 exec execpod-affinityfwzz4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0323 13:31:06.230424 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.68.227.153) 80 port [tcp/http] succeeded!\n"
  I0323 13:31:06.230466 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0323 13:31:06.230572 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-1309 exec execpod-affinityfwzz4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.227.153 80'
  I0323 13:31:06.294352 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.227.153 80\nConnection to 10.68.227.153 80 port [tcp/http] succeeded!\n"
  I0323 13:31:06.294385 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0323 13:31:06.294502 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-1309 exec execpod-affinityfwzz4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.208 31620'
  I0323 13:31:06.358057 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.208 31620\nConnection to 10.255.0.208 31620 port [tcp/*] succeeded!\n"
  I0323 13:31:06.358089 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0323 13:31:06.358155 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-1309 exec execpod-affinityfwzz4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.206 31620'
  I0323 13:31:06.421742 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.206 31620\nConnection to 10.255.0.206 31620 port [tcp/*] succeeded!\n"
  I0323 13:31:06.421838 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0323 13:31:06.421896 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-1309 exec execpod-affinityfwzz4 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.255.0.206:31620/ ; done'
  I0323 13:31:06.533524 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31620/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31620/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31620/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31620/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31620/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31620/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31620/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31620/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31620/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31620/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31620/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31620/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31620/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31620/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31620/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:31620/\n"
  I0323 13:31:06.533613 23 builder.go:147] stdout: "\naffinity-nodeport-hr76g\naffinity-nodeport-hr76g\naffinity-nodeport-hr76g\naffinity-nodeport-hr76g\naffinity-nodeport-hr76g\naffinity-nodeport-hr76g\naffinity-nodeport-hr76g\naffinity-nodeport-hr76g\naffinity-nodeport-hr76g\naffinity-nodeport-hr76g\naffinity-nodeport-hr76g\naffinity-nodeport-hr76g\naffinity-nodeport-hr76g\naffinity-nodeport-hr76g\naffinity-nodeport-hr76g\naffinity-nodeport-hr76g"
  I0323 13:31:06.533633 23 service.go:242] Received response from host: affinity-nodeport-hr76g
  I0323 13:31:06.533644 23 service.go:242] Received response from host: affinity-nodeport-hr76g
  I0323 13:31:06.533652 23 service.go:242] Received response from host: affinity-nodeport-hr76g
  I0323 13:31:06.533659 23 service.go:242] Received response from host: affinity-nodeport-hr76g
  I0323 13:31:06.533667 23 service.go:242] Received response from host: affinity-nodeport-hr76g
  I0323 13:31:06.533672 23 service.go:242] Received response from host: affinity-nodeport-hr76g
  I0323 13:31:06.533677 23 service.go:242] Received response from host: affinity-nodeport-hr76g
  I0323 13:31:06.533681 23 service.go:242] Received response from host: affinity-nodeport-hr76g
  I0323 13:31:06.533689 23 service.go:242] Received response from host: affinity-nodeport-hr76g
  I0323 13:31:06.533695 23 service.go:242] Received response from host: affinity-nodeport-hr76g
  I0323 13:31:06.533703 23 service.go:242] Received response from host: affinity-nodeport-hr76g
  I0323 13:31:06.533710 23 service.go:242] Received response from host: affinity-nodeport-hr76g
  I0323 13:31:06.533717 23 service.go:242] Received response from host: affinity-nodeport-hr76g
  I0323 13:31:06.533729 23 service.go:242] Received response from host: affinity-nodeport-hr76g
  I0323 13:31:06.533738 23 service.go:242] Received response from host: affinity-nodeport-hr76g
  I0323 13:31:06.533746 23 service.go:242] Received response from host: affinity-nodeport-hr76g
  I0323 13:31:06.533814 23 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-1309, will wait for the garbage collector to delete the pods @ 03/23/25 13:31:06.54
  I0323 13:31:06.596218 23 resources.go:139] Deleting ReplicationController affinity-nodeport took: 4.040958ms
  I0323 13:31:06.696795 23 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.55566ms
  E0323 13:31:06.871144      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:31:07.872021      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:31:08.872378      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:31:09.807979 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1309" for this suite. @ 03/23/25 13:31:09.809
• [9.733 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 03/23/25 13:31:09.813
  I0323 13:31:09.813567 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename emptydir @ 03/23/25 13:31:09.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:31:09.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:31:09.821
  STEP: Creating Pod @ 03/23/25 13:31:09.822
  E0323 13:31:09.873350      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:31:10.874323      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 03/23/25 13:31:11.83
  I0323 13:31:11.830735 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-9957 PodName:pod-sharedvolume-aaa59233-753c-4159-ae2f-1e5a391f67fa ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0323 13:31:11.830748 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0323 13:31:11.830789 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/emptydir-9957/pods/pod-sharedvolume-aaa59233-753c-4159-ae2f-1e5a391f67fa/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0323 13:31:11.855153 23 exec_util.go:108] Exec stderr: ""
  I0323 13:31:11.855255 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9957" for this suite. @ 03/23/25 13:31:11.856
• [2.046 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 03/23/25 13:31:11.859
  I0323 13:31:11.859440 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename events @ 03/23/25 13:31:11.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:31:11.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:31:11.865
  STEP: creating a test event @ 03/23/25 13:31:11.867
  STEP: listing all events in all namespaces @ 03/23/25 13:31:11.869
  STEP: patching the test event @ 03/23/25 13:31:11.87
  STEP: fetching the test event @ 03/23/25 13:31:11.873
  STEP: updating the test event @ 03/23/25 13:31:11.874
  E0323 13:31:11.874906      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: getting the test event @ 03/23/25 13:31:11.878
  STEP: deleting the test event @ 03/23/25 13:31:11.879
  STEP: listing all events in all namespaces @ 03/23/25 13:31:11.881
  I0323 13:31:11.882708 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-631" for this suite. @ 03/23/25 13:31:11.957
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 03/23/25 13:31:11.96
  I0323 13:31:11.960463 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename resourcequota @ 03/23/25 13:31:11.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:31:11.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:31:11.968
  STEP: Counting existing ResourceQuota @ 03/23/25 13:31:11.969
  E0323 13:31:12.875769      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:31:13.876821      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:31:14.877870      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:31:15.878683      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:31:16.879352      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 03/23/25 13:31:16.971
  STEP: Ensuring resource quota status is calculated @ 03/23/25 13:31:16.975
  E0323 13:31:17.879565      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:31:18.879670      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 03/23/25 13:31:18.977
  STEP: Ensuring resource quota status captures replication controller creation @ 03/23/25 13:31:18.983
  E0323 13:31:19.880664      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:31:20.880814      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 03/23/25 13:31:20.985
  STEP: Ensuring resource quota status released usage @ 03/23/25 13:31:20.988
  E0323 13:31:21.880898      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:31:22.881029      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:31:22.990684 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4257" for this suite. @ 03/23/25 13:31:22.992
• [11.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 03/23/25 13:31:22.996
  I0323 13:31:22.996134 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename webhook @ 03/23/25 13:31:22.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:31:23.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:31:23.004
  STEP: Setting up server cert @ 03/23/25 13:31:23.014
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/23/25 13:31:23.356
  STEP: Deploying the webhook pod @ 03/23/25 13:31:23.358
  STEP: Wait for the deployment to be ready @ 03/23/25 13:31:23.364
  I0323 13:31:23.368155 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0323 13:31:23.881731      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:31:24.881865      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/23/25 13:31:25.372
  STEP: Verifying the service has paired with the endpoint @ 03/23/25 13:31:25.378
  E0323 13:31:25.882786      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:31:26.378232 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 03/23/25 13:31:26.381
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 03/23/25 13:31:26.39
  STEP: Creating a configMap that should not be mutated @ 03/23/25 13:31:26.394
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 03/23/25 13:31:26.398
  STEP: Creating a configMap that should be mutated @ 03/23/25 13:31:26.401
  I0323 13:31:26.427490 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9320" for this suite. @ 03/23/25 13:31:26.429
  STEP: Destroying namespace "webhook-markers-5860" for this suite. @ 03/23/25 13:31:26.433
• [3.442 seconds]
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 03/23/25 13:31:26.437
  I0323 13:31:26.437984 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename replication-controller @ 03/23/25 13:31:26.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:31:26.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:31:26.446
  STEP: Creating ReplicationController "e2e-rc-r27qz" @ 03/23/25 13:31:26.448
  I0323 13:31:26.452143 23 rc.go:792] Get Replication Controller "e2e-rc-r27qz" to confirm replicas
  E0323 13:31:26.882863      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:31:27.452380 23 rc.go:792] Get Replication Controller "e2e-rc-r27qz" to confirm replicas
  I0323 13:31:27.454148 23 rc.go:801] Found 1 replicas for "e2e-rc-r27qz" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-r27qz" @ 03/23/25 13:31:27.454
  STEP: Updating a scale subresource @ 03/23/25 13:31:27.455
  STEP: Verifying replicas where modified for replication controller "e2e-rc-r27qz" @ 03/23/25 13:31:27.457
  I0323 13:31:27.457788 23 rc.go:792] Get Replication Controller "e2e-rc-r27qz" to confirm replicas
  E0323 13:31:27.883281      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:31:28.457861 23 rc.go:792] Get Replication Controller "e2e-rc-r27qz" to confirm replicas
  I0323 13:31:28.459576 23 rc.go:801] Found 2 replicas for "e2e-rc-r27qz" replication controller
  I0323 13:31:28.459702 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5035" for this suite. @ 03/23/25 13:31:28.461
• [2.027 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 03/23/25 13:31:28.464
  I0323 13:31:28.464963 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename replicaset @ 03/23/25 13:31:28.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:31:28.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:31:28.471
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 03/23/25 13:31:28.473
  E0323 13:31:28.884250      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:31:29.884824      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 03/23/25 13:31:30.481
  STEP: Then the orphan pod is adopted @ 03/23/25 13:31:30.484
  E0323 13:31:30.885580      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 03/23/25 13:31:31.487
  I0323 13:31:31.489271 23 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 03/23/25 13:31:31.494
  E0323 13:31:31.888663      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:31:32.498208 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-513" for this suite. @ 03/23/25 13:31:32.5
• [4.037 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 03/23/25 13:31:32.502
  I0323 13:31:32.502503 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename container-runtime @ 03/23/25 13:31:32.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:31:32.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:31:32.513
  STEP: create the container @ 03/23/25 13:31:32.515
  W0323 13:31:32.518328      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 03/23/25 13:31:32.518
  E0323 13:31:32.889281      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:31:33.889734      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:31:34.890609      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: get the container status @ 03/23/25 13:31:35.528
  STEP: the container should be terminated @ 03/23/25 13:31:35.529
  STEP: the termination message should be set @ 03/23/25 13:31:35.529
  I0323 13:31:35.529319 23 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 03/23/25 13:31:35.529
  I0323 13:31:35.536366 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5057" for this suite. @ 03/23/25 13:31:35.537
• [3.037 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 03/23/25 13:31:35.54
  I0323 13:31:35.540046 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename var-expansion @ 03/23/25 13:31:35.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:31:35.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:31:35.547
  E0323 13:31:35.891137      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:31:36.891205      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:31:37.556329 23 delete.go:62] Deleting pod "var-expansion-f2ab6d6f-285f-441b-b153-0b572d8b9ebf" in namespace "var-expansion-2137"
  I0323 13:31:37.559685 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-f2ab6d6f-285f-441b-b153-0b572d8b9ebf" to be fully deleted
  E0323 13:31:37.891272      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:31:38.891395      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:31:39.562759 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2137" for this suite. @ 03/23/25 13:31:39.564
• [4.027 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 03/23/25 13:31:39.567
  I0323 13:31:39.567330 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename secrets @ 03/23/25 13:31:39.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:31:39.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:31:39.576
  STEP: Creating secret with name secret-test-15b9cd85-9bad-449a-a207-74f8e5710227 @ 03/23/25 13:31:39.577
  STEP: Creating a pod to test consume secrets @ 03/23/25 13:31:39.579
  E0323 13:31:39.891476      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:31:40.891607      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:31:41.891763      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:31:42.892815      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:31:43.589
  I0323 13:31:43.590561 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-secrets-95d90e9f-d0cc-406c-b667-e58c98910bed container secret-volume-test: <nil>
  STEP: delete the pod @ 03/23/25 13:31:43.593
  I0323 13:31:43.600176 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2520" for this suite. @ 03/23/25 13:31:43.601
• [4.036 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 03/23/25 13:31:43.603
  I0323 13:31:43.603777 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename projected @ 03/23/25 13:31:43.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:31:43.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:31:43.611
  STEP: Creating configMap with name projected-configmap-test-volume-d6b2fb25-e7f8-4d0e-b1f8-01c509a534fa @ 03/23/25 13:31:43.612
  STEP: Creating a pod to test consume configMaps @ 03/23/25 13:31:43.614
  E0323 13:31:43.893235      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:31:44.893393      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:31:45.893455      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:31:46.893787      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:31:47.623
  I0323 13:31:47.624546 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-projected-configmaps-e7d939dd-5983-4efb-880f-ae6fc34276f8 container agnhost-container: <nil>
  STEP: delete the pod @ 03/23/25 13:31:47.627
  I0323 13:31:47.633767 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6219" for this suite. @ 03/23/25 13:31:47.635
• [4.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 03/23/25 13:31:47.638
  I0323 13:31:47.638477 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename svcaccounts @ 03/23/25 13:31:47.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:31:47.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:31:47.646
  E0323 13:31:47.894657      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:31:48.894796      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 03/23/25 13:31:49.662
  I0323 13:31:49.662831 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7137 pod-service-account-7839279c-538a-4d0c-b4a8-b46c70082a8b -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 03/23/25 13:31:49.726
  I0323 13:31:49.726806 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7137 pod-service-account-7839279c-538a-4d0c-b4a8-b46c70082a8b -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 03/23/25 13:31:49.798
  I0323 13:31:49.798839 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7137 pod-service-account-7839279c-538a-4d0c-b4a8-b46c70082a8b -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0323 13:31:49.863481 23 service_accounts.go:120] Got root ca configmap in namespace "svcaccounts-7137"
  I0323 13:31:49.864735 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7137" for this suite. @ 03/23/25 13:31:49.866
• [2.230 seconds]
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 03/23/25 13:31:49.868
  I0323 13:31:49.868998 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename downward-api @ 03/23/25 13:31:49.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:31:49.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:31:49.876
  STEP: Creating a pod to test downward API volume plugin @ 03/23/25 13:31:49.878
  E0323 13:31:49.895267      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:31:50.895416      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:31:51.895888      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:31:52.896830      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:31:53.889
  I0323 13:31:53.890999 23 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-4c8fe41e-765f-4a29-9756-f678075f053d container client-container: <nil>
  E0323 13:31:53.897064      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the pod @ 03/23/25 13:31:53.899
  I0323 13:31:53.907414 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8412" for this suite. @ 03/23/25 13:31:53.908
• [4.042 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 03/23/25 13:31:53.911
  I0323 13:31:53.911150 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename services @ 03/23/25 13:31:53.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:31:53.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:31:53.918
  STEP: creating service in namespace services-2976 @ 03/23/25 13:31:53.919
  STEP: creating service affinity-nodeport-transition in namespace services-2976 @ 03/23/25 13:31:53.919
  STEP: creating replication controller affinity-nodeport-transition in namespace services-2976 @ 03/23/25 13:31:53.926
  I0323 13:31:53.933110      23 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-2976, replica count: 3
  E0323 13:31:54.897302      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:31:55.897965      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:31:56.898102      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:31:56.985220      23 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0323 13:31:56.998380 23 resource.go:361] Creating new exec pod
  E0323 13:31:57.898598      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:31:58.898702      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:31:59.899231      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:32:00.007406 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-2976 exec execpod-affinity7g88t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0323 13:32:00.075472 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.68.30.192) 80 port [tcp/http] succeeded!\n"
  I0323 13:32:00.075506 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0323 13:32:00.075558 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-2976 exec execpod-affinity7g88t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.30.192 80'
  I0323 13:32:00.142856 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.30.192 80\nConnection to 10.68.30.192 80 port [tcp/http] succeeded!\n"
  I0323 13:32:00.142888 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0323 13:32:00.142957 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-2976 exec execpod-affinity7g88t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.206 32499'
  I0323 13:32:00.207902 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.206 32499\nConnection to 10.255.0.206 32499 port [tcp/*] succeeded!\n"
  I0323 13:32:00.207936 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0323 13:32:00.208054 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-2976 exec execpod-affinity7g88t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.255.0.208 32499'
  I0323 13:32:00.272619 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.255.0.208 32499\nConnection to 10.255.0.208 32499 port [tcp/*] succeeded!\n"
  I0323 13:32:00.272652 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0323 13:32:00.276532 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-2976 exec execpod-affinity7g88t -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.255.0.206:32499/ ; done'
  I0323 13:32:00.395346 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:32499/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:32499/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:32499/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:32499/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:32499/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:32499/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:32499/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:32499/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:32499/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:32499/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:32499/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:32499/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:32499/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:32499/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:32499/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:32499/\n"
  I0323 13:32:00.395397 23 builder.go:147] stdout: "\naffinity-nodeport-transition-9kcbb\naffinity-nodeport-transition-72rs4\naffinity-nodeport-transition-x7z9c\naffinity-nodeport-transition-9kcbb\naffinity-nodeport-transition-72rs4\naffinity-nodeport-transition-x7z9c\naffinity-nodeport-transition-9kcbb\naffinity-nodeport-transition-72rs4\naffinity-nodeport-transition-x7z9c\naffinity-nodeport-transition-9kcbb\naffinity-nodeport-transition-72rs4\naffinity-nodeport-transition-x7z9c\naffinity-nodeport-transition-9kcbb\naffinity-nodeport-transition-72rs4\naffinity-nodeport-transition-x7z9c\naffinity-nodeport-transition-9kcbb"
  I0323 13:32:00.395411 23 service.go:242] Received response from host: affinity-nodeport-transition-9kcbb
  I0323 13:32:00.395422 23 service.go:242] Received response from host: affinity-nodeport-transition-72rs4
  I0323 13:32:00.395431 23 service.go:242] Received response from host: affinity-nodeport-transition-x7z9c
  I0323 13:32:00.395442 23 service.go:242] Received response from host: affinity-nodeport-transition-9kcbb
  I0323 13:32:00.395451 23 service.go:242] Received response from host: affinity-nodeport-transition-72rs4
  I0323 13:32:00.395459 23 service.go:242] Received response from host: affinity-nodeport-transition-x7z9c
  I0323 13:32:00.395467 23 service.go:242] Received response from host: affinity-nodeport-transition-9kcbb
  I0323 13:32:00.395477 23 service.go:242] Received response from host: affinity-nodeport-transition-72rs4
  I0323 13:32:00.395485 23 service.go:242] Received response from host: affinity-nodeport-transition-x7z9c
  I0323 13:32:00.395492 23 service.go:242] Received response from host: affinity-nodeport-transition-9kcbb
  I0323 13:32:00.395501 23 service.go:242] Received response from host: affinity-nodeport-transition-72rs4
  I0323 13:32:00.395508 23 service.go:242] Received response from host: affinity-nodeport-transition-x7z9c
  I0323 13:32:00.395515 23 service.go:242] Received response from host: affinity-nodeport-transition-9kcbb
  I0323 13:32:00.395522 23 service.go:242] Received response from host: affinity-nodeport-transition-72rs4
  I0323 13:32:00.395531 23 service.go:242] Received response from host: affinity-nodeport-transition-x7z9c
  I0323 13:32:00.395540 23 service.go:242] Received response from host: affinity-nodeport-transition-9kcbb
  I0323 13:32:00.399520 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-2976 exec execpod-affinity7g88t -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.255.0.206:32499/ ; done'
  I0323 13:32:00.518248 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:32499/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:32499/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:32499/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:32499/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:32499/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:32499/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:32499/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:32499/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:32499/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:32499/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:32499/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:32499/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:32499/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:32499/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:32499/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.255.0.206:32499/\n"
  I0323 13:32:00.518290 23 builder.go:147] stdout: "\naffinity-nodeport-transition-x7z9c\naffinity-nodeport-transition-x7z9c\naffinity-nodeport-transition-x7z9c\naffinity-nodeport-transition-x7z9c\naffinity-nodeport-transition-x7z9c\naffinity-nodeport-transition-x7z9c\naffinity-nodeport-transition-x7z9c\naffinity-nodeport-transition-x7z9c\naffinity-nodeport-transition-x7z9c\naffinity-nodeport-transition-x7z9c\naffinity-nodeport-transition-x7z9c\naffinity-nodeport-transition-x7z9c\naffinity-nodeport-transition-x7z9c\naffinity-nodeport-transition-x7z9c\naffinity-nodeport-transition-x7z9c\naffinity-nodeport-transition-x7z9c"
  I0323 13:32:00.518366 23 service.go:242] Received response from host: affinity-nodeport-transition-x7z9c
  I0323 13:32:00.518379 23 service.go:242] Received response from host: affinity-nodeport-transition-x7z9c
  I0323 13:32:00.518388 23 service.go:242] Received response from host: affinity-nodeport-transition-x7z9c
  I0323 13:32:00.518401 23 service.go:242] Received response from host: affinity-nodeport-transition-x7z9c
  I0323 13:32:00.518410 23 service.go:242] Received response from host: affinity-nodeport-transition-x7z9c
  I0323 13:32:00.518417 23 service.go:242] Received response from host: affinity-nodeport-transition-x7z9c
  I0323 13:32:00.518423 23 service.go:242] Received response from host: affinity-nodeport-transition-x7z9c
  I0323 13:32:00.518429 23 service.go:242] Received response from host: affinity-nodeport-transition-x7z9c
  I0323 13:32:00.518437 23 service.go:242] Received response from host: affinity-nodeport-transition-x7z9c
  I0323 13:32:00.518443 23 service.go:242] Received response from host: affinity-nodeport-transition-x7z9c
  I0323 13:32:00.518451 23 service.go:242] Received response from host: affinity-nodeport-transition-x7z9c
  I0323 13:32:00.518458 23 service.go:242] Received response from host: affinity-nodeport-transition-x7z9c
  I0323 13:32:00.518468 23 service.go:242] Received response from host: affinity-nodeport-transition-x7z9c
  I0323 13:32:00.518477 23 service.go:242] Received response from host: affinity-nodeport-transition-x7z9c
  I0323 13:32:00.518485 23 service.go:242] Received response from host: affinity-nodeport-transition-x7z9c
  I0323 13:32:00.518493 23 service.go:242] Received response from host: affinity-nodeport-transition-x7z9c
  I0323 13:32:00.518561 23 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-2976, will wait for the garbage collector to delete the pods @ 03/23/25 13:32:00.528
  I0323 13:32:00.583194 23 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 2.663707ms
  I0323 13:32:00.683764 23 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 100.565004ms
  E0323 13:32:00.899258      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:01.900071      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:02.900469      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:32:03.894024 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2976" for this suite. @ 03/23/25 13:32:03.896
• [9.988 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 03/23/25 13:32:03.899
  I0323 13:32:03.899141 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename projected @ 03/23/25 13:32:03.899
  E0323 13:32:03.900736      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:32:03.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:32:03.908
  STEP: Creating configMap with name projected-configmap-test-volume-map-a9418689-f143-4559-9691-9bed709d1928 @ 03/23/25 13:32:03.91
  STEP: Creating a pod to test consume configMaps @ 03/23/25 13:32:03.912
  E0323 13:32:04.900904      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:05.900967      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:32:05.92
  I0323 13:32:05.922250 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-projected-configmaps-d2740969-9851-4d19-ba7f-b0f5f0136eea container agnhost-container: <nil>
  STEP: delete the pod @ 03/23/25 13:32:05.924
  I0323 13:32:05.932850 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2946" for this suite. @ 03/23/25 13:32:05.934
• [2.037 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 03/23/25 13:32:05.936
  I0323 13:32:05.936624 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/23/25 13:32:05.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:32:05.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:32:05.944
  STEP: set up a multi version CRD @ 03/23/25 13:32:05.945
  I0323 13:32:05.945851 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  E0323 13:32:06.901387      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:07.902080      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:08.902909      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: rename a version @ 03/23/25 13:32:08.934
  STEP: check the new version name is served @ 03/23/25 13:32:08.942
  STEP: check the old version name is removed @ 03/23/25 13:32:09.639
  E0323 13:32:09.903774      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 03/23/25 13:32:10.237
  E0323 13:32:10.904018      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:11.904041      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:32:12.618315 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3753" for this suite. @ 03/23/25 13:32:12.622
• [6.690 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:678
  STEP: Creating a kubernetes client @ 03/23/25 13:32:12.626
  I0323 13:32:12.626773 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename svcaccounts @ 03/23/25 13:32:12.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:32:12.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:32:12.634
  STEP: creating a ServiceAccount @ 03/23/25 13:32:12.635
  STEP: watching for the ServiceAccount to be added @ 03/23/25 13:32:12.638
  STEP: patching the ServiceAccount @ 03/23/25 13:32:12.64
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 03/23/25 13:32:12.643
  STEP: deleting the ServiceAccount @ 03/23/25 13:32:12.644
  I0323 13:32:12.649876 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9571" for this suite. @ 03/23/25 13:32:12.723
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 03/23/25 13:32:12.726
  I0323 13:32:12.726127 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename emptydir @ 03/23/25 13:32:12.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:32:12.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:32:12.734
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 03/23/25 13:32:12.735
  E0323 13:32:12.904564      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:13.904669      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:14.904997      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:15.905090      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:32:16.745
  I0323 13:32:16.746965 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-0ce4757e-2d5b-4b7f-b709-b4305dffdca0 container test-container: <nil>
  STEP: delete the pod @ 03/23/25 13:32:16.749
  I0323 13:32:16.756382 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-655" for this suite. @ 03/23/25 13:32:16.757
• [4.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:352
  STEP: Creating a kubernetes client @ 03/23/25 13:32:16.769
  I0323 13:32:16.769066 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename dns @ 03/23/25 13:32:16.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:32:16.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:32:16.778
  STEP: Creating a test externalName service @ 03/23/25 13:32:16.779
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6735.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-6735.svc.cluster.local; sleep 1; done
   @ 03/23/25 13:32:16.782
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6735.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-6735.svc.cluster.local; sleep 1; done
   @ 03/23/25 13:32:16.782
  STEP: creating a pod to probe DNS @ 03/23/25 13:32:16.782
  STEP: submitting the pod to kubernetes @ 03/23/25 13:32:16.782
  E0323 13:32:16.905489      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:17.905624      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 03/23/25 13:32:18.789
  STEP: looking for the results for each expected name from probers @ 03/23/25 13:32:18.79
  I0323 13:32:18.800771 23 dns_common.go:571] DNS probes using dns-test-03ffcd36-09c6-4c57-a9d1-ffd2388fd29b succeeded

  STEP: changing the externalName to bar.example.com @ 03/23/25 13:32:18.8
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6735.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-6735.svc.cluster.local; sleep 1; done
   @ 03/23/25 13:32:18.803
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6735.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-6735.svc.cluster.local; sleep 1; done
   @ 03/23/25 13:32:18.804
  STEP: creating a second pod to probe DNS @ 03/23/25 13:32:18.804
  STEP: submitting the pod to kubernetes @ 03/23/25 13:32:18.804
  E0323 13:32:18.906502      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:19.906664      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:20.907587      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:21.907620      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:22.908216      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:23.908824      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:24.909431      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:25.909561      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:26.909650      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:27.910589      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:28.911453      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:29.911630      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:30.911958      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:31.911976      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:32.912622      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:33.913624      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 03/23/25 13:32:34.826
  STEP: looking for the results for each expected name from probers @ 03/23/25 13:32:34.828
  I0323 13:32:34.835159 23 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-6735.svc.cluster.local from pod  dns-6735/dns-test-6005c4c3-5eae-46c5-bc3c-b7cc4ada770a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0323 13:32:34.836553 23 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-6735.svc.cluster.local from pod  dns-6735/dns-test-6005c4c3-5eae-46c5-bc3c-b7cc4ada770a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0323 13:32:34.836582 23 dns_common.go:506] Lookups using dns-6735/dns-test-6005c4c3-5eae-46c5-bc3c-b7cc4ada770a failed for: [agnhost_udp@dns-test-service-3.dns-6735.svc.cluster.local jessie_udp@dns-test-service-3.dns-6735.svc.cluster.local]

  I0323 13:32:34.846608 23 dns_common.go:514] Pod client logs for webserver: 
  I0323 13:32:34.856595 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0323 13:32:34.858968 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0323 13:32:34.914154      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:35.914305      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:36.914383      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:37.914994      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:38.915972      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:32:39.831260 23 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-6735.svc.cluster.local from pod  dns-6735/dns-test-6005c4c3-5eae-46c5-bc3c-b7cc4ada770a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0323 13:32:39.841249 23 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-6735.svc.cluster.local from pod  dns-6735/dns-test-6005c4c3-5eae-46c5-bc3c-b7cc4ada770a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0323 13:32:39.841281 23 dns_common.go:506] Lookups using dns-6735/dns-test-6005c4c3-5eae-46c5-bc3c-b7cc4ada770a failed for: [agnhost_udp@dns-test-service-3.dns-6735.svc.cluster.local jessie_udp@dns-test-service-3.dns-6735.svc.cluster.local]

  I0323 13:32:39.851257 23 dns_common.go:514] Pod client logs for webserver: 
  I0323 13:32:39.861254 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0323 13:32:39.871235 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0323 13:32:39.916410      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:40.917069      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:41.917200      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:42.917855      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:43.917947      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:32:44.831136 23 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-6735.svc.cluster.local from pod  dns-6735/dns-test-6005c4c3-5eae-46c5-bc3c-b7cc4ada770a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0323 13:32:44.832586 23 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-6735.svc.cluster.local from pod  dns-6735/dns-test-6005c4c3-5eae-46c5-bc3c-b7cc4ada770a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0323 13:32:44.832614 23 dns_common.go:506] Lookups using dns-6735/dns-test-6005c4c3-5eae-46c5-bc3c-b7cc4ada770a failed for: [agnhost_udp@dns-test-service-3.dns-6735.svc.cluster.local jessie_udp@dns-test-service-3.dns-6735.svc.cluster.local]

  I0323 13:32:44.842600 23 dns_common.go:514] Pod client logs for webserver: 
  I0323 13:32:44.850570 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0323 13:32:44.852968 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0323 13:32:44.918181      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:45.918349      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:46.918391      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:47.918486      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:48.918605      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:32:49.840794 23 dns_common.go:571] DNS probes using dns-test-6005c4c3-5eae-46c5-bc3c-b7cc4ada770a succeeded

  STEP: changing the service to type=ClusterIP @ 03/23/25 13:32:49.84
  W0323 13:32:49.848488      23 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6735.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-6735.svc.cluster.local; sleep 1; done
   @ 03/23/25 13:32:49.848
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6735.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-6735.svc.cluster.local; sleep 1; done
   @ 03/23/25 13:32:49.848
  STEP: creating a third pod to probe DNS @ 03/23/25 13:32:49.848
  STEP: submitting the pod to kubernetes @ 03/23/25 13:32:49.849
  E0323 13:32:49.919229      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:50.919377      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 03/23/25 13:32:51.857
  STEP: looking for the results for each expected name from probers @ 03/23/25 13:32:51.858
  I0323 13:32:51.870552 23 dns_common.go:571] DNS probes using dns-test-05619d45-bf41-44a4-b309-3b01912e1e16 succeeded

  STEP: deleting the pod @ 03/23/25 13:32:51.87
  STEP: deleting the pod @ 03/23/25 13:32:51.875
  STEP: deleting the pod @ 03/23/25 13:32:51.883
  STEP: deleting the test externalName service @ 03/23/25 13:32:51.888
  I0323 13:32:51.896813 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6735" for this suite. @ 03/23/25 13:32:51.899
• [35.133 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 03/23/25 13:32:51.902
  I0323 13:32:51.902222 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename downward-api @ 03/23/25 13:32:51.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:32:51.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:32:51.913
  STEP: Creating a pod to test downward API volume plugin @ 03/23/25 13:32:51.914
  E0323 13:32:51.919353      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:52.919495      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:53.920445      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:32:53.923
  I0323 13:32:53.924257 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod downwardapi-volume-7d4acee2-8640-42e2-b087-e6bba34c4f55 container client-container: <nil>
  STEP: delete the pod @ 03/23/25 13:32:53.927
  I0323 13:32:53.935990 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7992" for this suite. @ 03/23/25 13:32:53.937
• [2.037 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 03/23/25 13:32:53.939
  I0323 13:32:53.939569 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 03/23/25 13:32:53.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:32:53.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:32:53.946
  STEP: create the container to handle the HTTPGet hook request. @ 03/23/25 13:32:54.038
  E0323 13:32:54.921200      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:55.921263      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 03/23/25 13:32:56.048
  E0323 13:32:56.921360      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:57.921501      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 03/23/25 13:32:58.056
  STEP: delete the pod with lifecycle hook @ 03/23/25 13:32:58.059
  E0323 13:32:58.921831      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:32:59.921890      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:33:00.065676 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8326" for this suite. @ 03/23/25 13:33:00.067
• [6.131 seconds]
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 03/23/25 13:33:00.07
  I0323 13:33:00.070959 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename pods @ 03/23/25 13:33:00.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:33:00.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:33:00.076
  STEP: creating a Pod with a static label @ 03/23/25 13:33:00.086
  STEP: watching for Pod to be ready @ 03/23/25 13:33:00.09
  I0323 13:33:00.098967 23 pods.go:945] observed Pod pod-test in namespace pods-3269 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0323 13:33:00.100494 23 pods.go:945] observed Pod pod-test in namespace pods-3269 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-03-23 13:33:00 +0000 UTC  }]
  I0323 13:33:00.106013 23 pods.go:945] observed Pod pod-test in namespace pods-3269 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-03-23 13:33:00 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-03-23 13:33:00 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-03-23 13:33:00 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-03-23 13:33:00 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-03-23 13:33:00 +0000 UTC  }]
  I0323 13:33:00.774417 23 pods.go:948] Found Pod pod-test in namespace pods-3269 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-03-23 13:33:00 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-03-23 13:33:00 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2025-03-23 13:33:00 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2025-03-23 13:33:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-03-23 13:33:00 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 03/23/25 13:33:00.775
  STEP: getting the Pod and ensuring that it's patched @ 03/23/25 13:33:00.78
  STEP: replacing the Pod's status Ready condition to False @ 03/23/25 13:33:00.782
  STEP: check the Pod again to ensure its Ready conditions are False @ 03/23/25 13:33:00.788
  STEP: deleting the Pod via a Collection with a LabelSelector @ 03/23/25 13:33:00.788
  STEP: watching for the Pod to be deleted @ 03/23/25 13:33:00.791
  I0323 13:33:00.792824 23 pods.go:1058] observed event type MODIFIED
  E0323 13:33:00.921995      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:33:01.239165 23 pods.go:1058] observed event type MODIFIED
  E0323 13:33:01.922926      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:33:02.778399 23 pods.go:1058] observed event type MODIFIED
  E0323 13:33:02.923502      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:33:02.932680 23 pods.go:1058] observed event type MODIFIED
  I0323 13:33:03.781657 23 pods.go:1058] observed event type MODIFIED
  I0323 13:33:03.785007 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3269" for this suite. @ 03/23/25 13:33:03.786
• [3.718 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3599
  STEP: Creating a kubernetes client @ 03/23/25 13:33:03.788
  I0323 13:33:03.788859 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename services @ 03/23/25 13:33:03.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:33:03.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:33:03.796
  STEP: creating a collection of services @ 03/23/25 13:33:03.797
  I0323 13:33:03.797747 23 service.go:3635] Creating e2e-svc-a-b5gmt
  I0323 13:33:03.803206 23 service.go:3635] Creating e2e-svc-b-9l8n4
  I0323 13:33:03.808760 23 service.go:3635] Creating e2e-svc-c-96wf4
  STEP: deleting service collection @ 03/23/25 13:33:03.815
  I0323 13:33:03.828214 23 service.go:3670] Collection of services has been deleted
  I0323 13:33:03.828326 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3548" for this suite. @ 03/23/25 13:33:03.887
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 03/23/25 13:33:03.891
  I0323 13:33:03.891213 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename custom-resource-definition @ 03/23/25 13:33:03.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:33:03.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:33:03.9
  I0323 13:33:03.902462 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  E0323 13:33:03.924040      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:33:04.432429 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1165" for this suite. @ 03/23/25 13:33:04.434
• [0.545 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:152
  STEP: Creating a kubernetes client @ 03/23/25 13:33:04.436
  I0323 13:33:04.436338 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename dns @ 03/23/25 13:33:04.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:33:04.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:33:04.443
  STEP: Creating a test headless service @ 03/23/25 13:33:04.444
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2522.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-2522.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2522.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-2522.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2522.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2522.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2522.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-2522.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2522.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-2522.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 234.13.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.13.234_udp@PTR;check="$$(dig +tcp +noall +answer +search 234.13.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.13.234_tcp@PTR;sleep 1; done
   @ 03/23/25 13:33:04.455
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2522.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2522.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2522.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2522.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2522.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2522.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2522.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-2522.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2522.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-2522.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 234.13.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.13.234_udp@PTR;check="$$(dig +tcp +noall +answer +search 234.13.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.13.234_tcp@PTR;sleep 1; done
   @ 03/23/25 13:33:04.455
  STEP: creating a pod to probe DNS @ 03/23/25 13:33:04.455
  STEP: submitting the pod to kubernetes @ 03/23/25 13:33:04.455
  E0323 13:33:04.924812      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:05.924950      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 03/23/25 13:33:06.465
  STEP: looking for the results for each expected name from probers @ 03/23/25 13:33:06.467
  I0323 13:33:06.477120 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:06.483398 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:06.487103 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:06.488311 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:06.527105 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:06.528324 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:06.538363 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:06.548356 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:06.579600 23 dns_common.go:506] Lookups using dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85 failed for: [agnhost_udp@dns-test-service.dns-2522.svc.cluster.local agnhost_tcp@dns-test-service.dns-2522.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local jessie_udp@dns-test-service.dns-2522.svc.cluster.local jessie_tcp@dns-test-service.dns-2522.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local]

  I0323 13:33:06.589604 23 dns_common.go:514] Pod client logs for webserver: 
  I0323 13:33:06.594727 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0323 13:33:06.604802 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0323 13:33:06.925027      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:07.925169      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:08.925296      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:09.925445      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:10.925521      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:33:11.475865 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:11.479733 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:11.489730 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:11.499744 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:11.537080 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:11.547025 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:11.548294 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:11.558329 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:11.580696 23 dns_common.go:506] Lookups using dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85 failed for: [agnhost_udp@dns-test-service.dns-2522.svc.cluster.local agnhost_tcp@dns-test-service.dns-2522.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local jessie_udp@dns-test-service.dns-2522.svc.cluster.local jessie_tcp@dns-test-service.dns-2522.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local]

  I0323 13:33:11.590718 23 dns_common.go:514] Pod client logs for webserver: 
  I0323 13:33:11.600722 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0323 13:33:11.609583 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0323 13:33:11.926040      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:12.926136      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:13.926261      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:14.926415      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:15.927059      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:33:16.479525 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:16.489540 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:16.490961 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:16.501017 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:16.542172 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:16.550998 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:16.561063 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:16.571040 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:16.602436 23 dns_common.go:506] Lookups using dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85 failed for: [agnhost_udp@dns-test-service.dns-2522.svc.cluster.local agnhost_tcp@dns-test-service.dns-2522.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local jessie_udp@dns-test-service.dns-2522.svc.cluster.local jessie_tcp@dns-test-service.dns-2522.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local]

  I0323 13:33:16.605054 23 dns_common.go:514] Pod client logs for webserver: 
  I0323 13:33:16.615123 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0323 13:33:16.625143 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0323 13:33:16.927613      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:17.927750      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:18.928831      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:19.928966      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:20.929116      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:33:21.479332 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:21.489328 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:21.499316 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:21.509308 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:21.559320 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:21.562398 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:21.579344 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:21.589343 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:21.612267 23 dns_common.go:506] Lookups using dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85 failed for: [agnhost_udp@dns-test-service.dns-2522.svc.cluster.local agnhost_tcp@dns-test-service.dns-2522.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local jessie_udp@dns-test-service.dns-2522.svc.cluster.local jessie_tcp@dns-test-service.dns-2522.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local]

  I0323 13:33:21.622308 23 dns_common.go:514] Pod client logs for webserver: 
  I0323 13:33:21.632296 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0323 13:33:21.641031 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0323 13:33:21.929180      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:22.929332      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:23.929452      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:24.929537      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:25.929609      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:33:26.470467 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:26.480439 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:26.490431 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:26.500432 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:26.533106 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:26.534433 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:26.544470 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:26.545785 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:26.583092 23 dns_common.go:506] Lookups using dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85 failed for: [agnhost_udp@dns-test-service.dns-2522.svc.cluster.local agnhost_tcp@dns-test-service.dns-2522.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local jessie_udp@dns-test-service.dns-2522.svc.cluster.local jessie_tcp@dns-test-service.dns-2522.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local]

  I0323 13:33:26.585997 23 dns_common.go:514] Pod client logs for webserver: 
  I0323 13:33:26.593071 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0323 13:33:26.603087 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0323 13:33:26.930561      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:27.930652      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:28.930736      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:29.930874      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:30.931020      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:33:31.479256 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:31.480795 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:31.490793 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:31.500817 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:31.550836 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:31.552064 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:31.553235 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:31.563294 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local from pod dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85: the server could not find the requested resource (get pods dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85)
  I0323 13:33:31.594246 23 dns_common.go:506] Lookups using dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85 failed for: [agnhost_udp@dns-test-service.dns-2522.svc.cluster.local agnhost_tcp@dns-test-service.dns-2522.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local jessie_udp@dns-test-service.dns-2522.svc.cluster.local jessie_tcp@dns-test-service.dns-2522.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2522.svc.cluster.local]

  I0323 13:33:31.596830 23 dns_common.go:514] Pod client logs for webserver: 
  I0323 13:33:31.606194 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0323 13:33:31.616213 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0323 13:33:31.931716      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:32.931809      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:33.932832      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:34.932916      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:35.932983      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:33:36.583434 23 dns_common.go:546] DNS probes using dns-2522/dns-test-96e6f9e7-6443-4784-b6b4-f3b659e9cc85 succeeded

  STEP: deleting the pod @ 03/23/25 13:33:36.583
  STEP: deleting the test service @ 03/23/25 13:33:36.594
  STEP: deleting the test headless service @ 03/23/25 13:33:36.607
  I0323 13:33:36.614637 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2522" for this suite. @ 03/23/25 13:33:36.616
• [32.183 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 03/23/25 13:33:36.619
  I0323 13:33:36.619243 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename configmap @ 03/23/25 13:33:36.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:33:36.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:33:36.676
  STEP: Creating configMap configmap-5047/configmap-test-01a7838f-04cd-4ec5-a2cb-fd4c7baf1b6c @ 03/23/25 13:33:36.678
  STEP: Creating a pod to test consume configMaps @ 03/23/25 13:33:36.68
  E0323 13:33:36.933781      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:37.933935      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:38.934925      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:39.935055      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:33:40.69
  I0323 13:33:40.691824 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-configmaps-1fc11ada-e96f-4a05-a784-bd150746df01 container env-test: <nil>
  STEP: delete the pod @ 03/23/25 13:33:40.694
  I0323 13:33:40.701454 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5047" for this suite. @ 03/23/25 13:33:40.702
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 03/23/25 13:33:40.705
  I0323 13:33:40.705453 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename server-version @ 03/23/25 13:33:40.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:33:40.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:33:40.711
  STEP: Request ServerVersion @ 03/23/25 13:33:40.713
  STEP: Confirm major version @ 03/23/25 13:33:40.713
  I0323 13:33:40.713689 23 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 03/23/25 13:33:40.713
  I0323 13:33:40.713718 23 server_version.go:58] cleanMinorVersion: 32
  I0323 13:33:40.713730 23 server_version.go:62] Minor version: 32
  I0323 13:33:40.713793 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-2556" for this suite. @ 03/23/25 13:33:40.803
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 03/23/25 13:33:40.807
  I0323 13:33:40.807042 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename daemonsets @ 03/23/25 13:33:40.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:33:40.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:33:40.814
  STEP: Creating simple DaemonSet "daemon-set" @ 03/23/25 13:33:40.907
  STEP: Check that daemon pods launch on every node of the cluster. @ 03/23/25 13:33:40.909
  E0323 13:33:40.936076      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:33:41.006205 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0323 13:33:41.006235 23 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  I0323 13:33:41.917295 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0323 13:33:41.917334 23 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  E0323 13:33:41.936314      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:33:42.913872 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0323 13:33:42.913901 23 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 03/23/25 13:33:42.915
  E0323 13:33:42.936883      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:33:43.014198 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0323 13:33:43.014227 23 fixtures.go:131] Node k8s-10-255-0-208 is running 0 daemon pod, expected 1
  I0323 13:33:43.923900 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0323 13:33:43.923927 23 fixtures.go:131] Node k8s-10-255-0-208 is running 0 daemon pod, expected 1
  E0323 13:33:43.937954      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:33:44.924191 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0323 13:33:44.924219 23 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 03/23/25 13:33:44.925
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7658, will wait for the garbage collector to delete the pods @ 03/23/25 13:33:44.925
  E0323 13:33:44.938076      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:33:44.979967 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 2.805101ms
  I0323 13:33:45.080314 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.343587ms
  E0323 13:33:45.938964      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:33:46.591171 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0323 13:33:46.591201 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0323 13:33:46.592824 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"32201"},"items":null}

  I0323 13:33:46.593937 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"32201"},"items":null}

  I0323 13:33:46.598578 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7658" for this suite. @ 03/23/25 13:33:46.599
• [5.795 seconds]
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 03/23/25 13:33:46.602
  I0323 13:33:46.602012 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename container-runtime @ 03/23/25 13:33:46.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:33:46.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:33:46.61
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 03/23/25 13:33:46.615
  E0323 13:33:46.939004      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:47.939894      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:48.940774      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:49.941707      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:50.941793      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:51.942384      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:52.943267      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:53.944106      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:54.944830      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:55.944841      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:56.944913      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:57.945730      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:58.946366      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:33:59.947339      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:34:00.948221      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:34:01.949129      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 03/23/25 13:34:02.658
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 03/23/25 13:34:02.659
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 03/23/25 13:34:02.661
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 03/23/25 13:34:02.661
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 03/23/25 13:34:02.671
  E0323 13:34:02.949402      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:34:03.949895      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:34:04.950785      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 03/23/25 13:34:05.681
  E0323 13:34:05.951039      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 03/23/25 13:34:06.685
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 03/23/25 13:34:06.688
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 03/23/25 13:34:06.688
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 03/23/25 13:34:06.697
  E0323 13:34:06.951676      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 03/23/25 13:34:07.7
  E0323 13:34:07.951774      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:34:08.952816      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 03/23/25 13:34:09.707
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 03/23/25 13:34:09.709
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 03/23/25 13:34:09.709
  I0323 13:34:09.719197 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9338" for this suite. @ 03/23/25 13:34:09.72
• [23.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 03/23/25 13:34:09.723
  I0323 13:34:09.723935 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename secrets @ 03/23/25 13:34:09.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:34:09.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:34:09.731
  STEP: Creating secret with name secret-test-44b96fbb-37ef-423e-905e-01e8cfa6f4bd @ 03/23/25 13:34:09.733
  STEP: Creating a pod to test consume secrets @ 03/23/25 13:34:09.735
  E0323 13:34:09.953518      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:34:10.953674      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:34:11.954580      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:34:12.954718      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:34:13.743
  I0323 13:34:13.744575 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-secrets-0dceccdd-2c1d-45d6-916a-cf93f3caa52b container secret-env-test: <nil>
  STEP: delete the pod @ 03/23/25 13:34:13.747
  I0323 13:34:13.754127 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2603" for this suite. @ 03/23/25 13:34:13.755
• [4.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 03/23/25 13:34:13.758
  I0323 13:34:13.758263 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename field-validation @ 03/23/25 13:34:13.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:34:13.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:34:13.765
  STEP: apply creating a deployment @ 03/23/25 13:34:13.767
  I0323 13:34:13.783076 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9656" for this suite. @ 03/23/25 13:34:13.856
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 03/23/25 13:34:13.86
  I0323 13:34:13.860574 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename container-probe @ 03/23/25 13:34:13.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:34:13.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:34:13.868
  STEP: Creating pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338 @ 03/23/25 13:34:13.87
  E0323 13:34:13.954764      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:34:14.954910      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 03/23/25 13:34:15.878
  I0323 13:34:15.879831 23 container_probe.go:1749] Initial restart count of pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a is 0
  I0323 13:34:15.880919 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:34:15.955087      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:34:16.955378      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:34:17.882790 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:34:17.955254      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:34:18.955355      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:34:19.885686 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:34:19.955737      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:34:20.955763      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:34:21.888503 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:34:21.956601      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:34:22.956824      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:34:23.890645 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:34:23.957675      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:34:24.957805      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:34:25.892561 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:34:25.958657      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:34:26.958951      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:34:27.895225 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:34:27.959323      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:34:28.959448      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:34:29.897175 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:34:29.960256      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:34:30.960815      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:34:31.899115 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:34:31.961219      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:34:32.961362      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:34:33.901034 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:34:33.962150      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:34:34.962295      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:34:35.903033 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:34:35.963188      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:34:36.963324      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:34:37.905078 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:34:37.964132      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:34:38.964813      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:34:39.907528 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:34:39.965611      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:34:40.965739      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:34:41.909502 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:34:41.966593      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:34:42.966728      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:34:43.911506 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:34:43.967604      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:34:44.967746      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:34:45.913594 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:34:45.968700      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:34:46.968828      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:34:47.915587 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:34:47.969658      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:34:48.969782      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:34:49.917548 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:34:49.970634      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:34:50.970763      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:34:51.919562 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:34:51.971636      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:34:52.971763      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:34:53.921583 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:34:53.972734      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:34:54.973668      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:34:55.924475 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:34:55.974568      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:34:56.974710      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:34:57.926387 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:34:57.975493      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:34:58.975613      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:34:59.928553 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:34:59.976616      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:35:00.976744      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:35:01.930502 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:35:01.977594      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:35:02.977729      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:35:03.934256 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:35:03.978358      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:35:04.979435      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:35:05.936287 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:35:05.980436      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:35:06.980818      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:35:07.938195 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:35:07.981299      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:35:08.981405      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:35:09.940241 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:35:09.982413      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:35:10.983455      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:35:11.942583 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:35:11.983637      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:35:12.983761      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:35:13.944612 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:35:13.984676      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:35:14.984760      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:35:15.946518 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:35:15.985625      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:35:16.985769      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:35:17.948472 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:35:17.986560      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:35:18.986689      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:35:19.950613 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:35:19.987686      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:35:20.987761      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:35:21.952806 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:35:21.987905      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:35:22.988819      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:35:23.955774 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:35:23.988862      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:35:24.988994      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:35:25.958650 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:35:25.989717      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:35:26.989858      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:35:27.960646 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:35:27.990753      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:35:28.990877      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:35:29.962734 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:35:29.991872      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:35:30.992815      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:35:31.965440 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:35:31.993522      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:35:32.993670      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:35:33.967389 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:35:33.994449      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:35:34.994571      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:35:35.969377 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:35:35.995510      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:35:36.995636      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:35:37.971606 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:35:37.996683      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:35:38.996807      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:35:39.973496 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:35:39.997554      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:35:40.997684      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:35:41.975396 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:35:41.998533      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:35:42.999068      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:35:43.977585 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:35:43.999674      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:35:44.999775      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:35:45.979557 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:35:46.000650      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:35:47.000782      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:35:47.981590 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:35:48.001746      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:35:49.002687      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:35:49.984367 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:35:50.003409      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:35:51.003505      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:35:51.986553 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:35:52.003558      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:35:53.003709      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:35:53.988593 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:35:54.004608      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:35:55.004811      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:35:55.990567 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:35:56.005643      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:35:57.005769      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:35:57.992643 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:35:58.006729      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:35:59.006861      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:35:59.995390 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:36:00.007450      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:36:01.007545      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:36:01.997354 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:36:02.008416      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:36:03.008819      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:36:03.999304 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:36:04.009366      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:36:05.009464      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:36:06.001279 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:36:06.010414      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:36:07.010517      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:36:08.003488 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:36:08.011550      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:36:09.012590      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:36:10.005603 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:36:10.012598      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:36:11.012943      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:36:12.007819 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:36:12.013933      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:36:13.014042      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:36:14.010611 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:36:14.014677      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:36:15.014816      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:36:16.012544 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:36:16.015615      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:36:17.015888      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:36:18.014893 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:36:18.015850      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:36:19.016682      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:36:20.016750      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:36:20.017547 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:36:21.016853      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:36:22.017006      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:36:22.019777 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:36:23.017090      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:36:24.017205      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:36:24.022130 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:36:25.018175      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:36:26.018270      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:36:26.024200 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:36:27.019180      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:36:28.019314      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:36:28.026393 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:36:29.019439      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:36:30.019571      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:36:30.028620 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:36:31.019680      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:36:32.019760      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:36:32.030661 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:36:33.019844      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:36:34.020811      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:36:34.032589 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:36:35.021594      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:36:36.021725      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:36:36.034721 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:36:37.021791      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:36:38.022402      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:36:38.037471 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:36:39.022451      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:36:40.022603      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:36:40.039464 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:36:41.023474      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:36:42.023546      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:36:42.041415 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:36:43.023767      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:36:44.024002      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:36:44.043912 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:36:45.024860      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:36:46.024946      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:36:46.046873 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:36:47.025812      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:36:48.025958      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:36:48.049549 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:36:49.026604      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:36:50.026760      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:36:50.051677 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:36:51.026847      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:36:52.026986      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:36:52.053901 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:36:53.027763      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:36:54.028827      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:36:54.056742 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:36:55.029771      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:36:56.029932      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:36:56.058843 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:36:57.030793      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:36:58.031774      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:36:58.061730 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:36:59.032828      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:37:00.033338      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:37:00.064274 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:37:01.034326      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:37:02.034400      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:37:02.066295 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:37:03.034648      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:37:04.034736      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:37:04.068666 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:37:05.035640      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:37:06.035770      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:37:06.070573 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:37:07.036842      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:37:08.037099      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:37:08.073246 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:37:09.037277      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:37:10.037416      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:37:10.075236 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:37:11.038223      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:37:12.038369      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:37:12.077283 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:37:13.038457      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:37:14.038573      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:37:14.079494 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:37:15.039413      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:37:16.039547      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:37:16.080825 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:37:17.039775      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:37:18.039783      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:37:18.083884 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:37:19.040819      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:37:20.040950      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:37:20.085811 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:37:21.041400      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:37:22.041542      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:37:22.088305 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:37:23.042270      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:37:24.042396      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:37:24.090198 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:37:25.042608      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:37:26.042696      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:37:26.092564 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:37:27.043509      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:37:28.043683      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:37:28.094591 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:37:29.044726      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:37:30.044862      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:37:30.096881 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:37:31.044949      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:37:32.045023      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:37:32.098798 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:37:33.045744      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:37:34.045861      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:37:34.100742 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:37:35.046687      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:37:36.046754      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:37:36.103732 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:37:37.047748      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:37:38.047764      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:37:38.106896 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:37:39.048828      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:37:40.048964      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:37:40.108718 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:37:41.049070      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:37:42.049202      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:37:42.111267 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:37:43.049260      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:37:44.049387      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:37:44.113365 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:37:45.050252      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:37:46.050408      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:37:46.115272 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:37:47.050494      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:37:48.050643      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:37:48.117780 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:37:49.050744      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:37:50.050898      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:37:50.119799 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:37:51.051704      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:37:52.051859      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:37:52.121736 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:37:53.052899      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:37:54.053317      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:37:54.124350 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:37:55.054348      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:37:56.054501      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:37:56.126384 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:37:57.055319      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:37:58.055387      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:37:58.129453 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:37:59.055496      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:00.055618      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:38:00.131563 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:38:01.055736      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:02.055893      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:38:02.133319 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:38:03.056842      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:04.056960      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:38:04.135902 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:38:05.057039      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:06.057105      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:38:06.138244 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:38:07.057224      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:08.057397      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:38:08.140756 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:38:09.057711      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:10.057841      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:38:10.142723 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:38:11.058685      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:12.058732      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:38:12.144783 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:38:13.058773      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:14.058881      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:38:14.146876 23 container_probe.go:1759] Get pod test-grpc-af1bacde-088e-42ff-8287-af9d5fae304a in namespace container-probe-338
  E0323 13:38:15.059770      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:16.059764      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 03/23/25 13:38:16.147
  I0323 13:38:16.154601 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-338" for this suite. @ 03/23/25 13:38:16.156
• [242.299 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 03/23/25 13:38:16.159
  I0323 13:38:16.159396 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename pods @ 03/23/25 13:38:16.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:38:16.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:38:16.166
  STEP: creating pod @ 03/23/25 13:38:16.168
  E0323 13:38:17.060015      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:18.060041      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:38:18.177685 23 pods.go:83] Pod pod-hostip-bd2eae06-7fdf-467a-9fcb-b334bb628a0b has hostIP: 10.255.0.207
  I0323 13:38:18.177791 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2548" for this suite. @ 03/23/25 13:38:18.179
• [2.022 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 03/23/25 13:38:18.181
  I0323 13:38:18.181584 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename pods @ 03/23/25 13:38:18.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:38:18.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:38:18.187
  I0323 13:38:18.189401 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: creating the pod @ 03/23/25 13:38:18.189
  STEP: submitting the pod to kubernetes @ 03/23/25 13:38:18.189
  E0323 13:38:19.060821      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:20.060917      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:38:20.243981 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6336" for this suite. @ 03/23/25 13:38:20.245
• [2.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 03/23/25 13:38:20.248
  I0323 13:38:20.248568 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename subpath @ 03/23/25 13:38:20.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:38:20.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:38:20.256
  STEP: Setting up data @ 03/23/25 13:38:20.257
  STEP: Creating pod pod-subpath-test-configmap-vp26 @ 03/23/25 13:38:20.263
  STEP: Creating a pod to test atomic-volume-subpath @ 03/23/25 13:38:20.263
  E0323 13:38:21.061126      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:22.061206      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:23.062099      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:24.063103      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:25.063700      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:26.063766      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:27.064574      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:28.064794      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:29.064884      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:30.064941      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:31.065933      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:32.066067      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:33.066861      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:34.066979      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:35.067724      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:36.067775      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:37.068671      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:38.068804      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:39.068893      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:40.069021      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:41.070004      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:42.070136      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:38:42.294
  I0323 13:38:42.295316 23 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-subpath-test-configmap-vp26 container test-container-subpath-configmap-vp26: <nil>
  STEP: delete the pod @ 03/23/25 13:38:42.303
  STEP: Deleting pod pod-subpath-test-configmap-vp26 @ 03/23/25 13:38:42.309
  I0323 13:38:42.309815 23 delete.go:62] Deleting pod "pod-subpath-test-configmap-vp26" in namespace "subpath-5630"
  I0323 13:38:42.310852 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5630" for this suite. @ 03/23/25 13:38:42.312
• [22.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 03/23/25 13:38:42.314
  I0323 13:38:42.314693 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename pod-network-test @ 03/23/25 13:38:42.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:38:42.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:38:42.32
  STEP: Performing setup for networking test in namespace pod-network-test-4194 @ 03/23/25 13:38:42.322
  STEP: creating a selector @ 03/23/25 13:38:42.322
  STEP: Creating the service pods in kubernetes @ 03/23/25 13:38:42.322
  I0323 13:38:42.322488 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0323 13:38:43.070915      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:44.071019      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:45.071846      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:46.072812      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:47.073710      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:48.073941      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:49.074040      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:50.074174      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:51.075155      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:52.075298      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:53.075776      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:54.076834      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:55.076913      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:56.077046      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 03/23/25 13:38:56.457
  E0323 13:38:57.077961      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:38:58.078031      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:38:58.470574 23 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0323 13:38:58.470599 23 utils.go:496] Going to poll 172.20.63.213 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0323 13:38:58.471577 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.20.63.213:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4194 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0323 13:38:58.471592 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0323 13:38:58.471634 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-4194/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.20.63.213%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0323 13:38:58.499182 23 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0323 13:38:58.499222 23 utils.go:496] Going to poll 172.20.254.34 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0323 13:38:58.500535 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.20.254.34:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4194 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0323 13:38:58.500554 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0323 13:38:58.500598 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-4194/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.20.254.34%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0323 13:38:58.525515 23 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0323 13:38:58.525549 23 utils.go:496] Going to poll 172.20.64.149 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0323 13:38:58.526739 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.20.64.149:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4194 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0323 13:38:58.526757 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0323 13:38:58.526798 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-4194/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.20.64.149%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0323 13:38:58.553745 23 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0323 13:38:58.553897 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4194" for this suite. @ 03/23/25 13:38:58.555
• [16.243 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 03/23/25 13:38:58.558
  I0323 13:38:58.558087 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename kubelet-test @ 03/23/25 13:38:58.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:38:58.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:38:58.571
  E0323 13:38:59.078708      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:39:00.079020      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:39:00.596655 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-633" for this suite. @ 03/23/25 13:39:00.598
• [2.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 03/23/25 13:39:00.6
  I0323 13:39:00.600946 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename tables @ 03/23/25 13:39:00.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:39:00.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:39:00.608
  I0323 13:39:00.611129 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-2300" for this suite. @ 03/23/25 13:39:00.613
• [0.015 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 03/23/25 13:39:00.615
  I0323 13:39:00.615915 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename field-validation @ 03/23/25 13:39:00.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:39:00.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:39:00.623
  I0323 13:39:00.624868 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  E0323 13:39:01.079630      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:39:02.079770      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:39:03.080819      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  W0323 13:39:03.154583      23 warnings.go:70] unknown field "alpha"
  W0323 13:39:03.154598      23 warnings.go:70] unknown field "beta"
  W0323 13:39:03.154602      23 warnings.go:70] unknown field "delta"
  W0323 13:39:03.154605      23 warnings.go:70] unknown field "epsilon"
  W0323 13:39:03.154609      23 warnings.go:70] unknown field "gamma"
  I0323 13:39:03.684142 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6818" for this suite. @ 03/23/25 13:39:03.685
• [3.073 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 03/23/25 13:39:03.689
  I0323 13:39:03.689188 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename secrets @ 03/23/25 13:39:03.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:39:03.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:39:03.695
  STEP: Creating projection with secret that has name secret-emptykey-test-87f4989b-0ec0-482b-a906-eb67774b7bbd @ 03/23/25 13:39:03.697
  I0323 13:39:03.698105 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1060" for this suite. @ 03/23/25 13:39:03.786
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 03/23/25 13:39:03.789
  I0323 13:39:03.789905 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename webhook @ 03/23/25 13:39:03.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:39:03.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:39:03.798
  STEP: Setting up server cert @ 03/23/25 13:39:03.807
  E0323 13:39:04.081122      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/23/25 13:39:04.122
  STEP: Deploying the webhook pod @ 03/23/25 13:39:04.125
  STEP: Wait for the deployment to be ready @ 03/23/25 13:39:04.131
  I0323 13:39:04.139381 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0323 13:39:05.081464      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:39:06.081628      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/23/25 13:39:06.162
  STEP: Verifying the service has paired with the endpoint @ 03/23/25 13:39:06.169
  E0323 13:39:07.082116      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:39:07.170193 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 03/23/25 13:39:07.173
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 03/23/25 13:39:07.182
  STEP: Creating a dummy validating-webhook-configuration object @ 03/23/25 13:39:07.188
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 03/23/25 13:39:07.193
  STEP: Creating a dummy mutating-webhook-configuration object @ 03/23/25 13:39:07.195
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 03/23/25 13:39:07.198
  I0323 13:39:07.221590 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3285" for this suite. @ 03/23/25 13:39:07.223
  STEP: Destroying namespace "webhook-markers-259" for this suite. @ 03/23/25 13:39:07.226
• [3.440 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 03/23/25 13:39:07.229
  I0323 13:39:07.229846 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename emptydir @ 03/23/25 13:39:07.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:39:07.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:39:07.238
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 03/23/25 13:39:07.24
  E0323 13:39:08.082888      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:39:09.082998      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:39:10.083880      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:39:11.084042      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:39:11.251
  I0323 13:39:11.252481 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-606bbad8-fdf3-4a2f-8be1-a223ebb2f355 container test-container: <nil>
  STEP: delete the pod @ 03/23/25 13:39:11.255
  I0323 13:39:11.261882 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8183" for this suite. @ 03/23/25 13:39:11.263
• [4.037 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 03/23/25 13:39:11.266
  I0323 13:39:11.266557 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename downward-api @ 03/23/25 13:39:11.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:39:11.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:39:11.275
  STEP: Creating a pod to test downward API volume plugin @ 03/23/25 13:39:11.276
  E0323 13:39:12.084115      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:39:13.084818      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:39:14.085908      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:39:15.086059      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:39:15.285
  I0323 13:39:15.287076 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod downwardapi-volume-f451dbfa-bac6-4146-977b-09a5a89c7a93 container client-container: <nil>
  STEP: delete the pod @ 03/23/25 13:39:15.289
  I0323 13:39:15.296075 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2518" for this suite. @ 03/23/25 13:39:15.297
• [4.033 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 03/23/25 13:39:15.299
  I0323 13:39:15.300005 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename container-probe @ 03/23/25 13:39:15.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:39:15.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:39:15.307
  STEP: Creating pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546 @ 03/23/25 13:39:15.309
  E0323 13:39:16.086470      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:39:17.086606      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 03/23/25 13:39:17.315
  I0323 13:39:17.316969 23 container_probe.go:1749] Initial restart count of pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 is 0
  I0323 13:39:17.318022 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:39:18.086854      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:39:19.086974      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:39:19.320242 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:39:20.087045      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:39:21.087199      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:39:21.322187 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:39:22.087777      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:39:23.087843      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:39:23.324997 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:39:24.088815      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:39:25.088887      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:39:25.326934 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:39:26.089825      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:39:27.089993      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:39:27.328960 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:39:28.090668      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:39:29.090798      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:39:29.332107 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:39:30.090874      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:39:31.091006      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:39:31.334089 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:39:32.091948      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:39:33.092816      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:39:33.336993 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:39:34.093806      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:39:35.093933      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:39:35.338968 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:39:36.094731      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:39:37.094892      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:39:37.340860 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:39:38.095571      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:39:39.095669      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:39:39.343946 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:39:40.095718      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:39:41.095771      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:39:41.346716 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:39:42.095851      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:39:43.095940      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:39:43.349178 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:39:44.096832      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:39:45.096968      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:39:45.352132 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:39:46.097936      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:39:47.098020      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:39:47.354053 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:39:48.098850      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:39:49.098994      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:39:49.356416 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:39:50.099189      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:39:51.099345      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:39:51.358450 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:39:52.100229      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:39:53.100312      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:39:53.360448 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:39:54.100827      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:39:55.100991      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:39:55.363125 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:39:56.101990      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:39:57.102126      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:39:57.365090 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:39:58.102771      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:39:59.103714      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:39:59.367980 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:40:00.104756      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:40:01.104911      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:40:01.369845 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:40:02.105639      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:40:03.105790      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:40:03.371756 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:40:04.106532      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:40:05.106679      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:40:05.374651 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:40:06.107370      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:40:07.107445      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:40:07.377679 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:40:08.107492      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:40:09.107596      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:40:09.379855 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:40:10.108637      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:40:11.108707      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:40:11.381746 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:40:12.108828      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:40:13.108980      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:40:13.384144 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:40:14.109990      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:40:15.110097      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:40:15.386114 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:40:16.110817      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:40:17.111074      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:40:17.388076 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:40:18.111845      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:40:19.112823      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:40:19.391048 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:40:20.113780      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:40:21.113908      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:40:21.392928 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:40:22.114624      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:40:23.114773      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:40:23.394739 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:40:24.115441      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:40:25.115521      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:40:25.397714 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:40:26.116536      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:40:27.116815      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:40:27.399532 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:40:28.117239      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:40:29.117349      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:40:29.401608 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:40:30.118353      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:40:31.118484      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:40:31.403599 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:40:32.119415      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:40:33.119549      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:40:33.405466 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:40:34.119765      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:40:35.120810      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:40:35.408057 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:40:36.121803      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:40:37.121934      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:40:37.410100 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:40:38.122912      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:40:39.123863      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:40:39.413144 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:40:40.124813      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:40:41.124897      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:40:41.415819 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:40:42.124983      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:40:43.125123      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:40:43.418467 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:40:44.125206      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:40:45.125339      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:40:45.420409 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:40:46.126140      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:40:47.126265      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:40:47.422207 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:40:48.126357      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:40:49.126478      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:40:49.424876 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:40:50.126611      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:40:51.126744      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:40:51.426904 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:40:52.127618      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:40:53.127756      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:40:53.428946 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:40:54.128402      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:40:55.128820      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:40:55.431020 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:40:56.129813      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:40:57.129942      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:40:57.432991 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:40:58.130026      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:40:59.130107      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:40:59.435333 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:41:00.131078      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:41:01.131169      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:41:01.437337 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:41:02.132132      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:41:03.132818      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:41:03.440102 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:41:04.133714      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:41:05.133796      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:41:05.442936 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:41:06.134671      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:41:07.134809      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:41:07.444964 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:41:08.135744      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:41:09.135763      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:41:09.446907 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:41:10.136631      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:41:11.136767      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:41:11.448899 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:41:12.137632      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:41:13.137792      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:41:13.450877 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:41:14.138681      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:41:15.138809      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:41:15.452967 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:41:16.139668      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:41:17.139759      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:41:17.455667 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:41:18.140818      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:41:19.140945      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:41:19.458350 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:41:20.141075      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:41:21.141214      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:41:21.461123 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:41:22.141795      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:41:23.141892      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:41:23.463124 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:41:24.142859      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:41:25.143673      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:41:25.465952 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:41:26.143698      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:41:27.143758      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:41:27.468794 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:41:28.144260      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:41:29.144346      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:41:29.471600 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:41:30.145302      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:41:31.145388      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:41:31.473564 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:41:32.146360      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:41:33.146440      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:41:33.475714 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:41:34.147420      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:41:35.147556      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:41:35.478539 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:41:36.147756      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:41:37.148816      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:41:37.481016 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:41:38.149718      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:41:39.149801      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:41:39.482879 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:41:40.150570      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:41:41.150652      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:41:41.484816 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:41:42.151535      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:41:43.151676      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:41:43.486790 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:41:44.152570      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:41:45.152816      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:41:45.488970 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:41:46.153666      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:41:47.153798      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:41:47.490889 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:41:48.154606      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:41:49.154759      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:41:49.493173 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:41:50.154872      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:41:51.155005      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:41:51.495135 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:41:52.155829      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:41:53.156814      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:41:53.497038 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:41:54.157752      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:41:55.157890      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:41:55.499089 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:41:56.158752      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:41:57.158883      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:41:57.500996 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:41:58.159719      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:41:59.159760      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:41:59.503038 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:42:00.160750      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:42:01.160886      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:42:01.505040 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:42:02.161806      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:42:03.162658      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:42:03.507952 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:42:04.163599      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:42:05.164397      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:42:05.510597 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:42:06.164819      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:42:07.164981      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:42:07.513233 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:42:08.165904      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:42:09.166043      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:42:09.515343 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:42:10.167032      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:42:11.167166      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:42:11.517286 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:42:12.168003      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:42:13.168825      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:42:13.520345 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:42:14.168943      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:42:15.169079      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:42:15.522304 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:42:16.169355      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:42:17.169669      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:42:17.524832 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:42:18.169604      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:42:19.169748      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:42:19.527050 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:42:20.170806      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:42:21.170942      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:42:21.529102 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:42:22.171793      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:42:23.171936      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:42:23.531186 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:42:24.172785      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:42:25.173825      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:42:25.534087 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:42:26.174846      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:42:27.174982      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:42:27.536150 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:42:28.175917      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:42:29.176816      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:42:29.539151 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:42:30.177853      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:42:31.177986      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:42:31.541119 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:42:32.178881      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:42:33.179749      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:42:33.543950 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:42:34.180641      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:42:35.180725      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:42:35.545833 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:42:36.181529      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:42:37.181656      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:42:37.547863 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:42:38.182599      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:42:39.182732      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:42:39.550040 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:42:40.183718      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:42:41.183750      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:42:41.551974 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:42:42.184632      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:42:43.184790      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:42:43.554042 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:42:44.185772      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:42:45.185899      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:42:45.556255 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:42:46.186878      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:42:47.187009      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:42:47.558189 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:42:48.188011      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:42:49.188096      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:42:49.560524 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:42:50.188815      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:42:51.188896      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:42:51.563137 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:42:52.189791      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:42:53.189939      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:42:53.565125 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:42:54.190791      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:42:55.190929      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:42:55.567072 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:42:56.191798      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:42:57.192815      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:42:57.568975 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:42:58.193695      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:42:59.193782      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:42:59.571115 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:43:00.194782      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:43:01.194922      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:43:01.573121 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:43:02.195854      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:43:03.195992      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:43:03.575135 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:43:04.196809      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:43:05.196936      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:43:05.577141 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:43:06.197798      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:43:07.197927      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:43:07.579116 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:43:08.198948      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:43:09.199077      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:43:09.581532 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:43:10.199134      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:43:11.199232      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:43:11.584505 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:43:12.200175      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:43:13.200313      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:43:13.586877 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:43:14.200460      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:43:15.200539      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:43:15.589753 23 container_probe.go:1759] Get pod busybox-9a751b18-e3fa-4dfa-8ba2-b94fc35c0388 in namespace container-probe-6546
  E0323 13:43:16.200812      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:43:17.200948      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 03/23/25 13:43:17.59
  I0323 13:43:17.597820 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6546" for this suite. @ 03/23/25 13:43:17.599
• [242.302 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:255
  STEP: Creating a kubernetes client @ 03/23/25 13:43:17.601
  I0323 13:43:17.601948 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename namespaces @ 03/23/25 13:43:17.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:43:17.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:43:17.61
  STEP: Creating a test namespace @ 03/23/25 13:43:17.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:43:17.617
  STEP: Creating a service in the namespace @ 03/23/25 13:43:17.619
  STEP: Deleting the namespace @ 03/23/25 13:43:17.624
  STEP: Waiting for the namespace to be removed. @ 03/23/25 13:43:17.629
  E0323 13:43:18.201285      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:43:19.202249      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:43:20.203302      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:43:21.204166      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:43:22.204822      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:43:23.205624      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 03/23/25 13:43:23.631
  STEP: Verifying there is no service in the namespace @ 03/23/25 13:43:23.638
  I0323 13:43:23.640915 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7811" for this suite. @ 03/23/25 13:43:23.642
  STEP: Destroying namespace "nsdeletetest-768" for this suite. @ 03/23/25 13:43:23.644
  I0323 13:43:23.645633 23 framework.go:370] Namespace nsdeletetest-768 was already deleted
  STEP: Destroying namespace "nsdeletetest-8486" for this suite. @ 03/23/25 13:43:23.645
• [6.046 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 03/23/25 13:43:23.647
  I0323 13:43:23.647853 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename field-validation @ 03/23/25 13:43:23.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:43:23.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:43:23.655
  I0323 13:43:23.656399 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  E0323 13:43:24.205943      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:43:25.206014      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  W0323 13:43:26.179362      23 warnings.go:70] unknown field "alpha"
  W0323 13:43:26.179380      23 warnings.go:70] unknown field "beta"
  W0323 13:43:26.179385      23 warnings.go:70] unknown field "delta"
  W0323 13:43:26.179389      23 warnings.go:70] unknown field "epsilon"
  W0323 13:43:26.179399      23 warnings.go:70] unknown field "gamma"
  E0323 13:43:26.206627      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:43:26.706387 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6841" for this suite. @ 03/23/25 13:43:26.707
• [3.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1372
  STEP: Creating a kubernetes client @ 03/23/25 13:43:26.71
  I0323 13:43:26.710416 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename kubectl @ 03/23/25 13:43:26.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:43:26.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:43:26.717
  STEP: validating cluster-info @ 03/23/25 13:43:26.719
  I0323 13:43:26.719287 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-7714 cluster-info'
  I0323 13:43:26.758244 23 builder.go:146] stderr: ""
  I0323 13:43:26.758275 23 builder.go:147] stdout: "Kubernetes control plane is running at https://10.68.0.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0323 13:43:26.758376 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7714" for this suite. @ 03/23/25 13:43:26.809
• [0.102 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 03/23/25 13:43:26.812
  I0323 13:43:26.812052 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename resourcequota @ 03/23/25 13:43:26.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:43:26.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:43:26.82
  STEP: Creating a ResourceQuota with terminating scope @ 03/23/25 13:43:26.821
  STEP: Ensuring ResourceQuota status is calculated @ 03/23/25 13:43:26.823
  E0323 13:43:27.206720      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:43:28.207317      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 03/23/25 13:43:28.825
  STEP: Ensuring ResourceQuota status is calculated @ 03/23/25 13:43:28.827
  E0323 13:43:29.208358      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:43:30.208817      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 03/23/25 13:43:30.829
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 03/23/25 13:43:30.837
  E0323 13:43:31.209583      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:43:32.209714      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 03/23/25 13:43:32.839
  E0323 13:43:33.210549      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:43:34.210689      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 03/23/25 13:43:34.841
  STEP: Ensuring resource quota status released the pod usage @ 03/23/25 13:43:34.844
  E0323 13:43:35.211294      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:43:36.211426      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 03/23/25 13:43:36.846
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 03/23/25 13:43:36.853
  E0323 13:43:37.211599      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:43:38.211656      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 03/23/25 13:43:38.856
  E0323 13:43:39.212643      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:43:40.212711      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 03/23/25 13:43:40.858
  STEP: Ensuring resource quota status released the pod usage @ 03/23/25 13:43:40.864
  E0323 13:43:41.212753      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:43:42.212887      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:43:42.865808 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3342" for this suite. @ 03/23/25 13:43:42.867
• [16.058 seconds]
------------------------------
SSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 03/23/25 13:43:42.869
  I0323 13:43:42.869739 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename configmap @ 03/23/25 13:43:42.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:43:42.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:43:42.877
  STEP: Creating configMap that has name configmap-test-emptyKey-d8ae898b-2652-4e70-93af-86ca241bb5d8 @ 03/23/25 13:43:42.879
  I0323 13:43:42.880274 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7257" for this suite. @ 03/23/25 13:43:42.968
• [0.102 seconds]
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 03/23/25 13:43:42.972
  I0323 13:43:42.972134 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename replication-controller @ 03/23/25 13:43:42.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:43:42.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:43:42.978
  STEP: Creating replication controller my-hostname-basic-8967520d-77af-453b-aea1-5a34145cd5b6 @ 03/23/25 13:43:42.98
  I0323 13:43:42.987905 23 resource.go:87] Pod name my-hostname-basic-8967520d-77af-453b-aea1-5a34145cd5b6: Found 0 pods out of 1
  E0323 13:43:43.213301      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:43:44.213399      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:43:45.213943      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:43:46.214085      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:43:47.214229      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:43:47.991146 23 resource.go:87] Pod name my-hostname-basic-8967520d-77af-453b-aea1-5a34145cd5b6: Found 1 pods out of 1
  I0323 13:43:47.991172 23 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-8967520d-77af-453b-aea1-5a34145cd5b6" are running
  I0323 13:43:47.993209 23 rc.go:523] Pod "my-hostname-basic-8967520d-77af-453b-aea1-5a34145cd5b6-mw96t" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-03-23 13:43:43 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-03-23 13:43:42 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-03-23 13:43:43 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-03-23 13:43:43 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-03-23 13:43:42 +0000 UTC Reason: Message:}])
  I0323 13:43:47.993232 23 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 03/23/25 13:43:47.993
  I0323 13:43:48.104609 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5950" for this suite. @ 03/23/25 13:43:48.106
• [5.136 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 03/23/25 13:43:48.108
  I0323 13:43:48.108413 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename emptydir @ 03/23/25 13:43:48.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:43:48.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:43:48.116
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 03/23/25 13:43:48.117
  E0323 13:43:48.215214      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:43:49.215351      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:43:50.215739      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:43:51.215762      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:43:52.127
  I0323 13:43:52.128880 23 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-0e750c8b-178d-403b-8b59-d53bb1c136fb container test-container: <nil>
  STEP: delete the pod @ 03/23/25 13:43:52.136
  I0323 13:43:52.143988 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6751" for this suite. @ 03/23/25 13:43:52.145
• [4.040 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 03/23/25 13:43:52.148
  I0323 13:43:52.149004 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename replicaset @ 03/23/25 13:43:52.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:43:52.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:43:52.157
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 03/23/25 13:43:52.158
  I0323 13:43:52.167918 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0323 13:43:52.216110      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:43:53.216258      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:43:54.216825      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:43:55.217407      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:43:56.217568      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:43:57.170307 23 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 03/23/25 13:43:57.17
  STEP: getting scale subresource @ 03/23/25 13:43:57.17
  STEP: updating a scale subresource @ 03/23/25 13:43:57.171
  STEP: verifying the replicaset Spec.Replicas was modified @ 03/23/25 13:43:57.174
  STEP: Patch a scale subresource @ 03/23/25 13:43:57.175
  I0323 13:43:57.182647 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7090" for this suite. @ 03/23/25 13:43:57.184
• [5.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 03/23/25 13:43:57.187
  I0323 13:43:57.187181 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename var-expansion @ 03/23/25 13:43:57.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:43:57.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:43:57.197
  E0323 13:43:57.217873      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:43:58.218312      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:43:59.206691 23 delete.go:62] Deleting pod "var-expansion-af3190aa-35cb-41e7-b35c-b7eb5927b4ac" in namespace "var-expansion-5103"
  I0323 13:43:59.210418 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-af3190aa-35cb-41e7-b35c-b7eb5927b4ac" to be fully deleted
  E0323 13:43:59.219152      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:44:00.219306      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:44:01.214096 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5103" for this suite. @ 03/23/25 13:44:01.215
• [4.031 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 03/23/25 13:44:01.218
  I0323 13:44:01.218074 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename pods @ 03/23/25 13:44:01.218
  E0323 13:44:01.220031      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:44:01.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:44:01.226
  STEP: creating the pod @ 03/23/25 13:44:01.227
  STEP: submitting the pod to kubernetes @ 03/23/25 13:44:01.227
  W0323 13:44:01.231192      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0323 13:44:02.220833      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:44:03.221314      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 03/23/25 13:44:03.236
  STEP: updating the pod @ 03/23/25 13:44:03.237
  I0323 13:44:03.744674 23 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-b72dfaa9-242a-4395-89cc-482f8a5c3878"
  E0323 13:44:04.221396      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:44:05.221485      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:44:06.222529      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:44:07.223538      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:44:07.750922 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4028" for this suite. @ 03/23/25 13:44:07.752
• [6.537 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 03/23/25 13:44:07.755
  I0323 13:44:07.755188 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename webhook @ 03/23/25 13:44:07.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:44:07.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:44:07.765
  STEP: Setting up server cert @ 03/23/25 13:44:07.776
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/23/25 13:44:08.008
  STEP: Deploying the webhook pod @ 03/23/25 13:44:08.012
  STEP: Wait for the deployment to be ready @ 03/23/25 13:44:08.017
  I0323 13:44:08.020258 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0323 13:44:08.223610      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:44:09.223760      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/23/25 13:44:10.024
  STEP: Verifying the service has paired with the endpoint @ 03/23/25 13:44:10.03
  E0323 13:44:10.224791      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:44:11.030557 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0323 13:44:11.034001 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  E0323 13:44:11.225173      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7815-crds.webhook.example.com via the AdmissionRegistration API @ 03/23/25 13:44:11.544
  STEP: Creating a custom resource while v1 is storage version @ 03/23/25 13:44:11.552
  E0323 13:44:12.225972      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:44:13.226030      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 03/23/25 13:44:13.572
  STEP: Patching the custom resource while v2 is storage version @ 03/23/25 13:44:13.587
  I0323 13:44:14.141145 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9207" for this suite. @ 03/23/25 13:44:14.143
  STEP: Destroying namespace "webhook-markers-9228" for this suite. @ 03/23/25 13:44:14.145
• [6.393 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 03/23/25 13:44:14.148
  I0323 13:44:14.148285 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename container-probe @ 03/23/25 13:44:14.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:44:14.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:44:14.157
  STEP: Creating pod liveness-049efe52-6778-4b9b-8f92-68f516d5bee1 in namespace container-probe-8566 @ 03/23/25 13:44:14.158
  E0323 13:44:14.226508      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:44:15.226678      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 03/23/25 13:44:16.166
  I0323 13:44:16.167898 23 container_probe.go:1749] Initial restart count of pod liveness-049efe52-6778-4b9b-8f92-68f516d5bee1 is 0
  I0323 13:44:16.168992 23 container_probe.go:1759] Get pod liveness-049efe52-6778-4b9b-8f92-68f516d5bee1 in namespace container-probe-8566
  E0323 13:44:16.227110      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:44:17.227384      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:44:18.170849 23 container_probe.go:1759] Get pod liveness-049efe52-6778-4b9b-8f92-68f516d5bee1 in namespace container-probe-8566
  E0323 13:44:18.228136      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:44:19.228197      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:44:20.172894 23 container_probe.go:1759] Get pod liveness-049efe52-6778-4b9b-8f92-68f516d5bee1 in namespace container-probe-8566
  E0323 13:44:20.228958      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:44:21.229104      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:44:22.175627 23 container_probe.go:1759] Get pod liveness-049efe52-6778-4b9b-8f92-68f516d5bee1 in namespace container-probe-8566
  E0323 13:44:22.229727      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:44:23.230310      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:44:24.177702 23 container_probe.go:1759] Get pod liveness-049efe52-6778-4b9b-8f92-68f516d5bee1 in namespace container-probe-8566
  E0323 13:44:24.230848      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:44:25.230983      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:44:26.179793 23 container_probe.go:1759] Get pod liveness-049efe52-6778-4b9b-8f92-68f516d5bee1 in namespace container-probe-8566
  E0323 13:44:26.231799      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:44:27.231891      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:44:28.181912 23 container_probe.go:1759] Get pod liveness-049efe52-6778-4b9b-8f92-68f516d5bee1 in namespace container-probe-8566
  E0323 13:44:28.231935      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:44:29.232028      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:44:30.184871 23 container_probe.go:1759] Get pod liveness-049efe52-6778-4b9b-8f92-68f516d5bee1 in namespace container-probe-8566
  E0323 13:44:30.233019      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:44:31.233143      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:44:32.186781 23 container_probe.go:1759] Get pod liveness-049efe52-6778-4b9b-8f92-68f516d5bee1 in namespace container-probe-8566
  E0323 13:44:32.233876      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:44:33.233949      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:44:34.188921 23 container_probe.go:1759] Get pod liveness-049efe52-6778-4b9b-8f92-68f516d5bee1 in namespace container-probe-8566
  E0323 13:44:34.233943      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:44:35.234070      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:44:36.190837 23 container_probe.go:1759] Get pod liveness-049efe52-6778-4b9b-8f92-68f516d5bee1 in namespace container-probe-8566
  I0323 13:44:36.190865 23 container_probe.go:1763] Restart count of pod container-probe-8566/liveness-049efe52-6778-4b9b-8f92-68f516d5bee1 is now 1 (20.022942711s elapsed)
  STEP: deleting the pod @ 03/23/25 13:44:36.19
  I0323 13:44:36.197272 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8566" for this suite. @ 03/23/25 13:44:36.198
• [22.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 03/23/25 13:44:36.202
  I0323 13:44:36.202169 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename projected @ 03/23/25 13:44:36.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:44:36.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:44:36.208
  STEP: Creating a pod to test downward API volume plugin @ 03/23/25 13:44:36.21
  E0323 13:44:36.234656      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:44:37.234781      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:44:38.217
  I0323 13:44:38.218985 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod downwardapi-volume-40ee7497-626f-426b-88ef-4933e8bd725c container client-container: <nil>
  E0323 13:44:38.234992      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the pod @ 03/23/25 13:44:38.234
  I0323 13:44:38.242060 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5288" for this suite. @ 03/23/25 13:44:38.243
• [2.045 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 03/23/25 13:44:38.246
  I0323 13:44:38.246892 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename pods @ 03/23/25 13:44:38.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:44:38.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:44:38.255
  STEP: creating the pod @ 03/23/25 13:44:38.256
  STEP: submitting the pod to kubernetes @ 03/23/25 13:44:38.256
  E0323 13:44:39.235109      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:44:40.235983      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 03/23/25 13:44:40.265
  STEP: updating the pod @ 03/23/25 13:44:40.266
  I0323 13:44:40.772867 23 pod_client.go:173] Successfully updated pod "pod-update-94c3c7f9-e94a-4ca9-bca6-cfd92603cb92"
  STEP: verifying the updated pod is in kubernetes @ 03/23/25 13:44:40.774
  I0323 13:44:40.776381 23 pods.go:391] Pod update OK
  I0323 13:44:40.776472 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4134" for this suite. @ 03/23/25 13:44:40.777
• [2.533 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 03/23/25 13:44:40.78
  I0323 13:44:40.780365 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename resourcequota @ 03/23/25 13:44:40.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:44:40.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:44:40.788
  STEP: Creating resourceQuota "e2e-rq-status-h9nzj" @ 03/23/25 13:44:40.791
  I0323 13:44:40.794385 23 resource_quota.go:1102] Resource quota "e2e-rq-status-h9nzj" reports spec: hard cpu limit of 500m
  I0323 13:44:40.794403 23 resource_quota.go:1104] Resource quota "e2e-rq-status-h9nzj" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-h9nzj" /status @ 03/23/25 13:44:40.794
  STEP: Confirm /status for "e2e-rq-status-h9nzj" resourceQuota via watch @ 03/23/25 13:44:40.797
  I0323 13:44:40.798347 23 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-h9nzj" in namespace "resourcequota-8432" with hard status: v1.ResourceList(nil)
  I0323 13:44:40.798386 23 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-h9nzj" in namespace "resourcequota-8432" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0323 13:44:40.798406 23 resource_quota.go:1141] ResourceQuota "e2e-rq-status-h9nzj" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 03/23/25 13:44:40.799
  I0323 13:44:40.802996 23 resource_quota.go:1152] Resource quota "e2e-rq-status-h9nzj" reports spec: hard cpu limit of 1
  I0323 13:44:40.803009 23 resource_quota.go:1153] Resource quota "e2e-rq-status-h9nzj" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-h9nzj" /status @ 03/23/25 13:44:40.803
  STEP: Confirm /status for "e2e-rq-status-h9nzj" resourceQuota via watch @ 03/23/25 13:44:40.806
  I0323 13:44:40.807530 23 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-h9nzj" in namespace "resourcequota-8432" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0323 13:44:40.807552 23 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-h9nzj" in namespace "resourcequota-8432" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0323 13:44:40.807564 23 resource_quota.go:1185] ResourceQuota "e2e-rq-status-h9nzj" /status was patched
  STEP: Get "e2e-rq-status-h9nzj" /status @ 03/23/25 13:44:40.807
  I0323 13:44:40.808938 23 resource_quota.go:1196] Resourcequota "e2e-rq-status-h9nzj" reports status: hard cpu of 1
  I0323 13:44:40.808954 23 resource_quota.go:1198] Resourcequota "e2e-rq-status-h9nzj" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-h9nzj" /status before checking Spec is unchanged @ 03/23/25 13:44:40.809
  I0323 13:44:40.811919 23 resource_quota.go:1218] Resourcequota "e2e-rq-status-h9nzj" reports status: hard cpu of 2
  I0323 13:44:40.811935 23 resource_quota.go:1220] Resourcequota "e2e-rq-status-h9nzj" reports status: hard memory of 2Gi
  I0323 13:44:40.812572 23 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-h9nzj" in namespace "resourcequota-8432" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0323 13:44:40.813542 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-h9nzj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h9nzj", GenerateName:"", Namespace:"resourcequota-8432", SelfLink:"", UID:"ba43732f-f0a4-4924-90d8-32a0a71ff529", ResourceVersion:"34413", Generation:0, CreationTimestamp:time.Date(2025, time.March, 23, 13, 44, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h9nzj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.March, 23, 13, 44, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0003839f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.March, 23, 13, 44, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000383a28), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.March, 23, 13, 44, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000383a70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0323 13:44:41.236816      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:44:42.236877      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:44:43.236926      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:44:44.237031      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:44:45.237167      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:44:45.814205 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-h9nzj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h9nzj", GenerateName:"", Namespace:"resourcequota-8432", SelfLink:"", UID:"ba43732f-f0a4-4924-90d8-32a0a71ff529", ResourceVersion:"34413", Generation:0, CreationTimestamp:time.Date(2025, time.March, 23, 13, 44, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h9nzj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.March, 23, 13, 44, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005285350), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.March, 23, 13, 44, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005285380), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.March, 23, 13, 44, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052853b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0323 13:44:46.237731      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:44:47.237876      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:44:48.237947      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:44:49.238082      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:44:50.238227      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:44:50.814515 23 resource_quota.go:1260] ResourceQuota "e2e-rq-status-h9nzj" Spec was unchanged and /status reset
  I0323 13:44:50.814632 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8432" for this suite. @ 03/23/25 13:44:50.816
• [10.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1008
  STEP: Creating a kubernetes client @ 03/23/25 13:44:50.818
  I0323 13:44:50.818987 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename job @ 03/23/25 13:44:50.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:44:50.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:44:50.827
  STEP: Creating a job @ 03/23/25 13:44:50.828
  STEP: Ensure pods equal to parallelism count is attached to the job @ 03/23/25 13:44:50.831
  E0323 13:44:51.238956      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:44:52.239100      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: patching /status @ 03/23/25 13:44:52.836
  STEP: updating /status @ 03/23/25 13:44:52.841
  STEP: get /status @ 03/23/25 13:44:52.844
  I0323 13:44:52.845586 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9105" for this suite. @ 03/23/25 13:44:52.847
• [2.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 03/23/25 13:44:52.849
  I0323 13:44:52.849754 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename secrets @ 03/23/25 13:44:52.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:44:52.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:44:52.856
  I0323 13:44:52.872080 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1339" for this suite. @ 03/23/25 13:44:52.947
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 03/23/25 13:44:52.951
  I0323 13:44:52.951612 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename replicaset @ 03/23/25 13:44:52.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:44:52.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:44:52.964
  I0323 13:44:52.976325 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0323 13:44:53.239824      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:44:54.240840      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:44:55.240991      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:44:56.241127      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:44:57.241225      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:44:57.978347 23 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 03/23/25 13:44:57.978
  STEP: Scaling up "test-rs" replicaset @ 03/23/25 13:44:57.978
  I0323 13:44:57.981819 23 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 03/23/25 13:44:57.981
  I0323 13:44:57.987248 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9511 with ReadyReplicas 1, AvailableReplicas 1
  I0323 13:44:57.994788 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9511 with ReadyReplicas 1, AvailableReplicas 1
  I0323 13:44:58.003609 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9511 with ReadyReplicas 1, AvailableReplicas 1
  I0323 13:44:58.014481 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9511 with ReadyReplicas 1, AvailableReplicas 1
  E0323 13:44:58.241940      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:44:58.886038 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9511 with ReadyReplicas 2, AvailableReplicas 2
  I0323 13:44:58.924023 23 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-9511 with ReadyReplicas 3 found true
  I0323 13:44:58.924142 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9511" for this suite. @ 03/23/25 13:44:58.925
• [5.977 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1054
  STEP: Creating a kubernetes client @ 03/23/25 13:44:58.928
  I0323 13:44:58.928174 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename kubectl @ 03/23/25 13:44:58.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:44:58.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:44:58.935
  STEP: create deployment with httpd image @ 03/23/25 13:44:58.936
  I0323 13:44:58.936878 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-1964 create -f -'
  I0323 13:44:58.995536 23 builder.go:146] stderr: ""
  I0323 13:44:58.995567 23 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 03/23/25 13:44:58.995
  I0323 13:44:58.995691 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-1964 diff -f -'
  I0323 13:44:59.069341 23 builder.go:135] rc: 1
  I0323 13:44:59.069484 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-1964 delete -f -'
  I0323 13:44:59.110160 23 builder.go:146] stderr: ""
  I0323 13:44:59.110191 23 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0323 13:44:59.110279 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1964" for this suite. @ 03/23/25 13:44:59.113
• [0.188 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1537
  STEP: Creating a kubernetes client @ 03/23/25 13:44:59.115
  I0323 13:44:59.115994 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename kubectl @ 03/23/25 13:44:59.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:44:59.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:44:59.124
  STEP: creating Agnhost RC @ 03/23/25 13:44:59.126
  I0323 13:44:59.126288 23 kubectl.go:1544] namespace kubectl-7318
  I0323 13:44:59.126326 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-7318 create -f -'
  I0323 13:44:59.205813 23 builder.go:146] stderr: ""
  I0323 13:44:59.205845 23 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 03/23/25 13:44:59.205
  E0323 13:44:59.241957      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:45:00.208190 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0323 13:45:00.208217 23 framework.go:733] Found 0 / 1
  E0323 13:45:00.242244      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:45:01.207841 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0323 13:45:01.207867 23 framework.go:733] Found 1 / 1
  I0323 13:45:01.207880 23 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0323 13:45:01.209093 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0323 13:45:01.209113 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0323 13:45:01.209120 23 kubectl.go:1551] wait on agnhost-primary startup in kubectl-7318 
  I0323 13:45:01.209165 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-7318 logs agnhost-primary-xxcpr agnhost-primary'
  E0323 13:45:01.242452      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:45:01.251622 23 builder.go:146] stderr: ""
  I0323 13:45:01.251666 23 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 03/23/25 13:45:01.251
  I0323 13:45:01.251782 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-7318 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0323 13:45:01.296623 23 builder.go:146] stderr: ""
  I0323 13:45:01.296663 23 builder.go:147] stdout: "service/rm2 exposed\n"
  I0323 13:45:01.299036 23 utils.go:1203] Service rm2 in namespace kubectl-7318 found.
  E0323 13:45:02.242550      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:03.242588      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: exposing service @ 03/23/25 13:45:03.302
  I0323 13:45:03.302552 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-7318 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0323 13:45:03.347233 23 builder.go:146] stderr: ""
  I0323 13:45:03.347266 23 builder.go:147] stdout: "service/rm3 exposed\n"
  I0323 13:45:03.349230 23 utils.go:1203] Service rm3 in namespace kubectl-7318 found.
  E0323 13:45:04.242666      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:05.243703      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:45:05.352724 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7318" for this suite. @ 03/23/25 13:45:05.354
• [6.241 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:861
  STEP: Creating a kubernetes client @ 03/23/25 13:45:05.356
  I0323 13:45:05.356793 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename job @ 03/23/25 13:45:05.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:45:05.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:45:05.366
  STEP: Creating a job @ 03/23/25 13:45:05.367
  STEP: Ensuring active pods == parallelism @ 03/23/25 13:45:05.37
  E0323 13:45:06.244320      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:07.244825      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 03/23/25 13:45:07.377
  I0323 13:45:07.886325 23 pod_client.go:173] Successfully updated pod "adopt-release-ldxf9"
  STEP: Checking that the Job readopts the Pod @ 03/23/25 13:45:07.886
  E0323 13:45:08.245311      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:09.245476      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 03/23/25 13:45:09.889
  E0323 13:45:10.246136      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:45:10.395741 23 pod_client.go:173] Successfully updated pod "adopt-release-ldxf9"
  STEP: Checking that the Job releases the Pod @ 03/23/25 13:45:10.395
  E0323 13:45:11.246465      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:12.246649      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:45:12.399758 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5017" for this suite. @ 03/23/25 13:45:12.401
• [7.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 03/23/25 13:45:12.404
  I0323 13:45:12.404072 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename certificates @ 03/23/25 13:45:12.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:45:12.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:45:12.412
  STEP: getting /apis @ 03/23/25 13:45:12.801
  STEP: getting /apis/certificates.k8s.io @ 03/23/25 13:45:12.804
  STEP: getting /apis/certificates.k8s.io/v1 @ 03/23/25 13:45:12.804
  STEP: creating @ 03/23/25 13:45:12.805
  STEP: getting @ 03/23/25 13:45:12.812
  STEP: listing @ 03/23/25 13:45:12.813
  STEP: watching @ 03/23/25 13:45:12.814
  I0323 13:45:12.814295 23 certificates.go:316] starting watch
  STEP: patching @ 03/23/25 13:45:12.814
  STEP: updating @ 03/23/25 13:45:12.818
  I0323 13:45:12.820336 23 certificates.go:332] waiting for watch events with expected annotations
  I0323 13:45:12.820356 23 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 03/23/25 13:45:12.82
  STEP: patching /approval @ 03/23/25 13:45:12.821
  STEP: updating /approval @ 03/23/25 13:45:12.824
  STEP: getting /status @ 03/23/25 13:45:12.828
  STEP: patching /status @ 03/23/25 13:45:12.829
  STEP: updating /status @ 03/23/25 13:45:12.843
  STEP: deleting @ 03/23/25 13:45:12.848
  STEP: deleting a collection @ 03/23/25 13:45:12.854
  I0323 13:45:12.861171 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-6298" for this suite. @ 03/23/25 13:45:12.863
• [0.462 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 03/23/25 13:45:12.865
  I0323 13:45:12.865846 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename services @ 03/23/25 13:45:12.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:45:12.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:45:12.924
  STEP: creating service in namespace services-8123 @ 03/23/25 13:45:12.926
  STEP: creating service affinity-clusterip in namespace services-8123 @ 03/23/25 13:45:12.926
  STEP: creating replication controller affinity-clusterip in namespace services-8123 @ 03/23/25 13:45:12.931
  I0323 13:45:12.935406      23 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-8123, replica count: 3
  E0323 13:45:13.247320      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:14.247524      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:15.247737      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:45:15.986414      23 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0323 13:45:15.989349 23 resource.go:361] Creating new exec pod
  E0323 13:45:16.248427      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:17.248815      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:18.249140      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:45:18.995766 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-8123 exec execpod-affinitynqffc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0323 13:45:19.064914 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.68.142.106) 80 port [tcp/http] succeeded!\n"
  I0323 13:45:19.064949 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0323 13:45:19.065018 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-8123 exec execpod-affinitynqffc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.142.106 80'
  I0323 13:45:19.129467 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.142.106 80\nConnection to 10.68.142.106 80 port [tcp/http] succeeded!\n"
  I0323 13:45:19.129502 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0323 13:45:19.129562 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-8123 exec execpod-affinitynqffc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.68.142.106:80/ ; done'
  I0323 13:45:19.234613 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.142.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.142.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.142.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.142.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.142.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.142.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.142.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.142.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.142.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.142.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.142.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.142.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.142.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.142.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.142.106:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.142.106:80/\n"
  I0323 13:45:19.234658 23 builder.go:147] stdout: "\naffinity-clusterip-42p6n\naffinity-clusterip-42p6n\naffinity-clusterip-42p6n\naffinity-clusterip-42p6n\naffinity-clusterip-42p6n\naffinity-clusterip-42p6n\naffinity-clusterip-42p6n\naffinity-clusterip-42p6n\naffinity-clusterip-42p6n\naffinity-clusterip-42p6n\naffinity-clusterip-42p6n\naffinity-clusterip-42p6n\naffinity-clusterip-42p6n\naffinity-clusterip-42p6n\naffinity-clusterip-42p6n\naffinity-clusterip-42p6n"
  I0323 13:45:19.234671 23 service.go:242] Received response from host: affinity-clusterip-42p6n
  I0323 13:45:19.234683 23 service.go:242] Received response from host: affinity-clusterip-42p6n
  I0323 13:45:19.234697 23 service.go:242] Received response from host: affinity-clusterip-42p6n
  I0323 13:45:19.234706 23 service.go:242] Received response from host: affinity-clusterip-42p6n
  I0323 13:45:19.234716 23 service.go:242] Received response from host: affinity-clusterip-42p6n
  I0323 13:45:19.234723 23 service.go:242] Received response from host: affinity-clusterip-42p6n
  I0323 13:45:19.234743 23 service.go:242] Received response from host: affinity-clusterip-42p6n
  I0323 13:45:19.234752 23 service.go:242] Received response from host: affinity-clusterip-42p6n
  I0323 13:45:19.234760 23 service.go:242] Received response from host: affinity-clusterip-42p6n
  I0323 13:45:19.234765 23 service.go:242] Received response from host: affinity-clusterip-42p6n
  I0323 13:45:19.234771 23 service.go:242] Received response from host: affinity-clusterip-42p6n
  I0323 13:45:19.234776 23 service.go:242] Received response from host: affinity-clusterip-42p6n
  I0323 13:45:19.234780 23 service.go:242] Received response from host: affinity-clusterip-42p6n
  I0323 13:45:19.234785 23 service.go:242] Received response from host: affinity-clusterip-42p6n
  I0323 13:45:19.234792 23 service.go:242] Received response from host: affinity-clusterip-42p6n
  I0323 13:45:19.234796 23 service.go:242] Received response from host: affinity-clusterip-42p6n
  I0323 13:45:19.234859 23 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-8123, will wait for the garbage collector to delete the pods @ 03/23/25 13:45:19.241
  E0323 13:45:19.250049      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:45:19.295767 23 resources.go:139] Deleting ReplicationController affinity-clusterip took: 2.643611ms
  I0323 13:45:19.395862 23 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.090479ms
  E0323 13:45:20.250546      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:21.251395      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:22.251879      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:45:22.510352 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8123" for this suite. @ 03/23/25 13:45:22.512
• [9.650 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 03/23/25 13:45:22.515
  I0323 13:45:22.515755 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename webhook @ 03/23/25 13:45:22.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:45:22.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:45:22.522
  STEP: Setting up server cert @ 03/23/25 13:45:22.535
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/23/25 13:45:22.974
  STEP: Deploying the webhook pod @ 03/23/25 13:45:22.977
  STEP: Wait for the deployment to be ready @ 03/23/25 13:45:22.983
  I0323 13:45:22.987383 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0323 13:45:23.252777      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:24.252930      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/23/25 13:45:24.992
  STEP: Verifying the service has paired with the endpoint @ 03/23/25 13:45:24.997
  E0323 13:45:25.253433      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:45:25.997150 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 03/23/25 13:45:26
  STEP: create a configmap that should be updated by the webhook @ 03/23/25 13:45:26.008
  I0323 13:45:26.032419 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9987" for this suite. @ 03/23/25 13:45:26.035
  STEP: Destroying namespace "webhook-markers-9539" for this suite. @ 03/23/25 13:45:26.038
• [3.525 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 03/23/25 13:45:26.041
  I0323 13:45:26.041262 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename kubelet-test @ 03/23/25 13:45:26.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:45:26.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:45:26.049
  E0323 13:45:26.253449      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:27.253707      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:28.254343      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:29.254474      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:45:30.060839 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-736" for this suite. @ 03/23/25 13:45:30.062
• [4.025 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 03/23/25 13:45:30.066
  I0323 13:45:30.066427 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename cronjob @ 03/23/25 13:45:30.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:45:30.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:45:30.072
  STEP: Creating a ForbidConcurrent cronjob @ 03/23/25 13:45:30.074
  STEP: Ensuring a job is scheduled @ 03/23/25 13:45:30.076
  E0323 13:45:30.255100      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:31.255240      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:32.256220      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:33.256287      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:34.257104      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:35.257262      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:36.258182      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:37.258767      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:38.259582      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:39.259721      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:40.260663      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:41.260795      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:42.261714      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:43.261781      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:44.262491      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:45.262600      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:46.263489      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:47.264028      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:48.265041      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:49.265192      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:50.266038      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:51.266183      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:52.267096      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:53.267230      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:54.268096      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:55.268834      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:56.269412      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:57.269495      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:58.270110      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:45:59.270251      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:00.271285      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:01.271435      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 03/23/25 13:46:02.079
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 03/23/25 13:46:02.08
  STEP: Ensuring no more jobs are scheduled @ 03/23/25 13:46:02.082
  STEP: Removing cronjob @ 03/23/25 13:46:02.083
  I0323 13:46:02.085533 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2285" for this suite. @ 03/23/25 13:46:02.087
• [32.024 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 03/23/25 13:46:02.09
  I0323 13:46:02.090801 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename deployment @ 03/23/25 13:46:02.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:46:02.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:46:02.099
  I0323 13:46:02.113187 23 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  E0323 13:46:02.271431      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:03.272367      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:04.272844      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:05.272976      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:06.273119      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:46:07.197249 23 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 03/23/25 13:46:07.197
  I0323 13:46:07.197325 23 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 03/23/25 13:46:07.201
  I0323 13:46:07.206997 23 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8120",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "09ed3c82-bfce-4c1f-a968-41f8a0f89e3a",
      ResourceVersion: (string) (len=5) "35308",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878334367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878334367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0323 13:46:07.209395 23 deployment.go:40] New ReplicaSet "test-cleanup-deployment-69b989f764" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8120",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fca0b4c8-e3e9-46cd-a257-365a25e05919",
      ResourceVersion: (string) (len=5) "35310",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878334367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "09ed3c82-bfce-4c1f-a968-41f8a0f89e3a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878334367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 39 65 64 33 63  38 32 2d 62 66 63 65 2d  |\"09ed3c82-bfce-|
              00000120  34 63 31 66 2d 61 39 36  38 2d 34 31 66 38 61 30  |4c1f-a968-41f8a0|
              00000130  66 38 39 65 33 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |f89e3a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0323 13:46:07.209916 23 deployment.go:45] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0323 13:46:07.210085 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8120",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6d61b83c-c72f-46e5-ad16-5bd8b616842a",
      ResourceVersion: (string) (len=5) "35309",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878334362,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "09ed3c82-bfce-4c1f-a968-41f8a0f89e3a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878334362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878334363,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878334367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 30 39 65 64 33 63 38  |"uid\":\"09ed3c8|
              00000040  32 2d 62 66 63 65 2d 34  63 31 66 2d 61 39 36 38  |2-bfce-4c1f-a968|
              00000050  2d 34 31 66 38 61 30 66  38 39 65 33 61 5c 22 7d  |-41f8a0f89e3a\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0323 13:46:07.217414 23 deployment.go:68] Pod "test-cleanup-controller-p7mxq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-p7mxq",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-8120",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a38f39e3-3a74-4275-aa5f-fd5e1094692c",
      ResourceVersion: (string) (len=5) "35292",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878334362,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "6d61b83c-c72f-46e5-ad16-5bd8b616842a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878334362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  36 64 36 31 62 38 33 63  |uid\":\"6d61b83c|
              00000080  2d 63 37 32 66 2d 34 36  65 35 2d 61 64 31 36 2d  |-c72f-46e5-ad16-|
              00000090  35 62 64 38 62 36 31 36  38 34 32 61 5c 22 7d 22  |5bd8b616842a\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878334363,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 35 34  2e 36 33 5c 22 7d 22 3a  |2.20.254.63\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9b77z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9b77z",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878334362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878334362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878334362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878334362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878334362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=13) "172.20.254.63",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.254.63"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878334362,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878334362,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://391b9da0f4014b57f950ead4e5d7f8ffce2b800d30f9edc4c2bb32e6dc1f21e8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9b77z",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 13:46:07.218751 23 deployment.go:68] Pod "test-cleanup-deployment-69b989f764-hbq7c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-69b989f764-hbq7c",
      GenerateName: (string) (len=35) "test-cleanup-deployment-69b989f764-",
      Namespace: (string) (len=15) "deployment-8120",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "49ddd169-faa9-4740-9265-f3335b3311bd",
      ResourceVersion: (string) (len=5) "35314",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878334367,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
          UID: (types.UID) (len=36) "fca0b4c8-e3e9-46cd-a257-365a25e05919",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878334367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 63  61 30 62 34 63 38 2d 65  |d\":\"fca0b4c8-e|
              00000090  33 65 39 2d 34 36 63 64  2d 61 32 35 37 2d 33 36  |3e9-46cd-a257-36|
              000000a0  35 61 32 35 65 30 35 39  31 39 5c 22 7d 22 3a 7b  |5a25e05919\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wpxr4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wpxr4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-208",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878334367,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 13:46:07.219521 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8120" for this suite. @ 03/23/25 13:46:07.223
• [5.136 seconds]
------------------------------
SSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 03/23/25 13:46:07.227
  I0323 13:46:07.227071 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 03/23/25 13:46:07.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:46:07.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:46:07.236
  STEP: Setting up the test @ 03/23/25 13:46:07.237
  STEP: Creating hostNetwork=false pod @ 03/23/25 13:46:07.238
  E0323 13:46:07.273601      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:08.273659      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 03/23/25 13:46:09.245
  E0323 13:46:09.273693      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:10.274135      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Running the test @ 03/23/25 13:46:11.252
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 03/23/25 13:46:11.252
  I0323 13:46:11.252835 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-657 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0323 13:46:11.252852 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0323 13:46:11.252886 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-657/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  E0323 13:46:11.274986      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:46:11.276668 23 exec_util.go:108] Exec stderr: ""
  I0323 13:46:11.276744 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-657 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0323 13:46:11.276757 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0323 13:46:11.276823 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-657/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0323 13:46:11.299719 23 exec_util.go:108] Exec stderr: ""
  I0323 13:46:11.299753 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-657 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0323 13:46:11.299764 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0323 13:46:11.299828 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-657/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0323 13:46:11.322994 23 exec_util.go:108] Exec stderr: ""
  I0323 13:46:11.323031 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-657 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0323 13:46:11.323041 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0323 13:46:11.323089 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-657/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0323 13:46:11.345342 23 exec_util.go:108] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 03/23/25 13:46:11.345
  I0323 13:46:11.345402 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-657 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0323 13:46:11.345415 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0323 13:46:11.345460 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-657/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0323 13:46:11.370125 23 exec_util.go:108] Exec stderr: ""
  I0323 13:46:11.370227 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-657 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0323 13:46:11.370239 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0323 13:46:11.370304 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-657/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0323 13:46:11.392930 23 exec_util.go:108] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 03/23/25 13:46:11.392
  I0323 13:46:11.392997 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-657 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0323 13:46:11.393008 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0323 13:46:11.393117 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-657/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0323 13:46:11.417669 23 exec_util.go:108] Exec stderr: ""
  I0323 13:46:11.417719 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-657 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0323 13:46:11.417729 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0323 13:46:11.417784 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-657/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0323 13:46:11.440145 23 exec_util.go:108] Exec stderr: ""
  I0323 13:46:11.440189 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-657 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0323 13:46:11.440198 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0323 13:46:11.440256 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-657/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0323 13:46:11.462968 23 exec_util.go:108] Exec stderr: ""
  I0323 13:46:11.463010 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-657 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0323 13:46:11.463019 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0323 13:46:11.463058 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-657/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0323 13:46:11.492286 23 exec_util.go:108] Exec stderr: ""
  I0323 13:46:11.492392 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-657" for this suite. @ 03/23/25 13:46:11.494
• [4.269 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1763
  STEP: Creating a kubernetes client @ 03/23/25 13:46:11.496
  I0323 13:46:11.496389 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename kubectl @ 03/23/25 13:46:11.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:46:11.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:46:11.504
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 03/23/25 13:46:11.505
  I0323 13:46:11.505782 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-968 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0323 13:46:11.550059 23 builder.go:146] stderr: ""
  I0323 13:46:11.550088 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 03/23/25 13:46:11.55
  I0323 13:46:11.551584 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-968 delete pods e2e-test-httpd-pod'
  E0323 13:46:12.276042      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:46:13.035260 23 builder.go:146] stderr: ""
  I0323 13:46:13.035295 23 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0323 13:46:13.035449 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-968" for this suite. @ 03/23/25 13:46:13.037
• [1.543 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 03/23/25 13:46:13.039
  I0323 13:46:13.039522 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename security-context @ 03/23/25 13:46:13.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:46:13.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:46:13.046
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 03/23/25 13:46:13.048
  E0323 13:46:13.276643      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:14.276789      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:15.277761      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:16.277824      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:46:17.058
  I0323 13:46:17.059371 23 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod security-context-54db6a29-65ed-43fc-81fd-d4ea898f8c72 container test-container: <nil>
  STEP: delete the pod @ 03/23/25 13:46:17.063
  I0323 13:46:17.070588 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-1535" for this suite. @ 03/23/25 13:46:17.072
• [4.035 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 03/23/25 13:46:17.074
  I0323 13:46:17.074219 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename gc @ 03/23/25 13:46:17.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:46:17.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:46:17.081
  STEP: create the rc @ 03/23/25 13:46:17.172
  W0323 13:46:17.176354      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0323 13:46:17.278595      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:18.280882      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:19.281483      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:20.281636      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:21.282298      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:22.282396      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the rc @ 03/23/25 13:46:23.178
  STEP: wait for the rc to be deleted @ 03/23/25 13:46:23.181
  E0323 13:46:23.282563      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:46:24.188695 23 garbage_collector.go:670] 80 pods remaining
  I0323 13:46:24.188718 23 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0323 13:46:24.188723 23 garbage_collector.go:678] 
  E0323 13:46:24.284093      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:46:25.188959 23 garbage_collector.go:670] 71 pods remaining
  I0323 13:46:25.188985 23 garbage_collector.go:677] 71 pods has nil DeletionTimestamp
  I0323 13:46:25.188990 23 garbage_collector.go:678] 
  E0323 13:46:25.284797      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:46:26.185786 23 garbage_collector.go:670] 60 pods remaining
  I0323 13:46:26.185813 23 garbage_collector.go:677] 60 pods has nil DeletionTimestamp
  I0323 13:46:26.185819 23 garbage_collector.go:678] 
  E0323 13:46:26.285479      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:46:27.186512 23 garbage_collector.go:670] 40 pods remaining
  I0323 13:46:27.186609 23 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I0323 13:46:27.186619 23 garbage_collector.go:678] 
  E0323 13:46:27.285898      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:46:28.212815 23 garbage_collector.go:670] 31 pods remaining
  I0323 13:46:28.212845 23 garbage_collector.go:677] 30 pods has nil DeletionTimestamp
  I0323 13:46:28.212852 23 garbage_collector.go:678] 
  E0323 13:46:28.286453      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:46:29.185475 23 garbage_collector.go:670] 20 pods remaining
  I0323 13:46:29.185498 23 garbage_collector.go:677] 20 pods has nil DeletionTimestamp
  I0323 13:46:29.185504 23 garbage_collector.go:678] 
  E0323 13:46:29.287344      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 03/23/25 13:46:30.188
  W0323 13:46:30.191293      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0323 13:46:30.191316 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0323 13:46:30.191437 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8746" for this suite. @ 03/23/25 13:46:30.193
• [13.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 03/23/25 13:46:30.196
  I0323 13:46:30.196880 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename containers @ 03/23/25 13:46:30.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:46:30.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:46:30.207
  STEP: Creating a pod to test override all @ 03/23/25 13:46:30.209
  E0323 13:46:30.290289      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:31.290354      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:46:32.219
  I0323 13:46:32.221084 23 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod client-containers-2ad295f9-ab76-49a9-bd48-403caac4bbef container agnhost-container: <nil>
  STEP: delete the pod @ 03/23/25 13:46:32.223
  I0323 13:46:32.228878 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2737" for this suite. @ 03/23/25 13:46:32.23
• [2.037 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 03/23/25 13:46:32.233
  I0323 13:46:32.233577 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename replicaset @ 03/23/25 13:46:32.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:46:32.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:46:32.241
  STEP: Create a ReplicaSet @ 03/23/25 13:46:32.243
  STEP: Verify that the required pods have come up @ 03/23/25 13:46:32.246
  I0323 13:46:32.247276 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  E0323 13:46:32.290405      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:33.290483      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:34.290585      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:35.290723      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:36.291503      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:46:37.249316 23 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 03/23/25 13:46:37.249
  I0323 13:46:37.250616 23 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 03/23/25 13:46:37.25
  STEP: DeleteCollection of the ReplicaSets @ 03/23/25 13:46:37.251
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 03/23/25 13:46:37.254
  I0323 13:46:37.255818 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3503" for this suite. @ 03/23/25 13:46:37.257
• [5.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 03/23/25 13:46:37.264
  I0323 13:46:37.264045 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 03/23/25 13:46:37.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:46:37.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:46:37.277
  E0323 13:46:37.292237      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the container to handle the HTTPGet hook request. @ 03/23/25 13:46:37.358
  E0323 13:46:38.292377      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:39.292426      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 03/23/25 13:46:39.372
  E0323 13:46:40.292615      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:41.293261      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 03/23/25 13:46:41.38
  E0323 13:46:42.293352      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:43.294395      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:44.294874      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:45.294945      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 03/23/25 13:46:45.388
  I0323 13:46:45.391325 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5547" for this suite. @ 03/23/25 13:46:45.392
• [8.131 seconds]
------------------------------
SSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 03/23/25 13:46:45.395
  I0323 13:46:45.395436 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename ingressclass @ 03/23/25 13:46:45.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:46:45.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:46:45.403
  STEP: getting /apis @ 03/23/25 13:46:45.405
  STEP: getting /apis/networking.k8s.io @ 03/23/25 13:46:45.407
  STEP: getting /apis/networking.k8s.iov1 @ 03/23/25 13:46:45.407
  STEP: creating @ 03/23/25 13:46:45.408
  STEP: getting @ 03/23/25 13:46:45.413
  STEP: listing @ 03/23/25 13:46:45.414
  STEP: watching @ 03/23/25 13:46:45.415
  I0323 13:46:45.415170 23 ingressclass.go:348] starting watch
  STEP: patching @ 03/23/25 13:46:45.415
  STEP: updating @ 03/23/25 13:46:45.417
  I0323 13:46:45.419851 23 ingressclass.go:364] waiting for watch events with expected annotations
  I0323 13:46:45.419875 23 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 03/23/25 13:46:45.419
  STEP: deleting a collection @ 03/23/25 13:46:45.423
  I0323 13:46:45.428314 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-5524" for this suite. @ 03/23/25 13:46:45.494
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 03/23/25 13:46:45.498
  I0323 13:46:45.498704 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename replication-controller @ 03/23/25 13:46:45.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:46:45.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:46:45.506
  I0323 13:46:45.508120 23 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0323 13:46:46.295912      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 03/23/25 13:46:46.512
  STEP: Checking rc "condition-test" has the desired failure condition set @ 03/23/25 13:46:46.515
  E0323 13:46:47.295999      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 03/23/25 13:46:47.519
  I0323 13:46:47.524260 23 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 03/23/25 13:46:47.524
  E0323 13:46:48.296374      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:46:48.527333 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5938" for this suite. @ 03/23/25 13:46:48.529
• [3.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 03/23/25 13:46:48.531
  I0323 13:46:48.531840 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename pod-network-test @ 03/23/25 13:46:48.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:46:48.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:46:48.537
  STEP: Performing setup for networking test in namespace pod-network-test-5940 @ 03/23/25 13:46:48.539
  STEP: creating a selector @ 03/23/25 13:46:48.539
  STEP: Creating the service pods in kubernetes @ 03/23/25 13:46:48.539
  I0323 13:46:48.539763 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0323 13:46:49.296855      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:50.296994      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:51.297533      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:52.297669      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:53.298685      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:54.298847      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:55.299607      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:56.299756      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:57.300680      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:58.300743      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:46:59.301607      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:00.302495      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:01.303220      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:02.303434      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 03/23/25 13:47:02.667
  E0323 13:47:03.303545      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:04.303685      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:47:04.679805 23 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0323 13:47:04.679832 23 utils.go:496] Going to poll 172.20.63.240 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0323 13:47:04.680837 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.20.63.240 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5940 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0323 13:47:04.680855 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0323 13:47:04.680896 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-5940/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.20.63.240+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0323 13:47:05.303779      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:47:05.706242 23 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0323 13:47:05.706278 23 utils.go:496] Going to poll 172.20.254.14 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0323 13:47:05.707924 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.20.254.14 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5940 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0323 13:47:05.707944 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0323 13:47:05.707988 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-5940/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.20.254.14+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0323 13:47:06.303840      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:47:06.735850 23 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0323 13:47:06.735883 23 utils.go:496] Going to poll 172.20.64.188 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0323 13:47:06.737371 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.20.64.188 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5940 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0323 13:47:06.737392 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0323 13:47:06.737432 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-5940/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.20.64.188+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0323 13:47:07.303928      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:47:07.761645 23 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0323 13:47:07.761773 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5940" for this suite. @ 03/23/25 13:47:07.763
• [19.234 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 03/23/25 13:47:07.766
  I0323 13:47:07.766350 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename replication-controller @ 03/23/25 13:47:07.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:47:07.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:47:07.774
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 03/23/25 13:47:07.775
  E0323 13:47:08.304306      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:09.304809      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 03/23/25 13:47:09.785
  STEP: Then the orphan pod is adopted @ 03/23/25 13:47:09.788
  E0323 13:47:10.305495      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:47:10.791862 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8743" for this suite. @ 03/23/25 13:47:10.793
• [3.029 seconds]
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 03/23/25 13:47:10.795
  I0323 13:47:10.795790 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename init-container @ 03/23/25 13:47:10.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:47:10.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:47:10.803
  STEP: creating the pod @ 03/23/25 13:47:10.805
  I0323 13:47:10.805148 23 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E0323 13:47:11.305971      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:12.306068      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:13.306400      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:14.306581      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:15.306728      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:16.306864      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:17.307018      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:18.307078      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:19.307139      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:20.307242      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:21.307383      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:22.307497      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:23.308285      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:24.308833      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:25.308964      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:26.309060      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:27.309194      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:28.309327      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:29.309470      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:30.309619      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:31.309771      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:32.309905      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:33.310395      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:34.310499      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:35.310942      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:36.311072      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:37.311208      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:38.311278      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:39.311380      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:40.311516      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:41.312406      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:42.312491      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:43.312545      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:44.312816      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:45.312908      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:46.313757      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:47.313833      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:48.313914      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:49.313982      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:50.314073      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:47:50.500298 23 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-007a4803-d5d1-4651-863d-09b57e828754", GenerateName:"", Namespace:"init-container-4199", SelfLink:"", UID:"0c881feb-fe99-4655-a73f-b937fb60de42", ResourceVersion:"38079", Generation:0, CreationTimestamp:time.Date(2025, time.March, 23, 13, 47, 10, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"805139181"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.March, 23, 13, 47, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004808dc8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.March, 23, 13, 47, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004808df8), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-w982k", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc00436e440), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-w982k", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-w982k", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-w982k", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc004369fe0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"k8s-10-255-0-207", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc00334a2d0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0021b0140)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0021b0170)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0021b0178), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0021b017c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc000acf2d0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.March, 23, 13, 47, 11, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.March, 23, 13, 47, 10, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.March, 23, 13, 47, 10, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.March, 23, 13, 47, 10, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.March, 23, 13, 47, 10, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"10.255.0.207", HostIPs:[]v1.HostIP{v1.HostIP{IP:"10.255.0.207"}}, PodIP:"172.20.254.10", PodIPs:[]v1.PodIP{v1.PodIP{IP:"172.20.254.10"}}, StartTime:time.Date(2025, time.March, 23, 13, 47, 10, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0005033b0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000503490)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://eff0bf19e2eb0efda5a39c6e9558d9e121f3f653e0b623f31f39a15bde5575cb", Started:(*bool)(0xc0021b030a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-w982k", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000acf300)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00436e4a0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc0021b031d), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-w982k", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000acf340)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00436e480), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc0021b02df), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-w982k", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000acf2f0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0323 13:47:50.500427 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4199" for this suite. @ 03/23/25 13:47:50.502
• [39.709 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 03/23/25 13:47:50.504
  I0323 13:47:50.504881 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename configmap @ 03/23/25 13:47:50.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:47:50.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:47:50.512
  I0323 13:47:50.527993 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6536" for this suite. @ 03/23/25 13:47:50.603
• [0.101 seconds]
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:306
  STEP: Creating a kubernetes client @ 03/23/25 13:47:50.606
  I0323 13:47:50.606080 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename svcaccounts @ 03/23/25 13:47:50.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:47:50.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:47:50.614
  STEP: Creating a pod to test service account token:  @ 03/23/25 13:47:50.615
  E0323 13:47:51.314173      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:52.314247      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:53.315301      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:54.315451      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:47:54.625
  I0323 13:47:54.626938 23 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod test-pod-7fcffd1a-1044-44bf-8d76-bc8acf5e4c62 container agnhost-container: <nil>
  STEP: delete the pod @ 03/23/25 13:47:54.629
  I0323 13:47:54.636373 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-287" for this suite. @ 03/23/25 13:47:54.637
• [4.034 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 03/23/25 13:47:54.64
  I0323 13:47:54.640013 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename secrets @ 03/23/25 13:47:54.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:47:54.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:47:54.647
  STEP: Creating secret with name secret-test-map-56d8cdd8-84c8-452a-b282-68e38e8ad484 @ 03/23/25 13:47:54.649
  STEP: Creating a pod to test consume secrets @ 03/23/25 13:47:54.652
  E0323 13:47:55.315541      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:56.315617      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:57.316613      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:47:58.316673      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:47:58.66
  I0323 13:47:58.662197 23 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod pod-secrets-4080e159-c78b-4282-9075-5861d53b5e0b container secret-volume-test: <nil>
  STEP: delete the pod @ 03/23/25 13:47:58.664
  I0323 13:47:58.671616 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5485" for this suite. @ 03/23/25 13:47:58.673
• [4.036 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 03/23/25 13:47:58.676
  I0323 13:47:58.676485 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename resourcequota @ 03/23/25 13:47:58.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:47:58.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:47:58.684
  STEP: Counting existing ResourceQuota @ 03/23/25 13:47:58.686
  E0323 13:47:59.317670      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:48:00.317679      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:48:01.317927      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:48:02.318990      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:48:03.319433      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 03/23/25 13:48:03.688
  STEP: Ensuring resource quota status is calculated @ 03/23/25 13:48:03.69
  E0323 13:48:04.320431      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:48:05.320817      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 03/23/25 13:48:05.693
  STEP: Creating a NodePort Service @ 03/23/25 13:48:05.701
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 03/23/25 13:48:05.713
  STEP: Ensuring resource quota status captures service creation @ 03/23/25 13:48:05.724
  E0323 13:48:06.321851      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:48:07.322010      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 03/23/25 13:48:07.726
  STEP: Ensuring resource quota status released usage @ 03/23/25 13:48:07.74
  E0323 13:48:08.322444      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:48:09.322528      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:48:09.742997 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3500" for this suite. @ 03/23/25 13:48:09.744
• [11.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 03/23/25 13:48:09.747
  I0323 13:48:09.747273 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename pod-network-test @ 03/23/25 13:48:09.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:48:09.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:48:09.755
  STEP: Performing setup for networking test in namespace pod-network-test-7501 @ 03/23/25 13:48:09.757
  STEP: creating a selector @ 03/23/25 13:48:09.757
  STEP: Creating the service pods in kubernetes @ 03/23/25 13:48:09.757
  I0323 13:48:09.757118 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0323 13:48:10.323409      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:48:11.323622      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:48:12.324369      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:48:13.324362      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:48:14.324813      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:48:15.324945      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:48:16.325670      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:48:17.325800      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:48:18.326275      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:48:19.326410      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:48:20.327034      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:48:21.327164      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:48:22.327923      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:48:23.327994      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 03/23/25 13:48:23.879
  E0323 13:48:24.328815      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:48:25.328960      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:48:25.886414 23 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0323 13:48:25.886437 23 networking.go:42] Breadth first check of 172.20.63.246 on host 10.255.0.206...
  I0323 13:48:25.887569 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.254.7:9080/dial?request=hostname&protocol=http&host=172.20.63.246&port=8083&tries=1'] Namespace:pod-network-test-7501 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0323 13:48:25.887589 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0323 13:48:25.887634 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-7501/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.254.7%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.20.63.246%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0323 13:48:25.917560 23 utils.go:356] Waiting for responses: map[]
  I0323 13:48:25.917586 23 utils.go:360] reached 172.20.63.246 after 0/1 tries
  I0323 13:48:25.917597 23 networking.go:42] Breadth first check of 172.20.254.24 on host 10.255.0.207...
  I0323 13:48:25.919302 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.254.7:9080/dial?request=hostname&protocol=http&host=172.20.254.24&port=8083&tries=1'] Namespace:pod-network-test-7501 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0323 13:48:25.919320 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0323 13:48:25.919359 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-7501/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.254.7%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.20.254.24%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0323 13:48:25.946160 23 utils.go:356] Waiting for responses: map[]
  I0323 13:48:25.946187 23 utils.go:360] reached 172.20.254.24 after 0/1 tries
  I0323 13:48:25.946197 23 networking.go:42] Breadth first check of 172.20.64.190 on host 10.255.0.208...
  I0323 13:48:25.947801 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.254.7:9080/dial?request=hostname&protocol=http&host=172.20.64.190&port=8083&tries=1'] Namespace:pod-network-test-7501 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0323 13:48:25.947821 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0323 13:48:25.947864 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-7501/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.254.7%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.20.64.190%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0323 13:48:25.974168 23 utils.go:356] Waiting for responses: map[]
  I0323 13:48:25.974207 23 utils.go:360] reached 172.20.64.190 after 0/1 tries
  I0323 13:48:25.974233 23 networking.go:53] Going to retry 0 out of 3 pods....
  I0323 13:48:25.974325 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7501" for this suite. @ 03/23/25 13:48:25.976
• [16.232 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 03/23/25 13:48:25.979
  I0323 13:48:25.979707 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename controllerrevisions @ 03/23/25 13:48:25.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:48:25.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:48:25.987
  STEP: Creating DaemonSet "e2e-dfdnb-daemon-set" @ 03/23/25 13:48:26.08
  STEP: Check that daemon pods launch on every node of the cluster. @ 03/23/25 13:48:26.083
  I0323 13:48:26.178621 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-dfdnb-daemon-set: 0
  I0323 13:48:26.178649 23 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  E0323 13:48:26.329845      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:48:27.088218 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-dfdnb-daemon-set: 2
  I0323 13:48:27.088245 23 fixtures.go:131] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  E0323 13:48:27.330518      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:48:28.087544 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-dfdnb-daemon-set: 3
  I0323 13:48:28.087571 23 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-dfdnb-daemon-set
  STEP: Confirm DaemonSet "e2e-dfdnb-daemon-set" successfully created with "daemonset-name=e2e-dfdnb-daemon-set" label @ 03/23/25 13:48:28.088
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-dfdnb-daemon-set" @ 03/23/25 13:48:28.091
  I0323 13:48:28.092308 23 controller_revision.go:162] Located ControllerRevision: "e2e-dfdnb-daemon-set-7bdc4ddbfd"
  STEP: Patching ControllerRevision "e2e-dfdnb-daemon-set-7bdc4ddbfd" @ 03/23/25 13:48:28.093
  I0323 13:48:28.096359 23 controller_revision.go:173] e2e-dfdnb-daemon-set-7bdc4ddbfd has been patched
  STEP: Create a new ControllerRevision @ 03/23/25 13:48:28.096
  I0323 13:48:28.099720 23 controller_revision.go:191] Created ControllerRevision: e2e-dfdnb-daemon-set-6bb46c56
  STEP: Confirm that there are two ControllerRevisions @ 03/23/25 13:48:28.099
  I0323 13:48:28.099763 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0323 13:48:28.100805 23 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-dfdnb-daemon-set-7bdc4ddbfd" @ 03/23/25 13:48:28.1
  STEP: Confirm that there is only one ControllerRevision @ 03/23/25 13:48:28.102
  I0323 13:48:28.102821 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0323 13:48:28.103785 23 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-dfdnb-daemon-set-6bb46c56" @ 03/23/25 13:48:28.104
  I0323 13:48:28.107774 23 controller_revision.go:220] e2e-dfdnb-daemon-set-6bb46c56 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 03/23/25 13:48:28.107
  W0323 13:48:28.111540      23 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 03/23/25 13:48:28.111
  I0323 13:48:28.111604 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0323 13:48:28.122639 23 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-dfdnb-daemon-set-6bb46c56=updated" @ 03/23/25 13:48:28.122
  STEP: Confirm that there is only one ControllerRevision @ 03/23/25 13:48:28.126
  I0323 13:48:28.126722 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0323 13:48:28.128693 23 controller_revision.go:265] Found 1 ControllerRevisions
  I0323 13:48:28.193676 23 controller_revision.go:246] ControllerRevision "e2e-dfdnb-daemon-set-5cd9cf86fc" has revision 3
  STEP: Deleting DaemonSet "e2e-dfdnb-daemon-set" @ 03/23/25 13:48:28.195
  STEP: deleting DaemonSet.extensions e2e-dfdnb-daemon-set in namespace controllerrevisions-399, will wait for the garbage collector to delete the pods @ 03/23/25 13:48:28.195
  I0323 13:48:28.250595 23 resources.go:139] Deleting DaemonSet.extensions e2e-dfdnb-daemon-set took: 3.374248ms
  E0323 13:48:28.331181      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:48:28.351475 23 resources.go:163] Terminating DaemonSet.extensions e2e-dfdnb-daemon-set pods took: 100.878944ms
  E0323 13:48:29.331738      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:48:29.653606 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-dfdnb-daemon-set: 0
  I0323 13:48:29.653637 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-dfdnb-daemon-set
  I0323 13:48:29.655057 23 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"38419"},"items":null}

  I0323 13:48:29.656100 23 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"38419"},"items":null}

  I0323 13:48:29.660680 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-399" for this suite. @ 03/23/25 13:48:29.661
• [3.684 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 03/23/25 13:48:29.664
  I0323 13:48:29.664177 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename field-validation @ 03/23/25 13:48:29.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:48:29.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:48:29.673
  I0323 13:48:29.674550 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  E0323 13:48:30.332690      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:48:31.332858      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:48:32.332986      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:48:32.727996 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5720" for this suite. @ 03/23/25 13:48:32.729
• [3.068 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:771
  STEP: Creating a kubernetes client @ 03/23/25 13:48:32.732
  I0323 13:48:32.732023 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename svcaccounts @ 03/23/25 13:48:32.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:48:32.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:48:32.739
  I0323 13:48:32.741893 23 service_accounts.go:783] Got root ca configmap in namespace "svcaccounts-3710"
  I0323 13:48:32.743817 23 service_accounts.go:786] Deleted root ca configmap in namespace "svcaccounts-3710"
  STEP: waiting for a new root ca configmap created @ 03/23/25 13:48:33.244
  I0323 13:48:33.245973 23 service_accounts.go:800] Recreated root ca configmap in namespace "svcaccounts-3710"
  I0323 13:48:33.248242 23 service_accounts.go:811] Updated root ca configmap in namespace "svcaccounts-3710"
  E0323 13:48:33.333423      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting for the root ca configmap reconciled @ 03/23/25 13:48:33.748
  I0323 13:48:33.750617 23 service_accounts.go:829] Reconciled root ca configmap in namespace "svcaccounts-3710"
  I0323 13:48:33.750716 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3710" for this suite. @ 03/23/25 13:48:33.752
• [1.023 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1085
  STEP: Creating a kubernetes client @ 03/23/25 13:48:33.754
  I0323 13:48:33.754796 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename kubectl @ 03/23/25 13:48:33.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:48:33.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:48:33.762
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 03/23/25 13:48:33.764
  I0323 13:48:33.764209 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-2706 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0323 13:48:33.807059 23 builder.go:146] stderr: ""
  I0323 13:48:33.807088 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 03/23/25 13:48:33.807
  I0323 13:48:33.807157 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-2706 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0323 13:48:33.848343 23 builder.go:146] stderr: ""
  I0323 13:48:33.848384 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 03/23/25 13:48:33.848
  I0323 13:48:33.849577 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-2706 delete pods e2e-test-httpd-pod'
  E0323 13:48:34.334208      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:48:35.334351      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:48:35.581140 23 builder.go:146] stderr: ""
  I0323 13:48:35.581170 23 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0323 13:48:35.581318 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2706" for this suite. @ 03/23/25 13:48:35.583
• [1.831 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 03/23/25 13:48:35.585
  I0323 13:48:35.585901 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename services @ 03/23/25 13:48:35.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:48:35.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:48:35.593
  STEP: creating service endpoint-test2 in namespace services-9175 @ 03/23/25 13:48:35.595
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9175 to expose endpoints map[] @ 03/23/25 13:48:35.599
  I0323 13:48:35.601151 23 service.go:4428] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E0323 13:48:36.334441      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:48:36.605438 23 service.go:4460] successfully validated that service endpoint-test2 in namespace services-9175 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-9175 @ 03/23/25 13:48:36.605
  E0323 13:48:37.335098      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:48:38.335228      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9175 to expose endpoints map[pod1:[80]] @ 03/23/25 13:48:38.613
  I0323 13:48:38.617619 23 service.go:4460] successfully validated that service endpoint-test2 in namespace services-9175 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 03/23/25 13:48:38.617
  I0323 13:48:38.617674 23 resource.go:361] Creating new exec pod
  E0323 13:48:39.336067      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:48:40.336139      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:48:41.336546      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:48:41.624807 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-9175 exec execpodvdvj6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0323 13:48:41.691293 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.68.224.181) 80 port [tcp/http] succeeded!\n"
  I0323 13:48:41.691326 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0323 13:48:41.691385 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-9175 exec execpodvdvj6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.224.181 80'
  I0323 13:48:41.756540 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.224.181 80\nConnection to 10.68.224.181 80 port [tcp/http] succeeded!\n"
  I0323 13:48:41.756578 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-9175 @ 03/23/25 13:48:41.756
  E0323 13:48:42.336671      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:48:43.336728      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9175 to expose endpoints map[pod1:[80] pod2:[80]] @ 03/23/25 13:48:43.764
  I0323 13:48:43.769116 23 service.go:4460] successfully validated that service endpoint-test2 in namespace services-9175 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 03/23/25 13:48:43.769
  E0323 13:48:44.336893      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:48:44.769344 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-9175 exec execpodvdvj6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0323 13:48:44.838721 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.68.224.181) 80 port [tcp/http] succeeded!\n"
  I0323 13:48:44.838755 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0323 13:48:44.838822 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-9175 exec execpodvdvj6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.224.181 80'
  I0323 13:48:44.903551 23 builder.go:146] stderr: "+ + ncecho -v hostName -t\n -w 2 10.68.224.181 80\nConnection to 10.68.224.181 80 port [tcp/http] succeeded!\n"
  I0323 13:48:44.903589 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-9175 @ 03/23/25 13:48:44.903
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9175 to expose endpoints map[pod2:[80]] @ 03/23/25 13:48:44.91
  I0323 13:48:44.917343 23 service.go:4460] successfully validated that service endpoint-test2 in namespace services-9175 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 03/23/25 13:48:44.917
  E0323 13:48:45.337672      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:48:45.918378 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-9175 exec execpodvdvj6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0323 13:48:45.991204 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.68.224.181) 80 port [tcp/http] succeeded!\n"
  I0323 13:48:45.991238 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0323 13:48:45.991305 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-9175 exec execpodvdvj6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.224.181 80'
  I0323 13:48:46.061218 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.224.181 80\nConnection to 10.68.224.181 80 port [tcp/http] succeeded!\n"
  I0323 13:48:46.061251 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-9175 @ 03/23/25 13:48:46.061
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9175 to expose endpoints map[] @ 03/23/25 13:48:46.071
  I0323 13:48:46.075186 23 service.go:4460] successfully validated that service endpoint-test2 in namespace services-9175 exposes endpoints map[]
  I0323 13:48:46.083850 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9175" for this suite. @ 03/23/25 13:48:46.085
• [10.503 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 03/23/25 13:48:46.088
  I0323 13:48:46.088869 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/23/25 13:48:46.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:48:46.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:48:46.1
  I0323 13:48:46.102232 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  E0323 13:48:46.338130      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 03/23/25 13:48:47.302
  I0323 13:48:47.302927 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=crd-publish-openapi-1318 --namespace=crd-publish-openapi-1318 create -f -'
  E0323 13:48:47.338274      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:48:48.338321      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:48:49.338479      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:48:49.360371 23 builder.go:146] stderr: ""
  I0323 13:48:49.360400 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2752-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0323 13:48:49.360439 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=crd-publish-openapi-1318 --namespace=crd-publish-openapi-1318 delete e2e-test-crd-publish-openapi-2752-crds test-cr'
  I0323 13:48:49.403851 23 builder.go:146] stderr: ""
  I0323 13:48:49.403883 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2752-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0323 13:48:49.403923 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=crd-publish-openapi-1318 --namespace=crd-publish-openapi-1318 apply -f -'
  I0323 13:48:49.449772 23 builder.go:146] stderr: ""
  I0323 13:48:49.449802 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2752-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0323 13:48:49.449838 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=crd-publish-openapi-1318 --namespace=crd-publish-openapi-1318 delete e2e-test-crd-publish-openapi-2752-crds test-cr'
  I0323 13:48:49.492962 23 builder.go:146] stderr: ""
  I0323 13:48:49.493043 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2752-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 03/23/25 13:48:49.493
  I0323 13:48:49.493115 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=crd-publish-openapi-1318 explain e2e-test-crd-publish-openapi-2752-crds'
  I0323 13:48:49.534737 23 builder.go:146] stderr: ""
  I0323 13:48:49.534773 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-2752-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0323 13:48:50.339357      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:48:50.688297 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1318" for this suite. @ 03/23/25 13:48:50.692
• [4.606 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 03/23/25 13:48:50.698
  I0323 13:48:50.699008 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename projected @ 03/23/25 13:48:50.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:48:50.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:48:50.708
  STEP: Creating projection with secret that has name projected-secret-test-5d803719-55e3-4765-b298-1c39ecc184e2 @ 03/23/25 13:48:50.709
  STEP: Creating a pod to test consume secrets @ 03/23/25 13:48:50.711
  E0323 13:48:51.339770      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:48:52.339843      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:48:53.340652      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:48:54.340802      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:48:54.721
  I0323 13:48:54.722321 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-projected-secrets-cc244d38-c089-41b0-97c2-ec20f67925f4 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 03/23/25 13:48:54.729
  I0323 13:48:54.736029 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1865" for this suite. @ 03/23/25 13:48:54.737
• [4.041 seconds]
------------------------------
SSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 03/23/25 13:48:54.74
  I0323 13:48:54.740019 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename endpointslice @ 03/23/25 13:48:54.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:48:54.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:48:54.748
  I0323 13:48:54.754038 23 endpointslice.go:1045] Endpoints addresses: [10.255.0.206] , ports: [6443]
  I0323 13:48:54.754057 23 endpointslice.go:1075] EndpointSlices addresses: [10.255.0.206] , ports: [6443]
  I0323 13:48:54.754121 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5887" for this suite. @ 03/23/25 13:48:54.838
• [0.101 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 03/23/25 13:48:54.841
  I0323 13:48:54.841556 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename webhook @ 03/23/25 13:48:54.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:48:54.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:48:54.85
  STEP: Setting up server cert @ 03/23/25 13:48:54.86
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/23/25 13:48:55.167
  STEP: Deploying the webhook pod @ 03/23/25 13:48:55.17
  STEP: Wait for the deployment to be ready @ 03/23/25 13:48:55.177
  I0323 13:48:55.180674 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0323 13:48:55.341857      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:48:56.341921      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/23/25 13:48:57.185
  STEP: Verifying the service has paired with the endpoint @ 03/23/25 13:48:57.19
  E0323 13:48:57.342424      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:48:58.190281 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 03/23/25 13:48:58.193
  I0323 13:48:58.211611 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9108" for this suite. @ 03/23/25 13:48:58.213
  STEP: Destroying namespace "webhook-markers-3071" for this suite. @ 03/23/25 13:48:58.218
• [3.382 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 03/23/25 13:48:58.223
  I0323 13:48:58.223719 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename resourcequota @ 03/23/25 13:48:58.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:48:58.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:48:58.233
  STEP: Creating a ResourceQuota @ 03/23/25 13:48:58.235
  STEP: Getting a ResourceQuota @ 03/23/25 13:48:58.237
  STEP: Listing all ResourceQuotas with LabelSelector @ 03/23/25 13:48:58.238
  STEP: Patching the ResourceQuota @ 03/23/25 13:48:58.241
  STEP: Deleting a Collection of ResourceQuotas @ 03/23/25 13:48:58.243
  STEP: Verifying the deleted ResourceQuota @ 03/23/25 13:48:58.248
  I0323 13:48:58.249195 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8750" for this suite. @ 03/23/25 13:48:58.313
• [0.093 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 03/23/25 13:48:58.317
  I0323 13:48:58.317270 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename daemonsets @ 03/23/25 13:48:58.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:48:58.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:48:58.326
  E0323 13:48:58.343340      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating simple DaemonSet "daemon-set" @ 03/23/25 13:48:58.419
  STEP: Check that daemon pods launch on every node of the cluster. @ 03/23/25 13:48:58.421
  I0323 13:48:58.520805 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0323 13:48:58.520841 23 fixtures.go:131] Node k8s-10-255-0-206 is running 0 daemon pod, expected 1
  E0323 13:48:59.343436      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:48:59.426195 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0323 13:48:59.426218 23 fixtures.go:131] Node k8s-10-255-0-207 is running 0 daemon pod, expected 1
  E0323 13:49:00.343748      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:49:00.425314 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0323 13:49:00.425338 23 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 03/23/25 13:49:00.426
  I0323 13:49:00.427770 23 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 03/23/25 13:49:00.427
  I0323 13:49:00.432302 23 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 03/23/25 13:49:00.432
  I0323 13:49:00.433230 23 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0323 13:49:00.433306 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0323 13:49:00.433393 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0323 13:49:00.433470 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0323 13:49:00.433525 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0323 13:49:00.433588 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0323 13:49:00.433610 23 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-8762 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0323 13:49:00.433622 23 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 03/23/25 13:49:00.433
  STEP: watching for the daemon set status to be patched @ 03/23/25 13:49:00.436
  I0323 13:49:00.437356 23 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0323 13:49:00.437430 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0323 13:49:00.437514 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0323 13:49:00.437582 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0323 13:49:00.437644 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0323 13:49:00.437734 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0323 13:49:00.437751 23 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-8762 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0323 13:49:00.437827 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0323 13:49:00.437844 23 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-8762 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0323 13:49:00.437854 23 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 03/23/25 13:49:00.438
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8762, will wait for the garbage collector to delete the pods @ 03/23/25 13:49:00.438
  I0323 13:49:00.493817 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 2.533921ms
  I0323 13:49:00.594056 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.23417ms
  E0323 13:49:01.344246      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:49:01.704502 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0323 13:49:01.704534 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0323 13:49:01.706024 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"38918"},"items":null}

  I0323 13:49:01.707056 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"38918"},"items":null}

  I0323 13:49:01.711682 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8762" for this suite. @ 03/23/25 13:49:01.712
• [3.398 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 03/23/25 13:49:01.715
  I0323 13:49:01.715303 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename webhook @ 03/23/25 13:49:01.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:49:01.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:49:01.723
  STEP: Setting up server cert @ 03/23/25 13:49:01.734
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/23/25 13:49:02.059
  STEP: Deploying the webhook pod @ 03/23/25 13:49:02.062
  STEP: Wait for the deployment to be ready @ 03/23/25 13:49:02.069
  I0323 13:49:02.072605 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0323 13:49:02.344923      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:03.344980      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/23/25 13:49:04.077
  STEP: Verifying the service has paired with the endpoint @ 03/23/25 13:49:04.083
  E0323 13:49:04.345341      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:49:05.083689 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0323 13:49:05.087080 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  E0323 13:49:05.346310      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7138-crds.webhook.example.com via the AdmissionRegistration API @ 03/23/25 13:49:05.599
  STEP: Creating a custom resource that should be mutated by the webhook @ 03/23/25 13:49:05.607
  E0323 13:49:06.347267      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:07.347406      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:49:08.167862 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2590" for this suite. @ 03/23/25 13:49:08.169
  STEP: Destroying namespace "webhook-markers-3141" for this suite. @ 03/23/25 13:49:08.171
• [6.459 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 03/23/25 13:49:08.174
  I0323 13:49:08.174241 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename services @ 03/23/25 13:49:08.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:49:08.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:49:08.182
  I0323 13:49:08.184821 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9826" for this suite. @ 03/23/25 13:49:08.269
• [0.099 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 03/23/25 13:49:08.273
  I0323 13:49:08.273722 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename pods @ 03/23/25 13:49:08.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:49:08.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:49:08.279
  E0323 13:49:08.347613      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:09.347768      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:10.348521      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:11.348596      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:12.348652      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:13.348741      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:49:14.304
  I0323 13:49:14.305840 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod client-envvars-44b995f3-97d0-4776-ac6a-4e60439fe602 container env3cont: <nil>
  STEP: delete the pod @ 03/23/25 13:49:14.308
  I0323 13:49:14.315209 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2365" for this suite. @ 03/23/25 13:49:14.316
• [6.046 seconds]
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 03/23/25 13:49:14.32
  I0323 13:49:14.320025 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename runtimeclass @ 03/23/25 13:49:14.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:49:14.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:49:14.326
  STEP: Deleting RuntimeClass runtimeclass-2404-delete-me @ 03/23/25 13:49:14.33
  STEP: Waiting for the RuntimeClass to disappear @ 03/23/25 13:49:14.332
  I0323 13:49:14.335625 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0323 13:49:14.349713      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "runtimeclass-2404" for this suite. @ 03/23/25 13:49:14.417
• [0.101 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 03/23/25 13:49:14.42
  I0323 13:49:14.420961 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename emptydir-wrapper @ 03/23/25 13:49:14.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:49:14.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:49:14.426
  STEP: Creating 50 configmaps @ 03/23/25 13:49:14.43
  STEP: Creating RC which spawns configmap-volume pods @ 03/23/25 13:49:14.674
  I0323 13:49:14.776556 23 resource.go:87] Pod name wrapped-volume-race-455a5284-31ff-47e2-b677-7620c764eb22: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 03/23/25 13:49:14.776
  E0323 13:49:15.349861      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:16.350015      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 03/23/25 13:49:16.837
  I0323 13:49:16.849664 23 resource.go:87] Pod name wrapped-volume-race-2a4612d3-2fc9-48c1-b09c-26bc7736ab35: Found 0 pods out of 5
  E0323 13:49:17.350534      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:18.350598      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:19.350730      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:20.350863      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:21.351286      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:49:21.852456 23 resource.go:87] Pod name wrapped-volume-race-2a4612d3-2fc9-48c1-b09c-26bc7736ab35: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 03/23/25 13:49:21.852
  STEP: Creating RC which spawns configmap-volume pods @ 03/23/25 13:49:21.86
  I0323 13:49:21.871446 23 resource.go:87] Pod name wrapped-volume-race-5d36afd9-bd52-4ec8-9b53-5dedcef304a2: Found 1 pods out of 5
  E0323 13:49:22.351975      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:23.352038      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:24.352823      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:25.352968      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:26.353050      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:49:26.874536 23 resource.go:87] Pod name wrapped-volume-race-5d36afd9-bd52-4ec8-9b53-5dedcef304a2: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 03/23/25 13:49:26.874
  STEP: deleting ReplicationController wrapped-volume-race-5d36afd9-bd52-4ec8-9b53-5dedcef304a2 in namespace emptydir-wrapper-2599, will wait for the garbage collector to delete the pods @ 03/23/25 13:49:26.881
  I0323 13:49:26.936877 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-5d36afd9-bd52-4ec8-9b53-5dedcef304a2 took: 2.999525ms
  I0323 13:49:27.037164 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-5d36afd9-bd52-4ec8-9b53-5dedcef304a2 pods took: 100.284917ms
  E0323 13:49:27.353577      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-2a4612d3-2fc9-48c1-b09c-26bc7736ab35 in namespace emptydir-wrapper-2599, will wait for the garbage collector to delete the pods @ 03/23/25 13:49:28.137
  I0323 13:49:28.192904 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-2a4612d3-2fc9-48c1-b09c-26bc7736ab35 took: 2.998344ms
  I0323 13:49:28.293984 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-2a4612d3-2fc9-48c1-b09c-26bc7736ab35 pods took: 101.075129ms
  E0323 13:49:28.354161      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-455a5284-31ff-47e2-b677-7620c764eb22 in namespace emptydir-wrapper-2599, will wait for the garbage collector to delete the pods @ 03/23/25 13:49:29.094
  I0323 13:49:29.150919 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-455a5284-31ff-47e2-b677-7620c764eb22 took: 4.513887ms
  I0323 13:49:29.251902 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-455a5284-31ff-47e2-b677-7620c764eb22 pods took: 100.975889ms
  E0323 13:49:29.354267      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 03/23/25 13:49:30.253
  E0323 13:49:30.355138      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:49:30.364555 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-2599" for this suite. @ 03/23/25 13:49:30.366
• [15.947 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 03/23/25 13:49:30.368
  I0323 13:49:30.368223 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename csi-storageclass @ 03/23/25 13:49:30.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:49:30.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:49:30.376
  STEP: Creating a StorageClass @ 03/23/25 13:49:30.377
  STEP: Get StorageClass "e2e-f6xtj" @ 03/23/25 13:49:30.379
  STEP: Patching the StorageClass "e2e-f6xtj" @ 03/23/25 13:49:30.38
  STEP: Delete StorageClass "e2e-f6xtj" @ 03/23/25 13:49:30.384
  STEP: Confirm deletion of StorageClass "e2e-f6xtj" @ 03/23/25 13:49:30.386
  STEP: Create a replacement StorageClass @ 03/23/25 13:49:30.387
  STEP: Updating StorageClass "e2e-v2-qh688" @ 03/23/25 13:49:30.389
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-qh688=updated" @ 03/23/25 13:49:30.392
  STEP: Deleting StorageClass "e2e-v2-qh688" via DeleteCollection @ 03/23/25 13:49:30.393
  STEP: Confirm deletion of StorageClass "e2e-v2-qh688" @ 03/23/25 13:49:30.395
  I0323 13:49:30.396506 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-2414" for this suite. @ 03/23/25 13:49:30.467
• [0.102 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 03/23/25 13:49:30.47
  I0323 13:49:30.470132 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename webhook @ 03/23/25 13:49:30.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:49:30.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:49:30.478
  STEP: Setting up server cert @ 03/23/25 13:49:30.488
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/23/25 13:49:30.771
  STEP: Deploying the webhook pod @ 03/23/25 13:49:30.774
  STEP: Wait for the deployment to be ready @ 03/23/25 13:49:30.78
  I0323 13:49:30.784157 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0323 13:49:31.355711      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:32.355774      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/23/25 13:49:32.789
  STEP: Verifying the service has paired with the endpoint @ 03/23/25 13:49:32.794
  E0323 13:49:33.356251      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:49:33.794643 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 03/23/25 13:49:33.797
  STEP: create a pod @ 03/23/25 13:49:33.805
  E0323 13:49:34.356832      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:35.356985      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 03/23/25 13:49:35.811
  I0323 13:49:35.811814 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=webhook-3891 attach --namespace=webhook-3891 to-be-attached-pod -i -c=container1'
  I0323 13:49:35.862083 23 builder.go:135] rc: 1
  I0323 13:49:35.882766 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3891" for this suite. @ 03/23/25 13:49:35.885
  STEP: Destroying namespace "webhook-markers-2184" for this suite. @ 03/23/25 13:49:35.89
• [5.423 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 03/23/25 13:49:35.893
  I0323 13:49:35.893351 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename var-expansion @ 03/23/25 13:49:35.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:49:35.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:49:35.902
  STEP: Creating a pod to test env composition @ 03/23/25 13:49:35.904
  E0323 13:49:36.357740      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:37.357886      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:49:37.91
  I0323 13:49:37.912206 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod var-expansion-6fd23742-7c43-422a-a05b-e120b0cde6d8 container dapi-container: <nil>
  STEP: delete the pod @ 03/23/25 13:49:37.914
  I0323 13:49:37.921320 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3287" for this suite. @ 03/23/25 13:49:37.922
• [2.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 03/23/25 13:49:37.925
  I0323 13:49:37.925731 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename configmap @ 03/23/25 13:49:37.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:49:37.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:49:37.934
  STEP: Creating configMap with name configmap-test-volume-map-afbc06fe-7f9b-4548-b045-2ffe45eb3cf0 @ 03/23/25 13:49:37.935
  STEP: Creating a pod to test consume configMaps @ 03/23/25 13:49:37.937
  E0323 13:49:38.357996      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:39.358068      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:49:39.945
  I0323 13:49:39.946620 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-configmaps-5b2c9a8a-e808-47df-b969-5b9d1a420b16 container agnhost-container: <nil>
  STEP: delete the pod @ 03/23/25 13:49:39.95
  I0323 13:49:39.957005 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2203" for this suite. @ 03/23/25 13:49:39.958
• [2.036 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 03/23/25 13:49:39.961
  I0323 13:49:39.961760 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename lease-test @ 03/23/25 13:49:39.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:49:39.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:49:39.972
  I0323 13:49:39.994576 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-4472" for this suite. @ 03/23/25 13:49:40.059
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 03/23/25 13:49:40.062
  I0323 13:49:40.062297 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename chunking @ 03/23/25 13:49:40.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:49:40.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:49:40.069
  STEP: creating a large number of resources @ 03/23/25 13:49:40.07
  E0323 13:49:40.358383      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:41.359421      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:42.360069      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:43.360856      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:44.361665      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:45.362493      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:46.362568      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:47.363139      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:48.364008      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:49.364288      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:50.364515      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:51.365431      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:52.366301      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:53.366436      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:54.367434      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:55.368192      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:56.368924      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:49:57.369872      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 03/23/25 13:49:57.767
  I0323 13:49:57.814998 23 chunking.go:98] Retrieved 17/17 results with rv 40373 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0323 13:49:57.865200 23 chunking.go:98] Retrieved 17/17 results with rv 40373 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzMsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0323 13:49:57.915181 23 chunking.go:98] Retrieved 17/17 results with rv 40373 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzMsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0323 13:49:57.965301 23 chunking.go:98] Retrieved 17/17 results with rv 40373 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzMsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0323 13:49:58.015412 23 chunking.go:98] Retrieved 17/17 results with rv 40373 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzMsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0323 13:49:58.065590 23 chunking.go:98] Retrieved 17/17 results with rv 40373 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzMsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0323 13:49:58.115805 23 chunking.go:98] Retrieved 17/17 results with rv 40373 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzMsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0323 13:49:58.164878 23 chunking.go:98] Retrieved 17/17 results with rv 40373 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzMsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0323 13:49:58.214919 23 chunking.go:98] Retrieved 17/17 results with rv 40373 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzMsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0323 13:49:58.264844 23 chunking.go:98] Retrieved 17/17 results with rv 40373 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzMsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0323 13:49:58.314861 23 chunking.go:98] Retrieved 17/17 results with rv 40373 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzMsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0323 13:49:58.364787 23 chunking.go:98] Retrieved 17/17 results with rv 40373 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzMsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  E0323 13:49:58.370804      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:49:58.415601 23 chunking.go:98] Retrieved 17/17 results with rv 40373 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzMsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0323 13:49:58.465390 23 chunking.go:98] Retrieved 17/17 results with rv 40373 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzMsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0323 13:49:58.515257 23 chunking.go:98] Retrieved 17/17 results with rv 40373 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzMsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0323 13:49:58.565147 23 chunking.go:98] Retrieved 17/17 results with rv 40373 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzMsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0323 13:49:58.615050 23 chunking.go:98] Retrieved 17/17 results with rv 40373 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzMsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0323 13:49:58.665053 23 chunking.go:98] Retrieved 17/17 results with rv 40373 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzMsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0323 13:49:58.715119 23 chunking.go:98] Retrieved 17/17 results with rv 40373 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzMsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0323 13:49:58.765237 23 chunking.go:98] Retrieved 17/17 results with rv 40373 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzMsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0323 13:49:58.815188 23 chunking.go:98] Retrieved 17/17 results with rv 40373 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzMsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0323 13:49:58.865257 23 chunking.go:98] Retrieved 17/17 results with rv 40373 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzMsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0323 13:49:58.915195 23 chunking.go:98] Retrieved 17/17 results with rv 40373 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzMsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0323 13:49:58.964962 23 chunking.go:98] Retrieved 9/17 results with rv 40373 and continue 
  I0323 13:49:59.015032 23 chunking.go:98] Retrieved 17/17 results with rv 40375 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0323 13:49:59.065337 23 chunking.go:98] Retrieved 17/17 results with rv 40375 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0323 13:49:59.115423 23 chunking.go:98] Retrieved 17/17 results with rv 40375 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0323 13:49:59.165529 23 chunking.go:98] Retrieved 17/17 results with rv 40375 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0323 13:49:59.215557 23 chunking.go:98] Retrieved 17/17 results with rv 40375 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0323 13:49:59.265520 23 chunking.go:98] Retrieved 17/17 results with rv 40375 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0323 13:49:59.315389 23 chunking.go:98] Retrieved 17/17 results with rv 40375 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0323 13:49:59.365264 23 chunking.go:98] Retrieved 17/17 results with rv 40375 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  E0323 13:49:59.371358      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:49:59.415117 23 chunking.go:98] Retrieved 17/17 results with rv 40375 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0323 13:49:59.465050 23 chunking.go:98] Retrieved 17/17 results with rv 40375 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0323 13:49:59.515012 23 chunking.go:98] Retrieved 17/17 results with rv 40375 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0323 13:49:59.564989 23 chunking.go:98] Retrieved 17/17 results with rv 40375 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0323 13:49:59.614903 23 chunking.go:98] Retrieved 17/17 results with rv 40375 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0323 13:49:59.664874 23 chunking.go:98] Retrieved 17/17 results with rv 40375 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0323 13:49:59.714768 23 chunking.go:98] Retrieved 17/17 results with rv 40375 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0323 13:49:59.764882 23 chunking.go:98] Retrieved 17/17 results with rv 40375 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0323 13:49:59.814976 23 chunking.go:98] Retrieved 17/17 results with rv 40375 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0323 13:49:59.865095 23 chunking.go:98] Retrieved 17/17 results with rv 40375 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0323 13:49:59.915189 23 chunking.go:98] Retrieved 17/17 results with rv 40375 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0323 13:49:59.965294 23 chunking.go:98] Retrieved 17/17 results with rv 40375 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0323 13:50:00.015454 23 chunking.go:98] Retrieved 17/17 results with rv 40375 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0323 13:50:00.065486 23 chunking.go:98] Retrieved 17/17 results with rv 40375 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0323 13:50:00.115546 23 chunking.go:98] Retrieved 17/17 results with rv 40375 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0323 13:50:00.165534 23 chunking.go:98] Retrieved 9/17 results with rv 40375 and continue 
  I0323 13:50:00.215836 23 chunking.go:98] Retrieved 17/17 results with rv 40378 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0323 13:50:00.265057 23 chunking.go:98] Retrieved 17/17 results with rv 40378 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzgsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0323 13:50:00.315208 23 chunking.go:98] Retrieved 17/17 results with rv 40378 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzgsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0323 13:50:00.365306 23 chunking.go:98] Retrieved 17/17 results with rv 40378 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzgsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  E0323 13:50:00.372390      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:50:00.415322 23 chunking.go:98] Retrieved 17/17 results with rv 40378 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzgsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0323 13:50:00.465413 23 chunking.go:98] Retrieved 17/17 results with rv 40378 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzgsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0323 13:50:00.515687 23 chunking.go:98] Retrieved 17/17 results with rv 40378 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzgsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0323 13:50:00.564594 23 chunking.go:98] Retrieved 17/17 results with rv 40378 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzgsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0323 13:50:00.615561 23 chunking.go:98] Retrieved 17/17 results with rv 40378 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzgsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0323 13:50:00.665736 23 chunking.go:98] Retrieved 17/17 results with rv 40378 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzgsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0323 13:50:00.714727 23 chunking.go:98] Retrieved 17/17 results with rv 40378 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzgsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0323 13:50:00.764695 23 chunking.go:98] Retrieved 17/17 results with rv 40378 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzgsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0323 13:50:00.815906 23 chunking.go:98] Retrieved 17/17 results with rv 40378 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzgsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0323 13:50:00.865203 23 chunking.go:98] Retrieved 17/17 results with rv 40378 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzgsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0323 13:50:00.915291 23 chunking.go:98] Retrieved 17/17 results with rv 40378 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzgsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0323 13:50:00.965211 23 chunking.go:98] Retrieved 17/17 results with rv 40378 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzgsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0323 13:50:01.015254 23 chunking.go:98] Retrieved 17/17 results with rv 40378 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzgsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0323 13:50:01.065409 23 chunking.go:98] Retrieved 17/17 results with rv 40378 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzgsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0323 13:50:01.115555 23 chunking.go:98] Retrieved 17/17 results with rv 40378 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzgsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0323 13:50:01.165517 23 chunking.go:98] Retrieved 17/17 results with rv 40378 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzgsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0323 13:50:01.215582 23 chunking.go:98] Retrieved 17/17 results with rv 40378 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzgsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0323 13:50:01.265562 23 chunking.go:98] Retrieved 17/17 results with rv 40378 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzgsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0323 13:50:01.315413 23 chunking.go:98] Retrieved 17/17 results with rv 40378 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDAzNzgsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0323 13:50:01.365477 23 chunking.go:98] Retrieved 9/17 results with rv 40378 and continue 
  STEP: retrieving those results all at once @ 03/23/25 13:50:01.365
  E0323 13:50:01.372538      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:50:01.418273 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-5255" for this suite. @ 03/23/25 13:50:01.465
• [21.454 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 03/23/25 13:50:01.516
  I0323 13:50:01.516909 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename secrets @ 03/23/25 13:50:01.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:50:01.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:50:01.525
  STEP: Creating secret with name secret-test-map-c6eaeecd-2260-4468-bbc0-c9e74153d389 @ 03/23/25 13:50:01.526
  STEP: Creating a pod to test consume secrets @ 03/23/25 13:50:01.528
  E0323 13:50:02.372661      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:03.372744      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:04.373506      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:05.373659      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:50:05.541
  I0323 13:50:05.542845 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-secrets-5edd15ba-c6f9-4516-b257-b664fe2b2d1c container secret-volume-test: <nil>
  STEP: delete the pod @ 03/23/25 13:50:05.545
  I0323 13:50:05.552209 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3775" for this suite. @ 03/23/25 13:50:05.553
• [4.039 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 03/23/25 13:50:05.555
  I0323 13:50:05.555981 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename projected @ 03/23/25 13:50:05.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:50:05.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:50:05.563
  STEP: Creating a pod to test downward API volume plugin @ 03/23/25 13:50:05.565
  E0323 13:50:06.373751      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:07.374773      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:08.375668      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:09.375775      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:50:09.574
  I0323 13:50:09.575873 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod downwardapi-volume-fdaf8d0b-7d19-40c5-add1-9aa1ddecf5b7 container client-container: <nil>
  STEP: delete the pod @ 03/23/25 13:50:09.578
  I0323 13:50:09.585888 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1683" for this suite. @ 03/23/25 13:50:09.587
• [4.034 seconds]
------------------------------
SSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 03/23/25 13:50:09.59
  I0323 13:50:09.590494 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename init-container @ 03/23/25 13:50:09.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:50:09.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:50:09.598
  STEP: creating the pod @ 03/23/25 13:50:09.599
  I0323 13:50:09.599551 23 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E0323 13:50:10.376725      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:11.376765      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:12.377616      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:50:12.958040 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3485" for this suite. @ 03/23/25 13:50:12.96
• [3.373 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407
  STEP: Creating a kubernetes client @ 03/23/25 13:50:12.963
  I0323 13:50:12.963758 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename job @ 03/23/25 13:50:12.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:50:12.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:50:12.971
  STEP: Creating Indexed job @ 03/23/25 13:50:12.973
  STEP: Ensuring job reaches completions @ 03/23/25 13:50:12.975
  E0323 13:50:13.378153      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:14.378207      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:15.378954      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:16.379127      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:17.379848      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:18.380477      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:19.380835      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:20.380987      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 03/23/25 13:50:20.985
  I0323 13:50:20.987228 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9616" for this suite. @ 03/23/25 13:50:20.988
• [8.028 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 03/23/25 13:50:20.992
  I0323 13:50:20.992319 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename deployment @ 03/23/25 13:50:20.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:50:20.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:50:20.999
  I0323 13:50:21.001369 23 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0323 13:50:21.009191 23 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 03/23/25 13:50:21.009
  E0323 13:50:21.381501      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:22.382486      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:50:23.012905 23 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0323 13:50:23.015589 23 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0323 13:50:23.018215 23 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0323 13:50:23.382717      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:24.382855      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:50:25.021669 23 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0323 13:50:25.022791 23 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0323 13:50:25.026274 23 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2279",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2557b80f-02ff-4f54-afa8-c145d5001368",
      ResourceVersion: (string) (len=5) "41063",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878334623,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878334623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878334623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878334623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878334623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878334623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878334623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6ff565599d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0323 13:50:25.028136 23 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-6ff565599d" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2279",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2c026bd4-ad30-4f70-8c23-dde383e5e0dc",
      ResourceVersion: (string) (len=5) "41053",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878334623,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "2557b80f-02ff-4f54-afa8-c145d5001368",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878334623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 35 35 37 62 38  30 66 2d 30 32 66 66 2d  |\"2557b80f-02ff-|
              00000120  34 66 35 34 2d 61 66 61  38 2d 63 31 34 35 64 35  |4f54-afa8-c145d5|
              00000130  30 30 31 33 36 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |001368\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878334623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0323 13:50:25.028735 23 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0323 13:50:25.028902 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2279",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e488ce29-36ba-4073-bd9c-a34e66f59872",
      ResourceVersion: (string) (len=5) "41062",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878334621,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "2557b80f-02ff-4f54-afa8-c145d5001368",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878334621,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878334623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 32 35 35 37 62 38 30  |"uid\":\"2557b80|
              000000b0  66 2d 30 32 66 66 2d 34  66 35 34 2d 61 66 61 38  |f-02ff-4f54-afa8|
              000000c0  2d 63 31 34 35 64 35 30  30 31 33 36 38 5c 22 7d  |-c145d5001368\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878334623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0323 13:50:25.031058 23 deployment.go:68] Pod "test-rolling-update-deployment-6ff565599d-rts7m" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6ff565599d-rts7m",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6ff565599d-",
      Namespace: (string) (len=15) "deployment-2279",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "68603bdc-c380-4314-b0bc-6dd63e0f8da0",
      ResourceVersion: (string) (len=5) "41052",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878334623,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
          UID: (types.UID) (len=36) "2c026bd4-ad30-4f70-8c23-dde383e5e0dc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878334623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 63  30 32 36 62 64 34 2d 61  |d\":\"2c026bd4-a|
              00000090  64 33 30 2d 34 66 37 30  2d 38 63 32 33 2d 64 64  |d30-4f70-8c23-dd|
              000000a0  65 33 38 33 65 35 65 30  64 63 5c 22 7d 22 3a 7b  |e383e5e0dc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878334623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 32 35 34  2e 34 35 5c 22 7d 22 3a  |2.20.254.45\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z5wtm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z5wtm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "k8s-10-255-0-207",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878334623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878334623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878334623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878334623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878334623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "10.255.0.207",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "10.255.0.207"
        }
      },
      PodIP: (string) (len=13) "172.20.254.45",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.254.45"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878334623,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878334623,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://3ef9291d098e3b070e2d2bb9b6903dfb5b7f546aa6365861bd12465d0c455b71",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-z5wtm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0323 13:50:25.032393 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2279" for this suite. @ 03/23/25 13:50:25.033
• [4.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118
  STEP: Creating a kubernetes client @ 03/23/25 13:50:25.036
  I0323 13:50:25.036500 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename downward-api @ 03/23/25 13:50:25.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:50:25.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:50:25.044
  STEP: Creating a pod to test downward api env vars @ 03/23/25 13:50:25.045
  E0323 13:50:25.383075      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:26.383159      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:27.383875      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:28.384834      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:50:29.055
  I0323 13:50:29.056658 23 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downward-api-d41abc36-bab3-455e-9153-03a478b19176 container dapi-container: <nil>
  STEP: delete the pod @ 03/23/25 13:50:29.065
  I0323 13:50:29.070937 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6657" for this suite. @ 03/23/25 13:50:29.072
• [4.038 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 03/23/25 13:50:29.074
  I0323 13:50:29.074833 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename security-context-test @ 03/23/25 13:50:29.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:50:29.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:50:29.082
  E0323 13:50:29.385853      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:30.386003      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:50:31.092490 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-992" for this suite. @ 03/23/25 13:50:31.094
• [2.024 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 03/23/25 13:50:31.098
  I0323 13:50:31.098601 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename aggregateddiscovery @ 03/23/25 13:50:31.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:50:31.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:50:31.107
  I0323 13:50:31.108358 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  E0323 13:50:31.386852      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:32.387902      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:33.388484      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:50:34.139126 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-5307" for this suite. @ 03/23/25 13:50:34.141
• [3.046 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 03/23/25 13:50:34.144
  I0323 13:50:34.144731 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename webhook @ 03/23/25 13:50:34.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:50:34.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:50:34.152
  STEP: Setting up server cert @ 03/23/25 13:50:34.163
  E0323 13:50:34.388803      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/23/25 13:50:34.404
  STEP: Deploying the webhook pod @ 03/23/25 13:50:34.407
  STEP: Wait for the deployment to be ready @ 03/23/25 13:50:34.412
  I0323 13:50:34.416730 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0323 13:50:35.388900      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:36.388968      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/23/25 13:50:36.42
  STEP: Verifying the service has paired with the endpoint @ 03/23/25 13:50:36.426
  E0323 13:50:37.389055      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:50:37.427112 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 03/23/25 13:50:37.43
  STEP: Creating a custom resource definition that should be denied by the webhook @ 03/23/25 13:50:37.438
  I0323 13:50:37.438591 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  I0323 13:50:37.462708 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7432" for this suite. @ 03/23/25 13:50:37.467
  STEP: Destroying namespace "webhook-markers-2806" for this suite. @ 03/23/25 13:50:37.471
• [3.329 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 03/23/25 13:50:37.473
  I0323 13:50:37.473636 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename limitrange @ 03/23/25 13:50:37.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:50:37.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:50:37.481
  STEP: Creating a LimitRange @ 03/23/25 13:50:37.483
  STEP: Setting up watch @ 03/23/25 13:50:37.483
  STEP: Submitting a LimitRange @ 03/23/25 13:50:37.585
  STEP: Verifying LimitRange creation was observed @ 03/23/25 13:50:37.588
  STEP: Fetching the LimitRange to ensure it has proper values @ 03/23/25 13:50:37.588
  I0323 13:50:37.589374 23 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0323 13:50:37.589397 23 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 03/23/25 13:50:37.589
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 03/23/25 13:50:37.593
  I0323 13:50:37.594768 23 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0323 13:50:37.594788 23 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 03/23/25 13:50:37.594
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 03/23/25 13:50:37.598
  I0323 13:50:37.599819 23 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0323 13:50:37.599845 23 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 03/23/25 13:50:37.599
  STEP: Failing to create a Pod with more than max resources @ 03/23/25 13:50:37.601
  STEP: Updating a LimitRange @ 03/23/25 13:50:37.601
  STEP: Verifying LimitRange updating is effective @ 03/23/25 13:50:37.608
  E0323 13:50:38.389074      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:39.389222      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 03/23/25 13:50:39.61
  STEP: Failing to create a Pod with more than max resources @ 03/23/25 13:50:39.613
  STEP: Deleting a LimitRange @ 03/23/25 13:50:39.614
  STEP: Verifying the LimitRange was deleted @ 03/23/25 13:50:39.62
  E0323 13:50:40.389271      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:41.389361      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:42.389423      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:43.389502      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:44.389671      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:50:44.622677 23 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 03/23/25 13:50:44.622
  I0323 13:50:44.626607 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-4893" for this suite. @ 03/23/25 13:50:44.628
• [7.159 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 03/23/25 13:50:44.632
  I0323 13:50:44.632729 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename sched-pred @ 03/23/25 13:50:44.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:50:44.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:50:44.642
  I0323 13:50:44.643266 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0323 13:50:44.730505 23 util.go:396] Waiting for terminating namespaces to be deleted...
  I0323 13:50:44.731890 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-206 before test
  I0323 13:50:44.733701 23 predicates.go:957] calico-kube-controllers-54cdc99cb-5bglc from kube-system started at 2025-03-23 11:45:09 +0000 UTC (1 container statuses recorded)
  I0323 13:50:44.733718 23 predicates.go:959] 	Container calico-kube-controllers ready: true, restart count 0
  I0323 13:50:44.733727 23 predicates.go:957] calico-node-mqzhm from kube-system started at 2025-03-23 11:45:09 +0000 UTC (1 container statuses recorded)
  I0323 13:50:44.733734 23 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0323 13:50:44.733741 23 predicates.go:957] coredns-75dd46b86b-bnz46 from kube-system started at 2025-03-23 11:45:35 +0000 UTC (1 container statuses recorded)
  I0323 13:50:44.733748 23 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0323 13:50:44.733755 23 predicates.go:957] dashboard-metrics-scraper-65c7c4ffff-mtscp from kube-system started at 2025-03-23 11:45:39 +0000 UTC (1 container statuses recorded)
  I0323 13:50:44.733763 23 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0323 13:50:44.733786 23 predicates.go:957] kubernetes-dashboard-75c65df89-967jc from kube-system started at 2025-03-23 11:45:39 +0000 UTC (1 container statuses recorded)
  I0323 13:50:44.733793 23 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I0323 13:50:44.733800 23 predicates.go:957] metrics-server-74f6d6fdd5-skz98 from kube-system started at 2025-03-23 11:45:37 +0000 UTC (1 container statuses recorded)
  I0323 13:50:44.733808 23 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0323 13:50:44.733815 23 predicates.go:957] node-local-dns-gdfpz from kube-system started at 2025-03-23 11:45:36 +0000 UTC (1 container statuses recorded)
  I0323 13:50:44.733822 23 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0323 13:50:44.733834 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-a86d0fcbee4c468c-6hxkh from sonobuoy started at 2025-03-23 12:20:56 +0000 UTC (2 container statuses recorded)
  I0323 13:50:44.733840 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0323 13:50:44.733847 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0323 13:50:44.733854 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-207 before test
  I0323 13:50:44.735210 23 predicates.go:957] calico-node-7blhd from kube-system started at 2025-03-23 11:47:32 +0000 UTC (1 container statuses recorded)
  I0323 13:50:44.735223 23 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0323 13:50:44.735231 23 predicates.go:957] node-local-dns-ldf5h from kube-system started at 2025-03-23 11:47:32 +0000 UTC (1 container statuses recorded)
  I0323 13:50:44.735238 23 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0323 13:50:44.735249 23 predicates.go:957] sonobuoy from sonobuoy started at 2025-03-23 12:20:55 +0000 UTC (1 container statuses recorded)
  I0323 13:50:44.735256 23 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0323 13:50:44.735265 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-a86d0fcbee4c468c-tp5gf from sonobuoy started at 2025-03-23 12:20:56 +0000 UTC (2 container statuses recorded)
  I0323 13:50:44.735272 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0323 13:50:44.735289 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0323 13:50:44.735297 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-208 before test
  I0323 13:50:44.736649 23 predicates.go:957] downwardapi-volume-31b78f8c-16b6-46c8-b790-2e6458886022 from downward-api-3007 started at 2025-03-23 12:19:04 +0000 UTC (1 container statuses recorded)
  I0323 13:50:44.736662 23 predicates.go:959] 	Container client-container ready: false, restart count 0
  I0323 13:50:44.736670 23 predicates.go:957] calico-node-pbb56 from kube-system started at 2025-03-23 11:49:26 +0000 UTC (1 container statuses recorded)
  I0323 13:50:44.736678 23 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0323 13:50:44.736686 23 predicates.go:957] node-local-dns-hzw7f from kube-system started at 2025-03-23 11:49:26 +0000 UTC (1 container statuses recorded)
  I0323 13:50:44.736691 23 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0323 13:50:44.736698 23 predicates.go:957] sonobuoy-e2e-job-19250caba0af4cb0 from sonobuoy started at 2025-03-23 12:20:56 +0000 UTC (2 container statuses recorded)
  I0323 13:50:44.736704 23 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0323 13:50:44.736710 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0323 13:50:44.736718 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-a86d0fcbee4c468c-78fxb from sonobuoy started at 2025-03-23 12:20:56 +0000 UTC (2 container statuses recorded)
  I0323 13:50:44.736726 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0323 13:50:44.736733 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 03/23/25 13:50:44.736
  E0323 13:50:45.390076      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:46.390148      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 03/23/25 13:50:46.747
  STEP: Trying to apply a random label on the found node. @ 03/23/25 13:50:46.753
  STEP: verifying the node has the label kubernetes.io/e2e-7bf7435b-736c-4d38-b3de-540916c6ea61 42 @ 03/23/25 13:50:46.758
  STEP: Trying to relaunch the pod, now with labels. @ 03/23/25 13:50:46.759
  E0323 13:50:47.390604      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:48.391494      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-7bf7435b-736c-4d38-b3de-540916c6ea61 off the node k8s-10-255-0-207 @ 03/23/25 13:50:48.767
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-7bf7435b-736c-4d38-b3de-540916c6ea61 @ 03/23/25 13:50:48.773
  I0323 13:50:48.775114 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5487" for this suite. @ 03/23/25 13:50:48.778
• [4.148 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 03/23/25 13:50:48.781
  I0323 13:50:48.781131 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename container-runtime @ 03/23/25 13:50:48.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:50:48.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:50:48.788
  STEP: create the container @ 03/23/25 13:50:48.79
  W0323 13:50:48.793408      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 03/23/25 13:50:48.793
  E0323 13:50:49.392264      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:50.392831      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:51.393757      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: get the container status @ 03/23/25 13:50:51.802
  STEP: the container should be terminated @ 03/23/25 13:50:51.803
  STEP: the termination message should be set @ 03/23/25 13:50:51.803
  I0323 13:50:51.803361 23 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 03/23/25 13:50:51.803
  I0323 13:50:51.810541 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3478" for this suite. @ 03/23/25 13:50:51.812
• [3.033 seconds]
------------------------------
S
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 03/23/25 13:50:51.814
  I0323 13:50:51.814232 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename sysctl @ 03/23/25 13:50:51.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:50:51.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:50:51.823
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 03/23/25 13:50:51.824
  STEP: Watching for error events or started pod @ 03/23/25 13:50:51.828
  E0323 13:50:52.394709      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:53.394749      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 03/23/25 13:50:53.829
  E0323 13:50:54.395761      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:55.395831      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 03/23/25 13:50:55.834
  STEP: Getting logs from the pod @ 03/23/25 13:50:55.834
  STEP: Checking that the sysctl is actually updated @ 03/23/25 13:50:55.843
  I0323 13:50:55.843118 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-849" for this suite. @ 03/23/25 13:50:55.844
• [4.033 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 03/23/25 13:50:55.847
  I0323 13:50:55.847297 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename downward-api @ 03/23/25 13:50:55.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:50:55.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:50:55.854
  STEP: Creating a pod to test downward API volume plugin @ 03/23/25 13:50:55.855
  E0323 13:50:56.396831      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:57.396959      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:58.397924      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:50:59.398078      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:50:59.865
  I0323 13:50:59.866533 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod downwardapi-volume-e327118d-3809-43fa-9581-9ccbb8c4decc container client-container: <nil>
  STEP: delete the pod @ 03/23/25 13:50:59.869
  I0323 13:50:59.875745 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8799" for this suite. @ 03/23/25 13:50:59.877
• [4.033 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 03/23/25 13:50:59.88
  I0323 13:50:59.880573 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename configmap @ 03/23/25 13:50:59.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:50:59.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:50:59.887
  STEP: Creating configMap with name configmap-test-volume-940238fa-abc5-42df-a1f4-40bc545dd88c @ 03/23/25 13:50:59.888
  STEP: Creating a pod to test consume configMaps @ 03/23/25 13:50:59.89
  E0323 13:51:00.399135      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:01.399270      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:02.400073      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:03.400127      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:51:03.899
  I0323 13:51:03.900961 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-configmaps-8a4c8d96-47d5-436c-bb06-5b4392245be7 container configmap-volume-test: <nil>
  STEP: delete the pod @ 03/23/25 13:51:03.903
  I0323 13:51:03.910765 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-79" for this suite. @ 03/23/25 13:51:03.912
• [4.043 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 03/23/25 13:51:03.923
  I0323 13:51:03.923770 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename pv @ 03/23/25 13:51:03.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:51:03.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:51:03.932
  STEP: Creating initial PV and PVC @ 03/23/25 13:51:03.933
  I0323 13:51:03.933895 23 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-8369" @ 03/23/25 13:51:03.939
  STEP: Listing PVCs in namespace "pv-8369" @ 03/23/25 13:51:03.94
  STEP: Reading "pvc-fgrtd" Status @ 03/23/25 13:51:03.941
  STEP: Reading "pv-8369-hlwgr" Status @ 03/23/25 13:51:03.944
  STEP: Patching "pvc-fgrtd" Status @ 03/23/25 13:51:03.947
  STEP: Patching "pv-8369-hlwgr" Status @ 03/23/25 13:51:03.949
  STEP: Updating "pvc-fgrtd" Status @ 03/23/25 13:51:03.958
  STEP: Updating "pv-8369-hlwgr" Status @ 03/23/25 13:51:03.977
  I0323 13:51:03.981510 23 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0323 13:51:03.981529 23 pv.go:205] Deleting PersistentVolumeClaim "pvc-fgrtd"
  I0323 13:51:03.983635 23 pv.go:193] Deleting PersistentVolume "pv-8369-hlwgr"
  I0323 13:51:03.987255 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-8369" for this suite. @ 03/23/25 13:51:04.012
• [0.092 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 03/23/25 13:51:04.015
  I0323 13:51:04.015605 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename services @ 03/23/25 13:51:04.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:51:04.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:51:04.023
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-4769 @ 03/23/25 13:51:04.024
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 03/23/25 13:51:04.029
  STEP: creating service externalsvc in namespace services-4769 @ 03/23/25 13:51:04.029
  STEP: creating replication controller externalsvc in namespace services-4769 @ 03/23/25 13:51:04.036
  I0323 13:51:04.038738      23 runners.go:193] Created replication controller with name: externalsvc, namespace: services-4769, replica count: 2
  E0323 13:51:04.400290      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:05.400675      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:06.400762      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:51:07.090415      23 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 03/23/25 13:51:07.092
  I0323 13:51:07.100194 23 resource.go:361] Creating new exec pod
  E0323 13:51:07.401637      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:08.402645      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:51:09.106187 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=services-4769 exec execpod2xmtw -- /bin/sh -x -c nslookup clusterip-service.services-4769.svc.cluster.local'
  I0323 13:51:09.218412 23 builder.go:146] stderr: "+ nslookup clusterip-service.services-4769.svc.cluster.local\n"
  I0323 13:51:09.218447 23 builder.go:147] stdout: "Server:\t\t169.254.20.10\nAddress:\t169.254.20.10#53\n\nclusterip-service.services-4769.svc.cluster.local\tcanonical name = externalsvc.services-4769.svc.cluster.local.\nName:\texternalsvc.services-4769.svc.cluster.local\nAddress: 10.68.98.17\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-4769, will wait for the garbage collector to delete the pods @ 03/23/25 13:51:09.218
  I0323 13:51:09.273130 23 resources.go:139] Deleting ReplicationController externalsvc took: 2.468703ms
  I0323 13:51:09.373955 23 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.82011ms
  E0323 13:51:09.403147      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:10.404016      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:11.404817      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:51:12.382589 23 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I0323 13:51:12.387920 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4769" for this suite. @ 03/23/25 13:51:12.389
• [8.377 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 03/23/25 13:51:12.392
  I0323 13:51:12.392951 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename conformance-tests @ 03/23/25 13:51:12.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:51:12.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:51:12.401
  STEP: Getting node addresses @ 03/23/25 13:51:12.403
  I0323 13:51:12.403849 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0323 13:51:12.405061      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:51:12.491313 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-4006" for this suite. @ 03/23/25 13:51:12.492
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 03/23/25 13:51:12.497
  I0323 13:51:12.497118 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename proxy @ 03/23/25 13:51:12.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:51:12.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:51:12.509
  I0323 13:51:12.511328 23 proxy.go:387] Creating pod...
  E0323 13:51:13.405767      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:14.405923      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:51:14.517947 23 proxy.go:411] Creating service...
  I0323 13:51:14.523684 23 proxy.go:448] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5104/pods/agnhost/proxy?method=DELETE
  I0323 13:51:14.527924 23 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0323 13:51:14.527955 23 proxy.go:448] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5104/pods/agnhost/proxy?method=OPTIONS
  I0323 13:51:14.529377 23 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0323 13:51:14.529399 23 proxy.go:448] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5104/pods/agnhost/proxy?method=PATCH
  I0323 13:51:14.532659 23 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0323 13:51:14.532690 23 proxy.go:448] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5104/pods/agnhost/proxy?method=POST
  I0323 13:51:14.537838 23 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0323 13:51:14.537864 23 proxy.go:448] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5104/pods/agnhost/proxy?method=PUT
  I0323 13:51:14.547904 23 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0323 13:51:14.548009 23 proxy.go:459] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5104/services/e2e-proxy-test-service/proxy?method=DELETE
  I0323 13:51:14.552687 23 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0323 13:51:14.552720 23 proxy.go:459] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5104/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0323 13:51:14.557827 23 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0323 13:51:14.557850 23 proxy.go:459] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5104/services/e2e-proxy-test-service/proxy?method=PATCH
  I0323 13:51:14.567817 23 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0323 13:51:14.567840 23 proxy.go:459] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5104/services/e2e-proxy-test-service/proxy?method=POST
  I0323 13:51:14.571484 23 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0323 13:51:14.571497 23 proxy.go:459] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5104/services/e2e-proxy-test-service/proxy?method=PUT
  I0323 13:51:14.573438 23 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0323 13:51:14.573449 23 proxy.go:479] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5104/pods/agnhost/proxy?method=GET
  I0323 13:51:14.574228 23 proxy.go:487] http.Client request:GET StatusCode:301
  I0323 13:51:14.574249 23 proxy.go:479] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5104/services/e2e-proxy-test-service/proxy?method=GET
  I0323 13:51:14.575355 23 proxy.go:487] http.Client request:GET StatusCode:301
  I0323 13:51:14.575377 23 proxy.go:479] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5104/pods/agnhost/proxy?method=HEAD
  I0323 13:51:14.576182 23 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0323 13:51:14.576197 23 proxy.go:479] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5104/services/e2e-proxy-test-service/proxy?method=HEAD
  I0323 13:51:14.577307 23 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0323 13:51:14.577399 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5104" for this suite. @ 03/23/25 13:51:14.578
• [2.084 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 03/23/25 13:51:14.581
  I0323 13:51:14.581317 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename projected @ 03/23/25 13:51:14.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:51:14.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:51:14.59
  STEP: Creating a pod to test downward API volume plugin @ 03/23/25 13:51:14.592
  E0323 13:51:15.406009      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:16.406171      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 13:51:16.6
  I0323 13:51:16.601365 23 output.go:207] Trying to get logs from node k8s-10-255-0-208 pod downwardapi-volume-f83ac168-09cf-4fc7-8213-89c65cda9ddf container client-container: <nil>
  STEP: delete the pod @ 03/23/25 13:51:16.603
  I0323 13:51:16.610924 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7099" for this suite. @ 03/23/25 13:51:16.612
• [2.036 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:263
  STEP: Creating a kubernetes client @ 03/23/25 13:51:16.617
  I0323 13:51:16.617753 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename dns @ 03/23/25 13:51:16.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:51:16.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:51:16.625
  STEP: Creating a test headless service @ 03/23/25 13:51:16.626
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-683.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-683.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 03/23/25 13:51:16.628
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-683.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-683.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 03/23/25 13:51:16.628
  STEP: creating a pod to probe DNS @ 03/23/25 13:51:16.628
  STEP: submitting the pod to kubernetes @ 03/23/25 13:51:16.628
  E0323 13:51:17.406944      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:18.407118      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 03/23/25 13:51:18.638
  STEP: looking for the results for each expected name from probers @ 03/23/25 13:51:18.639
  I0323 13:51:18.679521 23 dns_common.go:546] DNS probes using dns-683/dns-test-747b1b08-29ea-4cab-a48d-87fdb5c3d373 succeeded

  STEP: deleting the pod @ 03/23/25 13:51:18.679
  STEP: deleting the test headless service @ 03/23/25 13:51:18.686
  I0323 13:51:18.692747 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-683" for this suite. @ 03/23/25 13:51:18.694
• [2.080 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 03/23/25 13:51:18.697
  I0323 13:51:18.697695 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename sched-pred @ 03/23/25 13:51:18.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:51:18.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:51:18.704
  I0323 13:51:18.706404 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0323 13:51:18.797571 23 util.go:396] Waiting for terminating namespaces to be deleted...
  I0323 13:51:18.798908 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-206 before test
  I0323 13:51:18.800776 23 predicates.go:957] calico-kube-controllers-54cdc99cb-5bglc from kube-system started at 2025-03-23 11:45:09 +0000 UTC (1 container statuses recorded)
  I0323 13:51:18.800793 23 predicates.go:959] 	Container calico-kube-controllers ready: true, restart count 0
  I0323 13:51:18.800803 23 predicates.go:957] calico-node-mqzhm from kube-system started at 2025-03-23 11:45:09 +0000 UTC (1 container statuses recorded)
  I0323 13:51:18.800809 23 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0323 13:51:18.800817 23 predicates.go:957] coredns-75dd46b86b-bnz46 from kube-system started at 2025-03-23 11:45:35 +0000 UTC (1 container statuses recorded)
  I0323 13:51:18.800825 23 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0323 13:51:18.800834 23 predicates.go:957] dashboard-metrics-scraper-65c7c4ffff-mtscp from kube-system started at 2025-03-23 11:45:39 +0000 UTC (1 container statuses recorded)
  I0323 13:51:18.800840 23 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0323 13:51:18.800846 23 predicates.go:957] kubernetes-dashboard-75c65df89-967jc from kube-system started at 2025-03-23 11:45:39 +0000 UTC (1 container statuses recorded)
  I0323 13:51:18.800853 23 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I0323 13:51:18.800860 23 predicates.go:957] metrics-server-74f6d6fdd5-skz98 from kube-system started at 2025-03-23 11:45:37 +0000 UTC (1 container statuses recorded)
  I0323 13:51:18.800867 23 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0323 13:51:18.800878 23 predicates.go:957] node-local-dns-gdfpz from kube-system started at 2025-03-23 11:45:36 +0000 UTC (1 container statuses recorded)
  I0323 13:51:18.800883 23 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0323 13:51:18.800890 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-a86d0fcbee4c468c-6hxkh from sonobuoy started at 2025-03-23 12:20:56 +0000 UTC (2 container statuses recorded)
  I0323 13:51:18.800896 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0323 13:51:18.800902 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0323 13:51:18.800908 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-207 before test
  I0323 13:51:18.802201 23 predicates.go:957] calico-node-7blhd from kube-system started at 2025-03-23 11:47:32 +0000 UTC (1 container statuses recorded)
  I0323 13:51:18.802213 23 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0323 13:51:18.802219 23 predicates.go:957] node-local-dns-ldf5h from kube-system started at 2025-03-23 11:47:32 +0000 UTC (1 container statuses recorded)
  I0323 13:51:18.802225 23 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0323 13:51:18.802235 23 predicates.go:957] agnhost from proxy-5104 started at 2025-03-23 13:51:12 +0000 UTC (1 container statuses recorded)
  I0323 13:51:18.802244 23 predicates.go:959] 	Container agnhost ready: true, restart count 0
  I0323 13:51:18.802251 23 predicates.go:957] sonobuoy from sonobuoy started at 2025-03-23 12:20:55 +0000 UTC (1 container statuses recorded)
  I0323 13:51:18.802257 23 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0323 13:51:18.802307 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-a86d0fcbee4c468c-tp5gf from sonobuoy started at 2025-03-23 12:20:56 +0000 UTC (2 container statuses recorded)
  I0323 13:51:18.802314 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0323 13:51:18.802321 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0323 13:51:18.802329 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node k8s-10-255-0-208 before test
  I0323 13:51:18.803749 23 predicates.go:957] downwardapi-volume-31b78f8c-16b6-46c8-b790-2e6458886022 from downward-api-3007 started at 2025-03-23 12:19:04 +0000 UTC (1 container statuses recorded)
  I0323 13:51:18.803765 23 predicates.go:959] 	Container client-container ready: false, restart count 0
  I0323 13:51:18.803772 23 predicates.go:957] calico-node-pbb56 from kube-system started at 2025-03-23 11:49:26 +0000 UTC (1 container statuses recorded)
  I0323 13:51:18.803779 23 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0323 13:51:18.803788 23 predicates.go:957] node-local-dns-hzw7f from kube-system started at 2025-03-23 11:49:26 +0000 UTC (1 container statuses recorded)
  I0323 13:51:18.803796 23 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0323 13:51:18.803803 23 predicates.go:957] sonobuoy-e2e-job-19250caba0af4cb0 from sonobuoy started at 2025-03-23 12:20:56 +0000 UTC (2 container statuses recorded)
  I0323 13:51:18.803809 23 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0323 13:51:18.803819 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0323 13:51:18.803831 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-a86d0fcbee4c468c-78fxb from sonobuoy started at 2025-03-23 12:20:56 +0000 UTC (2 container statuses recorded)
  I0323 13:51:18.803838 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0323 13:51:18.803845 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 03/23/25 13:51:18.803
  E0323 13:51:19.407332      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:20.407486      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 03/23/25 13:51:20.811
  STEP: Trying to apply a random label on the found node. @ 03/23/25 13:51:20.818
  STEP: verifying the node has the label kubernetes.io/e2e-ac73654e-5060-4a97-8862-4833844d8f18 95 @ 03/23/25 13:51:20.825
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 03/23/25 13:51:20.827
  E0323 13:51:21.408471      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:22.408518      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 10.255.0.208 on the node which pod4 resides and expect not scheduled @ 03/23/25 13:51:22.834
  E0323 13:51:23.409585      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:24.409718      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:25.410714      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:26.410873      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:27.411760      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:28.412805      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:29.413602      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:30.413768      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:31.414592      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:32.414729      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:33.415520      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:34.415682      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:35.415760      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:36.416822      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:37.417682      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:38.417747      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:39.418737      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:40.418901      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:41.419860      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:42.420815      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:43.421536      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:44.421679      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:45.422630      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:46.422708      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:47.423275      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:48.423421      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:49.424237      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:50.424367      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:51.425367      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:52.425441      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:53.426317      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:54.427294      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:55.427346      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:56.427501      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:57.428204      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:58.428316      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:51:59.428821      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:00.428966      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:01.429874      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:02.430003      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:03.430911      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:04.431047      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:05.431839      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:06.431912      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:07.432881      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:08.432943      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:09.433763      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:10.433914      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:11.434754      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:12.434882      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:13.435490      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:14.435657      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:15.435740      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:16.435771      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:17.436691      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:18.436749      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:19.437280      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:20.437418      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:21.438179      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:22.438311      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:23.439224      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:24.439381      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:25.440365      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:26.440364      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:27.440831      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:28.440883      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:29.441770      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:30.441909      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:31.442863      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:32.443560      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:33.444532      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:34.444817      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:35.445686      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:36.446499      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:37.447365      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:38.447443      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:39.448460      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:40.448819      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:41.449593      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:42.449720      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:43.450703      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:44.450836      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:45.451887      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:46.452811      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:47.453763      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:48.453842      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:49.454752      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:50.454888      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:51.455854      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:52.456814      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:53.457710      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:54.458748      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:55.459749      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:56.459772      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:57.460590      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:58.460646      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:52:59.460834      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:00.460987      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:01.461087      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:02.461953      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:03.462931      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:04.463201      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:05.463840      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:06.463977      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:07.464810      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:08.464883      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:09.465754      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:10.465850      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:11.466704      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:12.467560      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:13.468349      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:14.468816      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:15.469812      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:16.469950      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:17.470640      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:18.470703      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:19.471487      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:20.471636      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:21.472394      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:22.472474      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:23.473529      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:24.473664      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:25.474393      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:26.474522      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:27.475498      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:28.475564      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:29.476266      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:30.476351      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:31.476806      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:32.476905      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:33.477887      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:34.478018      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:35.478800      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:36.478886      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:37.479643      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:38.479727      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:39.480510      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:40.480595      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:41.481394      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:42.481475      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:43.482448      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:44.482587      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:45.483513      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:46.483642      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:47.484601      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:48.484660      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:49.485500      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:50.485630      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:51.486466      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:52.486550      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:53.487468      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:54.487615      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:55.488349      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:56.488816      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:57.489865      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:58.489933      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:53:59.490804      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:00.490886      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:01.491801      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:02.491955      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:03.492814      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:04.492944      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:05.493935      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:06.494069      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:07.495015      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:08.495088      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:09.495822      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:10.496837      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:11.497740      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:12.497876      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:13.498665      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:14.498807      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:15.498857      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:16.498993      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:17.499828      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:18.500813      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:19.501848      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:20.501979      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:21.502798      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:22.503729      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:23.503754      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:24.503846      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:25.504820      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:26.504900      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:27.505861      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:28.505923      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:29.506829      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:30.506959      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:31.507416      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:32.507501      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:33.508450      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:34.508817      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:35.508889      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:36.509022      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:37.509874      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:38.509945      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:39.510820      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:40.510951      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:41.511753      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:42.511829      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:43.512786      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:44.512924      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:45.513654      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:46.513787      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:47.514740      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:48.514808      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:49.515574      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:50.515712      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:51.516433      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:52.516824      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:53.517613      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:54.517744      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:55.518797      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:56.518939      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:57.519742      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:58.520812      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:54:59.521650      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:00.521787      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:01.522522      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:02.522608      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:03.523562      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:04.523820      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:05.524344      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:06.524812      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:07.525735      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:08.525811      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:09.526683      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:10.526822      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:11.527744      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:12.528814      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:13.529625      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:14.529771      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:15.530820      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:16.530948      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:17.531747      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:18.531810      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:19.532535      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:20.532821      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:21.533431      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:22.534065      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:23.534627      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:24.534763      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:25.535740      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:26.535755      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:27.536654      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:28.536729      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:29.537538      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:30.537670      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:31.538056      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:32.538179      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:33.539084      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:34.539212      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:35.540191      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:36.540339      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:37.540813      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:38.540879      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:39.541774      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:40.541855      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:41.542635      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:42.543554      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:43.544411      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:44.544541      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:45.544813      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:46.544944      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:47.545786      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:48.545851      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:49.546645      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:50.546724      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:51.547572      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:52.547728      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:53.548566      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:54.548811      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:55.548842      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:56.548974      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:57.549818      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:58.549876      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:55:59.550769      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:00.550908      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:01.551755      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:02.551760      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:03.552473      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:04.553498      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:05.554396      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:06.554526      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:07.555327      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:08.555450      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:09.556318      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:10.556455      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:11.556814      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:12.556943      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:13.557873      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:14.558010      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:15.558751      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:16.558883      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:17.559403      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:18.559490      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:19.560333      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:20.560813      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:21.561683      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:22.561810      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-ac73654e-5060-4a97-8862-4833844d8f18 off the node k8s-10-255-0-208 @ 03/23/25 13:56:22.839
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-ac73654e-5060-4a97-8862-4833844d8f18 @ 03/23/25 13:56:22.846
  I0323 13:56:22.848299 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7862" for this suite. @ 03/23/25 13:56:22.851
• [304.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 03/23/25 13:56:22.854
  I0323 13:56:22.854484 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename endpointslice @ 03/23/25 13:56:22.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:56:22.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:56:22.864
  E0323 13:56:23.562484      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:24.563128      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 03/23/25 13:56:24.899
  STEP: referencing matching pods with named port @ 03/23/25 13:56:24.902
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 03/23/25 13:56:24.904
  STEP: recreating EndpointSlices after they've been deleted @ 03/23/25 13:56:24.905
  I0323 13:56:24.912432 23 endpointslice.go:938] EndpointSlice for Service endpointslice-6937/example-named-port not found
  E0323 13:56:25.563775      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:26.564810      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:56:26.915589 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6937" for this suite. @ 03/23/25 13:56:26.916
• [4.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 03/23/25 13:56:26.919
  I0323 13:56:26.919360 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename custom-resource-definition @ 03/23/25 13:56:26.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:56:26.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:56:26.925
  I0323 13:56:26.927029 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  E0323 13:56:27.565129      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:56:27.949427 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4989" for this suite. @ 03/23/25 13:56:27.95
• [1.034 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 03/23/25 13:56:27.953
  I0323 13:56:27.953564 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename proxy @ 03/23/25 13:56:27.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:56:27.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:56:27.961
  STEP: starting an echo server on multiple ports @ 03/23/25 13:56:27.97
  STEP: creating replication controller proxy-service-nsdsf in namespace proxy-2983 @ 03/23/25 13:56:27.97
  I0323 13:56:27.974465      23 runners.go:193] Created replication controller with name: proxy-service-nsdsf, namespace: proxy-2983, replica count: 1
  E0323 13:56:28.565212      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:56:29.025703      23 runners.go:193] proxy-service-nsdsf Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0323 13:56:29.565529      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:56:30.025953      23 runners.go:193] proxy-service-nsdsf Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0323 13:56:30.027716 23 proxy.go:230] setup took 2.064308655s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 03/23/25 13:56:30.027
  I0323 13:56:30.031170 23 proxy.go:558] (0) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">... (200; 3.199871ms)
  I0323 13:56:30.031372 23 proxy.go:558] (0) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 3.462376ms)
  I0323 13:56:30.031430 23 proxy.go:558] (0) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 3.456721ms)
  I0323 13:56:30.031445 23 proxy.go:558] (0) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/rewriteme">test</a> (200; 3.505722ms)
  I0323 13:56:30.031523 23 proxy.go:558] (0) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 3.631743ms)
  I0323 13:56:30.034038 23 proxy.go:558] (0) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 6.191784ms)
  I0323 13:56:30.034053 23 proxy.go:558] (0) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname1/proxy/: foo (200; 6.107903ms)
  I0323 13:56:30.034060 23 proxy.go:558] (0) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">test<... (200; 6.262234ms)
  I0323 13:56:30.034082 23 proxy.go:558] (0) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname2/proxy/: bar (200; 6.17451ms)
  I0323 13:56:30.034080 23 proxy.go:558] (0) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname2/proxy/: bar (200; 6.099949ms)
  I0323 13:56:30.034533 23 proxy.go:558] (0) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:462/proxy/: tls qux (200; 6.538752ms)
  I0323 13:56:30.034587 23 proxy.go:558] (0) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname2/proxy/: tls qux (200; 6.745704ms)
  I0323 13:56:30.034725 23 proxy.go:558] (0) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname1/proxy/: tls baz (200; 6.726862ms)
  I0323 13:56:30.034780 23 proxy.go:558] (0) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:460/proxy/: tls baz (200; 6.862283ms)
  I0323 13:56:30.034874 23 proxy.go:558] (0) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname1/proxy/: foo (200; 7.022218ms)
  I0323 13:56:30.037212 23 proxy.go:558] (0) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/tlsrewritem... (200; 9.273912ms)
  I0323 13:56:30.039288 23 proxy.go:558] (1) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:462/proxy/: tls qux (200; 1.991547ms)
  I0323 13:56:30.039319 23 proxy.go:558] (1) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/rewriteme">test</a> (200; 1.945306ms)
  I0323 13:56:30.039375 23 proxy.go:558] (1) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:460/proxy/: tls baz (200; 2.106972ms)
  I0323 13:56:30.039589 23 proxy.go:558] (1) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">... (200; 2.275666ms)
  I0323 13:56:30.039688 23 proxy.go:558] (1) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 2.430579ms)
  I0323 13:56:30.040779 23 proxy.go:558] (1) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 3.420505ms)
  I0323 13:56:30.040779 23 proxy.go:558] (1) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 3.37843ms)
  I0323 13:56:30.040979 23 proxy.go:558] (1) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">test<... (200; 3.638109ms)
  I0323 13:56:30.040998 23 proxy.go:558] (1) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/tlsrewritem... (200; 3.623611ms)
  I0323 13:56:30.041059 23 proxy.go:558] (1) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname2/proxy/: bar (200; 3.740438ms)
  I0323 13:56:30.041418 23 proxy.go:558] (1) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname1/proxy/: tls baz (200; 4.070897ms)
  I0323 13:56:30.041436 23 proxy.go:558] (1) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 4.050908ms)
  I0323 13:56:30.041454 23 proxy.go:558] (1) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname2/proxy/: bar (200; 4.031887ms)
  I0323 13:56:30.041458 23 proxy.go:558] (1) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname1/proxy/: foo (200; 4.060411ms)
  I0323 13:56:30.041462 23 proxy.go:558] (1) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname2/proxy/: tls qux (200; 4.223293ms)
  I0323 13:56:30.046399 23 proxy.go:558] (1) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname1/proxy/: foo (200; 8.971747ms)
  I0323 13:56:30.049914 23 proxy.go:558] (2) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 3.377501ms)
  I0323 13:56:30.049966 23 proxy.go:558] (2) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:460/proxy/: tls baz (200; 3.54066ms)
  I0323 13:56:30.049969 23 proxy.go:558] (2) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 3.536757ms)
  I0323 13:56:30.050058 23 proxy.go:558] (2) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">test<... (200; 3.555313ms)
  I0323 13:56:30.050131 23 proxy.go:558] (2) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/tlsrewritem... (200; 3.650944ms)
  I0323 13:56:30.050629 23 proxy.go:558] (2) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/rewriteme">test</a> (200; 4.086165ms)
  I0323 13:56:30.050646 23 proxy.go:558] (2) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 4.086098ms)
  I0323 13:56:30.050656 23 proxy.go:558] (2) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname2/proxy/: bar (200; 4.156633ms)
  I0323 13:56:30.050840 23 proxy.go:558] (2) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">... (200; 4.392ms)
  I0323 13:56:30.050861 23 proxy.go:558] (2) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 4.31644ms)
  I0323 13:56:30.050929 23 proxy.go:558] (2) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname1/proxy/: tls baz (200; 4.405215ms)
  I0323 13:56:30.050948 23 proxy.go:558] (2) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname1/proxy/: foo (200; 4.477319ms)
  I0323 13:56:30.050984 23 proxy.go:558] (2) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname1/proxy/: foo (200; 4.472223ms)
  I0323 13:56:30.051044 23 proxy.go:558] (2) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:462/proxy/: tls qux (200; 4.564219ms)
  I0323 13:56:30.051069 23 proxy.go:558] (2) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname2/proxy/: tls qux (200; 4.549099ms)
  I0323 13:56:30.051087 23 proxy.go:558] (2) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname2/proxy/: bar (200; 4.644437ms)
  I0323 13:56:30.053822 23 proxy.go:558] (3) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 2.710761ms)
  I0323 13:56:30.053822 23 proxy.go:558] (3) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/rewriteme">test</a> (200; 2.6978ms)
  I0323 13:56:30.053822 23 proxy.go:558] (3) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 2.602047ms)
  I0323 13:56:30.053960 23 proxy.go:558] (3) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">... (200; 2.721114ms)
  I0323 13:56:30.054013 23 proxy.go:558] (3) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:460/proxy/: tls baz (200; 2.771707ms)
  I0323 13:56:30.054160 23 proxy.go:558] (3) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 3.033506ms)
  I0323 13:56:30.054697 23 proxy.go:558] (3) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname1/proxy/: tls baz (200; 3.497796ms)
  I0323 13:56:30.054755 23 proxy.go:558] (3) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">test<... (200; 3.507087ms)
  I0323 13:56:30.055155 23 proxy.go:558] (3) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname1/proxy/: foo (200; 3.988175ms)
  I0323 13:56:30.055273 23 proxy.go:558] (3) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname2/proxy/: tls qux (200; 4.05735ms)
  I0323 13:56:30.055286 23 proxy.go:558] (3) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname2/proxy/: bar (200; 4.153853ms)
  I0323 13:56:30.055330 23 proxy.go:558] (3) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/tlsrewritem... (200; 4.162755ms)
  I0323 13:56:30.055380 23 proxy.go:558] (3) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname1/proxy/: foo (200; 4.187182ms)
  I0323 13:56:30.055423 23 proxy.go:558] (3) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:462/proxy/: tls qux (200; 4.226086ms)
  I0323 13:56:30.055442 23 proxy.go:558] (3) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 4.282127ms)
  I0323 13:56:30.060388 23 proxy.go:558] (3) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname2/proxy/: bar (200; 9.16341ms)
  I0323 13:56:30.062513 23 proxy.go:558] (4) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">test<... (200; 2.09597ms)
  I0323 13:56:30.062956 23 proxy.go:558] (4) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 2.492426ms)
  I0323 13:56:30.062978 23 proxy.go:558] (4) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/tlsrewritem... (200; 2.564878ms)
  I0323 13:56:30.063539 23 proxy.go:558] (4) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/rewriteme">test</a> (200; 3.001763ms)
  I0323 13:56:30.063652 23 proxy.go:558] (4) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 3.090134ms)
  I0323 13:56:30.063683 23 proxy.go:558] (4) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">... (200; 3.227657ms)
  I0323 13:56:30.063768 23 proxy.go:558] (4) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname2/proxy/: tls qux (200; 3.335739ms)
  I0323 13:56:30.063828 23 proxy.go:558] (4) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:460/proxy/: tls baz (200; 3.29093ms)
  I0323 13:56:30.063835 23 proxy.go:558] (4) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:462/proxy/: tls qux (200; 3.346958ms)
  I0323 13:56:30.064552 23 proxy.go:558] (4) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname1/proxy/: foo (200; 3.989244ms)
  I0323 13:56:30.064627 23 proxy.go:558] (4) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 4.041868ms)
  I0323 13:56:30.064750 23 proxy.go:558] (4) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname1/proxy/: tls baz (200; 4.237664ms)
  I0323 13:56:30.064755 23 proxy.go:558] (4) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 4.136989ms)
  I0323 13:56:30.064786 23 proxy.go:558] (4) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname1/proxy/: foo (200; 4.29638ms)
  I0323 13:56:30.064803 23 proxy.go:558] (4) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname2/proxy/: bar (200; 4.218297ms)
  I0323 13:56:30.066362 23 proxy.go:558] (4) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname2/proxy/: bar (200; 5.851165ms)
  I0323 13:56:30.069192 23 proxy.go:558] (5) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">test<... (200; 2.76972ms)
  I0323 13:56:30.069433 23 proxy.go:558] (5) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 2.952886ms)
  I0323 13:56:30.069436 23 proxy.go:558] (5) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">... (200; 3.057164ms)
  I0323 13:56:30.069505 23 proxy.go:558] (5) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/tlsrewritem... (200; 3.119485ms)
  I0323 13:56:30.069868 23 proxy.go:558] (5) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 3.413361ms)
  I0323 13:56:30.069886 23 proxy.go:558] (5) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:462/proxy/: tls qux (200; 3.394565ms)
  I0323 13:56:30.069935 23 proxy.go:558] (5) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 3.418953ms)
  I0323 13:56:30.069983 23 proxy.go:558] (5) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/rewriteme">test</a> (200; 3.484469ms)
  I0323 13:56:30.070339 23 proxy.go:558] (5) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname1/proxy/: foo (200; 3.948297ms)
  I0323 13:56:30.070498 23 proxy.go:558] (5) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname2/proxy/: bar (200; 4.070744ms)
  I0323 13:56:30.070555 23 proxy.go:558] (5) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname2/proxy/: bar (200; 4.109888ms)
  I0323 13:56:30.070560 23 proxy.go:558] (5) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname1/proxy/: tls baz (200; 4.089137ms)
  I0323 13:56:30.070571 23 proxy.go:558] (5) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname2/proxy/: tls qux (200; 4.06703ms)
  I0323 13:56:30.070636 23 proxy.go:558] (5) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname1/proxy/: foo (200; 4.243292ms)
  I0323 13:56:30.070636 23 proxy.go:558] (5) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 4.202035ms)
  I0323 13:56:30.070638 23 proxy.go:558] (5) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:460/proxy/: tls baz (200; 4.169604ms)
  I0323 13:56:30.072514 23 proxy.go:558] (6) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 1.847572ms)
  I0323 13:56:30.072592 23 proxy.go:558] (6) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:462/proxy/: tls qux (200; 1.927914ms)
  I0323 13:56:30.073528 23 proxy.go:558] (6) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 2.784207ms)
  I0323 13:56:30.073787 23 proxy.go:558] (6) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 3.030021ms)
  I0323 13:56:30.073915 23 proxy.go:558] (6) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/rewriteme">test</a> (200; 3.117316ms)
  I0323 13:56:30.074015 23 proxy.go:558] (6) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">... (200; 3.241921ms)
  I0323 13:56:30.074151 23 proxy.go:558] (6) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/tlsrewritem... (200; 3.402206ms)
  I0323 13:56:30.074281 23 proxy.go:558] (6) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">test<... (200; 3.463151ms)
  I0323 13:56:30.074281 23 proxy.go:558] (6) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname1/proxy/: tls baz (200; 3.561969ms)
  I0323 13:56:30.074348 23 proxy.go:558] (6) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:460/proxy/: tls baz (200; 3.520034ms)
  I0323 13:56:30.074633 23 proxy.go:558] (6) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname1/proxy/: foo (200; 3.93134ms)
  I0323 13:56:30.074708 23 proxy.go:558] (6) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 3.896061ms)
  I0323 13:56:30.074976 23 proxy.go:558] (6) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname1/proxy/: foo (200; 4.205517ms)
  I0323 13:56:30.075023 23 proxy.go:558] (6) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname2/proxy/: bar (200; 4.228975ms)
  I0323 13:56:30.075061 23 proxy.go:558] (6) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname2/proxy/: tls qux (200; 4.274942ms)
  I0323 13:56:30.075062 23 proxy.go:558] (6) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname2/proxy/: bar (200; 4.335368ms)
  I0323 13:56:30.076750 23 proxy.go:558] (7) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/rewriteme">test</a> (200; 1.651902ms)
  I0323 13:56:30.078120 23 proxy.go:558] (7) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:462/proxy/: tls qux (200; 3.009373ms)
  I0323 13:56:30.078896 23 proxy.go:558] (7) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname2/proxy/: bar (200; 3.708075ms)
  I0323 13:56:30.079097 23 proxy.go:558] (7) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 3.889707ms)
  I0323 13:56:30.079168 23 proxy.go:558] (7) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:460/proxy/: tls baz (200; 3.960713ms)
  I0323 13:56:30.079174 23 proxy.go:558] (7) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname1/proxy/: foo (200; 3.964329ms)
  I0323 13:56:30.079183 23 proxy.go:558] (7) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname2/proxy/: tls qux (200; 3.953243ms)
  I0323 13:56:30.079365 23 proxy.go:558] (7) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname1/proxy/: tls baz (200; 4.210204ms)
  I0323 13:56:30.079366 23 proxy.go:558] (7) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/tlsrewritem... (200; 4.136467ms)
  I0323 13:56:30.079458 23 proxy.go:558] (7) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 4.368793ms)
  I0323 13:56:30.079463 23 proxy.go:558] (7) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">test<... (200; 4.279344ms)
  I0323 13:56:30.079481 23 proxy.go:558] (7) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 4.373374ms)
  I0323 13:56:30.079505 23 proxy.go:558] (7) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 4.352252ms)
  I0323 13:56:30.079528 23 proxy.go:558] (7) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">... (200; 4.348431ms)
  I0323 13:56:30.079525 23 proxy.go:558] (7) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname1/proxy/: foo (200; 4.363465ms)
  I0323 13:56:30.079585 23 proxy.go:558] (7) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname2/proxy/: bar (200; 4.462311ms)
  I0323 13:56:30.081766 23 proxy.go:558] (8) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 2.146297ms)
  I0323 13:56:30.082053 23 proxy.go:558] (8) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">... (200; 2.362803ms)
  I0323 13:56:30.082127 23 proxy.go:558] (8) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 2.488337ms)
  I0323 13:56:30.082129 23 proxy.go:558] (8) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 2.426412ms)
  I0323 13:56:30.082216 23 proxy.go:558] (8) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/rewriteme">test</a> (200; 2.501767ms)
  I0323 13:56:30.082999 23 proxy.go:558] (8) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname1/proxy/: foo (200; 3.388334ms)
  I0323 13:56:30.083008 23 proxy.go:558] (8) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">test<... (200; 3.28286ms)
  I0323 13:56:30.083111 23 proxy.go:558] (8) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 3.375843ms)
  I0323 13:56:30.083112 23 proxy.go:558] (8) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:462/proxy/: tls qux (200; 3.491754ms)
  I0323 13:56:30.083137 23 proxy.go:558] (8) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:460/proxy/: tls baz (200; 3.392134ms)
  I0323 13:56:30.083200 23 proxy.go:558] (8) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/tlsrewritem... (200; 3.551464ms)
  I0323 13:56:30.084513 23 proxy.go:558] (8) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname1/proxy/: tls baz (200; 4.767489ms)
  I0323 13:56:30.084614 23 proxy.go:558] (8) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname2/proxy/: bar (200; 4.931141ms)
  I0323 13:56:30.084612 23 proxy.go:558] (8) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname2/proxy/: bar (200; 4.896974ms)
  I0323 13:56:30.084664 23 proxy.go:558] (8) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname1/proxy/: foo (200; 4.998344ms)
  I0323 13:56:30.084667 23 proxy.go:558] (8) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname2/proxy/: tls qux (200; 4.976708ms)
  I0323 13:56:30.086339 23 proxy.go:558] (9) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:462/proxy/: tls qux (200; 1.639862ms)
  I0323 13:56:30.086660 23 proxy.go:558] (9) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 1.906926ms)
  I0323 13:56:30.086662 23 proxy.go:558] (9) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">... (200; 1.83045ms)
  I0323 13:56:30.087110 23 proxy.go:558] (9) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 2.37765ms)
  I0323 13:56:30.087851 23 proxy.go:558] (9) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 3.041873ms)
  I0323 13:56:30.087904 23 proxy.go:558] (9) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname2/proxy/: bar (200; 3.215341ms)
  I0323 13:56:30.088365 23 proxy.go:558] (9) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/rewriteme">test</a> (200; 3.568853ms)
  I0323 13:56:30.088431 23 proxy.go:558] (9) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">test<... (200; 3.558469ms)
  I0323 13:56:30.088430 23 proxy.go:558] (9) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:460/proxy/: tls baz (200; 3.5317ms)
  I0323 13:56:30.088762 23 proxy.go:558] (9) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/tlsrewritem... (200; 3.942061ms)
  I0323 13:56:30.089408 23 proxy.go:558] (9) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname2/proxy/: bar (200; 4.562874ms)
  I0323 13:56:30.089414 23 proxy.go:558] (9) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname1/proxy/: foo (200; 4.643827ms)
  I0323 13:56:30.089410 23 proxy.go:558] (9) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 4.5262ms)
  I0323 13:56:30.089471 23 proxy.go:558] (9) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname1/proxy/: foo (200; 4.558739ms)
  I0323 13:56:30.089485 23 proxy.go:558] (9) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname2/proxy/: tls qux (200; 4.702004ms)
  I0323 13:56:30.089513 23 proxy.go:558] (9) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname1/proxy/: tls baz (200; 4.658136ms)
  I0323 13:56:30.092678 23 proxy.go:558] (10) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 3.0345ms)
  I0323 13:56:30.092740 23 proxy.go:558] (10) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">... (200; 3.188231ms)
  I0323 13:56:30.092945 23 proxy.go:558] (10) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 3.240303ms)
  I0323 13:56:30.092957 23 proxy.go:558] (10) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/tlsrewritem... (200; 3.41368ms)
  I0323 13:56:30.093114 23 proxy.go:558] (10) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:460/proxy/: tls baz (200; 3.520487ms)
  I0323 13:56:30.093116 23 proxy.go:558] (10) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/rewriteme">test</a> (200; 3.451854ms)
  I0323 13:56:30.093197 23 proxy.go:558] (10) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname2/proxy/: bar (200; 3.641393ms)
  I0323 13:56:30.093203 23 proxy.go:558] (10) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 3.524473ms)
  I0323 13:56:30.093202 23 proxy.go:558] (10) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 3.502209ms)
  I0323 13:56:30.093297 23 proxy.go:558] (10) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">test<... (200; 3.674511ms)
  I0323 13:56:30.093887 23 proxy.go:558] (10) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:462/proxy/: tls qux (200; 4.274249ms)
  I0323 13:56:30.094039 23 proxy.go:558] (10) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname2/proxy/: bar (200; 4.301755ms)
  I0323 13:56:30.094061 23 proxy.go:558] (10) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname2/proxy/: tls qux (200; 4.375979ms)
  I0323 13:56:30.094128 23 proxy.go:558] (10) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname1/proxy/: foo (200; 4.492874ms)
  I0323 13:56:30.094217 23 proxy.go:558] (10) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname1/proxy/: foo (200; 4.557392ms)
  I0323 13:56:30.094221 23 proxy.go:558] (10) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname1/proxy/: tls baz (200; 4.636032ms)
  I0323 13:56:30.096230 23 proxy.go:558] (11) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 1.988631ms)
  I0323 13:56:30.096299 23 proxy.go:558] (11) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:460/proxy/: tls baz (200; 2.017286ms)
  I0323 13:56:30.096465 23 proxy.go:558] (11) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:462/proxy/: tls qux (200; 2.155204ms)
  I0323 13:56:30.097413 23 proxy.go:558] (11) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">test<... (200; 3.06375ms)
  I0323 13:56:30.097474 23 proxy.go:558] (11) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 3.07468ms)
  I0323 13:56:30.097743 23 proxy.go:558] (11) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/rewriteme">test</a> (200; 3.306577ms)
  I0323 13:56:30.097765 23 proxy.go:558] (11) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 3.299699ms)
  I0323 13:56:30.098019 23 proxy.go:558] (11) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname1/proxy/: tls baz (200; 3.633715ms)
  I0323 13:56:30.098061 23 proxy.go:558] (11) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/tlsrewritem... (200; 3.54759ms)
  I0323 13:56:30.098076 23 proxy.go:558] (11) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname2/proxy/: bar (200; 3.706367ms)
  I0323 13:56:30.098151 23 proxy.go:558] (11) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname2/proxy/: bar (200; 3.822026ms)
  I0323 13:56:30.098210 23 proxy.go:558] (11) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname2/proxy/: tls qux (200; 3.716503ms)
  I0323 13:56:30.098226 23 proxy.go:558] (11) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname1/proxy/: foo (200; 3.747033ms)
  I0323 13:56:30.098276 23 proxy.go:558] (11) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">... (200; 4.032318ms)
  I0323 13:56:30.098351 23 proxy.go:558] (11) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname1/proxy/: foo (200; 3.900455ms)
  I0323 13:56:30.106390 23 proxy.go:558] (11) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 11.972368ms)
  I0323 13:56:30.109243 23 proxy.go:558] (12) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 2.821152ms)
  I0323 13:56:30.109817 23 proxy.go:558] (12) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 3.403677ms)
  I0323 13:56:30.109882 23 proxy.go:558] (12) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:460/proxy/: tls baz (200; 3.403854ms)
  I0323 13:56:30.109895 23 proxy.go:558] (12) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 3.437945ms)
  I0323 13:56:30.109946 23 proxy.go:558] (12) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 3.464585ms)
  I0323 13:56:30.109954 23 proxy.go:558] (12) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">test<... (200; 3.382113ms)
  I0323 13:56:30.109967 23 proxy.go:558] (12) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname2/proxy/: bar (200; 3.559704ms)
  I0323 13:56:30.109968 23 proxy.go:558] (12) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/tlsrewritem... (200; 3.459979ms)
  I0323 13:56:30.110026 23 proxy.go:558] (12) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/rewriteme">test</a> (200; 3.447007ms)
  I0323 13:56:30.110041 23 proxy.go:558] (12) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:462/proxy/: tls qux (200; 3.541215ms)
  I0323 13:56:30.110115 23 proxy.go:558] (12) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">... (200; 3.663936ms)
  I0323 13:56:30.110451 23 proxy.go:558] (12) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname2/proxy/: bar (200; 3.928938ms)
  I0323 13:56:30.110546 23 proxy.go:558] (12) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname1/proxy/: foo (200; 4.013891ms)
  I0323 13:56:30.110629 23 proxy.go:558] (12) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname1/proxy/: tls baz (200; 4.08725ms)
  I0323 13:56:30.110645 23 proxy.go:558] (12) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname2/proxy/: tls qux (200; 4.0891ms)
  I0323 13:56:30.110666 23 proxy.go:558] (12) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname1/proxy/: foo (200; 4.06187ms)
  I0323 13:56:30.114039 23 proxy.go:558] (13) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:460/proxy/: tls baz (200; 3.351919ms)
  I0323 13:56:30.114577 23 proxy.go:558] (13) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 3.62034ms)
  I0323 13:56:30.114574 23 proxy.go:558] (13) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 3.75962ms)
  I0323 13:56:30.114837 23 proxy.go:558] (13) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/rewriteme">test</a> (200; 3.905401ms)
  I0323 13:56:30.114845 23 proxy.go:558] (13) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname1/proxy/: foo (200; 4.101642ms)
  I0323 13:56:30.114837 23 proxy.go:558] (13) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 3.675005ms)
  I0323 13:56:30.114961 23 proxy.go:558] (13) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">test<... (200; 3.833901ms)
  I0323 13:56:30.114975 23 proxy.go:558] (13) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 4.129486ms)
  I0323 13:56:30.115029 23 proxy.go:558] (13) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">... (200; 4.012232ms)
  I0323 13:56:30.115071 23 proxy.go:558] (13) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname1/proxy/: foo (200; 4.197474ms)
  I0323 13:56:30.115089 23 proxy.go:558] (13) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname2/proxy/: bar (200; 4.017759ms)
  I0323 13:56:30.115092 23 proxy.go:558] (13) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:462/proxy/: tls qux (200; 4.052627ms)
  I0323 13:56:30.115109 23 proxy.go:558] (13) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname2/proxy/: tls qux (200; 4.204365ms)
  I0323 13:56:30.115128 23 proxy.go:558] (13) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/tlsrewritem... (200; 4.138733ms)
  I0323 13:56:30.115128 23 proxy.go:558] (13) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname1/proxy/: tls baz (200; 4.027888ms)
  I0323 13:56:30.115210 23 proxy.go:558] (13) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname2/proxy/: bar (200; 4.431645ms)
  I0323 13:56:30.117636 23 proxy.go:558] (14) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:462/proxy/: tls qux (200; 2.337923ms)
  I0323 13:56:30.117648 23 proxy.go:558] (14) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">test<... (200; 2.289633ms)
  I0323 13:56:30.117765 23 proxy.go:558] (14) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">... (200; 2.415682ms)
  I0323 13:56:30.119124 23 proxy.go:558] (14) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname2/proxy/: tls qux (200; 3.793632ms)
  I0323 13:56:30.119192 23 proxy.go:558] (14) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/rewriteme">test</a> (200; 3.812404ms)
  I0323 13:56:30.119257 23 proxy.go:558] (14) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 3.963944ms)
  I0323 13:56:30.119257 23 proxy.go:558] (14) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/tlsrewritem... (200; 3.853769ms)
  I0323 13:56:30.119429 23 proxy.go:558] (14) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 4.054536ms)
  I0323 13:56:30.119433 23 proxy.go:558] (14) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 4.040204ms)
  I0323 13:56:30.119479 23 proxy.go:558] (14) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:460/proxy/: tls baz (200; 4.151844ms)
  I0323 13:56:30.119550 23 proxy.go:558] (14) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 4.182421ms)
  I0323 13:56:30.119754 23 proxy.go:558] (14) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname2/proxy/: bar (200; 4.40976ms)
  I0323 13:56:30.119835 23 proxy.go:558] (14) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname1/proxy/: foo (200; 4.550446ms)
  I0323 13:56:30.119980 23 proxy.go:558] (14) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname1/proxy/: tls baz (200; 4.739197ms)
  I0323 13:56:30.120741 23 proxy.go:558] (14) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname2/proxy/: bar (200; 5.425037ms)
  I0323 13:56:30.120813 23 proxy.go:558] (14) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname1/proxy/: foo (200; 5.419209ms)
  I0323 13:56:30.123246 23 proxy.go:558] (15) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 2.406436ms)
  I0323 13:56:30.123264 23 proxy.go:558] (15) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 2.402615ms)
  I0323 13:56:30.123282 23 proxy.go:558] (15) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 2.440989ms)
  I0323 13:56:30.124770 23 proxy.go:558] (15) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 3.81265ms)
  I0323 13:56:30.124832 23 proxy.go:558] (15) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">test<... (200; 3.870692ms)
  I0323 13:56:30.124847 23 proxy.go:558] (15) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:462/proxy/: tls qux (200; 3.919624ms)
  I0323 13:56:30.124919 23 proxy.go:558] (15) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/rewriteme">test</a> (200; 3.99778ms)
  I0323 13:56:30.125043 23 proxy.go:558] (15) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:460/proxy/: tls baz (200; 4.140815ms)
  I0323 13:56:30.125058 23 proxy.go:558] (15) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">... (200; 4.145018ms)
  I0323 13:56:30.125108 23 proxy.go:558] (15) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/tlsrewritem... (200; 4.215771ms)
  I0323 13:56:30.125212 23 proxy.go:558] (15) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname1/proxy/: foo (200; 4.34162ms)
  I0323 13:56:30.125280 23 proxy.go:558] (15) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname1/proxy/: foo (200; 4.408418ms)
  I0323 13:56:30.125279 23 proxy.go:558] (15) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname2/proxy/: bar (200; 4.341914ms)
  I0323 13:56:30.125418 23 proxy.go:558] (15) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname2/proxy/: tls qux (200; 4.520088ms)
  I0323 13:56:30.125497 23 proxy.go:558] (15) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname1/proxy/: tls baz (200; 4.554364ms)
  I0323 13:56:30.130414 23 proxy.go:558] (15) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname2/proxy/: bar (200; 9.446991ms)
  I0323 13:56:30.132842 23 proxy.go:558] (16) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">... (200; 2.40524ms)
  I0323 13:56:30.133410 23 proxy.go:558] (16) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 2.833062ms)
  I0323 13:56:30.133487 23 proxy.go:558] (16) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 2.912134ms)
  I0323 13:56:30.133744 23 proxy.go:558] (16) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:462/proxy/: tls qux (200; 3.26608ms)
  I0323 13:56:30.133746 23 proxy.go:558] (16) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname2/proxy/: bar (200; 3.312832ms)
  I0323 13:56:30.133936 23 proxy.go:558] (16) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 3.487002ms)
  I0323 13:56:30.133954 23 proxy.go:558] (16) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 3.403048ms)
  I0323 13:56:30.133950 23 proxy.go:558] (16) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:460/proxy/: tls baz (200; 3.448589ms)
  I0323 13:56:30.134013 23 proxy.go:558] (16) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/rewriteme">test</a> (200; 3.396268ms)
  I0323 13:56:30.134087 23 proxy.go:558] (16) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">test<... (200; 3.563387ms)
  I0323 13:56:30.134200 23 proxy.go:558] (16) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/tlsrewritem... (200; 3.581813ms)
  I0323 13:56:30.134381 23 proxy.go:558] (16) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname1/proxy/: foo (200; 3.784247ms)
  I0323 13:56:30.134387 23 proxy.go:558] (16) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname1/proxy/: tls baz (200; 3.905641ms)
  I0323 13:56:30.134460 23 proxy.go:558] (16) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname2/proxy/: tls qux (200; 3.907157ms)
  I0323 13:56:30.134461 23 proxy.go:558] (16) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname1/proxy/: foo (200; 3.956191ms)
  I0323 13:56:30.134908 23 proxy.go:558] (16) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname2/proxy/: bar (200; 4.381086ms)
  I0323 13:56:30.137217 23 proxy.go:558] (17) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:460/proxy/: tls baz (200; 2.226718ms)
  I0323 13:56:30.137232 23 proxy.go:558] (17) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">test<... (200; 2.305703ms)
  I0323 13:56:30.137296 23 proxy.go:558] (17) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">... (200; 2.36531ms)
  I0323 13:56:30.137295 23 proxy.go:558] (17) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 2.325748ms)
  I0323 13:56:30.137918 23 proxy.go:558] (17) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 2.870762ms)
  I0323 13:56:30.137937 23 proxy.go:558] (17) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/rewriteme">test</a> (200; 2.840107ms)
  I0323 13:56:30.137974 23 proxy.go:558] (17) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 2.85824ms)
  I0323 13:56:30.138067 23 proxy.go:558] (17) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/tlsrewritem... (200; 2.936997ms)
  I0323 13:56:30.138128 23 proxy.go:558] (17) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:462/proxy/: tls qux (200; 3.124297ms)
  I0323 13:56:30.138673 23 proxy.go:558] (17) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname2/proxy/: bar (200; 3.639783ms)
  I0323 13:56:30.138723 23 proxy.go:558] (17) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname2/proxy/: tls qux (200; 3.638465ms)
  I0323 13:56:30.138728 23 proxy.go:558] (17) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname2/proxy/: bar (200; 3.706989ms)
  I0323 13:56:30.139574 23 proxy.go:558] (17) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 4.514652ms)
  I0323 13:56:30.139901 23 proxy.go:558] (17) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname1/proxy/: foo (200; 4.8303ms)
  I0323 13:56:30.139908 23 proxy.go:558] (17) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname1/proxy/: foo (200; 4.760027ms)
  I0323 13:56:30.139984 23 proxy.go:558] (17) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname1/proxy/: tls baz (200; 4.822652ms)
  I0323 13:56:30.144312 23 proxy.go:558] (18) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">... (200; 4.252961ms)
  I0323 13:56:30.144412 23 proxy.go:558] (18) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 4.257037ms)
  I0323 13:56:30.144496 23 proxy.go:558] (18) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 4.381707ms)
  I0323 13:56:30.144519 23 proxy.go:558] (18) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/tlsrewritem... (200; 4.512062ms)
  I0323 13:56:30.144514 23 proxy.go:558] (18) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:462/proxy/: tls qux (200; 4.455183ms)
  I0323 13:56:30.144529 23 proxy.go:558] (18) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:460/proxy/: tls baz (200; 4.499164ms)
  I0323 13:56:30.144814 23 proxy.go:558] (18) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname2/proxy/: bar (200; 4.73168ms)
  I0323 13:56:30.144875 23 proxy.go:558] (18) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname1/proxy/: tls baz (200; 4.784358ms)
  I0323 13:56:30.144928 23 proxy.go:558] (18) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname1/proxy/: foo (200; 4.835041ms)
  I0323 13:56:30.145001 23 proxy.go:558] (18) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname2/proxy/: bar (200; 4.873671ms)
  I0323 13:56:30.145004 23 proxy.go:558] (18) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname1/proxy/: foo (200; 4.983845ms)
  I0323 13:56:30.145098 23 proxy.go:558] (18) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname2/proxy/: tls qux (200; 4.959817ms)
  I0323 13:56:30.145111 23 proxy.go:558] (18) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">test<... (200; 5.086813ms)
  I0323 13:56:30.145184 23 proxy.go:558] (18) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 5.08003ms)
  I0323 13:56:30.145256 23 proxy.go:558] (18) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 5.190555ms)
  I0323 13:56:30.145307 23 proxy.go:558] (18) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/rewriteme">test</a> (200; 5.175552ms)
  I0323 13:56:30.147404 23 proxy.go:558] (19) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:460/proxy/: tls baz (200; 2.069557ms)
  I0323 13:56:30.147768 23 proxy.go:558] (19) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">test<... (200; 2.382488ms)
  I0323 13:56:30.148086 23 proxy.go:558] (19) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname2/proxy/: bar (200; 2.703026ms)
  I0323 13:56:30.148157 23 proxy.go:558] (19) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname1/proxy/: foo (200; 2.819585ms)
  I0323 13:56:30.148265 23 proxy.go:558] (19) /api/v1/namespaces/proxy-2983/services/proxy-service-nsdsf:portname2/proxy/: bar (200; 2.937618ms)
  I0323 13:56:30.149516 23 proxy.go:558] (19) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:443/proxy/tlsrewritem... (200; 4.114894ms)
  I0323 13:56:30.149551 23 proxy.go:558] (19) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:1080/proxy/rewriteme">... (200; 4.139545ms)
  I0323 13:56:30.149652 23 proxy.go:558] (19) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 4.134829ms)
  I0323 13:56:30.149710 23 proxy.go:558] (19) /api/v1/namespaces/proxy-2983/pods/http:proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 4.264401ms)
  I0323 13:56:30.149717 23 proxy.go:558] (19) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:160/proxy/: foo (200; 4.245948ms)
  I0323 13:56:30.149720 23 proxy.go:558] (19) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname1/proxy/: tls baz (200; 4.3118ms)
  I0323 13:56:30.150107 23 proxy.go:558] (19) /api/v1/namespaces/proxy-2983/services/https:proxy-service-nsdsf:tlsportname2/proxy/: tls qux (200; 4.650894ms)
  I0323 13:56:30.150204 23 proxy.go:558] (19) /api/v1/namespaces/proxy-2983/services/http:proxy-service-nsdsf:portname1/proxy/: foo (200; 4.754173ms)
  I0323 13:56:30.150210 23 proxy.go:558] (19) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb:162/proxy/: bar (200; 4.718748ms)
  I0323 13:56:30.150230 23 proxy.go:558] (19) /api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/: <a href="/api/v1/namespaces/proxy-2983/pods/proxy-service-nsdsf-f54nb/proxy/rewriteme">test</a> (200; 4.756333ms)
  I0323 13:56:30.150260 23 proxy.go:558] (19) /api/v1/namespaces/proxy-2983/pods/https:proxy-service-nsdsf-f54nb:462/proxy/: tls qux (200; 4.835716ms)
  STEP: deleting ReplicationController proxy-service-nsdsf in namespace proxy-2983, will wait for the garbage collector to delete the pods @ 03/23/25 13:56:30.15
  I0323 13:56:30.204523 23 resources.go:139] Deleting ReplicationController proxy-service-nsdsf took: 2.64805ms
  I0323 13:56:30.305220 23 resources.go:163] Terminating ReplicationController proxy-service-nsdsf pods took: 100.681107ms
  E0323 13:56:30.565885      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:31.566461      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:56:32.405962 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2983" for this suite. @ 03/23/25 13:56:32.407
• [4.458 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 03/23/25 13:56:32.411
  I0323 13:56:32.411960 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename projected @ 03/23/25 13:56:32.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:56:32.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:56:32.419
  STEP: Creating configMap with name cm-test-opt-del-f1867929-d9a0-4cb5-80dd-cd263288f74f @ 03/23/25 13:56:32.508
  STEP: Creating configMap with name cm-test-opt-upd-a6e3b4de-45b5-4980-92aa-05880e116e7b @ 03/23/25 13:56:32.511
  STEP: Creating the pod @ 03/23/25 13:56:32.513
  E0323 13:56:32.566965      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:33.567050      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-f1867929-d9a0-4cb5-80dd-cd263288f74f @ 03/23/25 13:56:34.539
  STEP: Updating configmap cm-test-opt-upd-a6e3b4de-45b5-4980-92aa-05880e116e7b @ 03/23/25 13:56:34.541
  STEP: Creating configMap with name cm-test-opt-create-0d49f00c-eba4-4dc2-8385-a9d27c74f6c5 @ 03/23/25 13:56:34.543
  STEP: waiting to observe update in volume @ 03/23/25 13:56:34.545
  E0323 13:56:34.567329      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:35.567474      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:36.567977      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:37.568834      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:38.569403      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:39.569561      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:40.570082      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:41.570210      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:42.570379      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:43.570526      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:44.570977      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:45.571076      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:46.571414      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:47.571559      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:48.571732      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:49.571769      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:50.572830      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:51.573344      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:52.573587      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:53.573618      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:54.573750      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:55.574760      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:56.574900      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:57.575403      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:58.575533      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:56:59.575778      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:00.576822      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:01.577396      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:02.577674      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:03.577874      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:04.578142      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:05.578538      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:06.578673      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:07.579452      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:08.579571      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:09.579765      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:10.580812      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:11.581029      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:12.581200      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:13.581621      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:14.581772      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:15.582357      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:16.582501      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:17.583199      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:18.583288      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:19.583770      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:20.584815      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:21.585552      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:22.585721      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:23.586632      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:24.586771      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:25.587487      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:26.587619      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:27.587771      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:28.588832      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:29.589356      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:30.589503      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:31.589991      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:32.590085      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:33.590758      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:34.590886      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:35.591418      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:36.591522      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:37.591755      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:38.592826      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:39.593631      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:40.594380      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:41.595256      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:42.595406      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:43.596178      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:44.596821      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:45.597563      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:46.597696      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:47.598532      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:48.598585      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:49.599555      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:50.599722      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:51.600566      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:52.600808      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:53.601725      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:54.601881      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:55.602321      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:56.602474      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:57.603231      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:58.603354      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:57:59.603769      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:00.603839      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:01.604784      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:02.604949      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:03.605757      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:04.605896      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:58:04.810256 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-64" for this suite. @ 03/23/25 13:58:04.811
• [92.402 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 03/23/25 13:58:04.814
  I0323 13:58:04.814549 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename container-probe @ 03/23/25 13:58:04.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:58:04.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:58:04.822
  E0323 13:58:05.606002      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:06.606946      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:07.607856      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:08.608713      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:09.609678      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:10.609765      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:11.610644      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:12.611676      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:13.612485      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:14.612583      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:15.612655      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:16.612815      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:17.613672      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:18.614470      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:19.615405      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:20.615767      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:21.616668      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:22.617244      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:23.618259      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:24.619210      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:25.619768      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:26.620637      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:27.620908      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:28.621799      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:29.622674      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:30.623514      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:31.624179      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:32.624821      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:33.625826      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:34.626645      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:35.626680      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:36.627646      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:37.627780      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:38.628722      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:39.628849      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:40.629736      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:41.629815      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:42.630751      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:43.631814      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:44.632829      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:45.633439      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:46.634318      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:47.635037      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:48.635157      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:49.636134      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:50.636839      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:51.637852      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:52.637904      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:53.637954      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:54.638924      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:55.639837      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:56.640731      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:57.641271      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:58.641354      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:58:59.642232      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:00.642876      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:01.643695      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:02.644331      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:03.644827      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:04.645062      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 13:59:04.829901 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8674" for this suite. @ 03/23/25 13:59:04.831
• [60.019 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 03/23/25 13:59:04.834
  I0323 13:59:04.834312 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename taint-multiple-pods @ 03/23/25 13:59:04.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 13:59:04.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 13:59:04.843
  I0323 13:59:04.844357 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0323 13:59:05.645075      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:06.645213      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:07.645744      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:08.646774      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:09.646887      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:10.647027      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:11.647663      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:12.647775      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:13.648409      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:14.648850      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:15.649398      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:16.649563      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:17.650178      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:18.650285      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:19.651007      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:20.651075      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:21.651765      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:22.651768      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:23.652526      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:24.652585      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:25.653154      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:26.653299      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:27.654185      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:28.654945      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:29.655847      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:30.656819      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:31.657493      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:32.657632      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:33.658269      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:34.658729      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:35.659292      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:36.659444      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:37.659772      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:38.660834      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:39.661417      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:40.661552      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:41.661606      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:42.661663      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:43.662298      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:44.662445      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:45.662915      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:46.663054      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:47.663120      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:48.663222      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:49.663767      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:50.664818      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:51.665554      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:52.665715      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:53.666189      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:54.666342      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:55.667187      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:56.667844      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:57.668826      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:58.669672      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 13:59:59.669763      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:00.669834      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:01.670853      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:02.670949      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:03.671597      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:04.671670      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:00:04.844870 23 util.go:396] Waiting for terminating namespaces to be deleted...
  I0323 14:00:04.846871 23 taints.go:144] Starting informer...
  STEP: Starting pods... @ 03/23/25 14:00:04.846
  I0323 14:00:05.053892 23 taints.go:463] Pod1 is running on k8s-10-255-0-207. Tainting Node
  E0323 14:00:05.671682      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:06.671766      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:00:07.263492 23 taints.go:471] Pod2 is running on k8s-10-255-0-207. Tainting Node
  STEP: Trying to apply a taint on the Node @ 03/23/25 14:00:07.263
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 03/23/25 14:00:07.269
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 03/23/25 14:00:07.271
  E0323 14:00:07.672830      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:08.673827      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:09.673934      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:10.674070      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:11.674218      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:12.674895      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:00:12.688946 23 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  E0323 14:00:13.675030      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:14.675198      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:15.675325      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:16.675471      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:17.675550      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:18.675679      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:19.675781      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:20.676814      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:21.676971      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:22.677120      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:23.677217      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:24.677369      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:25.677498      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:26.677644      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:27.677772      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:28.677842      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:29.677987      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:30.678245      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:31.678396      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:32.678752      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:00:32.719691 23 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 03/23/25 14:00:32.727
  I0323 14:00:32.729407 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-7973" for this suite. @ 03/23/25 14:00:32.73
• [87.899 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 03/23/25 14:00:32.733
  I0323 14:00:32.733705 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename projected @ 03/23/25 14:00:32.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 14:00:32.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 14:00:32.745
  STEP: Creating projection with secret that has name projected-secret-test-9293bdf0-ec65-4023-811e-737b926efcda @ 03/23/25 14:00:32.746
  STEP: Creating a pod to test consume secrets @ 03/23/25 14:00:32.749
  E0323 14:00:33.679680      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:34.679820      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:35.680812      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:36.680942      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 14:00:36.758
  I0323 14:00:36.760230 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-projected-secrets-d4217526-997c-4376-8310-aa05f8275cc4 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 03/23/25 14:00:36.767
  I0323 14:00:36.773737 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9187" for this suite. @ 03/23/25 14:00:36.775
• [4.044 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 03/23/25 14:00:36.777
  I0323 14:00:36.777553 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename emptydir @ 03/23/25 14:00:36.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 14:00:36.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 14:00:36.784
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 03/23/25 14:00:36.786
  E0323 14:00:37.681044      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:38.681097      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:39.681147      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:40.681294      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 14:00:40.797
  I0323 14:00:40.798454 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-218b5d56-a49c-48ac-8f51-fd64bcbc31cc container test-container: <nil>
  STEP: delete the pod @ 03/23/25 14:00:40.8
  I0323 14:00:40.807389 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4838" for this suite. @ 03/23/25 14:00:40.808
• [4.034 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1840
  STEP: Creating a kubernetes client @ 03/23/25 14:00:40.811
  I0323 14:00:40.811299 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename kubectl @ 03/23/25 14:00:40.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 14:00:40.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 14:00:40.819
  STEP: starting the proxy server @ 03/23/25 14:00:40.82
  I0323 14:00:40.820888 23 util.go:590] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-4499 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 03/23/25 14:00:40.851
  I0323 14:00:40.856570 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0323 14:00:40.857789 23 kubectl.go:2236] kubectl proxy stderr: W0323 14:00:40.851309    1258 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  I0323 14:00:40.857787 23 kubectl.go:2231] kubectl proxy stdout: Starting to serve on 127.0.0.1:40385

  STEP: Destroying namespace "kubectl-4499" for this suite. @ 03/23/25 14:00:40.909
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 03/23/25 14:00:40.912
  I0323 14:00:40.912979 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename field-validation @ 03/23/25 14:00:40.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 14:00:40.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 14:00:40.92
  I0323 14:00:40.922090 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  E0323 14:00:41.681364      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:42.681519      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  W0323 14:00:43.452296      23 warnings.go:70] unknown field "alpha"
  W0323 14:00:43.452310      23 warnings.go:70] unknown field "beta"
  W0323 14:00:43.452314      23 warnings.go:70] unknown field "delta"
  W0323 14:00:43.452317      23 warnings.go:70] unknown field "epsilon"
  W0323 14:00:43.452319      23 warnings.go:70] unknown field "gamma"
  E0323 14:00:43.682274      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:00:43.979961 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3647" for this suite. @ 03/23/25 14:00:43.981
• [3.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 03/23/25 14:00:43.984
  I0323 14:00:43.984900 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename container-runtime @ 03/23/25 14:00:43.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 14:00:43.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 14:00:43.992
  STEP: create the container @ 03/23/25 14:00:43.994
  W0323 14:00:43.998046      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 03/23/25 14:00:43.998
  E0323 14:00:44.683039      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:45.683765      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: get the container status @ 03/23/25 14:00:46.003
  STEP: the container should be terminated @ 03/23/25 14:00:46.004
  STEP: the termination message should be set @ 03/23/25 14:00:46.004
  I0323 14:00:46.004670 23 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 03/23/25 14:00:46.004
  I0323 14:00:46.011595 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3881" for this suite. @ 03/23/25 14:00:46.013
• [2.031 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 03/23/25 14:00:46.016
  I0323 14:00:46.016469 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename discovery @ 03/23/25 14:00:46.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 14:00:46.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 14:00:46.025
  STEP: Setting up server cert @ 03/23/25 14:00:46.028
  I0323 14:00:46.399250 23 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0323 14:00:46.399875 23 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0323 14:00:46.399900 23 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0323 14:00:46.399908 23 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0323 14:00:46.399915 23 discovery.go:139] Checking APIGroup: apps
  I0323 14:00:46.400435 23 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0323 14:00:46.400452 23 discovery.go:148] Versions found [{apps/v1 v1}]
  I0323 14:00:46.400459 23 discovery.go:154] apps/v1 matches apps/v1
  I0323 14:00:46.400468 23 discovery.go:139] Checking APIGroup: events.k8s.io
  I0323 14:00:46.400914 23 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0323 14:00:46.400931 23 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0323 14:00:46.400938 23 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0323 14:00:46.400946 23 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0323 14:00:46.401468 23 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0323 14:00:46.401482 23 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0323 14:00:46.401490 23 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0323 14:00:46.401498 23 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0323 14:00:46.401920 23 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0323 14:00:46.401931 23 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0323 14:00:46.401940 23 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0323 14:00:46.401951 23 discovery.go:139] Checking APIGroup: autoscaling
  I0323 14:00:46.402355 23 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0323 14:00:46.402366 23 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0323 14:00:46.402373 23 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0323 14:00:46.402380 23 discovery.go:139] Checking APIGroup: batch
  I0323 14:00:46.402793 23 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0323 14:00:46.402807 23 discovery.go:148] Versions found [{batch/v1 v1}]
  I0323 14:00:46.402815 23 discovery.go:154] batch/v1 matches batch/v1
  I0323 14:00:46.402823 23 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0323 14:00:46.403217 23 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0323 14:00:46.403229 23 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0323 14:00:46.403236 23 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0323 14:00:46.403244 23 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0323 14:00:46.403658 23 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0323 14:00:46.403667 23 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0323 14:00:46.403674 23 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0323 14:00:46.403682 23 discovery.go:139] Checking APIGroup: policy
  I0323 14:00:46.404053 23 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0323 14:00:46.404063 23 discovery.go:148] Versions found [{policy/v1 v1}]
  I0323 14:00:46.404070 23 discovery.go:154] policy/v1 matches policy/v1
  I0323 14:00:46.404082 23 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0323 14:00:46.404449 23 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0323 14:00:46.404459 23 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0323 14:00:46.404468 23 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0323 14:00:46.404476 23 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0323 14:00:46.404844 23 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0323 14:00:46.404853 23 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0323 14:00:46.404860 23 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0323 14:00:46.404868 23 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0323 14:00:46.405245 23 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0323 14:00:46.405253 23 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0323 14:00:46.405260 23 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0323 14:00:46.405269 23 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0323 14:00:46.405650 23 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0323 14:00:46.405659 23 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0323 14:00:46.405666 23 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0323 14:00:46.405674 23 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0323 14:00:46.406056 23 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0323 14:00:46.406065 23 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0323 14:00:46.406072 23 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0323 14:00:46.406079 23 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0323 14:00:46.406454 23 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0323 14:00:46.406463 23 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0323 14:00:46.406470 23 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0323 14:00:46.406478 23 discovery.go:139] Checking APIGroup: node.k8s.io
  I0323 14:00:46.406863 23 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0323 14:00:46.406875 23 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0323 14:00:46.406881 23 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0323 14:00:46.406889 23 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0323 14:00:46.407290 23 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0323 14:00:46.407301 23 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0323 14:00:46.407308 23 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0323 14:00:46.407316 23 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0323 14:00:46.407707 23 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0323 14:00:46.407720 23 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0323 14:00:46.407727 23 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0323 14:00:46.407735 23 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0323 14:00:46.408108 23 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0323 14:00:46.408118 23 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0323 14:00:46.408125 23 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0323 14:00:46.408195 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-247" for this suite. @ 03/23/25 14:00:46.409
• [0.396 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 03/23/25 14:00:46.412
  I0323 14:00:46.412392 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename validating-admission-policy @ 03/23/25 14:00:46.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 14:00:46.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 14:00:46.421
  STEP: getting /apis @ 03/23/25 14:00:46.425
  STEP: getting /apis/admissionregistration.k8s.io @ 03/23/25 14:00:46.427
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 03/23/25 14:00:46.428
  STEP: creating @ 03/23/25 14:00:46.429
  STEP: getting @ 03/23/25 14:00:46.434
  STEP: listing @ 03/23/25 14:00:46.435
  STEP: watching @ 03/23/25 14:00:46.436
  I0323 14:00:46.436469 23 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 03/23/25 14:00:46.436
  STEP: updating @ 03/23/25 14:00:46.44
  I0323 14:00:46.442873 23 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 03/23/25 14:00:46.442
  STEP: deleting a collection @ 03/23/25 14:00:46.446
  I0323 14:00:46.452133 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6122" for this suite. @ 03/23/25 14:00:46.51
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199
  STEP: Creating a kubernetes client @ 03/23/25 14:00:46.514
  I0323 14:00:46.514009 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename job @ 03/23/25 14:00:46.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 14:00:46.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 14:00:46.521
  STEP: Looking for a node to schedule job pods @ 03/23/25 14:00:46.523
  STEP: Creating a job @ 03/23/25 14:00:46.61
  STEP: Waiting for all the pods to be ready @ 03/23/25 14:00:46.614
  E0323 14:00:46.684280      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:47.684437      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:48.685317      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:49.685411      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Fetch all running pods @ 03/23/25 14:00:50.62
  STEP: Evict all the Pods @ 03/23/25 14:00:50.621
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-pgtrb/job-524 @ 03/23/25 14:00:50.622
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-jvhgw/job-524 @ 03/23/25 14:00:50.622
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-jxv6z/job-524 @ 03/23/25 14:00:50.622
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-jxv6z/job-524 to be deleted @ 03/23/25 14:00:50.632
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-jvhgw/job-524 to be deleted @ 03/23/25 14:00:50.633
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-pgtrb/job-524 to be deleted @ 03/23/25 14:00:50.633
  E0323 14:00:50.686421      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:51.686567      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:52.687270      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:53.687408      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring job reaches completions @ 03/23/25 14:00:54.64
  E0323 14:00:54.688405      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:55.688475      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:56.689233      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:57.689363      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:58.690255      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:00:59.690336      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:00.691415      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:01.691559      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:02.692314      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:03.692399      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:04.693169      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:05.693505      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:06.694438      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:07.694588      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:08.695622      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:09.695761      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:10.696820      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:11.696951      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:12.697860      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:13.698618      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:14.698743      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:15.698843      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:16.699553      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:17.699725      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:18.700751      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:19.700889      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:20.701933      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:21.702001      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:22.702663      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:23.703739      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:24.704688      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:25.704834      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:26.705692      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:27.705844      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:28.706827      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:29.706972      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:30.707000      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:31.707154      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:32.707917      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:33.708840      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:34.709616      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:35.709724      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:01:36.686864 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-524" for this suite. @ 03/23/25 14:01:36.688
• [50.177 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 03/23/25 14:01:36.691
  I0323 14:01:36.691107 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename gc @ 03/23/25 14:01:36.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 14:01:36.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 14:01:36.698
  E0323 14:01:36.710370      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the rc @ 03/23/25 14:01:36.789
  W0323 14:01:36.792063      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0323 14:01:37.710867      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:38.712618      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:39.713184      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:40.715806      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:41.715867      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:42.715953      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the rc @ 03/23/25 14:01:42.794
  STEP: wait for the rc to be deleted @ 03/23/25 14:01:42.797
  E0323 14:01:43.716824      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:44.716966      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:45.717105      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:46.717252      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:47.717394      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 03/23/25 14:01:47.8
  E0323 14:01:48.718433      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:49.718494      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:50.718566      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:51.718713      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:52.718859      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:53.718920      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:54.719061      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:55.719211      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:56.719361      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:57.719500      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:58.719611      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:01:59.719755      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:00.720815      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:01.720943      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:02.721074      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:03.721148      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:04.721279      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:05.721413      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:06.721542      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:07.721680      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:08.721762      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:09.721908      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:10.722720      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:11.722805      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:12.722937      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:13.723554      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:14.723694      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:15.723771      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:16.724814      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:17.724950      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 03/23/25 14:02:17.805
  W0323 14:02:17.807942      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0323 14:02:17.807966 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0323 14:02:17.808022 23 delete.go:95] Deleting pod "simpletest.rc-26mg9" in namespace "gc-6483"
  I0323 14:02:17.812978 23 delete.go:95] Deleting pod "simpletest.rc-2p86d" in namespace "gc-6483"
  I0323 14:02:17.819678 23 delete.go:95] Deleting pod "simpletest.rc-2rrtm" in namespace "gc-6483"
  I0323 14:02:17.824623 23 delete.go:95] Deleting pod "simpletest.rc-4b46g" in namespace "gc-6483"
  I0323 14:02:17.833280 23 delete.go:95] Deleting pod "simpletest.rc-4pmsq" in namespace "gc-6483"
  I0323 14:02:17.839274 23 delete.go:95] Deleting pod "simpletest.rc-4v7zf" in namespace "gc-6483"
  I0323 14:02:17.843372 23 delete.go:95] Deleting pod "simpletest.rc-5hzw7" in namespace "gc-6483"
  I0323 14:02:17.850585 23 delete.go:95] Deleting pod "simpletest.rc-65wkm" in namespace "gc-6483"
  I0323 14:02:17.855817 23 delete.go:95] Deleting pod "simpletest.rc-6cd6j" in namespace "gc-6483"
  I0323 14:02:17.860765 23 delete.go:95] Deleting pod "simpletest.rc-6kdp6" in namespace "gc-6483"
  I0323 14:02:17.867799 23 delete.go:95] Deleting pod "simpletest.rc-6sdts" in namespace "gc-6483"
  I0323 14:02:17.875467 23 delete.go:95] Deleting pod "simpletest.rc-7hgtp" in namespace "gc-6483"
  I0323 14:02:17.883196 23 delete.go:95] Deleting pod "simpletest.rc-87mpq" in namespace "gc-6483"
  I0323 14:02:17.890610 23 delete.go:95] Deleting pod "simpletest.rc-8cwq2" in namespace "gc-6483"
  I0323 14:02:17.900865 23 delete.go:95] Deleting pod "simpletest.rc-8ls46" in namespace "gc-6483"
  I0323 14:02:17.908135 23 delete.go:95] Deleting pod "simpletest.rc-8r4vs" in namespace "gc-6483"
  I0323 14:02:17.916283 23 delete.go:95] Deleting pod "simpletest.rc-94999" in namespace "gc-6483"
  I0323 14:02:17.926574 23 delete.go:95] Deleting pod "simpletest.rc-966b9" in namespace "gc-6483"
  I0323 14:02:17.933621 23 delete.go:95] Deleting pod "simpletest.rc-9fj7v" in namespace "gc-6483"
  I0323 14:02:17.947212 23 delete.go:95] Deleting pod "simpletest.rc-9l29w" in namespace "gc-6483"
  I0323 14:02:17.955035 23 delete.go:95] Deleting pod "simpletest.rc-9vmv9" in namespace "gc-6483"
  I0323 14:02:17.965611 23 delete.go:95] Deleting pod "simpletest.rc-bbkkw" in namespace "gc-6483"
  I0323 14:02:17.975996 23 delete.go:95] Deleting pod "simpletest.rc-bgprv" in namespace "gc-6483"
  I0323 14:02:17.983839 23 delete.go:95] Deleting pod "simpletest.rc-bldtc" in namespace "gc-6483"
  I0323 14:02:18.003645 23 delete.go:95] Deleting pod "simpletest.rc-c74c2" in namespace "gc-6483"
  I0323 14:02:18.018431 23 delete.go:95] Deleting pod "simpletest.rc-cg6gl" in namespace "gc-6483"
  I0323 14:02:18.024148 23 delete.go:95] Deleting pod "simpletest.rc-crnm4" in namespace "gc-6483"
  I0323 14:02:18.031905 23 delete.go:95] Deleting pod "simpletest.rc-ctbnj" in namespace "gc-6483"
  I0323 14:02:18.041569 23 delete.go:95] Deleting pod "simpletest.rc-cvttt" in namespace "gc-6483"
  I0323 14:02:18.048392 23 delete.go:95] Deleting pod "simpletest.rc-d6q9h" in namespace "gc-6483"
  I0323 14:02:18.062218 23 delete.go:95] Deleting pod "simpletest.rc-d825f" in namespace "gc-6483"
  I0323 14:02:18.075047 23 delete.go:95] Deleting pod "simpletest.rc-dntdd" in namespace "gc-6483"
  I0323 14:02:18.088061 23 delete.go:95] Deleting pod "simpletest.rc-dnxpb" in namespace "gc-6483"
  I0323 14:02:18.098978 23 delete.go:95] Deleting pod "simpletest.rc-ds5pv" in namespace "gc-6483"
  I0323 14:02:18.121446 23 delete.go:95] Deleting pod "simpletest.rc-dzmc8" in namespace "gc-6483"
  I0323 14:02:18.129403 23 delete.go:95] Deleting pod "simpletest.rc-fjrj4" in namespace "gc-6483"
  I0323 14:02:18.137927 23 delete.go:95] Deleting pod "simpletest.rc-fnnkw" in namespace "gc-6483"
  I0323 14:02:18.144706 23 delete.go:95] Deleting pod "simpletest.rc-fxhbp" in namespace "gc-6483"
  I0323 14:02:18.162436 23 delete.go:95] Deleting pod "simpletest.rc-g2ppd" in namespace "gc-6483"
  I0323 14:02:18.171612 23 delete.go:95] Deleting pod "simpletest.rc-gfpgf" in namespace "gc-6483"
  I0323 14:02:18.185250 23 delete.go:95] Deleting pod "simpletest.rc-hmpf8" in namespace "gc-6483"
  I0323 14:02:18.200681 23 delete.go:95] Deleting pod "simpletest.rc-hws69" in namespace "gc-6483"
  I0323 14:02:18.209588 23 delete.go:95] Deleting pod "simpletest.rc-jcsfj" in namespace "gc-6483"
  I0323 14:02:18.232142 23 delete.go:95] Deleting pod "simpletest.rc-jgwwf" in namespace "gc-6483"
  I0323 14:02:18.243594 23 delete.go:95] Deleting pod "simpletest.rc-jqbzp" in namespace "gc-6483"
  I0323 14:02:18.270402 23 delete.go:95] Deleting pod "simpletest.rc-jqnrw" in namespace "gc-6483"
  I0323 14:02:18.293920 23 delete.go:95] Deleting pod "simpletest.rc-jzgsc" in namespace "gc-6483"
  I0323 14:02:18.322039 23 delete.go:95] Deleting pod "simpletest.rc-k8zs8" in namespace "gc-6483"
  I0323 14:02:18.330012 23 delete.go:95] Deleting pod "simpletest.rc-kd9zl" in namespace "gc-6483"
  I0323 14:02:18.365026 23 delete.go:95] Deleting pod "simpletest.rc-klssd" in namespace "gc-6483"
  I0323 14:02:18.378994 23 delete.go:95] Deleting pod "simpletest.rc-kzsww" in namespace "gc-6483"
  I0323 14:02:18.398051 23 delete.go:95] Deleting pod "simpletest.rc-lbbmt" in namespace "gc-6483"
  I0323 14:02:18.408737 23 delete.go:95] Deleting pod "simpletest.rc-lc2qw" in namespace "gc-6483"
  I0323 14:02:18.417383 23 delete.go:95] Deleting pod "simpletest.rc-lpcjm" in namespace "gc-6483"
  I0323 14:02:18.429338 23 delete.go:95] Deleting pod "simpletest.rc-lsn5d" in namespace "gc-6483"
  I0323 14:02:18.444226 23 delete.go:95] Deleting pod "simpletest.rc-lvndn" in namespace "gc-6483"
  I0323 14:02:18.457487 23 delete.go:95] Deleting pod "simpletest.rc-lvz44" in namespace "gc-6483"
  I0323 14:02:18.465168 23 delete.go:95] Deleting pod "simpletest.rc-m2x6h" in namespace "gc-6483"
  I0323 14:02:18.474327 23 delete.go:95] Deleting pod "simpletest.rc-m6cfx" in namespace "gc-6483"
  I0323 14:02:18.492908 23 delete.go:95] Deleting pod "simpletest.rc-m7dx7" in namespace "gc-6483"
  I0323 14:02:18.510175 23 delete.go:95] Deleting pod "simpletest.rc-n86tn" in namespace "gc-6483"
  I0323 14:02:18.525033 23 delete.go:95] Deleting pod "simpletest.rc-nldxr" in namespace "gc-6483"
  I0323 14:02:18.534478 23 delete.go:95] Deleting pod "simpletest.rc-nlq2z" in namespace "gc-6483"
  I0323 14:02:18.566139 23 delete.go:95] Deleting pod "simpletest.rc-nndvp" in namespace "gc-6483"
  I0323 14:02:18.614336 23 delete.go:95] Deleting pod "simpletest.rc-pmdtl" in namespace "gc-6483"
  I0323 14:02:18.667537 23 delete.go:95] Deleting pod "simpletest.rc-q6v46" in namespace "gc-6483"
  E0323 14:02:18.727903      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:02:18.728105 23 delete.go:95] Deleting pod "simpletest.rc-qhtz8" in namespace "gc-6483"
  I0323 14:02:18.763002 23 delete.go:95] Deleting pod "simpletest.rc-r2srs" in namespace "gc-6483"
  I0323 14:02:18.814176 23 delete.go:95] Deleting pod "simpletest.rc-rplk4" in namespace "gc-6483"
  I0323 14:02:18.864473 23 delete.go:95] Deleting pod "simpletest.rc-rtfsp" in namespace "gc-6483"
  I0323 14:02:18.942226 23 delete.go:95] Deleting pod "simpletest.rc-s28dj" in namespace "gc-6483"
  I0323 14:02:19.007739 23 delete.go:95] Deleting pod "simpletest.rc-s296w" in namespace "gc-6483"
  I0323 14:02:19.057055 23 delete.go:95] Deleting pod "simpletest.rc-s2vhw" in namespace "gc-6483"
  I0323 14:02:19.077843 23 delete.go:95] Deleting pod "simpletest.rc-sbhvn" in namespace "gc-6483"
  I0323 14:02:19.126208 23 delete.go:95] Deleting pod "simpletest.rc-sc5s5" in namespace "gc-6483"
  I0323 14:02:19.173382 23 delete.go:95] Deleting pod "simpletest.rc-shdhx" in namespace "gc-6483"
  I0323 14:02:19.228207 23 delete.go:95] Deleting pod "simpletest.rc-spg44" in namespace "gc-6483"
  I0323 14:02:19.290535 23 delete.go:95] Deleting pod "simpletest.rc-sqng2" in namespace "gc-6483"
  I0323 14:02:19.326896 23 delete.go:95] Deleting pod "simpletest.rc-tjkfb" in namespace "gc-6483"
  I0323 14:02:19.377287 23 delete.go:95] Deleting pod "simpletest.rc-tpfrm" in namespace "gc-6483"
  I0323 14:02:19.472032 23 delete.go:95] Deleting pod "simpletest.rc-tq5r5" in namespace "gc-6483"
  I0323 14:02:19.491083 23 delete.go:95] Deleting pod "simpletest.rc-trsj8" in namespace "gc-6483"
  I0323 14:02:19.534117 23 delete.go:95] Deleting pod "simpletest.rc-tzv4w" in namespace "gc-6483"
  I0323 14:02:19.587317 23 delete.go:95] Deleting pod "simpletest.rc-v8xr6" in namespace "gc-6483"
  I0323 14:02:19.622558 23 delete.go:95] Deleting pod "simpletest.rc-v9t52" in namespace "gc-6483"
  E0323 14:02:19.728258      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:02:19.748872 23 delete.go:95] Deleting pod "simpletest.rc-vq9f6" in namespace "gc-6483"
  I0323 14:02:19.776950 23 delete.go:95] Deleting pod "simpletest.rc-vwgm9" in namespace "gc-6483"
  I0323 14:02:19.793631 23 delete.go:95] Deleting pod "simpletest.rc-w5b8l" in namespace "gc-6483"
  I0323 14:02:19.814080 23 delete.go:95] Deleting pod "simpletest.rc-wcv6b" in namespace "gc-6483"
  I0323 14:02:20.182678 23 delete.go:95] Deleting pod "simpletest.rc-wdwvx" in namespace "gc-6483"
  I0323 14:02:20.229860 23 delete.go:95] Deleting pod "simpletest.rc-wtqnq" in namespace "gc-6483"
  I0323 14:02:20.278019 23 delete.go:95] Deleting pod "simpletest.rc-wwcwz" in namespace "gc-6483"
  I0323 14:02:20.293678 23 delete.go:95] Deleting pod "simpletest.rc-wx27t" in namespace "gc-6483"
  I0323 14:02:20.313065 23 delete.go:95] Deleting pod "simpletest.rc-xfc2p" in namespace "gc-6483"
  I0323 14:02:20.327575 23 delete.go:95] Deleting pod "simpletest.rc-xkbjk" in namespace "gc-6483"
  I0323 14:02:20.334113 23 delete.go:95] Deleting pod "simpletest.rc-z5s47" in namespace "gc-6483"
  I0323 14:02:20.362539 23 delete.go:95] Deleting pod "simpletest.rc-z6fch" in namespace "gc-6483"
  I0323 14:02:20.406177 23 delete.go:95] Deleting pod "simpletest.rc-zdtj6" in namespace "gc-6483"
  I0323 14:02:20.435236 23 delete.go:95] Deleting pod "simpletest.rc-zh6nc" in namespace "gc-6483"
  I0323 14:02:20.456789 23 delete.go:95] Deleting pod "simpletest.rc-zkzfz" in namespace "gc-6483"
  I0323 14:02:20.488742 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6483" for this suite. @ 03/23/25 14:02:20.493
• [43.840 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:934
  STEP: Creating a kubernetes client @ 03/23/25 14:02:20.531
  I0323 14:02:20.531337 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename sched-preemption @ 03/23/25 14:02:20.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 14:02:20.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 14:02:20.561
  I0323 14:02:20.579104 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0323 14:02:20.728416      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:21.728488      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:22.728602      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:23.728726      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:24.729296      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:25.729432      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:26.730050      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:27.730187      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:28.731143      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:29.731224      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:30.731425      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:31.731565      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:32.732144      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:33.732265      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:34.732303      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:35.732389      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:36.732815      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:37.732984      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:38.733853      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:39.733998      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:40.734349      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:41.734440      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:42.735035      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:43.735101      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:44.735354      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:45.735490      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:46.735604      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:47.735748      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:48.736253      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:49.736365      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:50.737198      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:51.737287      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:52.737548      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:53.737665      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:54.738371      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:55.738508      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:56.739178      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:57.739266      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:58.740015      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:02:59.740821      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:00.741636      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:01.741731      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:02.741985      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:03.742692      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:04.743380      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:05.743509      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:06.744112      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:07.744193      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:08.744811      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:09.744945      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:10.745590      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:11.745731      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:12.745814      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:13.746829      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:14.747028      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:15.747171      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:16.747561      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:17.747697      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:18.748454      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:19.748542      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:03:20.581698 23 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 03/23/25 14:03:20.583
  I0323 14:03:20.583336 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename sched-preemption-path @ 03/23/25 14:03:20.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 14:03:20.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 14:03:20.59
  I0323 14:03:20.597756 23 preemption.go:940] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0323 14:03:20.598953 23 preemption.go:946] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 03/23/25 14:03:20.616
  STEP: Removing a custom resource @ 03/23/25 14:03:20.62
  STEP: Removing a custom resource @ 03/23/25 14:03:20.624
  I0323 14:03:20.627527 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-7275" for this suite. @ 03/23/25 14:03:20.682
  I0323 14:03:20.685210 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0323 14:03:20.749354      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "sched-preemption-3307" for this suite. @ 03/23/25 14:03:20.782
• [60.254 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 03/23/25 14:03:20.784
  I0323 14:03:20.784957 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename validating-admission-policy @ 03/23/25 14:03:20.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 14:03:20.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 14:03:20.792
  STEP: getting /apis @ 03/23/25 14:03:20.845
  STEP: getting /apis/admissionregistration.k8s.io @ 03/23/25 14:03:20.848
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 03/23/25 14:03:20.848
  STEP: creating @ 03/23/25 14:03:20.849
  STEP: getting @ 03/23/25 14:03:20.857
  STEP: listing @ 03/23/25 14:03:20.858
  STEP: watching @ 03/23/25 14:03:20.859
  I0323 14:03:20.859750 23 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 03/23/25 14:03:20.86
  STEP: updating @ 03/23/25 14:03:20.872
  I0323 14:03:20.877010 23 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  STEP: getting /status @ 03/23/25 14:03:20.877
  STEP: patching /status @ 03/23/25 14:03:20.879
  STEP: updating /status @ 03/23/25 14:03:20.883
  STEP: deleting @ 03/23/25 14:03:20.887
  STEP: deleting a collection @ 03/23/25 14:03:20.892
  I0323 14:03:20.897878 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-1719" for this suite. @ 03/23/25 14:03:20.899
• [0.116 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 03/23/25 14:03:20.901
  I0323 14:03:20.901446 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename container-probe @ 03/23/25 14:03:20.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 14:03:20.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 14:03:20.909
  STEP: Creating pod busybox-e09c5442-465a-4a1f-994f-4f3fc4be8a36 in namespace container-probe-1446 @ 03/23/25 14:03:20.911
  E0323 14:03:21.749549      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:22.749685      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 03/23/25 14:03:22.918
  I0323 14:03:22.920006 23 container_probe.go:1749] Initial restart count of pod busybox-e09c5442-465a-4a1f-994f-4f3fc4be8a36 is 0
  I0323 14:03:22.921040 23 container_probe.go:1759] Get pod busybox-e09c5442-465a-4a1f-994f-4f3fc4be8a36 in namespace container-probe-1446
  E0323 14:03:23.749807      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:24.749869      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:03:24.923848 23 container_probe.go:1759] Get pod busybox-e09c5442-465a-4a1f-994f-4f3fc4be8a36 in namespace container-probe-1446
  E0323 14:03:25.750729      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:26.750873      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:03:26.925918 23 container_probe.go:1759] Get pod busybox-e09c5442-465a-4a1f-994f-4f3fc4be8a36 in namespace container-probe-1446
  E0323 14:03:27.751809      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:28.752817      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:03:28.928748 23 container_probe.go:1759] Get pod busybox-e09c5442-465a-4a1f-994f-4f3fc4be8a36 in namespace container-probe-1446
  E0323 14:03:29.753581      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:30.754615      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:03:30.931926 23 container_probe.go:1759] Get pod busybox-e09c5442-465a-4a1f-994f-4f3fc4be8a36 in namespace container-probe-1446
  E0323 14:03:31.754698      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:32.754860      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:03:32.933698 23 container_probe.go:1759] Get pod busybox-e09c5442-465a-4a1f-994f-4f3fc4be8a36 in namespace container-probe-1446
  E0323 14:03:33.755687      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:34.755824      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:03:34.935782 23 container_probe.go:1759] Get pod busybox-e09c5442-465a-4a1f-994f-4f3fc4be8a36 in namespace container-probe-1446
  E0323 14:03:35.756610      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:36.756757      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:03:36.937800 23 container_probe.go:1759] Get pod busybox-e09c5442-465a-4a1f-994f-4f3fc4be8a36 in namespace container-probe-1446
  E0323 14:03:37.757725      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:38.757818      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:03:38.939823 23 container_probe.go:1759] Get pod busybox-e09c5442-465a-4a1f-994f-4f3fc4be8a36 in namespace container-probe-1446
  E0323 14:03:39.758565      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:40.758702      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:03:40.942662 23 container_probe.go:1759] Get pod busybox-e09c5442-465a-4a1f-994f-4f3fc4be8a36 in namespace container-probe-1446
  E0323 14:03:41.758809      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:42.758945      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:03:42.944794 23 container_probe.go:1759] Get pod busybox-e09c5442-465a-4a1f-994f-4f3fc4be8a36 in namespace container-probe-1446
  E0323 14:03:43.759756      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:44.759756      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:03:44.946808 23 container_probe.go:1759] Get pod busybox-e09c5442-465a-4a1f-994f-4f3fc4be8a36 in namespace container-probe-1446
  E0323 14:03:45.760610      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:46.760817      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:03:46.948759 23 container_probe.go:1759] Get pod busybox-e09c5442-465a-4a1f-994f-4f3fc4be8a36 in namespace container-probe-1446
  E0323 14:03:47.760920      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:48.760975      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:03:48.951591 23 container_probe.go:1759] Get pod busybox-e09c5442-465a-4a1f-994f-4f3fc4be8a36 in namespace container-probe-1446
  E0323 14:03:49.761072      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:50.761202      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:03:50.954436 23 container_probe.go:1759] Get pod busybox-e09c5442-465a-4a1f-994f-4f3fc4be8a36 in namespace container-probe-1446
  E0323 14:03:51.761236      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:52.761309      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:03:52.957684 23 container_probe.go:1759] Get pod busybox-e09c5442-465a-4a1f-994f-4f3fc4be8a36 in namespace container-probe-1446
  E0323 14:03:53.761590      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:54.761679      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:03:54.959681 23 container_probe.go:1759] Get pod busybox-e09c5442-465a-4a1f-994f-4f3fc4be8a36 in namespace container-probe-1446
  E0323 14:03:55.761954      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:56.762099      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:03:56.962130 23 container_probe.go:1759] Get pod busybox-e09c5442-465a-4a1f-994f-4f3fc4be8a36 in namespace container-probe-1446
  E0323 14:03:57.762835      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:03:58.762895      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:03:58.964902 23 container_probe.go:1759] Get pod busybox-e09c5442-465a-4a1f-994f-4f3fc4be8a36 in namespace container-probe-1446
  E0323 14:03:59.763710      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:00.763863      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:04:00.966945 23 container_probe.go:1759] Get pod busybox-e09c5442-465a-4a1f-994f-4f3fc4be8a36 in namespace container-probe-1446
  E0323 14:04:01.764759      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:02.764901      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:04:02.968881 23 container_probe.go:1759] Get pod busybox-e09c5442-465a-4a1f-994f-4f3fc4be8a36 in namespace container-probe-1446
  E0323 14:04:03.765832      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:04.765982      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:04:04.970945 23 container_probe.go:1759] Get pod busybox-e09c5442-465a-4a1f-994f-4f3fc4be8a36 in namespace container-probe-1446
  E0323 14:04:05.766709      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:06.766795      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:04:06.973986 23 container_probe.go:1759] Get pod busybox-e09c5442-465a-4a1f-994f-4f3fc4be8a36 in namespace container-probe-1446
  E0323 14:04:07.766838      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:08.767458      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:04:08.976452 23 container_probe.go:1759] Get pod busybox-e09c5442-465a-4a1f-994f-4f3fc4be8a36 in namespace container-probe-1446
  E0323 14:04:09.767772      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:10.767837      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:04:10.979070 23 container_probe.go:1759] Get pod busybox-e09c5442-465a-4a1f-994f-4f3fc4be8a36 in namespace container-probe-1446
  E0323 14:04:11.768838      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:12.768978      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:04:12.981057 23 container_probe.go:1759] Get pod busybox-e09c5442-465a-4a1f-994f-4f3fc4be8a36 in namespace container-probe-1446
  I0323 14:04:12.981089 23 container_probe.go:1763] Restart count of pod container-probe-1446/busybox-e09c5442-465a-4a1f-994f-4f3fc4be8a36 is now 1 (50.061062884s elapsed)
  STEP: deleting the pod @ 03/23/25 14:04:12.981
  I0323 14:04:12.987580 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1446" for this suite. @ 03/23/25 14:04:12.989
• [52.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 03/23/25 14:04:12.992
  I0323 14:04:12.992508 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename kubectl @ 03/23/25 14:04:12.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 14:04:12.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 14:04:12.998
  STEP: creating a replication controller @ 03/23/25 14:04:13
  I0323 14:04:13.000472 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-8891 create -f -'
  I0323 14:04:13.078458 23 builder.go:146] stderr: ""
  I0323 14:04:13.078487 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 03/23/25 14:04:13.078
  I0323 14:04:13.078560 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-8891 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0323 14:04:13.121509 23 builder.go:146] stderr: ""
  I0323 14:04:13.121539 23 builder.go:147] stdout: "update-demo-nautilus-2svnh update-demo-nautilus-sq76z "
  I0323 14:04:13.121577 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-8891 get pods update-demo-nautilus-2svnh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0323 14:04:13.159982 23 builder.go:146] stderr: ""
  I0323 14:04:13.160010 23 builder.go:147] stdout: ""
  I0323 14:04:13.160019 23 kubectl.go:2509] update-demo-nautilus-2svnh is created but not running
  E0323 14:04:13.769829      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:14.769975      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:15.770130      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:16.770268      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:17.770412      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:04:18.160744 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-8891 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0323 14:04:18.202063 23 builder.go:146] stderr: ""
  I0323 14:04:18.202096 23 builder.go:147] stdout: "update-demo-nautilus-2svnh update-demo-nautilus-sq76z "
  I0323 14:04:18.202139 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-8891 get pods update-demo-nautilus-2svnh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0323 14:04:18.240960 23 builder.go:146] stderr: ""
  I0323 14:04:18.240992 23 builder.go:147] stdout: "true"
  I0323 14:04:18.241031 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-8891 get pods update-demo-nautilus-2svnh -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0323 14:04:18.279390 23 builder.go:146] stderr: ""
  I0323 14:04:18.279421 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0323 14:04:18.279432 23 kubectl.go:2400] validating pod update-demo-nautilus-2svnh
  I0323 14:04:18.281555 23 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0323 14:04:18.281599 23 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0323 14:04:18.281610 23 kubectl.go:2527] update-demo-nautilus-2svnh is verified up and running
  I0323 14:04:18.281642 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-8891 get pods update-demo-nautilus-sq76z -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0323 14:04:18.322318 23 builder.go:146] stderr: ""
  I0323 14:04:18.322346 23 builder.go:147] stdout: "true"
  I0323 14:04:18.322382 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-8891 get pods update-demo-nautilus-sq76z -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0323 14:04:18.360788 23 builder.go:146] stderr: ""
  I0323 14:04:18.360819 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0323 14:04:18.360877 23 kubectl.go:2400] validating pod update-demo-nautilus-sq76z
  I0323 14:04:18.367261 23 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0323 14:04:18.367303 23 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0323 14:04:18.367314 23 kubectl.go:2527] update-demo-nautilus-sq76z is verified up and running
  STEP: using delete to clean up resources @ 03/23/25 14:04:18.367
  I0323 14:04:18.367376 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-8891 delete --grace-period=0 --force -f -'
  I0323 14:04:18.418308 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0323 14:04:18.418342 23 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0323 14:04:18.418387 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-8891 get rc,svc -l name=update-demo --no-headers'
  I0323 14:04:18.466252 23 builder.go:146] stderr: "No resources found in kubectl-8891 namespace.\n"
  I0323 14:04:18.466292 23 builder.go:147] stdout: ""
  I0323 14:04:18.466332 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1827677448 --namespace=kubectl-8891 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0323 14:04:18.514612 23 builder.go:146] stderr: ""
  I0323 14:04:18.514649 23 builder.go:147] stdout: ""
  I0323 14:04:18.514823 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8891" for this suite. @ 03/23/25 14:04:18.517
• [5.528 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:307
  STEP: Creating a kubernetes client @ 03/23/25 14:04:18.52
  I0323 14:04:18.520752 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename dns @ 03/23/25 14:04:18.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 14:04:18.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 14:04:18.528
  STEP: Creating a test headless service @ 03/23/25 14:04:18.529
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-1369.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-1369.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-1369.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-1369.svc.cluster.local;sleep 1; done
   @ 03/23/25 14:04:18.531
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-1369.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-1369.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-1369.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-1369.svc.cluster.local;sleep 1; done
   @ 03/23/25 14:04:18.531
  STEP: creating a pod to probe DNS @ 03/23/25 14:04:18.531
  STEP: submitting the pod to kubernetes @ 03/23/25 14:04:18.531
  E0323 14:04:18.771385      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:19.771440      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 03/23/25 14:04:20.543
  STEP: looking for the results for each expected name from probers @ 03/23/25 14:04:20.545
  I0323 14:04:20.556321 23 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:20.566353 23 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:20.576348 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:20.586339 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:20.596334 23 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:20.597717 23 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:20.598950 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:20.609010 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:20.609032 23 dns_common.go:506] Lookups using dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local agnhost_udp@dns-test-service-2.dns-1369.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-1369.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local jessie_udp@dns-test-service-2.dns-1369.svc.cluster.local jessie_tcp@dns-test-service-2.dns-1369.svc.cluster.local]

  I0323 14:04:20.629714 23 dns_common.go:514] Pod client logs for webserver: 
  I0323 14:04:20.639713 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0323 14:04:20.647609 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0323 14:04:20.771877      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:21.772828      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:22.772930      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:23.772980      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:24.773285      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:04:25.548114 23 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:25.558051 23 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:25.559375 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:25.569362 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:25.579379 23 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:25.589369 23 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:25.599376 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:25.609373 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:25.609388 23 dns_common.go:506] Lookups using dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local agnhost_udp@dns-test-service-2.dns-1369.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-1369.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local jessie_udp@dns-test-service-2.dns-1369.svc.cluster.local jessie_tcp@dns-test-service-2.dns-1369.svc.cluster.local]

  I0323 14:04:25.611913 23 dns_common.go:514] Pod client logs for webserver: 
  I0323 14:04:25.621318 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0323 14:04:25.631326 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0323 14:04:25.773614      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:26.773762      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:27.774144      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:28.774257      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:29.774397      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:04:30.548299 23 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:30.549667 23 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:30.559663 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:30.569635 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:30.579636 23 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:30.589643 23 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:30.599685 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:30.609650 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:30.609665 23 dns_common.go:506] Lookups using dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local agnhost_udp@dns-test-service-2.dns-1369.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-1369.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local jessie_udp@dns-test-service-2.dns-1369.svc.cluster.local jessie_tcp@dns-test-service-2.dns-1369.svc.cluster.local]

  I0323 14:04:30.619655 23 dns_common.go:514] Pod client logs for webserver: 
  I0323 14:04:30.629648 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0323 14:04:30.639668 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0323 14:04:30.774952      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:31.775083      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:32.775179      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:33.776085      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:34.776160      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:04:35.557791 23 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:35.559367 23 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:35.567803 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:35.570456 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:35.577777 23 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:35.579155 23 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:35.589190 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:35.599182 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:35.599205 23 dns_common.go:506] Lookups using dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local agnhost_udp@dns-test-service-2.dns-1369.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-1369.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local jessie_udp@dns-test-service-2.dns-1369.svc.cluster.local jessie_tcp@dns-test-service-2.dns-1369.svc.cluster.local]

  I0323 14:04:35.601786 23 dns_common.go:514] Pod client logs for webserver: 
  I0323 14:04:35.611215 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0323 14:04:35.621273 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0323 14:04:35.776539      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:36.776816      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:37.776962      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:38.777033      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:39.777172      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:04:40.548127 23 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:40.557952 23 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:40.559346 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:40.567587 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:40.577588 23 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:40.587598 23 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:40.597590 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:40.607595 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:40.607613 23 dns_common.go:506] Lookups using dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local agnhost_udp@dns-test-service-2.dns-1369.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-1369.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local jessie_udp@dns-test-service-2.dns-1369.svc.cluster.local jessie_tcp@dns-test-service-2.dns-1369.svc.cluster.local]

  I0323 14:04:40.610112 23 dns_common.go:514] Pod client logs for webserver: 
  I0323 14:04:40.619455 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0323 14:04:40.629492 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0323 14:04:40.777786      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:41.777938      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:42.778097      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:43.778878      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:44.779020      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:04:45.547927 23 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:45.557908 23 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:45.567885 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:45.577882 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:45.587867 23 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:45.597877 23 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:45.599210 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:45.600352 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-1369.svc.cluster.local from pod dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf: the server could not find the requested resource (get pods dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf)
  I0323 14:04:45.600365 23 dns_common.go:506] Lookups using dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local agnhost_udp@dns-test-service-2.dns-1369.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-1369.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-1369.svc.cluster.local jessie_udp@dns-test-service-2.dns-1369.svc.cluster.local jessie_tcp@dns-test-service-2.dns-1369.svc.cluster.local]

  I0323 14:04:45.609257 23 dns_common.go:514] Pod client logs for webserver: 
  I0323 14:04:45.611938 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0323 14:04:45.621179 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0323 14:04:45.779478      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:46.779737      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:47.779834      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:48.780831      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:49.781452      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:04:50.600688 23 dns_common.go:546] DNS probes using dns-1369/dns-test-3c53f876-553a-4a81-9ab7-13c214a442bf succeeded

  STEP: deleting the pod @ 03/23/25 14:04:50.6
  STEP: deleting the test headless service @ 03/23/25 14:04:50.605
  I0323 14:04:50.612538 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1369" for this suite. @ 03/23/25 14:04:50.614
• [32.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 03/23/25 14:04:50.618
  I0323 14:04:50.618486 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename kubelet-test @ 03/23/25 14:04:50.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 14:04:50.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 14:04:50.626
  I0323 14:04:50.638994 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-870" for this suite. @ 03/23/25 14:04:50.715
• [0.100 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 03/23/25 14:04:50.718
  I0323 14:04:50.718175 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename projected @ 03/23/25 14:04:50.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 14:04:50.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 14:04:50.724
  STEP: Creating configMap with name projected-configmap-test-volume-map-e81d4ecd-0cf3-4201-b903-4d63be2652f6 @ 03/23/25 14:04:50.726
  STEP: Creating a pod to test consume configMaps @ 03/23/25 14:04:50.728
  E0323 14:04:50.781732      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:51.781875      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:52.782695      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:53.782775      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 14:04:54.738
  I0323 14:04:54.739824 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod pod-projected-configmaps-7ea0f1a9-21d8-48f3-bc28-9c39843c76e5 container agnhost-container: <nil>
  STEP: delete the pod @ 03/23/25 14:04:54.742
  I0323 14:04:54.748912 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1910" for this suite. @ 03/23/25 14:04:54.75
• [4.034 seconds]
------------------------------
SS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245
  STEP: Creating a kubernetes client @ 03/23/25 14:04:54.752
  I0323 14:04:54.752444 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename downward-api @ 03/23/25 14:04:54.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 14:04:54.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 14:04:54.76
  STEP: Creating a pod to test downward api env vars @ 03/23/25 14:04:54.761
  E0323 14:04:54.783166      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:55.783315      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:56.783425      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:04:57.783584      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/23/25 14:04:58.771
  I0323 14:04:58.772915 23 output.go:207] Trying to get logs from node k8s-10-255-0-207 pod downward-api-2e0636ce-2273-461e-98b5-c7fcb4feaa80 container dapi-container: <nil>
  STEP: delete the pod @ 03/23/25 14:04:58.775
  I0323 14:04:58.782923 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0323 14:04:58.783917      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "downward-api-5217" for this suite. @ 03/23/25 14:04:58.784
• [4.034 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:124
  STEP: Creating a kubernetes client @ 03/23/25 14:04:58.786
  I0323 14:04:58.786691 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1827677448
  STEP: Building a namespace api object, basename sched-preemption @ 03/23/25 14:04:58.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/23/25 14:04:58.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/23/25 14:04:58.794
  I0323 14:04:58.803518 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0323 14:04:59.784340      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:00.784818      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:01.785174      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:02.785258      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:03.785641      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:04.785800      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:05.786420      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:06.786556      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:07.787312      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:08.787428      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:09.787775      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:10.788816      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:11.789448      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:12.789519      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:13.789777      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:14.789925      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:15.790592      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:16.790738      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:17.791561      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:18.791698      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:19.791769      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:20.792818      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:21.793219      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:22.793350      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:23.793643      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:24.793783      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:25.794385      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:26.794520      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:27.794939      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:28.795025      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:29.795100      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:30.795238      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:31.795771      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:32.796817      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:33.797051      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:34.797197      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:35.797781      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:36.797921      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:37.798714      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:38.799404      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:39.799767      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:40.800833      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:41.801536      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:42.801786      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:43.802085      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:44.802146      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:45.802706      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:46.802839      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:47.803918      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:48.803912      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:49.804829      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:50.804838      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:51.805241      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:52.805802      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:53.806225      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:54.806821      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:55.807266      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:56.808179      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:05:57.808819      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:05:58.805941 23 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 03/23/25 14:05:58.807
  STEP: Adding a custom resource @ 03/23/25 14:05:58.807
  E0323 14:05:58.809464      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0323 14:05:58.816498 23 preemption.go:168] Created pod: pod0-0-sched-preemption-low-priority
  I0323 14:05:58.821034 23 preemption.go:168] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 03/23/25 14:05:58.821
  I0323 14:05:58.834058 23 preemption.go:168] Created pod: pod1-0-sched-preemption-medium-priority
  I0323 14:05:58.838413 23 preemption.go:168] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 03/23/25 14:05:58.838
  I0323 14:05:58.849330 23 preemption.go:168] Created pod: pod2-0-sched-preemption-medium-priority
  I0323 14:05:58.853614 23 preemption.go:168] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 03/23/25 14:05:58.853
  E0323 14:05:59.810257      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:06:00.810404      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 03/23/25 14:06:00.863
  E0323 14:06:01.811205      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:06:02.811361      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:06:03.812415      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0323 14:06:04.812838      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 03/23/25 14:06:04.884
  STEP: Removing a custom resource @ 03/23/25 14:06:04.891
  STEP: Removing a custom resource @ 03/23/25 14:06:04.896
  I0323 14:06:04.902596 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1043" for this suite. @ 03/23/25 14:06:04.904
• [66.120 seconds]
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0323 14:06:04.906632 23 suites.go:34] Running AfterSuite actions on node 1
  I0323 14:06:04.906646 23 util.go:612] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
[ReportAfterSuite] PASSED [0.039 seconds]
------------------------------

Ran 411 of 6624 Specs in 6296.593 seconds
SUCCESS! -- 411 Passed | 0 Failed | 0 Pending | 6213 Skipped
PASS

Ginkgo ran 1 suite in 1h44m57.213592897s
Test Suite Passed
