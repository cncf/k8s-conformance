  I0325 00:21:34.504014      25 e2e.go:109] Starting e2e run "371d9ffc-9dec-426c-9f42-f3b8ad069dd6" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1742862093 - will randomize all specs

Will run 411 of 6622 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0325 00:21:34.659606 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  I0325 00:21:34.661231 25 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0325 00:21:34.694254 25 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0325 00:21:34.698742 25 e2e.go:153] 5 / 5 pods ready in namespace 'kube-system' in daemonset 'cilium' (0 seconds elapsed)
  I0325 00:21:34.698814 25 e2e.go:153] 5 / 5 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  I0325 00:21:34.698830 25 e2e.go:245] e2e test version: v1.32.2
  I0325 00:21:34.699662 25 e2e.go:254] kube-apiserver version: v1.32.2
  I0325 00:21:34.699792 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  I0325 00:21:34.703305 25 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.044 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 03/25/25 00:21:34.824
  I0325 00:21:34.824381 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename downward-api @ 03/25/25 00:21:34.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:21:34.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:21:34.852
  STEP: Creating a pod to test downward API volume plugin @ 03/25/25 00:21:34.855
  STEP: Saw pod success @ 03/25/25 00:21:38.877
  I0325 00:21:38.881172 25 output.go:207] Trying to get logs from node master-2 pod downwardapi-volume-ce939f6a-1fb0-4bcc-9691-9cd8c785959e container client-container: <nil>
  STEP: delete the pod @ 03/25/25 00:21:38.894
  I0325 00:21:38.919537 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1540" for this suite. @ 03/25/25 00:21:38.923
• [4.106 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:908
  STEP: Creating a kubernetes client @ 03/25/25 00:21:38.931
  I0325 00:21:38.931094 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename statefulset @ 03/25/25 00:21:38.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:21:38.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:21:38.959
  STEP: Creating service test in namespace statefulset-444 @ 03/25/25 00:21:38.961
  STEP: Creating statefulset ss in namespace statefulset-444 @ 03/25/25 00:21:38.969
  I0325 00:21:38.982468 25 wait.go:40] Found 0 stateful pods, waiting for 1
  I0325 00:21:48.987786 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 03/25/25 00:21:48.994
  STEP: updating a scale subresource @ 03/25/25 00:21:48.997
  STEP: verifying the statefulset Spec.Replicas was modified @ 03/25/25 00:21:49.004
  STEP: Patch a scale subresource @ 03/25/25 00:21:49.008
  STEP: verifying the statefulset Spec.Replicas was modified @ 03/25/25 00:21:49.016
  I0325 00:21:49.031456 25 statefulset.go:138] Deleting all statefulset in ns statefulset-444
  I0325 00:21:49.043109 25 rest.go:152] Scaling statefulset ss to 0
  I0325 00:21:59.064038 25 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0325 00:21:59.067626 25 rest.go:90] Deleting statefulset ss
  I0325 00:21:59.084166 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-444" for this suite. @ 03/25/25 00:21:59.089
• [20.172 seconds]
------------------------------
SS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 03/25/25 00:21:59.103
  I0325 00:21:59.103893 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename events @ 03/25/25 00:21:59.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:21:59.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:21:59.132
  STEP: creating a test event @ 03/25/25 00:21:59.143
  STEP: listing all events in all namespaces @ 03/25/25 00:21:59.148
  STEP: patching the test event @ 03/25/25 00:21:59.156
  STEP: fetching the test event @ 03/25/25 00:21:59.163
  STEP: updating the test event @ 03/25/25 00:21:59.166
  STEP: getting the test event @ 03/25/25 00:21:59.175
  STEP: deleting the test event @ 03/25/25 00:21:59.178
  STEP: listing all events in all namespaces @ 03/25/25 00:21:59.186
  I0325 00:21:59.192843 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8979" for this suite. @ 03/25/25 00:21:59.196
• [0.100 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 03/25/25 00:21:59.204
  I0325 00:21:59.204288 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename deployment @ 03/25/25 00:21:59.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:21:59.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:21:59.231
  I0325 00:21:59.233565 25 deployment.go:1196] Creating deployment "webserver-deployment"
  I0325 00:21:59.239099 25 deployment.go:1200] Waiting for observed generation 1
  I0325 00:22:01.247844 25 deployment.go:1205] Waiting for all required pods to come up
  I0325 00:22:01.253472 25 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 03/25/25 00:22:01.253
  I0325 00:22:03.263600 25 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0325 00:22:03.269386 25 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0325 00:22:03.280928 25 deployment.go:314] Updating deployment webserver-deployment
  I0325 00:22:03.281012 25 deployment.go:1224] Waiting for observed generation 2
  I0325 00:22:05.289123 25 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0325 00:22:05.291896 25 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0325 00:22:05.294818 25 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0325 00:22:05.302431 25 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0325 00:22:05.302488 25 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0325 00:22:05.305461 25 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0325 00:22:05.312363 25 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0325 00:22:05.312538 25 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0325 00:22:05.325405 25 deployment.go:314] Updating deployment webserver-deployment
  I0325 00:22:05.325441 25 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0325 00:22:05.330219 25 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0325 00:22:07.336896 25 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0325 00:22:07.350511 25 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5781cd9a-ac44-4825-9f20-2073ef6dfed2",
      ResourceVersion: (string) (len=7) "2788661",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458919,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 14,
      AvailableReplicas: (int32) 14,
      UnavailableReplicas: (int32) 19,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0325 00:22:07.360690 25 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4034a765-84dd-4016-8121-e2fed94c3eb3",
      ResourceVersion: (string) (len=7) "2788489",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "5781cd9a-ac44-4825-9f20-2073ef6dfed2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 37 38 31 63 64  39 61 2d 61 63 34 34 2d  |\"5781cd9a-ac44-|
              00000120  34 38 32 35 2d 39 66 32  30 2d 32 30 37 33 65 66  |4825-9f20-2073ef|
              00000130  36 64 66 65 64 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |6dfed2\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0325 00:22:07.361398 25 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0325 00:22:07.361706 25 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dea0205b-4864-4286-8647-bb43bb7168cd",
      ResourceVersion: (string) (len=7) "2788659",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458919,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "5781cd9a-ac44-4825-9f20-2073ef6dfed2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 37 38 31 63 64  39 61 2d 61 63 34 34 2d  |\"5781cd9a-ac44-|
              00000120  34 38 32 35 2d 39 66 32  30 2d 32 30 37 33 65 66  |4825-9f20-2073ef|
              00000130  36 64 66 65 64 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |6dfed2\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 14,
      AvailableReplicas: (int32) 14,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0325 00:22:07.369688 25 deployment.go:68] Pod "webserver-deployment-685b768f58-2d7bw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-2d7bw",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "81e6c87c-0502-4e7a-ab56-209f5287d501",
      ResourceVersion: (string) (len=7) "2788266",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458919,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "dea0205b-4864-4286-8647-bb43bb7168cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 32 30 35 62 2d 34  |d\":\"dea0205b-4|
              00000090  38 36 34 2d 34 32 38 36  2d 38 36 34 37 2d 62 62  |864-4286-8647-bb|
              000000a0  34 33 62 62 37 31 36 38  63 64 5c 22 7d 22 3a 7b  |43bb7168cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  31 33 33 5c 22 7d 22 3a  |.233.64.133\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gsks8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gsks8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.20.10.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.20.10.91"
        }
      },
      PodIP: (string) (len=13) "10.233.64.133",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.133"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458919,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878458920,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://98a2b95efc081474857d428401fdd0f4ee8cebe95b9fecd940f4ded558ad2afa",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gsks8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:22:07.370700 25 deployment.go:68] Pod "webserver-deployment-685b768f58-4957w" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-4957w",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "25a9178a-9eeb-4f28-ab41-b6711877be55",
      ResourceVersion: (string) (len=7) "2788601",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "dea0205b-4864-4286-8647-bb43bb7168cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 32 30 35 62 2d 34  |d\":\"dea0205b-4|
              00000090  38 36 34 2d 34 32 38 36  2d 38 36 34 37 2d 62 62  |864-4286-8647-bb|
              000000a0  34 33 62 62 37 31 36 38  63 64 5c 22 7d 22 3a 7b  |43bb7168cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  32 30 34 5c 22 7d 22 3a  |.233.65.204\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sn9zp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sn9zp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.10.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.10.146"
        }
      },
      PodIP: (string) (len=13) "10.233.65.204",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.204"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878458926,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c972a3711ee772672aa188d4bade9d4e6915fd0890d06892c6f1359d1b93b610",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-sn9zp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:22:07.372201 25 deployment.go:68] Pod "webserver-deployment-685b768f58-5k2c6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-5k2c6",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dc3d0413-6ebc-4fc5-a161-d0629bcdc4a1",
      ResourceVersion: (string) (len=7) "2788644",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "dea0205b-4864-4286-8647-bb43bb7168cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 32 30 35 62 2d 34  |d\":\"dea0205b-4|
              00000090  38 36 34 2d 34 32 38 36  2d 38 36 34 37 2d 62 62  |864-4286-8647-bb|
              000000a0  34 33 62 62 37 31 36 38  63 64 5c 22 7d 22 3a 7b  |43bb7168cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 37 2e  31 39 36 5c 22 7d 22 3a  |.233.67.196\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qdmv6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qdmv6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.10.227",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.10.227"
        }
      },
      PodIP: (string) (len=13) "10.233.67.196",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.67.196"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878458926,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b56e63d9d8ea0b3ae251a5b9530c7da20692a584b25c4ed07fc4ccfb0558a7ae",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qdmv6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:22:07.376297 25 deployment.go:68] Pod "webserver-deployment-685b768f58-97nhd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-97nhd",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4dc339f0-45fd-4065-a488-919af8036abf",
      ResourceVersion: (string) (len=7) "2788643",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "dea0205b-4864-4286-8647-bb43bb7168cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 32 30 35 62 2d 34  |d\":\"dea0205b-4|
              00000090  38 36 34 2d 34 32 38 36  2d 38 36 34 37 2d 62 62  |864-4286-8647-bb|
              000000a0  34 33 62 62 37 31 36 38  63 64 5c 22 7d 22 3a 7b  |43bb7168cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  32 34 35 5c 22 7d 22 3a  |.233.64.245\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7bsq6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7bsq6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.20.10.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.20.10.91"
        }
      },
      PodIP: (string) (len=13) "10.233.64.245",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.245"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878458926,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f9857b08add664120001a2e8fdeeeb8ce632caca5d57791cc9e74134a0fc7745",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7bsq6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:22:07.378356 25 deployment.go:68] Pod "webserver-deployment-685b768f58-9m4dv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-9m4dv",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fa48fbf1-8804-4f6d-84a2-af2cdc2a20ce",
      ResourceVersion: (string) (len=7) "2788279",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458919,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "dea0205b-4864-4286-8647-bb43bb7168cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 32 30 35 62 2d 34  |d\":\"dea0205b-4|
              00000090  38 36 34 2d 34 32 38 36  2d 38 36 34 37 2d 62 62  |864-4286-8647-bb|
              000000a0  34 33 62 62 37 31 36 38  63 64 5c 22 7d 22 3a 7b  |43bb7168cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  35 33 5c 22 7d 22 3a 7b  |.233.66.53\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7zfth",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7zfth",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.10.136",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.10.136"
        }
      },
      PodIP: (string) (len=12) "10.233.66.53",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.53"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458919,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878458920,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://eea2c1838bb1893cc44c1a060c86cba4973c3d51e45971408f4ce778eed571a2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7zfth",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:22:07.380270 25 deployment.go:68] Pod "webserver-deployment-685b768f58-b9c6w" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-b9c6w",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "51ee02b8-4e64-4a54-8dd3-040b2b063224",
      ResourceVersion: (string) (len=7) "2788246",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458919,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "dea0205b-4864-4286-8647-bb43bb7168cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 32 30 35 62 2d 34  |d\":\"dea0205b-4|
              00000090  38 36 34 2d 34 32 38 36  2d 38 36 34 37 2d 62 62  |864-4286-8647-bb|
              000000a0  34 33 62 62 37 31 36 38  63 64 5c 22 7d 22 3a 7b  |43bb7168cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458920,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 38 2e  31 30 30 5c 22 7d 22 3a  |.233.68.100\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q7gj4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q7gj4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458920,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458920,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458920,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.20.10.81",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.20.10.81"
        }
      },
      PodIP: (string) (len=13) "10.233.68.100",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.68.100"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458919,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878458920,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7f553ab116fe6f99b1b5e00754aa4b703fc3fcb765b58503c846fe58dd2fb640",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-q7gj4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:22:07.381987 25 deployment.go:68] Pod "webserver-deployment-685b768f58-hn4gq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-hn4gq",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "59cf4c18-d864-40ae-abf6-6c1e4218069b",
      ResourceVersion: (string) (len=7) "2788515",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "dea0205b-4864-4286-8647-bb43bb7168cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 32 30 35 62 2d 34  |d\":\"dea0205b-4|
              00000090  38 36 34 2d 34 32 38 36  2d 38 36 34 37 2d 62 62  |864-4286-8647-bb|
              000000a0  34 33 62 62 37 31 36 38  63 64 5c 22 7d 22 3a 7b  |43bb7168cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qb2xs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qb2xs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.10.136",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.10.136"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qb2xs",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:22:07.384292 25 deployment.go:68] Pod "webserver-deployment-685b768f58-jp6kd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-jp6kd",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1d4b791d-0f2c-4616-8036-de4dada7d302",
      ResourceVersion: (string) (len=7) "2788650",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "dea0205b-4864-4286-8647-bb43bb7168cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 32 30 35 62 2d 34  |d\":\"dea0205b-4|
              00000090  38 36 34 2d 34 32 38 36  2d 38 36 34 37 2d 62 62  |864-4286-8647-bb|
              000000a0  34 33 62 62 37 31 36 38  63 64 5c 22 7d 22 3a 7b  |43bb7168cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 37 2e  35 36 5c 22 7d 22 3a 7b  |.233.67.56\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kl6gk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kl6gk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.10.227",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.10.227"
        }
      },
      PodIP: (string) (len=12) "10.233.67.56",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.67.56"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878458926,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://76de553470744d47d08a2b96e7dd20cb769f3f888426c51121c68ee2c6d35606",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kl6gk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:22:07.385503 25 deployment.go:68] Pod "webserver-deployment-685b768f58-k4bg5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-k4bg5",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "67e9a46d-4a9e-44fd-bfad-a995fbb8b6be",
      ResourceVersion: (string) (len=7) "2788485",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "dea0205b-4864-4286-8647-bb43bb7168cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 32 30 35 62 2d 34  |d\":\"dea0205b-4|
              00000090  38 36 34 2d 34 32 38 36  2d 38 36 34 37 2d 62 62  |864-4286-8647-bb|
              000000a0  34 33 62 62 37 31 36 38  63 64 5c 22 7d 22 3a 7b  |43bb7168cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zx8ls",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zx8ls",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.10.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.10.146"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zx8ls",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:22:07.386817 25 deployment.go:68] Pod "webserver-deployment-685b768f58-kzj8g" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-kzj8g",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9316dd5b-2907-4931-8a24-c58f9ced3c97",
      ResourceVersion: (string) (len=7) "2788612",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "dea0205b-4864-4286-8647-bb43bb7168cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 32 30 35 62 2d 34  |d\":\"dea0205b-4|
              00000090  38 36 34 2d 34 32 38 36  2d 38 36 34 37 2d 62 62  |864-4286-8647-bb|
              000000a0  34 33 62 62 37 31 36 38  63 64 5c 22 7d 22 3a 7b  |43bb7168cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 38 2e  32 33 36 5c 22 7d 22 3a  |.233.68.236\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vnkzl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vnkzl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.20.10.81",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.20.10.81"
        }
      },
      PodIP: (string) (len=13) "10.233.68.236",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.68.236"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878458926,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://061ab6375f86567b755153a941156a13114665b9fcb9a819dbf9a754e336c271",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vnkzl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:22:07.391326 25 deployment.go:68] Pod "webserver-deployment-685b768f58-lmnkm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-lmnkm",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "813a793c-7970-4715-bef9-54942efffb26",
      ResourceVersion: (string) (len=7) "2788459",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "dea0205b-4864-4286-8647-bb43bb7168cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 32 30 35 62 2d 34  |d\":\"dea0205b-4|
              00000090  38 36 34 2d 34 32 38 36  2d 38 36 34 37 2d 62 62  |864-4286-8647-bb|
              000000a0  34 33 62 62 37 31 36 38  63 64 5c 22 7d 22 3a 7b  |43bb7168cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fnlxm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fnlxm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.10.136",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.10.136"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fnlxm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:22:07.392735 25 deployment.go:68] Pod "webserver-deployment-685b768f58-n5ncj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-n5ncj",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9eae25e9-3325-49bb-968c-8415be7fff15",
      ResourceVersion: (string) (len=7) "2788487",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "dea0205b-4864-4286-8647-bb43bb7168cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 32 30 35 62 2d 34  |d\":\"dea0205b-4|
              00000090  38 36 34 2d 34 32 38 36  2d 38 36 34 37 2d 62 62  |864-4286-8647-bb|
              000000a0  34 33 62 62 37 31 36 38  63 64 5c 22 7d 22 3a 7b  |43bb7168cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p4dvv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p4dvv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.10.136",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.10.136"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-p4dvv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:22:07.395474 25 deployment.go:68] Pod "webserver-deployment-685b768f58-ncw27" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-ncw27",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f0b07e5a-c167-4154-a9c6-7389e4c66b79",
      ResourceVersion: (string) (len=7) "2788498",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "dea0205b-4864-4286-8647-bb43bb7168cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 32 30 35 62 2d 34  |d\":\"dea0205b-4|
              00000090  38 36 34 2d 34 32 38 36  2d 38 36 34 37 2d 62 62  |864-4286-8647-bb|
              000000a0  34 33 62 62 37 31 36 38  63 64 5c 22 7d 22 3a 7b  |43bb7168cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8stmh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8stmh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.20.10.81",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.20.10.81"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8stmh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:22:07.397722 25 deployment.go:68] Pod "webserver-deployment-685b768f58-nndff" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-nndff",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0f715c2e-1041-4bc4-816e-059a4dd3090b",
      ResourceVersion: (string) (len=7) "2788268",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458919,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "dea0205b-4864-4286-8647-bb43bb7168cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 32 30 35 62 2d 34  |d\":\"dea0205b-4|
              00000090  38 36 34 2d 34 32 38 36  2d 38 36 34 37 2d 62 62  |864-4286-8647-bb|
              000000a0  34 33 62 62 37 31 36 38  63 64 5c 22 7d 22 3a 7b  |43bb7168cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 37 2e  38 30 5c 22 7d 22 3a 7b  |.233.67.80\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rv2xk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rv2xk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.10.227",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.10.227"
        }
      },
      PodIP: (string) (len=12) "10.233.67.80",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.67.80"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458919,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878458920,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ba160a4936435de3605d88af53047720ee97e3b7e35fb9fa77cc43c5331d16fd",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rv2xk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:22:07.398898 25 deployment.go:68] Pod "webserver-deployment-685b768f58-ptg82" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-ptg82",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "26714474-4547-4418-9b1e-2b4d0404172e",
      ResourceVersion: (string) (len=7) "2788501",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "dea0205b-4864-4286-8647-bb43bb7168cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 32 30 35 62 2d 34  |d\":\"dea0205b-4|
              00000090  38 36 34 2d 34 32 38 36  2d 38 36 34 37 2d 62 62  |864-4286-8647-bb|
              000000a0  34 33 62 62 37 31 36 38  63 64 5c 22 7d 22 3a 7b  |43bb7168cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fqcfs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fqcfs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.10.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.10.146"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fqcfs",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:22:07.401265 25 deployment.go:68] Pod "webserver-deployment-685b768f58-pxxmk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-pxxmk",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a408a412-1ed8-4bd4-80d9-a233b1c491e2",
      ResourceVersion: (string) (len=7) "2788292",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458919,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "dea0205b-4864-4286-8647-bb43bb7168cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 32 30 35 62 2d 34  |d\":\"dea0205b-4|
              00000090  38 36 34 2d 34 32 38 36  2d 38 36 34 37 2d 62 62  |864-4286-8647-bb|
              000000a0  34 33 62 62 37 31 36 38  63 64 5c 22 7d 22 3a 7b  |43bb7168cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 38 2e  32 32 33 5c 22 7d 22 3a  |.233.68.223\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r6rf6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r6rf6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.20.10.81",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.20.10.81"
        }
      },
      PodIP: (string) (len=13) "10.233.68.223",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.68.223"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458919,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878458920,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a1783f7e7fe318b63f8470c43b418bc60638f828e8fbddd8b6fa641074cee092",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-r6rf6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:22:07.403254 25 deployment.go:68] Pod "webserver-deployment-685b768f58-rnxcb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-rnxcb",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bb65cc0b-0001-4d12-9961-2b5810db5665",
      ResourceVersion: (string) (len=7) "2788274",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458919,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "dea0205b-4864-4286-8647-bb43bb7168cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 32 30 35 62 2d 34  |d\":\"dea0205b-4|
              00000090  38 36 34 2d 34 32 38 36  2d 38 36 34 37 2d 62 62  |864-4286-8647-bb|
              000000a0  34 33 62 62 37 31 36 38  63 64 5c 22 7d 22 3a 7b  |43bb7168cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 37 2e  31 30 38 5c 22 7d 22 3a  |.233.67.108\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b54j9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b54j9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.10.227",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.10.227"
        }
      },
      PodIP: (string) (len=13) "10.233.67.108",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.67.108"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458919,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878458920,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://570bd6dbde1a1b59188cfa212d908208ee800d982516d6e9b9f532562f8d6b58",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-b54j9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:22:07.404976 25 deployment.go:68] Pod "webserver-deployment-685b768f58-tqb8z" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-tqb8z",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ecc19d63-7230-43bb-940a-2b3d69aca0ab",
      ResourceVersion: (string) (len=7) "2788641",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "dea0205b-4864-4286-8647-bb43bb7168cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 32 30 35 62 2d 34  |d\":\"dea0205b-4|
              00000090  38 36 34 2d 34 32 38 36  2d 38 36 34 37 2d 62 62  |864-4286-8647-bb|
              000000a0  34 33 62 62 37 31 36 38  63 64 5c 22 7d 22 3a 7b  |43bb7168cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  31 38 31 5c 22 7d 22 3a  |.233.64.181\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8pvtd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8pvtd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.20.10.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.20.10.91"
        }
      },
      PodIP: (string) (len=13) "10.233.64.181",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.181"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878458926,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://777a506d8d32419f50bf1db789e2b9c0927e9d9d8f45c608a67742a9acad74f2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8pvtd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:22:07.406501 25 deployment.go:68] Pod "webserver-deployment-685b768f58-v6djp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-v6djp",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5a470917-62d2-4cf4-87e7-06917bb4670d",
      ResourceVersion: (string) (len=7) "2788280",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458919,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "dea0205b-4864-4286-8647-bb43bb7168cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 32 30 35 62 2d 34  |d\":\"dea0205b-4|
              00000090  38 36 34 2d 34 32 38 36  2d 38 36 34 37 2d 62 62  |864-4286-8647-bb|
              000000a0  34 33 62 62 37 31 36 38  63 64 5c 22 7d 22 3a 7b  |43bb7168cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  33 34 5c 22 7d 22 3a 7b  |.233.65.34\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7x5xq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7x5xq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.10.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.10.146"
        }
      },
      PodIP: (string) (len=12) "10.233.65.34",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.34"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458919,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878458920,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5c6ab5bffc7a8bac52d3bdaf0c164620697c9a885080d29ff3f8b946d3c375c8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7x5xq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:22:07.407911 25 deployment.go:68] Pod "webserver-deployment-685b768f58-xwdjn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-xwdjn",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "25de878c-59e8-47d0-907c-1158f27ac1cd",
      ResourceVersion: (string) (len=7) "2788269",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458919,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "dea0205b-4864-4286-8647-bb43bb7168cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  61 30 32 30 35 62 2d 34  |d\":\"dea0205b-4|
              00000090  38 36 34 2d 34 32 38 36  2d 38 36 34 37 2d 62 62  |864-4286-8647-bb|
              000000a0  34 33 62 62 37 31 36 38  63 64 5c 22 7d 22 3a 7b  |43bb7168cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  32 34 36 5c 22 7d 22 3a  |.233.64.246\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-crpcx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-crpcx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.20.10.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.20.10.91"
        }
      },
      PodIP: (string) (len=13) "10.233.64.246",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.246"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458919,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878458920,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e7dbb4d9b4142b0df59cf786929e1c61cd3ddcaa9881fac8525381645f3d6ad0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-crpcx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:22:07.411094 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-4w7lf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-4w7lf",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "afd36c52-7838-4411-b17e-8ac5c5c5c6de",
      ResourceVersion: (string) (len=7) "2788609",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4034a765-84dd-4016-8121-e2fed94c3eb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  33 34 61 37 36 35 2d 38  |d\":\"4034a765-8|
              00000090  34 64 64 2d 34 30 31 36  2d 38 31 32 31 2d 65 32  |4dd-4016-8121-e2|
              000000a0  66 65 64 39 34 63 33 65  62 33 5c 22 7d 22 3a 7b  |fed94c3eb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 33  |:{\"ip\":\"10.23|
              00000290  33 2e 36 38 2e 31 30 37  5c 22 7d 22 3a 7b 22 2e  |3.68.107\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8cqj6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8cqj6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.20.10.81",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.20.10.81"
        }
      },
      PodIP: (string) (len=13) "10.233.68.107",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.68.107"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8cqj6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:22:07.412205 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-94fhq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-94fhq",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7e561ff1-5335-439d-94d9-3eae2c9b3b56",
      ResourceVersion: (string) (len=7) "2788595",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4034a765-84dd-4016-8121-e2fed94c3eb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  33 34 61 37 36 35 2d 38  |d\":\"4034a765-8|
              00000090  34 64 64 2d 34 30 31 36  2d 38 31 32 31 2d 65 32  |4dd-4016-8121-e2|
              000000a0  66 65 64 39 34 63 33 65  62 33 5c 22 7d 22 3a 7b  |fed94c3eb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 33  |:{\"ip\":\"10.23|
              00000290  33 2e 36 36 2e 31 33 32  5c 22 7d 22 3a 7b 22 2e  |3.66.132\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9t56k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9t56k",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.10.136",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.10.136"
        }
      },
      PodIP: (string) (len=13) "10.233.66.132",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.132"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9t56k",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:22:07.417995 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-f6swz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-f6swz",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2c8b9097-662e-49e4-8280-ea161fec1afb",
      ResourceVersion: (string) (len=7) "2788560",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4034a765-84dd-4016-8121-e2fed94c3eb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  33 34 61 37 36 35 2d 38  |d\":\"4034a765-8|
              00000090  34 64 64 2d 34 30 31 36  2d 38 31 32 31 2d 65 32  |4dd-4016-8121-e2|
              000000a0  66 65 64 39 34 63 33 65  62 33 5c 22 7d 22 3a 7b  |fed94c3eb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 33  |:{\"ip\":\"10.23|
              00000290  33 2e 36 34 2e 31 39 35  5c 22 7d 22 3a 7b 22 2e  |3.64.195\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6p2s5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6p2s5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.20.10.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.20.10.91"
        }
      },
      PodIP: (string) (len=13) "10.233.64.195",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.195"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6p2s5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:22:07.418944 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-fc2rc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-fc2rc",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "26473c63-0849-4f61-baef-bd9ae2d08eb8",
      ResourceVersion: (string) (len=7) "2788495",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4034a765-84dd-4016-8121-e2fed94c3eb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  33 34 61 37 36 35 2d 38  |d\":\"4034a765-8|
              00000090  34 64 64 2d 34 30 31 36  2d 38 31 32 31 2d 65 32  |4dd-4016-8121-e2|
              000000a0  66 65 64 39 34 63 33 65  62 33 5c 22 7d 22 3a 7b  |fed94c3eb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mz4dp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mz4dp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.10.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.10.146"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mz4dp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:22:07.419869 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-hkcjv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-hkcjv",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c7a9f123-a22c-45b6-a952-9cb4fdccd627",
      ResourceVersion: (string) (len=7) "2788509",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4034a765-84dd-4016-8121-e2fed94c3eb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  33 34 61 37 36 35 2d 38  |d\":\"4034a765-8|
              00000090  34 64 64 2d 34 30 31 36  2d 38 31 32 31 2d 65 32  |4dd-4016-8121-e2|
              000000a0  66 65 64 39 34 63 33 65  62 33 5c 22 7d 22 3a 7b  |fed94c3eb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-884ck",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-884ck",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.10.136",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.10.136"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-884ck",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:22:07.425164 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-hlkms" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-hlkms",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "90966714-6516-4317-9045-e55b03a3e71e",
      ResourceVersion: (string) (len=7) "2788505",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4034a765-84dd-4016-8121-e2fed94c3eb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  33 34 61 37 36 35 2d 38  |d\":\"4034a765-8|
              00000090  34 64 64 2d 34 30 31 36  2d 38 31 32 31 2d 65 32  |4dd-4016-8121-e2|
              000000a0  66 65 64 39 34 63 33 65  62 33 5c 22 7d 22 3a 7b  |fed94c3eb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zb7vw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zb7vw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.10.227",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.10.227"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zb7vw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:22:07.426139 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-jfqvs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-jfqvs",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4e1334d6-2bf9-4a78-a340-5144e966fbb6",
      ResourceVersion: (string) (len=7) "2788499",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4034a765-84dd-4016-8121-e2fed94c3eb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  33 34 61 37 36 35 2d 38  |d\":\"4034a765-8|
              00000090  34 64 64 2d 34 30 31 36  2d 38 31 32 31 2d 65 32  |4dd-4016-8121-e2|
              000000a0  66 65 64 39 34 63 33 65  62 33 5c 22 7d 22 3a 7b  |fed94c3eb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l9ck6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l9ck6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.20.10.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.20.10.91"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-l9ck6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:22:07.429858 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-l4sc2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-l4sc2",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7ad7bfe2-6e4a-4829-b129-9c7055e7f943",
      ResourceVersion: (string) (len=7) "2788484",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4034a765-84dd-4016-8121-e2fed94c3eb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  33 34 61 37 36 35 2d 38  |d\":\"4034a765-8|
              00000090  34 64 64 2d 34 30 31 36  2d 38 31 32 31 2d 65 32  |4dd-4016-8121-e2|
              000000a0  66 65 64 39 34 63 33 65  62 33 5c 22 7d 22 3a 7b  |fed94c3eb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-49db7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-49db7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.10.227",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.10.227"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-49db7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:22:07.436064 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-s2s4b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-s2s4b",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6cbb2d24-8a7c-4df9-a1c2-ce8a4c07b5f9",
      ResourceVersion: (string) (len=7) "2788599",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4034a765-84dd-4016-8121-e2fed94c3eb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  33 34 61 37 36 35 2d 38  |d\":\"4034a765-8|
              00000090  34 64 64 2d 34 30 31 36  2d 38 31 32 31 2d 65 32  |4dd-4016-8121-e2|
              000000a0  66 65 64 39 34 63 33 65  62 33 5c 22 7d 22 3a 7b  |fed94c3eb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 33  |:{\"ip\":\"10.23|
              00000290  33 2e 36 35 2e 31 39 36  5c 22 7d 22 3a 7b 22 2e  |3.65.196\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bwctl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bwctl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.10.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.10.146"
        }
      },
      PodIP: (string) (len=13) "10.233.65.196",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.196"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bwctl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:22:07.437123 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-s42mr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-s42mr",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f57e6c1f-8c46-4bcd-b903-2edf5207bfe4",
      ResourceVersion: (string) (len=7) "2788493",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4034a765-84dd-4016-8121-e2fed94c3eb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  33 34 61 37 36 35 2d 38  |d\":\"4034a765-8|
              00000090  34 64 64 2d 34 30 31 36  2d 38 31 32 31 2d 65 32  |4dd-4016-8121-e2|
              000000a0  66 65 64 39 34 63 33 65  62 33 5c 22 7d 22 3a 7b  |fed94c3eb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n4twn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n4twn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.20.10.81",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.20.10.81"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-n4twn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:22:07.438244 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-sqbn8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-sqbn8",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f3352150-62df-4931-921a-c2f44cbda089",
      ResourceVersion: (string) (len=7) "2788502",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4034a765-84dd-4016-8121-e2fed94c3eb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  33 34 61 37 36 35 2d 38  |d\":\"4034a765-8|
              00000090  34 64 64 2d 34 30 31 36  2d 38 31 32 31 2d 65 32  |4dd-4016-8121-e2|
              000000a0  66 65 64 39 34 63 33 65  62 33 5c 22 7d 22 3a 7b  |fed94c3eb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lskbg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lskbg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.10.136",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.10.136"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lskbg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:22:07.439336 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-zk9fz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-zk9fz",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d1f35ffc-6e0d-4f2e-b2a5-216b64995112",
      ResourceVersion: (string) (len=7) "2788562",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4034a765-84dd-4016-8121-e2fed94c3eb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  33 34 61 37 36 35 2d 38  |d\":\"4034a765-8|
              00000090  34 64 64 2d 34 30 31 36  2d 38 31 32 31 2d 65 32  |4dd-4016-8121-e2|
              000000a0  66 65 64 39 34 63 33 65  62 33 5c 22 7d 22 3a 7b  |fed94c3eb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 33  |:{\"ip\":\"10.23|
              00000290  33 2e 36 37 2e 31 36 33  5c 22 7d 22 3a 7b 22 2e  |3.67.163\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gcwgd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gcwgd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458926,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.10.227",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.10.227"
        }
      },
      PodIP: (string) (len=13) "10.233.67.163",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.67.163"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gcwgd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:22:07.440493 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-zzgvf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-zzgvf",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7216",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7e6526f3-6af5-4a1a-a1bc-62b5104845e5",
      ResourceVersion: (string) (len=7) "2788462",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "4034a765-84dd-4016-8121-e2fed94c3eb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  33 34 61 37 36 35 2d 38  |d\":\"4034a765-8|
              00000090  34 64 64 2d 34 30 31 36  2d 38 31 32 31 2d 65 32  |4dd-4016-8121-e2|
              000000a0  66 65 64 39 34 63 33 65  62 33 5c 22 7d 22 3a 7b  |fed94c3eb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jmqr4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jmqr4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878458925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.10.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.10.146"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878458925,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jmqr4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:22:07.441507 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7216" for this suite. @ 03/25/25 00:22:07.447
• [8.265 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 03/25/25 00:22:07.47
  I0325 00:22:07.470551 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename hostport @ 03/25/25 00:22:07.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:22:07.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:22:07.539
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 03/25/25 00:22:07.548
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.20.10.136 on the node which pod1 resides and expect scheduled @ 03/25/25 00:22:11.58
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.20.10.136 but use UDP protocol on the node which pod2 resides @ 03/25/25 00:22:13.596
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 03/25/25 00:22:27.666
  I0325 00:22:27.667076 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.20.10.136 http://127.0.0.1:54323/hostname] Namespace:hostport-880 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 00:22:27.667126 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 00:22:27.667558 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-880/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.20.10.136+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.20.10.136, port: 54323 @ 03/25/25 00:22:27.807
  I0325 00:22:27.807501 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.20.10.136:54323/hostname] Namespace:hostport-880 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 00:22:27.807522 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 00:22:27.807602 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-880/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.20.10.136%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.20.10.136, port: 54323 UDP @ 03/25/25 00:22:27.874
  I0325 00:22:27.874453 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.20.10.136 54323] Namespace:hostport-880 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 00:22:27.874470 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 00:22:27.874528 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-880/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.20.10.136+54323&container=e2e-host-exec&stderr=true&stdout=true)
  I0325 00:22:32.938750 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-880" for this suite. @ 03/25/25 00:22:32.944
• [25.483 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 03/25/25 00:22:32.954
  I0325 00:22:32.954101 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename var-expansion @ 03/25/25 00:22:32.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:22:32.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:22:32.987
  STEP: Creating a pod to test substitution in container's command @ 03/25/25 00:22:32.991
  STEP: Saw pod success @ 03/25/25 00:22:37.018
  I0325 00:22:37.022830 25 output.go:207] Trying to get logs from node master-2 pod var-expansion-58aba91c-0270-4de5-8305-3c498b7fe091 container dapi-container: <nil>
  STEP: delete the pod @ 03/25/25 00:22:37.03
  I0325 00:22:37.046920 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8360" for this suite. @ 03/25/25 00:22:37.05
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:208
  STEP: Creating a kubernetes client @ 03/25/25 00:22:37.057
  I0325 00:22:37.057965 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename dns @ 03/25/25 00:22:37.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:22:37.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:22:37.084
  STEP: Creating a test headless service @ 03/25/25 00:22:37.087
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5015 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-5015;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5015 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-5015;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5015.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-5015.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5015.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-5015.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5015.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-5015.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5015.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-5015.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5015.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-5015.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5015.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-5015.svc;check="$$(dig +notcp +noall +answer +search 197.7.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.7.197_udp@PTR;check="$$(dig +tcp +noall +answer +search 197.7.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.7.197_tcp@PTR;sleep 1; done
   @ 03/25/25 00:22:37.111
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5015 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5015;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5015 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5015;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5015.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5015.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5015.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5015.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5015.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-5015.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5015.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-5015.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5015.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-5015.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5015.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-5015.svc;check="$$(dig +notcp +noall +answer +search 197.7.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.7.197_udp@PTR;check="$$(dig +tcp +noall +answer +search 197.7.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.7.197_tcp@PTR;sleep 1; done
   @ 03/25/25 00:22:37.111
  STEP: creating a pod to probe DNS @ 03/25/25 00:22:37.111
  STEP: submitting the pod to kubernetes @ 03/25/25 00:22:37.111
  STEP: retrieving the pod @ 03/25/25 00:22:43.149
  STEP: looking for the results for each expected name from probers @ 03/25/25 00:22:43.152
  I0325 00:22:43.157616 25 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-5015/dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26: the server could not find the requested resource (get pods dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26)
  I0325 00:22:43.161307 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-5015/dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26: the server could not find the requested resource (get pods dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26)
  I0325 00:22:43.164529 25 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-5015 from pod dns-5015/dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26: the server could not find the requested resource (get pods dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26)
  I0325 00:22:43.167657 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-5015 from pod dns-5015/dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26: the server could not find the requested resource (get pods dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26)
  I0325 00:22:43.170758 25 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-5015.svc from pod dns-5015/dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26: the server could not find the requested resource (get pods dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26)
  I0325 00:22:43.173601 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-5015.svc from pod dns-5015/dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26: the server could not find the requested resource (get pods dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26)
  I0325 00:22:43.182876 25 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-5015.svc from pod dns-5015/dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26: the server could not find the requested resource (get pods dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26)
  I0325 00:22:43.189682 25 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-5015.svc from pod dns-5015/dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26: the server could not find the requested resource (get pods dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26)
  I0325 00:22:43.205115 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-5015/dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26: the server could not find the requested resource (get pods dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26)
  I0325 00:22:43.208069 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-5015/dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26: the server could not find the requested resource (get pods dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26)
  I0325 00:22:43.210655 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5015 from pod dns-5015/dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26: the server could not find the requested resource (get pods dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26)
  I0325 00:22:43.213676 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5015 from pod dns-5015/dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26: the server could not find the requested resource (get pods dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26)
  I0325 00:22:43.221090 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5015.svc from pod dns-5015/dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26: the server could not find the requested resource (get pods dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26)
  I0325 00:22:43.224454 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5015.svc from pod dns-5015/dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26: the server could not find the requested resource (get pods dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26)
  I0325 00:22:43.227558 25 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5015.svc from pod dns-5015/dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26: the server could not find the requested resource (get pods dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26)
  I0325 00:22:43.231456 25 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5015.svc from pod dns-5015/dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26: the server could not find the requested resource (get pods dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26)
  I0325 00:22:43.249181 25 dns_common.go:506] Lookups using dns-5015/dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-5015 agnhost_tcp@dns-test-service.dns-5015 agnhost_udp@dns-test-service.dns-5015.svc agnhost_tcp@dns-test-service.dns-5015.svc agnhost_udp@_http._tcp.dns-test-service.dns-5015.svc agnhost_tcp@_http._tcp.dns-test-service.dns-5015.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5015 jessie_tcp@dns-test-service.dns-5015 jessie_udp@dns-test-service.dns-5015.svc jessie_tcp@dns-test-service.dns-5015.svc jessie_udp@_http._tcp.dns-test-service.dns-5015.svc jessie_tcp@_http._tcp.dns-test-service.dns-5015.svc]

  I0325 00:22:43.255251 25 dns_common.go:514] Pod client logs for webserver: 
  I0325 00:22:43.260699 25 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0325 00:22:43.265883 25 dns_common.go:514] Pod client logs for jessie-querier: 
  I0325 00:22:48.171968 25 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-5015.svc from pod dns-5015/dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26: the server could not find the requested resource (get pods dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26)
  I0325 00:22:48.174671 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-5015.svc from pod dns-5015/dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26: the server could not find the requested resource (get pods dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26)
  I0325 00:22:48.178748 25 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-5015.svc from pod dns-5015/dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26: the server could not find the requested resource (get pods dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26)
  I0325 00:22:48.181906 25 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-5015.svc from pod dns-5015/dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26: the server could not find the requested resource (get pods dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26)
  I0325 00:22:48.226201 25 dns_common.go:506] Lookups using dns-5015/dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26 failed for: [agnhost_udp@dns-test-service.dns-5015.svc agnhost_tcp@dns-test-service.dns-5015.svc agnhost_udp@_http._tcp.dns-test-service.dns-5015.svc agnhost_tcp@_http._tcp.dns-test-service.dns-5015.svc]

  I0325 00:22:48.231203 25 dns_common.go:514] Pod client logs for webserver: 
  I0325 00:22:48.235685 25 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0325 00:22:48.240076 25 dns_common.go:514] Pod client logs for jessie-querier: 
  I0325 00:22:53.225813 25 dns_common.go:546] DNS probes using dns-5015/dns-test-68ecc4f8-747f-4853-b5de-868eee1ebb26 succeeded

  STEP: deleting the pod @ 03/25/25 00:22:53.226
  STEP: deleting the test service @ 03/25/25 00:22:53.265
  STEP: deleting the test headless service @ 03/25/25 00:22:53.308
  I0325 00:22:53.329161 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5015" for this suite. @ 03/25/25 00:22:53.333
• [16.283 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 03/25/25 00:22:53.342
  I0325 00:22:53.342324 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename projected @ 03/25/25 00:22:53.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:22:53.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:22:53.389
  STEP: Creating configMap with name projected-configmap-test-volume-9f3c8b51-7523-41bf-9150-9f5d91608a99 @ 03/25/25 00:22:53.394
  STEP: Creating a pod to test consume configMaps @ 03/25/25 00:22:53.403
  STEP: Saw pod success @ 03/25/25 00:22:57.432
  I0325 00:22:57.435232 25 output.go:207] Trying to get logs from node master-2 pod pod-projected-configmaps-4d3925b6-b5cb-4271-bf70-5c3a32f1daf3 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 03/25/25 00:22:57.44
  I0325 00:22:57.460766 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1781" for this suite. @ 03/25/25 00:22:57.464
• [4.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:832
  STEP: Creating a kubernetes client @ 03/25/25 00:22:57.471
  I0325 00:22:57.471567 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename job @ 03/25/25 00:22:57.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:22:57.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:22:57.503
  STEP: Creating a job @ 03/25/25 00:22:57.506
  STEP: Ensuring active pods == parallelism @ 03/25/25 00:22:57.514
  STEP: delete a job @ 03/25/25 00:23:01.543
  STEP: deleting Job.batch foo in namespace job-3780, will wait for the garbage collector to delete the pods @ 03/25/25 00:23:01.544
  I0325 00:23:01.608236 25 resources.go:139] Deleting Job.batch foo took: 8.44799ms
  I0325 00:23:01.709035 25 resources.go:163] Terminating Job.batch foo pods took: 100.702401ms
  STEP: Ensuring job was deleted @ 03/25/25 00:23:02.71
  I0325 00:23:02.714364 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3780" for this suite. @ 03/25/25 00:23:02.72
• [5.269 seconds]
------------------------------
SSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 03/25/25 00:23:02.741
  I0325 00:23:02.741312 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename conformance-tests @ 03/25/25 00:23:02.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:23:02.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:23:02.787
  STEP: Getting node addresses @ 03/25/25 00:23:02.79
  I0325 00:23:02.790639 25 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0325 00:23:02.822343 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-5541" for this suite. @ 03/25/25 00:23:02.831
• [0.112 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 03/25/25 00:23:02.854
  I0325 00:23:02.854097 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename secrets @ 03/25/25 00:23:02.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:23:02.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:23:02.966
  STEP: Creating projection with secret that has name secret-emptykey-test-83172bd5-22aa-4fdb-bebb-1e73105125a5 @ 03/25/25 00:23:02.968
  I0325 00:23:02.970000 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4922" for this suite. @ 03/25/25 00:23:02.973
• [0.132 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 03/25/25 00:23:02.986
  I0325 00:23:02.986133 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename svcaccounts @ 03/25/25 00:23:02.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:23:03.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:23:03.068
  STEP: reading a file in the container @ 03/25/25 00:23:05.113
  I0325 00:23:05.114371 25 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8564 pod-service-account-ce0106c5-6206-43db-8cbc-f6bccc317749 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 03/25/25 00:23:05.256
  I0325 00:23:05.256427 25 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8564 pod-service-account-ce0106c5-6206-43db-8cbc-f6bccc317749 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 03/25/25 00:23:05.361
  I0325 00:23:05.361528 25 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8564 pod-service-account-ce0106c5-6206-43db-8cbc-f6bccc317749 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0325 00:23:05.473938 25 service_accounts.go:120] Got root ca configmap in namespace "svcaccounts-8564"
  I0325 00:23:05.475951 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8564" for this suite. @ 03/25/25 00:23:05.479
• [2.502 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 03/25/25 00:23:05.488
  I0325 00:23:05.488118 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename subjectreview @ 03/25/25 00:23:05.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:23:05.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:23:05.519
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-6541" @ 03/25/25 00:23:05.521
  I0325 00:23:05.529649 25 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-6541:e2e"
  I0325 00:23:05.529779 25 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-6541"}
  I0325 00:23:05.529793 25 subjectreviews.go:71] saUID: "b52bd359-c110-4026-a92e-348630f04ce1"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-6541:e2e" @ 03/25/25 00:23:05.529
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-6541:e2e" @ 03/25/25 00:23:05.53
  I0325 00:23:05.532508 25 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-6541:e2e" api 'list' configmaps in "subjectreview-6541" namespace @ 03/25/25 00:23:05.532
  I0325 00:23:05.534264 25 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-6541:e2e" @ 03/25/25 00:23:05.534
  I0325 00:23:05.536597 25 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0325 00:23:05.536623 25 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0325 00:23:05.536763 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-6541" for this suite. @ 03/25/25 00:23:05.58
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 03/25/25 00:23:05.592
  I0325 00:23:05.592151 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename configmap @ 03/25/25 00:23:05.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:23:05.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:23:05.617
  STEP: Creating configMap with name configmap-test-volume-dd685a12-9e12-4859-8371-93e1cf7f00ac @ 03/25/25 00:23:05.622
  STEP: Creating a pod to test consume configMaps @ 03/25/25 00:23:05.628
  STEP: Saw pod success @ 03/25/25 00:23:09.652
  I0325 00:23:09.655610 25 output.go:207] Trying to get logs from node master-2 pod pod-configmaps-a625f8a4-2a2d-4225-b499-a8833ba5f78b container agnhost-container: <nil>
  STEP: delete the pod @ 03/25/25 00:23:09.662
  I0325 00:23:09.681309 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5208" for this suite. @ 03/25/25 00:23:09.684
• [4.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 03/25/25 00:23:09.7
  I0325 00:23:09.700698 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename services @ 03/25/25 00:23:09.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:23:09.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:23:09.734
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-461 @ 03/25/25 00:23:09.736
  STEP: changing the ExternalName service to type=NodePort @ 03/25/25 00:23:09.744
  STEP: creating replication controller externalname-service in namespace services-461 @ 03/25/25 00:23:09.769
  I0325 00:23:09.777058      25 runners.go:193] Created replication controller with name: externalname-service, namespace: services-461, replica count: 2
  I0325 00:23:12.827907      25 runners.go:193] externalname-service Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0325 00:23:15.828915      25 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0325 00:23:15.828999 25 resource.go:361] Creating new exec pod
  I0325 00:23:18.855239 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-461 exec execpod2xnl6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0325 00:23:18.965616 25 builder.go:146] stderr: "+ echo+  hostName\nnc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.233.16.67) 80 port [tcp/http] succeeded!\n"
  I0325 00:23:18.965669 25 builder.go:147] stdout: "externalname-service-ltf4z"
  I0325 00:23:18.965766 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-461 exec execpod2xnl6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.16.67 80'
  I0325 00:23:19.080631 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.16.67 80\nConnection to 10.233.16.67 80 port [tcp/http] succeeded!\n"
  I0325 00:23:19.080697 25 builder.go:147] stdout: "externalname-service-ltf4z"
  I0325 00:23:19.080798 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-461 exec execpod2xnl6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.10.146 30738'
  I0325 00:23:19.196074 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.10.146 30738\nConnection to 172.20.10.146 30738 port [tcp/*] succeeded!\n"
  I0325 00:23:19.196141 25 builder.go:147] stdout: "externalname-service-ltf4z"
  I0325 00:23:19.196240 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-461 exec execpod2xnl6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.10.91 30738'
  I0325 00:23:19.311582 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.10.91 30738\nConnection to 172.20.10.91 30738 port [tcp/*] succeeded!\n"
  I0325 00:23:19.311662 25 builder.go:147] stdout: "externalname-service-ltf4z"
  I0325 00:23:19.311750 25 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I0325 00:23:19.339551 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-461" for this suite. @ 03/25/25 00:23:19.343
• [9.653 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 03/25/25 00:23:19.354
  I0325 00:23:19.354074 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename configmap @ 03/25/25 00:23:19.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:23:19.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:23:19.391
  STEP: Creating configMap with name configmap-test-upd-387f900c-1658-433d-b811-4e93db483066 @ 03/25/25 00:23:19.445
  STEP: Creating the pod @ 03/25/25 00:23:19.462
  STEP: Waiting for pod with text data @ 03/25/25 00:23:25.505
  STEP: Waiting for pod with binary data @ 03/25/25 00:23:25.511
  I0325 00:23:25.516573 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8959" for this suite. @ 03/25/25 00:23:25.52
• [6.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 03/25/25 00:23:25.529
  I0325 00:23:25.529638 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename configmap @ 03/25/25 00:23:25.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:23:25.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:23:25.556
  STEP: Creating configMap with name configmap-test-volume-4067cf81-7734-4675-8407-b475b572c825 @ 03/25/25 00:23:25.558
  STEP: Creating a pod to test consume configMaps @ 03/25/25 00:23:25.562
  STEP: Saw pod success @ 03/25/25 00:23:29.583
  I0325 00:23:29.586844 25 output.go:207] Trying to get logs from node master-2 pod pod-configmaps-15856b2d-6952-4472-9111-d98143a87ef0 container configmap-volume-test: <nil>
  STEP: delete the pod @ 03/25/25 00:23:29.593
  I0325 00:23:29.615079 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8222" for this suite. @ 03/25/25 00:23:29.62
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1388
  STEP: Creating a kubernetes client @ 03/25/25 00:23:29.627
  I0325 00:23:29.627833 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename kubectl @ 03/25/25 00:23:29.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:23:29.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:23:29.655
  I0325 00:23:29.657626 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-3336 create -f -'
  I0325 00:23:29.774084 25 builder.go:146] stderr: ""
  I0325 00:23:29.774133 25 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0325 00:23:29.774194 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-3336 create -f -'
  I0325 00:23:29.911033 25 builder.go:146] stderr: ""
  I0325 00:23:29.911093 25 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 03/25/25 00:23:29.911
  I0325 00:23:30.915623 25 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0325 00:23:30.915668 25 framework.go:733] Found 1 / 1
  I0325 00:23:30.915689 25 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0325 00:23:30.918741 25 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0325 00:23:30.918776 25 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0325 00:23:30.919594 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-3336 describe pod agnhost-primary-b2z92'
  I0325 00:23:30.999019 25 builder.go:146] stderr: ""
  I0325 00:23:30.999121 25 builder.go:147] stdout: "Name:             agnhost-primary-b2z92\nNamespace:        kubectl-3336\nPriority:         0\nService Account:  default\nNode:             master-2/172.20.10.146\nStart Time:       Tue, 25 Mar 2025 00:23:29 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.233.65.206\nIPs:\n  IP:           10.233.65.206\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://a9ab61796f31f6c663bcea53ce69b225d131964c0f0c0e3c7c8e146768ccd3cb\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.53\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Tue, 25 Mar 2025 00:23:30 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-ptpsl (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-ptpsl:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-3336/agnhost-primary-b2z92 to master-2\n  Normal  Pulled     0s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.53\" already present on machine\n  Normal  Created    0s    kubelet            Created container: agnhost-primary\n  Normal  Started    0s    kubelet            Started container agnhost-primary\n"
  I0325 00:23:30.999203 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-3336 describe rc agnhost-primary'
  I0325 00:23:31.096580 25 builder.go:146] stderr: ""
  I0325 00:23:31.096638 25 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-3336\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-b2z92\n"
  I0325 00:23:31.096716 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-3336 describe service agnhost-primary'
  I0325 00:23:31.197272 25 builder.go:146] stderr: ""
  I0325 00:23:31.197326 25 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-3336\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.233.8.102\nIPs:                      10.233.8.102\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.233.65.206:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0325 00:23:31.203148 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-3336 describe node master-1'
  I0325 00:23:31.314110 25 builder.go:146] stderr: ""
  I0325 00:23:31.314333 25 builder.go:147] stdout: "Name:               master-1\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=master-1\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/containerd/containerd.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Wed, 19 Mar 2025 11:31:07 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  master-1\n  AcquireTime:     <unset>\n  RenewTime:       Tue, 25 Mar 2025 00:23:23 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Wed, 19 Mar 2025 11:32:37 +0000   Wed, 19 Mar 2025 11:32:37 +0000   CiliumIsUp                   Cilium is running on this node\n  MemoryPressure       False   Tue, 25 Mar 2025 00:23:31 +0000   Wed, 19 Mar 2025 11:31:07 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Tue, 25 Mar 2025 00:23:31 +0000   Wed, 19 Mar 2025 11:31:07 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Tue, 25 Mar 2025 00:23:31 +0000   Wed, 19 Mar 2025 11:31:07 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Tue, 25 Mar 2025 00:23:31 +0000   Wed, 19 Mar 2025 11:32:31 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.20.10.91\n  Hostname:    master-1\nCapacity:\n  cpu:                4\n  ephemeral-storage:  101430960Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             8127028Ki\n  pods:               110\nAllocatable:\n  cpu:                3400m\n  ephemeral-storage:  92430196582\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7238196Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 d70dd3c9dd6345f486b318163b1ba276\n  System UUID:                d70dd3c9-dd63-45f4-86b3-18163b1ba276\n  Boot ID:                    89734d16-e413-4cf6-b527-0a7840ad810f\n  Kernel Version:             5.15.0-79-generic\n  OS Image:                   Ubuntu 22.04.3 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://2.0.3\n  Kubelet Version:            v1.32.2\n  Kube-Proxy Version:         v1.32.2\nPodCIDR:                      10.233.64.0/24\nPodCIDRs:                     10.233.64.0/24\nNon-terminated Pods:          (14 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  auth                        oauth2-proxy-admin-89ccc8b6d-gkxsf                         0 (0%)        0 (0%)      0 (0%)           0 (0%)         4d23h\n  auth                        oauth2-redis-admin-4                                       0 (0%)        0 (0%)      0 (0%)           0 (0%)         4d23h\n  cmp                         maestro-common-api-d4f57ffc9-v25ts                         100m (2%)     2 (58%)     128Mi (1%)       1Gi (14%)      4d23h\n  cmp                         maestro-remote-app-b677d7995-ttggb                         100m (2%)     2 (58%)     128Mi (1%)       1Gi (14%)      4d23h\n  istio-system                istiod-99fc7b678-c74hx                                     500m (14%)    0 (0%)      2Gi (28%)        0 (0%)         4d23h\n  kube-system                 cilium-nb9w6                                               100m (2%)     500m (14%)  100Mi (1%)       500M (6%)      15h\n  kube-system                 coredns-5c54f84c97-s7pm8                                   100m (2%)     0 (0%)      70Mi (0%)        300Mi (4%)     4d16h\n  kube-system                 dns-autoscaler-76ddddbbc-njtdg                             20m (0%)      0 (0%)      10Mi (0%)        0 (0%)         5d12h\n  kube-system                 kube-apiserver-master-1                                    250m (7%)     0 (0%)      0 (0%)           0 (0%)         5d12h\n  kube-system                 kube-controller-manager-master-1                           200m (5%)     0 (0%)      0 (0%)           0 (0%)         5d12h\n  kube-system                 kube-proxy-c9vn6                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         5d12h\n  kube-system                 kube-scheduler-master-1                                    100m (2%)     0 (0%)      0 (0%)           0 (0%)         5d12h\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-fa7539a130154f7a-69xpv    0 (0%)        0 (0%)      0 (0%)           0 (0%)         2m2s\n  viola                       viola-remote-app-5b964d4757-mx9xg                          100m (2%)     2 (58%)     128Mi (1%)       1Gi (14%)      4d23h\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests      Limits\n  --------           --------      ------\n  cpu                1570m (46%)   6500m (191%)\n  memory             2612Mi (36%)  4035798272 (54%)\n  ephemeral-storage  0 (0%)        0 (0%)\n  hugepages-1Gi      0 (0%)        0 (0%)\n  hugepages-2Mi      0 (0%)        0 (0%)\nEvents:              <none>\n"
  I0325 00:23:31.314413 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-3336 describe namespace kubectl-3336'
  I0325 00:23:31.422954 25 builder.go:146] stderr: ""
  I0325 00:23:31.423028 25 builder.go:147] stdout: "Name:         kubectl-3336\nLabels:       e2e-framework=kubectl\n              e2e-run=371d9ffc-9dec-426c-9f42-f3b8ad069dd6\n              kubernetes.io/metadata.name=kubectl-3336\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0325 00:23:31.423367 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3336" for this suite. @ 03/25/25 00:23:31.436
• [1.817 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 03/25/25 00:23:31.444
  I0325 00:23:31.444787 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename webhook @ 03/25/25 00:23:31.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:23:31.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:23:31.532
  STEP: Setting up server cert @ 03/25/25 00:23:31.637
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/25/25 00:23:32.067
  STEP: Deploying the webhook pod @ 03/25/25 00:23:32.078
  STEP: Wait for the deployment to be ready @ 03/25/25 00:23:32.096
  I0325 00:23:32.104550 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0325 00:23:34.114314 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 25, 0, 23, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 23, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 0, 23, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 23, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 03/25/25 00:23:36.118
  STEP: Verifying the service has paired with the endpoint @ 03/25/25 00:23:36.139
  I0325 00:23:37.139817 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 03/25/25 00:23:37.149
  I0325 00:23:37.173810 25 webhook.go:2669] Waiting for webhook configuration to be ready...
  STEP: create a namespace for the webhook @ 03/25/25 00:23:37.282
  STEP: create a configmap should be unconditionally rejected by the webhook @ 03/25/25 00:23:37.303
  I0325 00:23:37.369226 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6517" for this suite. @ 03/25/25 00:23:37.374
  STEP: Destroying namespace "webhook-markers-2251" for this suite. @ 03/25/25 00:23:37.384
  STEP: Destroying namespace "fail-closed-namespace-8866" for this suite. @ 03/25/25 00:23:37.401
• [5.982 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 03/25/25 00:23:37.427
  I0325 00:23:37.427035 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename resourcequota @ 03/25/25 00:23:37.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:23:37.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:23:37.451
  STEP: Counting existing ResourceQuota @ 03/25/25 00:23:54.458
  STEP: Creating a ResourceQuota @ 03/25/25 00:23:59.463
  STEP: Ensuring resource quota status is calculated @ 03/25/25 00:23:59.473
  STEP: Creating a ConfigMap @ 03/25/25 00:24:01.48
  STEP: Ensuring resource quota status captures configMap creation @ 03/25/25 00:24:01.506
  STEP: Deleting a ConfigMap @ 03/25/25 00:24:03.513
  STEP: Ensuring resource quota status released usage @ 03/25/25 00:24:03.52
  I0325 00:24:05.525843 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5995" for this suite. @ 03/25/25 00:24:05.531
• [28.117 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 03/25/25 00:24:05.544
  I0325 00:24:05.544834 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename prestop @ 03/25/25 00:24:05.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:24:05.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:24:05.571
  STEP: Creating server pod server in namespace prestop-3957 @ 03/25/25 00:24:05.574
  STEP: Waiting for pods to come up. @ 03/25/25 00:24:05.585
  STEP: Creating tester pod tester in namespace prestop-3957 @ 03/25/25 00:24:07.597
  STEP: Deleting pre-stop pod @ 03/25/25 00:24:09.613
  I0325 00:24:14.628330 25 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 03/25/25 00:24:14.628
  I0325 00:24:14.647989 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-3957" for this suite. @ 03/25/25 00:24:14.652
• [9.118 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 03/25/25 00:24:14.663
  I0325 00:24:14.663385 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 03/25/25 00:24:14.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:24:14.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:24:14.696
  STEP: creating a target pod @ 03/25/25 00:24:14.698
  STEP: adding an ephemeral container @ 03/25/25 00:24:16.72
  STEP: checking pod container endpoints @ 03/25/25 00:24:18.752
  I0325 00:24:18.752471 25 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-961 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 00:24:18.752495 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 00:24:18.752588 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-961/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0325 00:24:18.817590 25 exec_util.go:108] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 03/25/25 00:24:18.825
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 03/25/25 00:24:18.83
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 03/25/25 00:24:18.843
  I0325 00:24:18.859607 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-961" for this suite. @ 03/25/25 00:24:18.87
• [4.215 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 03/25/25 00:24:18.878
  I0325 00:24:18.878932 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename svc-latency @ 03/25/25 00:24:18.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:24:18.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:24:18.945
  I0325 00:24:18.947802 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-6733 @ 03/25/25 00:24:18.948
  I0325 00:24:18.959837      25 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-6733, replica count: 1
  I0325 00:24:20.010852      25 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0325 00:24:20.130183 25 service_latency.go:356] Created: latency-svc-qck8c
  I0325 00:24:20.141040 25 service_latency.go:363] Got endpoints: latency-svc-qck8c [29.020056ms]
  I0325 00:24:20.160029 25 service_latency.go:356] Created: latency-svc-fm5g7
  I0325 00:24:20.171288 25 service_latency.go:356] Created: latency-svc-nprpm
  I0325 00:24:20.173928 25 service_latency.go:363] Got endpoints: latency-svc-fm5g7 [32.69334ms]
  I0325 00:24:20.181008 25 service_latency.go:363] Got endpoints: latency-svc-nprpm [39.344936ms]
  I0325 00:24:20.184422 25 service_latency.go:356] Created: latency-svc-vz7rx
  I0325 00:24:20.198696 25 service_latency.go:363] Got endpoints: latency-svc-vz7rx [56.996386ms]
  I0325 00:24:20.199038 25 service_latency.go:356] Created: latency-svc-lqk7z
  I0325 00:24:20.209090 25 service_latency.go:363] Got endpoints: latency-svc-lqk7z [67.243173ms]
  I0325 00:24:20.215517 25 service_latency.go:356] Created: latency-svc-nxlm4
  I0325 00:24:20.225521 25 service_latency.go:363] Got endpoints: latency-svc-nxlm4 [83.730375ms]
  I0325 00:24:20.232745 25 service_latency.go:356] Created: latency-svc-6n88l
  I0325 00:24:20.238166 25 service_latency.go:356] Created: latency-svc-k9g9d
  I0325 00:24:20.238594 25 service_latency.go:363] Got endpoints: latency-svc-k9g9d [96.629836ms]
  I0325 00:24:20.250950 25 service_latency.go:363] Got endpoints: latency-svc-6n88l [106.071181ms]
  I0325 00:24:20.257231 25 service_latency.go:356] Created: latency-svc-8wgtp
  I0325 00:24:20.266934 25 service_latency.go:363] Got endpoints: latency-svc-8wgtp [122.787734ms]
  I0325 00:24:20.271542 25 service_latency.go:356] Created: latency-svc-4dg4w
  I0325 00:24:20.290250 25 service_latency.go:363] Got endpoints: latency-svc-4dg4w [148.342997ms]
  I0325 00:24:20.294057 25 service_latency.go:356] Created: latency-svc-bn89c
  I0325 00:24:20.312393 25 service_latency.go:363] Got endpoints: latency-svc-bn89c [167.376278ms]
  I0325 00:24:20.312839 25 service_latency.go:356] Created: latency-svc-xrh64
  I0325 00:24:20.320122 25 service_latency.go:363] Got endpoints: latency-svc-xrh64 [175.137674ms]
  I0325 00:24:20.324854 25 service_latency.go:356] Created: latency-svc-t2fvl
  I0325 00:24:20.334167 25 service_latency.go:363] Got endpoints: latency-svc-t2fvl [189.218704ms]
  I0325 00:24:20.337425 25 service_latency.go:356] Created: latency-svc-dnnfj
  I0325 00:24:20.350809 25 service_latency.go:363] Got endpoints: latency-svc-dnnfj [206.195131ms]
  I0325 00:24:20.352492 25 service_latency.go:356] Created: latency-svc-dm5wz
  I0325 00:24:20.366019 25 service_latency.go:363] Got endpoints: latency-svc-dm5wz [221.109906ms]
  I0325 00:24:20.366443 25 service_latency.go:356] Created: latency-svc-ksx47
  I0325 00:24:20.372060 25 service_latency.go:363] Got endpoints: latency-svc-ksx47 [227.273141ms]
  I0325 00:24:20.382284 25 service_latency.go:356] Created: latency-svc-f87w6
  I0325 00:24:20.389329 25 service_latency.go:363] Got endpoints: latency-svc-f87w6 [208.272193ms]
  I0325 00:24:20.392495 25 service_latency.go:356] Created: latency-svc-zqsjn
  I0325 00:24:20.399164 25 service_latency.go:363] Got endpoints: latency-svc-zqsjn [200.411254ms]
  I0325 00:24:20.405263 25 service_latency.go:356] Created: latency-svc-6skgg
  I0325 00:24:20.418490 25 service_latency.go:363] Got endpoints: latency-svc-6skgg [209.343895ms]
  I0325 00:24:20.418825 25 service_latency.go:356] Created: latency-svc-tbdxn
  I0325 00:24:20.427953 25 service_latency.go:363] Got endpoints: latency-svc-tbdxn [202.362047ms]
  I0325 00:24:20.457053 25 service_latency.go:356] Created: latency-svc-t299w
  I0325 00:24:20.462923 25 service_latency.go:363] Got endpoints: latency-svc-t299w [224.221385ms]
  I0325 00:24:20.464837 25 service_latency.go:356] Created: latency-svc-52xg6
  I0325 00:24:20.472021 25 service_latency.go:363] Got endpoints: latency-svc-52xg6 [221.005122ms]
  I0325 00:24:20.475247 25 service_latency.go:356] Created: latency-svc-l6xph
  I0325 00:24:20.481996 25 service_latency.go:363] Got endpoints: latency-svc-l6xph [214.724563ms]
  I0325 00:24:20.486451 25 service_latency.go:356] Created: latency-svc-4hdpk
  I0325 00:24:20.493196 25 service_latency.go:363] Got endpoints: latency-svc-4hdpk [202.846828ms]
  I0325 00:24:20.496359 25 service_latency.go:356] Created: latency-svc-mkcvz
  I0325 00:24:20.524877 25 service_latency.go:363] Got endpoints: latency-svc-mkcvz [212.414568ms]
  I0325 00:24:20.527664 25 service_latency.go:356] Created: latency-svc-whf2g
  I0325 00:24:20.535058 25 service_latency.go:363] Got endpoints: latency-svc-whf2g [214.438825ms]
  I0325 00:24:20.542150 25 service_latency.go:356] Created: latency-svc-qpjt4
  I0325 00:24:20.567873 25 service_latency.go:363] Got endpoints: latency-svc-qpjt4 [233.640776ms]
  I0325 00:24:20.571915 25 service_latency.go:356] Created: latency-svc-kbmzn
  I0325 00:24:20.579191 25 service_latency.go:363] Got endpoints: latency-svc-kbmzn [228.232814ms]
  I0325 00:24:20.582700 25 service_latency.go:356] Created: latency-svc-q6jrl
  I0325 00:24:20.584445 25 service_latency.go:356] Created: latency-svc-nqcz6
  I0325 00:24:20.595408 25 service_latency.go:363] Got endpoints: latency-svc-q6jrl [229.143649ms]
  I0325 00:24:20.597209 25 service_latency.go:363] Got endpoints: latency-svc-nqcz6 [423.235127ms]
  I0325 00:24:20.600848 25 service_latency.go:356] Created: latency-svc-cl9zr
  I0325 00:24:20.613089 25 service_latency.go:363] Got endpoints: latency-svc-cl9zr [240.909717ms]
  I0325 00:24:20.613359 25 service_latency.go:356] Created: latency-svc-827mc
  I0325 00:24:20.630424 25 service_latency.go:363] Got endpoints: latency-svc-827mc [240.320065ms]
  I0325 00:24:20.631686 25 service_latency.go:356] Created: latency-svc-5czjp
  I0325 00:24:20.660658 25 service_latency.go:363] Got endpoints: latency-svc-5czjp [261.45296ms]
  I0325 00:24:20.665009 25 service_latency.go:356] Created: latency-svc-nrj8j
  I0325 00:24:20.671741 25 service_latency.go:363] Got endpoints: latency-svc-nrj8j [253.198396ms]
  I0325 00:24:20.674526 25 service_latency.go:356] Created: latency-svc-p7v79
  I0325 00:24:20.705257 25 service_latency.go:363] Got endpoints: latency-svc-p7v79 [277.238738ms]
  I0325 00:24:20.705552 25 service_latency.go:356] Created: latency-svc-jhzbs
  I0325 00:24:20.720591 25 service_latency.go:363] Got endpoints: latency-svc-jhzbs [257.58388ms]
  I0325 00:24:20.723968 25 service_latency.go:356] Created: latency-svc-kvsxl
  I0325 00:24:20.728421 25 service_latency.go:363] Got endpoints: latency-svc-kvsxl [256.177408ms]
  I0325 00:24:20.737090 25 service_latency.go:356] Created: latency-svc-gcg2j
  I0325 00:24:20.746433 25 service_latency.go:363] Got endpoints: latency-svc-gcg2j [264.385623ms]
  I0325 00:24:20.759531 25 service_latency.go:356] Created: latency-svc-hsg2h
  I0325 00:24:20.767437 25 service_latency.go:363] Got endpoints: latency-svc-hsg2h [274.057955ms]
  I0325 00:24:20.770144 25 service_latency.go:356] Created: latency-svc-5kgrp
  I0325 00:24:20.778524 25 service_latency.go:363] Got endpoints: latency-svc-5kgrp [253.574926ms]
  I0325 00:24:20.779470 25 service_latency.go:356] Created: latency-svc-szh6x
  I0325 00:24:20.795810 25 service_latency.go:363] Got endpoints: latency-svc-szh6x [260.582692ms]
  I0325 00:24:20.796161 25 service_latency.go:356] Created: latency-svc-rkwm8
  I0325 00:24:20.807805 25 service_latency.go:363] Got endpoints: latency-svc-rkwm8 [239.462048ms]
  I0325 00:24:20.807826 25 service_latency.go:356] Created: latency-svc-mx2sx
  I0325 00:24:20.812973 25 service_latency.go:363] Got endpoints: latency-svc-mx2sx [233.661357ms]
  I0325 00:24:20.815431 25 service_latency.go:356] Created: latency-svc-zvqnw
  I0325 00:24:20.858744 25 service_latency.go:363] Got endpoints: latency-svc-zvqnw [263.289767ms]
  I0325 00:24:20.952885 25 service_latency.go:356] Created: latency-svc-nnvfs
  I0325 00:24:20.952939 25 service_latency.go:356] Created: latency-svc-px6vj
  I0325 00:24:20.952955 25 service_latency.go:356] Created: latency-svc-9m7fw
  I0325 00:24:20.952941 25 service_latency.go:356] Created: latency-svc-xd9pm
  I0325 00:24:20.953018 25 service_latency.go:356] Created: latency-svc-4l6gs
  I0325 00:24:20.953030 25 service_latency.go:356] Created: latency-svc-nhstj
  I0325 00:24:20.953067 25 service_latency.go:356] Created: latency-svc-bdqzd
  I0325 00:24:20.953014 25 service_latency.go:356] Created: latency-svc-kl9wq
  I0325 00:24:20.953318 25 service_latency.go:356] Created: latency-svc-nsk6b
  I0325 00:24:20.953437 25 service_latency.go:356] Created: latency-svc-njbgs
  I0325 00:24:20.957346 25 service_latency.go:356] Created: latency-svc-rbjwc
  I0325 00:24:20.961134 25 service_latency.go:356] Created: latency-svc-vhktf
  I0325 00:24:20.961202 25 service_latency.go:356] Created: latency-svc-fw52z
  I0325 00:24:20.961182 25 service_latency.go:356] Created: latency-svc-dwr8r
  I0325 00:24:20.961237 25 service_latency.go:356] Created: latency-svc-4lgft
  I0325 00:24:20.965346 25 service_latency.go:363] Got endpoints: latency-svc-nnvfs [157.48229ms]
  I0325 00:24:20.967826 25 service_latency.go:363] Got endpoints: latency-svc-9m7fw [369.942444ms]
  I0325 00:24:20.986971 25 service_latency.go:356] Created: latency-svc-qsdkf
  I0325 00:24:20.995254 25 service_latency.go:363] Got endpoints: latency-svc-nhstj [323.47335ms]
  I0325 00:24:20.999354 25 service_latency.go:356] Created: latency-svc-dj94x
  I0325 00:24:21.011541 25 service_latency.go:356] Created: latency-svc-c7n4k
  I0325 00:24:21.045819 25 service_latency.go:363] Got endpoints: latency-svc-px6vj [317.355261ms]
  I0325 00:24:21.061014 25 service_latency.go:356] Created: latency-svc-jpxdh
  I0325 00:24:21.097200 25 service_latency.go:363] Got endpoints: latency-svc-xd9pm [238.398581ms]
  I0325 00:24:21.116712 25 service_latency.go:356] Created: latency-svc-d9zbm
  I0325 00:24:21.151469 25 service_latency.go:363] Got endpoints: latency-svc-bdqzd [520.986754ms]
  I0325 00:24:21.165883 25 service_latency.go:356] Created: latency-svc-ffnc4
  I0325 00:24:21.201129 25 service_latency.go:363] Got endpoints: latency-svc-kl9wq [454.64692ms]
  I0325 00:24:21.214461 25 service_latency.go:356] Created: latency-svc-jpvkr
  I0325 00:24:21.243131 25 service_latency.go:363] Got endpoints: latency-svc-njbgs [464.562791ms]
  I0325 00:24:21.258252 25 service_latency.go:356] Created: latency-svc-tbsbw
  I0325 00:24:21.292899 25 service_latency.go:363] Got endpoints: latency-svc-nsk6b [587.413929ms]
  I0325 00:24:21.306867 25 service_latency.go:356] Created: latency-svc-pztqf
  I0325 00:24:21.342452 25 service_latency.go:363] Got endpoints: latency-svc-4l6gs [529.43601ms]
  I0325 00:24:21.359068 25 service_latency.go:356] Created: latency-svc-qsxdv
  I0325 00:24:21.390186 25 service_latency.go:363] Got endpoints: latency-svc-rbjwc [669.420629ms]
  I0325 00:24:21.407781 25 service_latency.go:356] Created: latency-svc-bwh4h
  I0325 00:24:21.449089 25 service_latency.go:363] Got endpoints: latency-svc-vhktf [835.957621ms]
  I0325 00:24:21.464035 25 service_latency.go:356] Created: latency-svc-vzlj7
  I0325 00:24:21.496789 25 service_latency.go:363] Got endpoints: latency-svc-4lgft [835.545959ms]
  I0325 00:24:21.514225 25 service_latency.go:356] Created: latency-svc-p2hsr
  I0325 00:24:21.544422 25 service_latency.go:363] Got endpoints: latency-svc-dwr8r [748.558709ms]
  I0325 00:24:21.562855 25 service_latency.go:356] Created: latency-svc-pc94n
  I0325 00:24:21.592909 25 service_latency.go:363] Got endpoints: latency-svc-fw52z [825.308608ms]
  I0325 00:24:21.607448 25 service_latency.go:356] Created: latency-svc-vqgcx
  I0325 00:24:21.643896 25 service_latency.go:363] Got endpoints: latency-svc-qsdkf [678.512372ms]
  I0325 00:24:21.669781 25 service_latency.go:356] Created: latency-svc-8944m
  I0325 00:24:21.697088 25 service_latency.go:363] Got endpoints: latency-svc-dj94x [729.218132ms]
  I0325 00:24:21.721019 25 service_latency.go:356] Created: latency-svc-hvp5l
  I0325 00:24:21.744142 25 service_latency.go:363] Got endpoints: latency-svc-c7n4k [748.664384ms]
  I0325 00:24:21.757533 25 service_latency.go:356] Created: latency-svc-zd454
  I0325 00:24:21.793046 25 service_latency.go:363] Got endpoints: latency-svc-jpxdh [747.171394ms]
  I0325 00:24:21.813187 25 service_latency.go:356] Created: latency-svc-2wjtd
  I0325 00:24:21.843186 25 service_latency.go:363] Got endpoints: latency-svc-d9zbm [745.933715ms]
  I0325 00:24:21.857579 25 service_latency.go:356] Created: latency-svc-hdznk
  I0325 00:24:21.891709 25 service_latency.go:363] Got endpoints: latency-svc-ffnc4 [739.923042ms]
  I0325 00:24:21.911182 25 service_latency.go:356] Created: latency-svc-jbs6c
  I0325 00:24:21.945565 25 service_latency.go:363] Got endpoints: latency-svc-jpvkr [744.382867ms]
  I0325 00:24:21.958956 25 service_latency.go:356] Created: latency-svc-sz6fn
  I0325 00:24:21.996208 25 service_latency.go:363] Got endpoints: latency-svc-tbsbw [753.003979ms]
  I0325 00:24:22.013317 25 service_latency.go:356] Created: latency-svc-cr9gq
  I0325 00:24:22.043553 25 service_latency.go:363] Got endpoints: latency-svc-pztqf [750.595383ms]
  I0325 00:24:22.058272 25 service_latency.go:356] Created: latency-svc-v4zm7
  I0325 00:24:22.094385 25 service_latency.go:363] Got endpoints: latency-svc-qsxdv [751.602358ms]
  I0325 00:24:22.117800 25 service_latency.go:356] Created: latency-svc-d7qv4
  I0325 00:24:22.142578 25 service_latency.go:363] Got endpoints: latency-svc-bwh4h [752.095239ms]
  I0325 00:24:22.159071 25 service_latency.go:356] Created: latency-svc-8tzjx
  I0325 00:24:22.195740 25 service_latency.go:363] Got endpoints: latency-svc-vzlj7 [746.595735ms]
  I0325 00:24:22.213218 25 service_latency.go:356] Created: latency-svc-lmb5g
  I0325 00:24:22.245668 25 service_latency.go:363] Got endpoints: latency-svc-p2hsr [748.554489ms]
  I0325 00:24:22.261225 25 service_latency.go:356] Created: latency-svc-f4lgp
  I0325 00:24:22.292199 25 service_latency.go:363] Got endpoints: latency-svc-pc94n [747.443057ms]
  I0325 00:24:22.308568 25 service_latency.go:356] Created: latency-svc-p2pd2
  I0325 00:24:22.342163 25 service_latency.go:363] Got endpoints: latency-svc-vqgcx [749.10714ms]
  I0325 00:24:22.365013 25 service_latency.go:356] Created: latency-svc-rx8st
  I0325 00:24:22.393882 25 service_latency.go:363] Got endpoints: latency-svc-8944m [749.221142ms]
  I0325 00:24:22.406326 25 service_latency.go:356] Created: latency-svc-b4j8r
  I0325 00:24:22.444686 25 service_latency.go:363] Got endpoints: latency-svc-hvp5l [747.539524ms]
  I0325 00:24:22.462832 25 service_latency.go:356] Created: latency-svc-nlbk5
  I0325 00:24:22.492579 25 service_latency.go:363] Got endpoints: latency-svc-zd454 [748.131212ms]
  I0325 00:24:22.508731 25 service_latency.go:356] Created: latency-svc-rfww5
  I0325 00:24:22.541673 25 service_latency.go:363] Got endpoints: latency-svc-2wjtd [748.571143ms]
  I0325 00:24:22.555512 25 service_latency.go:356] Created: latency-svc-kp84p
  I0325 00:24:22.593657 25 service_latency.go:363] Got endpoints: latency-svc-hdznk [750.420386ms]
  I0325 00:24:22.608984 25 service_latency.go:356] Created: latency-svc-ft8q9
  I0325 00:24:22.646234 25 service_latency.go:363] Got endpoints: latency-svc-jbs6c [754.158942ms]
  I0325 00:24:22.660158 25 service_latency.go:356] Created: latency-svc-8qm4s
  I0325 00:24:22.705092 25 service_latency.go:363] Got endpoints: latency-svc-sz6fn [759.466098ms]
  I0325 00:24:22.721461 25 service_latency.go:356] Created: latency-svc-7jqr7
  I0325 00:24:22.741521 25 service_latency.go:363] Got endpoints: latency-svc-cr9gq [744.952234ms]
  I0325 00:24:22.759533 25 service_latency.go:356] Created: latency-svc-w5n4c
  I0325 00:24:22.796162 25 service_latency.go:363] Got endpoints: latency-svc-v4zm7 [752.532839ms]
  I0325 00:24:22.809876 25 service_latency.go:356] Created: latency-svc-kncbs
  I0325 00:24:22.842773 25 service_latency.go:363] Got endpoints: latency-svc-d7qv4 [748.230738ms]
  I0325 00:24:22.858797 25 service_latency.go:356] Created: latency-svc-fptgs
  I0325 00:24:22.890269 25 service_latency.go:363] Got endpoints: latency-svc-8tzjx [747.26575ms]
  I0325 00:24:22.905021 25 service_latency.go:356] Created: latency-svc-kb2vp
  I0325 00:24:22.944797 25 service_latency.go:363] Got endpoints: latency-svc-lmb5g [748.999032ms]
  I0325 00:24:22.978055 25 service_latency.go:356] Created: latency-svc-jghbn
  I0325 00:24:22.995058 25 service_latency.go:363] Got endpoints: latency-svc-f4lgp [749.198492ms]
  I0325 00:24:23.023559 25 service_latency.go:356] Created: latency-svc-8fh58
  I0325 00:24:23.040396 25 service_latency.go:363] Got endpoints: latency-svc-p2pd2 [747.48004ms]
  I0325 00:24:23.056493 25 service_latency.go:356] Created: latency-svc-pffgg
  I0325 00:24:23.092893 25 service_latency.go:363] Got endpoints: latency-svc-rx8st [750.38981ms]
  I0325 00:24:23.110041 25 service_latency.go:356] Created: latency-svc-7h8cw
  I0325 00:24:23.145858 25 service_latency.go:363] Got endpoints: latency-svc-b4j8r [751.779168ms]
  I0325 00:24:23.160217 25 service_latency.go:356] Created: latency-svc-kxjbt
  I0325 00:24:23.196935 25 service_latency.go:363] Got endpoints: latency-svc-nlbk5 [752.189858ms]
  I0325 00:24:23.211271 25 service_latency.go:356] Created: latency-svc-44q8k
  I0325 00:24:23.243153 25 service_latency.go:363] Got endpoints: latency-svc-rfww5 [750.511179ms]
  I0325 00:24:23.265180 25 service_latency.go:356] Created: latency-svc-l9m44
  I0325 00:24:23.294931 25 service_latency.go:363] Got endpoints: latency-svc-kp84p [753.188232ms]
  I0325 00:24:23.308120 25 service_latency.go:356] Created: latency-svc-snr4n
  I0325 00:24:23.343481 25 service_latency.go:363] Got endpoints: latency-svc-ft8q9 [749.390465ms]
  I0325 00:24:23.356837 25 service_latency.go:356] Created: latency-svc-pdb4h
  I0325 00:24:23.395965 25 service_latency.go:363] Got endpoints: latency-svc-8qm4s [749.664519ms]
  I0325 00:24:23.412969 25 service_latency.go:356] Created: latency-svc-z9jmf
  I0325 00:24:23.443030 25 service_latency.go:363] Got endpoints: latency-svc-7jqr7 [737.875253ms]
  I0325 00:24:23.462197 25 service_latency.go:356] Created: latency-svc-2npkf
  I0325 00:24:23.502855 25 service_latency.go:363] Got endpoints: latency-svc-w5n4c [761.266803ms]
  I0325 00:24:23.523071 25 service_latency.go:356] Created: latency-svc-cgg94
  I0325 00:24:23.542952 25 service_latency.go:363] Got endpoints: latency-svc-kncbs [746.73083ms]
  I0325 00:24:23.574869 25 service_latency.go:356] Created: latency-svc-r4wb6
  I0325 00:24:23.594741 25 service_latency.go:363] Got endpoints: latency-svc-fptgs [751.876376ms]
  I0325 00:24:23.610712 25 service_latency.go:356] Created: latency-svc-6clxm
  I0325 00:24:23.641032 25 service_latency.go:363] Got endpoints: latency-svc-kb2vp [750.189142ms]
  I0325 00:24:23.655804 25 service_latency.go:356] Created: latency-svc-9wlzv
  I0325 00:24:23.695572 25 service_latency.go:363] Got endpoints: latency-svc-jghbn [750.706507ms]
  I0325 00:24:23.718520 25 service_latency.go:356] Created: latency-svc-qc7z9
  I0325 00:24:23.930757 25 service_latency.go:363] Got endpoints: latency-svc-8fh58 [935.627556ms]
  I0325 00:24:23.933421 25 service_latency.go:363] Got endpoints: latency-svc-pffgg [892.79577ms]
  I0325 00:24:23.937331 25 service_latency.go:363] Got endpoints: latency-svc-kxjbt [791.392081ms]
  I0325 00:24:23.938022 25 service_latency.go:363] Got endpoints: latency-svc-7h8cw [845.078678ms]
  I0325 00:24:23.944292 25 service_latency.go:363] Got endpoints: latency-svc-44q8k [747.303585ms]
  I0325 00:24:23.947692 25 service_latency.go:356] Created: latency-svc-7v627
  I0325 00:24:23.967761 25 service_latency.go:356] Created: latency-svc-kdjg2
  I0325 00:24:23.969750 25 service_latency.go:356] Created: latency-svc-nmdwn
  I0325 00:24:23.982835 25 service_latency.go:356] Created: latency-svc-7wbdm
  I0325 00:24:23.992748 25 service_latency.go:356] Created: latency-svc-w7nmz
  I0325 00:24:23.999580 25 service_latency.go:363] Got endpoints: latency-svc-l9m44 [756.149634ms]
  I0325 00:24:24.013469 25 service_latency.go:356] Created: latency-svc-55xgv
  I0325 00:24:24.048578 25 service_latency.go:363] Got endpoints: latency-svc-snr4n [753.410963ms]
  I0325 00:24:24.065721 25 service_latency.go:356] Created: latency-svc-5zwff
  I0325 00:24:24.091736 25 service_latency.go:363] Got endpoints: latency-svc-pdb4h [748.144254ms]
  I0325 00:24:24.109096 25 service_latency.go:356] Created: latency-svc-tftp6
  I0325 00:24:24.145479 25 service_latency.go:363] Got endpoints: latency-svc-z9jmf [749.430923ms]
  I0325 00:24:24.159896 25 service_latency.go:356] Created: latency-svc-mkt8j
  I0325 00:24:24.195107 25 service_latency.go:363] Got endpoints: latency-svc-2npkf [752.018773ms]
  I0325 00:24:24.208622 25 service_latency.go:356] Created: latency-svc-sjw4n
  I0325 00:24:24.248732 25 service_latency.go:363] Got endpoints: latency-svc-cgg94 [745.812903ms]
  I0325 00:24:24.262758 25 service_latency.go:356] Created: latency-svc-snqvl
  I0325 00:24:24.292220 25 service_latency.go:363] Got endpoints: latency-svc-r4wb6 [748.721638ms]
  I0325 00:24:24.312919 25 service_latency.go:356] Created: latency-svc-pvmll
  I0325 00:24:24.342067 25 service_latency.go:363] Got endpoints: latency-svc-6clxm [746.939673ms]
  I0325 00:24:24.357707 25 service_latency.go:356] Created: latency-svc-69hdr
  I0325 00:24:24.392666 25 service_latency.go:363] Got endpoints: latency-svc-9wlzv [751.563523ms]
  I0325 00:24:24.409777 25 service_latency.go:356] Created: latency-svc-6k92p
  I0325 00:24:24.441315 25 service_latency.go:363] Got endpoints: latency-svc-qc7z9 [745.687899ms]
  I0325 00:24:24.459060 25 service_latency.go:356] Created: latency-svc-nrr5m
  I0325 00:24:24.494241 25 service_latency.go:363] Got endpoints: latency-svc-7v627 [563.425631ms]
  I0325 00:24:24.511289 25 service_latency.go:356] Created: latency-svc-qmbnn
  I0325 00:24:24.548304 25 service_latency.go:363] Got endpoints: latency-svc-nmdwn [614.184046ms]
  I0325 00:24:24.564871 25 service_latency.go:356] Created: latency-svc-tjg4c
  I0325 00:24:24.595495 25 service_latency.go:363] Got endpoints: latency-svc-kdjg2 [657.438441ms]
  I0325 00:24:24.636307 25 service_latency.go:356] Created: latency-svc-78865
  I0325 00:24:24.649404 25 service_latency.go:363] Got endpoints: latency-svc-7wbdm [712.011082ms]
  I0325 00:24:24.671762 25 service_latency.go:356] Created: latency-svc-snvxn
  I0325 00:24:24.702760 25 service_latency.go:363] Got endpoints: latency-svc-w7nmz [758.42937ms]
  I0325 00:24:24.718235 25 service_latency.go:356] Created: latency-svc-pwmh8
  I0325 00:24:24.746259 25 service_latency.go:363] Got endpoints: latency-svc-55xgv [746.543776ms]
  I0325 00:24:24.776114 25 service_latency.go:356] Created: latency-svc-7bhm9
  I0325 00:24:24.794259 25 service_latency.go:363] Got endpoints: latency-svc-5zwff [745.625327ms]
  I0325 00:24:24.811333 25 service_latency.go:356] Created: latency-svc-rdwv8
  I0325 00:24:24.842364 25 service_latency.go:363] Got endpoints: latency-svc-tftp6 [750.349995ms]
  I0325 00:24:24.857089 25 service_latency.go:356] Created: latency-svc-8mqrk
  I0325 00:24:24.901116 25 service_latency.go:363] Got endpoints: latency-svc-mkt8j [755.254909ms]
  I0325 00:24:24.918754 25 service_latency.go:356] Created: latency-svc-f9xbw
  I0325 00:24:24.947508 25 service_latency.go:363] Got endpoints: latency-svc-sjw4n [752.344881ms]
  I0325 00:24:24.959617 25 service_latency.go:356] Created: latency-svc-tggzl
  I0325 00:24:25.000911 25 service_latency.go:363] Got endpoints: latency-svc-snqvl [752.120485ms]
  I0325 00:24:25.017544 25 service_latency.go:356] Created: latency-svc-k7rwr
  I0325 00:24:25.046224 25 service_latency.go:363] Got endpoints: latency-svc-pvmll [753.859687ms]
  I0325 00:24:25.061013 25 service_latency.go:356] Created: latency-svc-rpbzv
  I0325 00:24:25.101115 25 service_latency.go:363] Got endpoints: latency-svc-69hdr [758.98764ms]
  I0325 00:24:25.116730 25 service_latency.go:356] Created: latency-svc-qc6vl
  I0325 00:24:25.144083 25 service_latency.go:363] Got endpoints: latency-svc-6k92p [751.164632ms]
  I0325 00:24:25.159736 25 service_latency.go:356] Created: latency-svc-tm9x2
  I0325 00:24:25.205235 25 service_latency.go:363] Got endpoints: latency-svc-nrr5m [763.857904ms]
  I0325 00:24:25.219255 25 service_latency.go:356] Created: latency-svc-fxzmw
  I0325 00:24:25.243524 25 service_latency.go:363] Got endpoints: latency-svc-qmbnn [748.993013ms]
  I0325 00:24:25.258029 25 service_latency.go:356] Created: latency-svc-vcww5
  I0325 00:24:25.293083 25 service_latency.go:363] Got endpoints: latency-svc-tjg4c [744.712735ms]
  I0325 00:24:25.314474 25 service_latency.go:356] Created: latency-svc-dbtts
  I0325 00:24:25.342496 25 service_latency.go:363] Got endpoints: latency-svc-78865 [746.944456ms]
  I0325 00:24:25.362838 25 service_latency.go:356] Created: latency-svc-24t57
  I0325 00:24:25.393161 25 service_latency.go:363] Got endpoints: latency-svc-snvxn [743.706142ms]
  I0325 00:24:25.412320 25 service_latency.go:356] Created: latency-svc-lxgwg
  I0325 00:24:25.442759 25 service_latency.go:363] Got endpoints: latency-svc-pwmh8 [739.947771ms]
  I0325 00:24:25.464852 25 service_latency.go:356] Created: latency-svc-pl6bb
  I0325 00:24:25.495389 25 service_latency.go:363] Got endpoints: latency-svc-7bhm9 [749.07444ms]
  I0325 00:24:25.514441 25 service_latency.go:356] Created: latency-svc-jbw7b
  I0325 00:24:25.546907 25 service_latency.go:363] Got endpoints: latency-svc-rdwv8 [751.64058ms]
  I0325 00:24:25.562142 25 service_latency.go:356] Created: latency-svc-r4sll
  I0325 00:24:25.591818 25 service_latency.go:363] Got endpoints: latency-svc-8mqrk [749.381844ms]
  I0325 00:24:25.613274 25 service_latency.go:356] Created: latency-svc-5ktrk
  I0325 00:24:25.649770 25 service_latency.go:363] Got endpoints: latency-svc-f9xbw [748.585109ms]
  I0325 00:24:25.661472 25 service_latency.go:356] Created: latency-svc-5snbw
  I0325 00:24:25.695344 25 service_latency.go:363] Got endpoints: latency-svc-tggzl [747.754262ms]
  I0325 00:24:25.726269 25 service_latency.go:356] Created: latency-svc-2lzhf
  I0325 00:24:25.742714 25 service_latency.go:363] Got endpoints: latency-svc-k7rwr [741.718233ms]
  I0325 00:24:25.758928 25 service_latency.go:356] Created: latency-svc-45rbc
  I0325 00:24:25.795624 25 service_latency.go:363] Got endpoints: latency-svc-rpbzv [749.310923ms]
  I0325 00:24:25.815256 25 service_latency.go:356] Created: latency-svc-4rxxv
  I0325 00:24:25.841770 25 service_latency.go:363] Got endpoints: latency-svc-qc6vl [740.588186ms]
  I0325 00:24:25.859445 25 service_latency.go:356] Created: latency-svc-zdbz5
  I0325 00:24:25.893418 25 service_latency.go:363] Got endpoints: latency-svc-tm9x2 [749.16425ms]
  I0325 00:24:25.915108 25 service_latency.go:356] Created: latency-svc-4bxdt
  I0325 00:24:25.949922 25 service_latency.go:363] Got endpoints: latency-svc-fxzmw [744.550914ms]
  I0325 00:24:25.967246 25 service_latency.go:356] Created: latency-svc-4bcdv
  I0325 00:24:26.005057 25 service_latency.go:363] Got endpoints: latency-svc-vcww5 [761.480782ms]
  I0325 00:24:26.025967 25 service_latency.go:356] Created: latency-svc-5jjl8
  I0325 00:24:26.044258 25 service_latency.go:363] Got endpoints: latency-svc-dbtts [751.122434ms]
  I0325 00:24:26.060642 25 service_latency.go:356] Created: latency-svc-fqs69
  I0325 00:24:26.095038 25 service_latency.go:363] Got endpoints: latency-svc-24t57 [752.230378ms]
  I0325 00:24:26.109019 25 service_latency.go:356] Created: latency-svc-7mxqf
  I0325 00:24:26.148324 25 service_latency.go:363] Got endpoints: latency-svc-lxgwg [755.111589ms]
  I0325 00:24:26.160674 25 service_latency.go:356] Created: latency-svc-l66x2
  I0325 00:24:26.194185 25 service_latency.go:363] Got endpoints: latency-svc-pl6bb [751.223066ms]
  I0325 00:24:26.214432 25 service_latency.go:356] Created: latency-svc-q7drb
  I0325 00:24:26.245839 25 service_latency.go:363] Got endpoints: latency-svc-jbw7b [750.397185ms]
  I0325 00:24:26.267754 25 service_latency.go:356] Created: latency-svc-vtkc5
  I0325 00:24:26.305981 25 service_latency.go:363] Got endpoints: latency-svc-r4sll [758.980571ms]
  I0325 00:24:26.320577 25 service_latency.go:356] Created: latency-svc-2wdlp
  I0325 00:24:26.341772 25 service_latency.go:363] Got endpoints: latency-svc-5ktrk [749.88757ms]
  I0325 00:24:26.362151 25 service_latency.go:356] Created: latency-svc-5xf4p
  I0325 00:24:26.409287 25 service_latency.go:363] Got endpoints: latency-svc-5snbw [759.42386ms]
  I0325 00:24:26.427740 25 service_latency.go:356] Created: latency-svc-95wpq
  I0325 00:24:26.441459 25 service_latency.go:363] Got endpoints: latency-svc-2lzhf [745.969162ms]
  I0325 00:24:26.464657 25 service_latency.go:356] Created: latency-svc-6d2rl
  I0325 00:24:26.491703 25 service_latency.go:363] Got endpoints: latency-svc-45rbc [748.918535ms]
  I0325 00:24:26.510843 25 service_latency.go:356] Created: latency-svc-ncr67
  I0325 00:24:26.541720 25 service_latency.go:363] Got endpoints: latency-svc-4rxxv [741.952569ms]
  I0325 00:24:26.556769 25 service_latency.go:356] Created: latency-svc-g8gkk
  I0325 00:24:26.591512 25 service_latency.go:363] Got endpoints: latency-svc-zdbz5 [749.675918ms]
  I0325 00:24:26.607563 25 service_latency.go:356] Created: latency-svc-rcz48
  I0325 00:24:26.642907 25 service_latency.go:363] Got endpoints: latency-svc-4bxdt [749.420994ms]
  I0325 00:24:26.664093 25 service_latency.go:356] Created: latency-svc-bm62h
  I0325 00:24:26.689308 25 service_latency.go:363] Got endpoints: latency-svc-4bcdv [739.305701ms]
  I0325 00:24:26.704615 25 service_latency.go:356] Created: latency-svc-rrxnd
  I0325 00:24:26.745062 25 service_latency.go:363] Got endpoints: latency-svc-5jjl8 [739.933046ms]
  I0325 00:24:26.765133 25 service_latency.go:356] Created: latency-svc-pcqsp
  I0325 00:24:26.801079 25 service_latency.go:363] Got endpoints: latency-svc-fqs69 [756.753638ms]
  I0325 00:24:26.818381 25 service_latency.go:356] Created: latency-svc-vwhw7
  I0325 00:24:26.843115 25 service_latency.go:363] Got endpoints: latency-svc-7mxqf [748.010977ms]
  I0325 00:24:26.857476 25 service_latency.go:356] Created: latency-svc-l27ct
  I0325 00:24:26.894855 25 service_latency.go:363] Got endpoints: latency-svc-l66x2 [746.475164ms]
  I0325 00:24:26.910355 25 service_latency.go:356] Created: latency-svc-zjtpr
  I0325 00:24:26.943360 25 service_latency.go:363] Got endpoints: latency-svc-q7drb [748.922298ms]
  I0325 00:24:26.957875 25 service_latency.go:356] Created: latency-svc-jtkfg
  I0325 00:24:26.996142 25 service_latency.go:363] Got endpoints: latency-svc-vtkc5 [750.2297ms]
  I0325 00:24:27.011474 25 service_latency.go:356] Created: latency-svc-jt2zb
  I0325 00:24:27.047867 25 service_latency.go:363] Got endpoints: latency-svc-2wdlp [741.824467ms]
  I0325 00:24:27.063654 25 service_latency.go:356] Created: latency-svc-jbxx2
  I0325 00:24:27.093752 25 service_latency.go:363] Got endpoints: latency-svc-5xf4p [751.92541ms]
  I0325 00:24:27.116839 25 service_latency.go:356] Created: latency-svc-qzwmc
  I0325 00:24:27.139415 25 service_latency.go:363] Got endpoints: latency-svc-95wpq [729.950453ms]
  I0325 00:24:27.155491 25 service_latency.go:356] Created: latency-svc-pr59z
  I0325 00:24:27.191048 25 service_latency.go:363] Got endpoints: latency-svc-6d2rl [749.424511ms]
  I0325 00:24:27.207940 25 service_latency.go:356] Created: latency-svc-qgsns
  I0325 00:24:27.242480 25 service_latency.go:363] Got endpoints: latency-svc-ncr67 [750.718344ms]
  I0325 00:24:27.260358 25 service_latency.go:356] Created: latency-svc-w6bhp
  I0325 00:24:27.297521 25 service_latency.go:363] Got endpoints: latency-svc-g8gkk [755.743324ms]
  I0325 00:24:27.310442 25 service_latency.go:356] Created: latency-svc-x5ql5
  I0325 00:24:27.345741 25 service_latency.go:363] Got endpoints: latency-svc-rcz48 [754.152502ms]
  I0325 00:24:27.361100 25 service_latency.go:356] Created: latency-svc-bd5fj
  I0325 00:24:27.402612 25 service_latency.go:363] Got endpoints: latency-svc-bm62h [759.651627ms]
  I0325 00:24:27.429316 25 service_latency.go:356] Created: latency-svc-f2h8t
  I0325 00:24:27.441752 25 service_latency.go:363] Got endpoints: latency-svc-rrxnd [752.391236ms]
  I0325 00:24:27.458266 25 service_latency.go:356] Created: latency-svc-8f48v
  I0325 00:24:27.493137 25 service_latency.go:363] Got endpoints: latency-svc-pcqsp [747.687176ms]
  I0325 00:24:27.510301 25 service_latency.go:356] Created: latency-svc-g94xt
  I0325 00:24:27.546969 25 service_latency.go:363] Got endpoints: latency-svc-vwhw7 [745.581827ms]
  I0325 00:24:27.557921 25 service_latency.go:356] Created: latency-svc-d7gbf
  I0325 00:24:27.592181 25 service_latency.go:363] Got endpoints: latency-svc-l27ct [749.007504ms]
  I0325 00:24:27.611532 25 service_latency.go:356] Created: latency-svc-hp9sq
  I0325 00:24:27.640082 25 service_latency.go:363] Got endpoints: latency-svc-zjtpr [745.172088ms]
  I0325 00:24:27.696440 25 service_latency.go:356] Created: latency-svc-pqtjk
  I0325 00:24:27.698125 25 service_latency.go:363] Got endpoints: latency-svc-jtkfg [754.69334ms]
  I0325 00:24:27.717932 25 service_latency.go:356] Created: latency-svc-8jd6h
  I0325 00:24:27.744797 25 service_latency.go:363] Got endpoints: latency-svc-jt2zb [748.600434ms]
  I0325 00:24:27.761051 25 service_latency.go:356] Created: latency-svc-d9ffh
  I0325 00:24:27.793789 25 service_latency.go:363] Got endpoints: latency-svc-jbxx2 [745.76174ms]
  I0325 00:24:27.812471 25 service_latency.go:356] Created: latency-svc-8t5zd
  I0325 00:24:27.844640 25 service_latency.go:363] Got endpoints: latency-svc-qzwmc [750.828391ms]
  I0325 00:24:27.858311 25 service_latency.go:356] Created: latency-svc-clcmq
  I0325 00:24:27.889106 25 service_latency.go:363] Got endpoints: latency-svc-pr59z [749.383434ms]
  I0325 00:24:27.906345 25 service_latency.go:356] Created: latency-svc-nkp5z
  I0325 00:24:27.961539 25 service_latency.go:363] Got endpoints: latency-svc-qgsns [770.211916ms]
  I0325 00:24:27.980674 25 service_latency.go:356] Created: latency-svc-rr7fv
  I0325 00:24:27.995819 25 service_latency.go:363] Got endpoints: latency-svc-w6bhp [753.2837ms]
  I0325 00:24:28.045710 25 service_latency.go:363] Got endpoints: latency-svc-x5ql5 [747.925403ms]
  I0325 00:24:28.094642 25 service_latency.go:363] Got endpoints: latency-svc-bd5fj [748.844021ms]
  I0325 00:24:28.144934 25 service_latency.go:363] Got endpoints: latency-svc-f2h8t [742.150416ms]
  I0325 00:24:28.192601 25 service_latency.go:363] Got endpoints: latency-svc-8f48v [750.261375ms]
  I0325 00:24:28.243972 25 service_latency.go:363] Got endpoints: latency-svc-g94xt [750.664702ms]
  I0325 00:24:28.290711 25 service_latency.go:363] Got endpoints: latency-svc-d7gbf [743.539349ms]
  I0325 00:24:28.345732 25 service_latency.go:363] Got endpoints: latency-svc-hp9sq [753.481356ms]
  I0325 00:24:28.391512 25 service_latency.go:363] Got endpoints: latency-svc-pqtjk [751.159869ms]
  I0325 00:24:28.445040 25 service_latency.go:363] Got endpoints: latency-svc-8jd6h [746.440237ms]
  I0325 00:24:28.497134 25 service_latency.go:363] Got endpoints: latency-svc-d9ffh [752.017901ms]
  I0325 00:24:28.545027 25 service_latency.go:363] Got endpoints: latency-svc-8t5zd [751.17899ms]
  I0325 00:24:28.594518 25 service_latency.go:363] Got endpoints: latency-svc-clcmq [749.814589ms]
  I0325 00:24:28.646543 25 service_latency.go:363] Got endpoints: latency-svc-nkp5z [757.373367ms]
  I0325 00:24:28.697090 25 service_latency.go:363] Got endpoints: latency-svc-rr7fv [735.40045ms]
  I0325 00:24:28.697268 25 service_latency.go:114] Latencies: [32.69334ms 39.344936ms 56.996386ms 67.243173ms 83.730375ms 96.629836ms 106.071181ms 122.787734ms 148.342997ms 157.48229ms 167.376278ms 175.137674ms 189.218704ms 200.411254ms 202.362047ms 202.846828ms 206.195131ms 208.272193ms 209.343895ms 212.414568ms 214.438825ms 214.724563ms 221.005122ms 221.109906ms 224.221385ms 227.273141ms 228.232814ms 229.143649ms 233.640776ms 233.661357ms 238.398581ms 239.462048ms 240.320065ms 240.909717ms 253.198396ms 253.574926ms 256.177408ms 257.58388ms 260.582692ms 261.45296ms 263.289767ms 264.385623ms 274.057955ms 277.238738ms 317.355261ms 323.47335ms 369.942444ms 423.235127ms 454.64692ms 464.562791ms 520.986754ms 529.43601ms 563.425631ms 587.413929ms 614.184046ms 657.438441ms 669.420629ms 678.512372ms 712.011082ms 729.218132ms 729.950453ms 735.40045ms 737.875253ms 739.305701ms 739.923042ms 739.933046ms 739.947771ms 740.588186ms 741.718233ms 741.824467ms 741.952569ms 742.150416ms 743.539349ms 743.706142ms 744.382867ms 744.550914ms 744.712735ms 744.952234ms 745.172088ms 745.581827ms 745.625327ms 745.687899ms 745.76174ms 745.812903ms 745.933715ms 745.969162ms 746.440237ms 746.475164ms 746.543776ms 746.595735ms 746.73083ms 746.939673ms 746.944456ms 747.171394ms 747.26575ms 747.303585ms 747.443057ms 747.48004ms 747.539524ms 747.687176ms 747.754262ms 747.925403ms 748.010977ms 748.131212ms 748.144254ms 748.230738ms 748.554489ms 748.558709ms 748.571143ms 748.585109ms 748.600434ms 748.664384ms 748.721638ms 748.844021ms 748.918535ms 748.922298ms 748.993013ms 748.999032ms 749.007504ms 749.07444ms 749.10714ms 749.16425ms 749.198492ms 749.221142ms 749.310923ms 749.381844ms 749.383434ms 749.390465ms 749.420994ms 749.424511ms 749.430923ms 749.664519ms 749.675918ms 749.814589ms 749.88757ms 750.189142ms 750.2297ms 750.261375ms 750.349995ms 750.38981ms 750.397185ms 750.420386ms 750.511179ms 750.595383ms 750.664702ms 750.706507ms 750.718344ms 750.828391ms 751.122434ms 751.159869ms 751.164632ms 751.17899ms 751.223066ms 751.563523ms 751.602358ms 751.64058ms 751.779168ms 751.876376ms 751.92541ms 752.017901ms 752.018773ms 752.095239ms 752.120485ms 752.189858ms 752.230378ms 752.344881ms 752.391236ms 752.532839ms 753.003979ms 753.188232ms 753.2837ms 753.410963ms 753.481356ms 753.859687ms 754.152502ms 754.158942ms 754.69334ms 755.111589ms 755.254909ms 755.743324ms 756.149634ms 756.753638ms 757.373367ms 758.42937ms 758.980571ms 758.98764ms 759.42386ms 759.466098ms 759.651627ms 761.266803ms 761.480782ms 763.857904ms 770.211916ms 791.392081ms 825.308608ms 835.545959ms 835.957621ms 845.078678ms 892.79577ms 935.627556ms]
  I0325 00:24:28.697282 25 service_latency.go:118] 50 %ile: 747.754262ms
  I0325 00:24:28.697297 25 service_latency.go:119] 90 %ile: 756.149634ms
  I0325 00:24:28.697305 25 service_latency.go:120] 99 %ile: 892.79577ms
  I0325 00:24:28.697312 25 service_latency.go:121] Total sample count: 200
  I0325 00:24:28.697422 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-6733" for this suite. @ 03/25/25 00:24:28.704
• [9.834 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 03/25/25 00:24:28.712
  I0325 00:24:28.712619 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename controllerrevisions @ 03/25/25 00:24:28.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:24:28.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:24:28.743
  STEP: Creating DaemonSet "e2e-5vz7k-daemon-set" @ 03/25/25 00:24:28.829
  STEP: Check that daemon pods launch on every node of the cluster. @ 03/25/25 00:24:28.841
  I0325 00:24:28.918469 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-5vz7k-daemon-set: 0
  I0325 00:24:28.918538 25 fixtures.go:131] Node master-1 is running 0 daemon pod, expected 1
  I0325 00:24:29.851070 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-5vz7k-daemon-set: 0
  I0325 00:24:29.851121 25 fixtures.go:131] Node master-1 is running 0 daemon pod, expected 1
  I0325 00:24:30.850903 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-5vz7k-daemon-set: 0
  I0325 00:24:30.850958 25 fixtures.go:131] Node master-1 is running 0 daemon pod, expected 1
  I0325 00:24:31.848832 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-5vz7k-daemon-set: 2
  I0325 00:24:31.848868 25 fixtures.go:131] Node master-3 is running 0 daemon pod, expected 1
  I0325 00:24:32.851327 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-5vz7k-daemon-set: 4
  I0325 00:24:32.851378 25 fixtures.go:131] Node master-3 is running 0 daemon pod, expected 1
  I0325 00:24:33.863094 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-5vz7k-daemon-set: 5
  I0325 00:24:33.863142 25 fixtures.go:136] Number of running nodes: 5, number of available pods: 5 in daemonset e2e-5vz7k-daemon-set
  STEP: Confirm DaemonSet "e2e-5vz7k-daemon-set" successfully created with "daemonset-name=e2e-5vz7k-daemon-set" label @ 03/25/25 00:24:33.87
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-5vz7k-daemon-set" @ 03/25/25 00:24:33.877
  I0325 00:24:33.881777 25 controller_revision.go:162] Located ControllerRevision: "e2e-5vz7k-daemon-set-646f5f4d99"
  STEP: Patching ControllerRevision "e2e-5vz7k-daemon-set-646f5f4d99" @ 03/25/25 00:24:33.891
  I0325 00:24:33.901526 25 controller_revision.go:173] e2e-5vz7k-daemon-set-646f5f4d99 has been patched
  STEP: Create a new ControllerRevision @ 03/25/25 00:24:33.901
  I0325 00:24:33.915995 25 controller_revision.go:191] Created ControllerRevision: e2e-5vz7k-daemon-set-b47ddb6dc
  STEP: Confirm that there are two ControllerRevisions @ 03/25/25 00:24:33.916
  I0325 00:24:33.916129 25 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0325 00:24:33.981853 25 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-5vz7k-daemon-set-646f5f4d99" @ 03/25/25 00:24:33.981
  STEP: Confirm that there is only one ControllerRevision @ 03/25/25 00:24:33.998
  I0325 00:24:33.998357 25 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0325 00:24:34.084897 25 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-5vz7k-daemon-set-b47ddb6dc" @ 03/25/25 00:24:34.093
  I0325 00:24:34.109710 25 controller_revision.go:220] e2e-5vz7k-daemon-set-b47ddb6dc has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 03/25/25 00:24:34.109
  W0325 00:24:34.121593      25 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 03/25/25 00:24:34.122
  I0325 00:24:34.122975 25 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0325 00:24:34.153657 25 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-5vz7k-daemon-set-b47ddb6dc=updated" @ 03/25/25 00:24:34.153
  STEP: Confirm that there is only one ControllerRevision @ 03/25/25 00:24:34.188
  I0325 00:24:34.188964 25 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0325 00:24:34.284019 25 controller_revision.go:265] Found 1 ControllerRevisions
  I0325 00:24:34.385687 25 controller_revision.go:246] ControllerRevision "e2e-5vz7k-daemon-set-689977488b" has revision 3
  STEP: Deleting DaemonSet "e2e-5vz7k-daemon-set" @ 03/25/25 00:24:34.392
  STEP: deleting DaemonSet.extensions e2e-5vz7k-daemon-set in namespace controllerrevisions-2860, will wait for the garbage collector to delete the pods @ 03/25/25 00:24:34.392
  I0325 00:24:34.513111 25 resources.go:139] Deleting DaemonSet.extensions e2e-5vz7k-daemon-set took: 66.227628ms
  I0325 00:24:34.613795 25 resources.go:163] Terminating DaemonSet.extensions e2e-5vz7k-daemon-set pods took: 100.680873ms
  I0325 00:24:36.031137 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-5vz7k-daemon-set: 0
  I0325 00:24:36.031275 25 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-5vz7k-daemon-set
  I0325 00:24:36.043523 25 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"2791914"},"items":null}

  I0325 00:24:36.134238 25 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"2791927"},"items":null}

  I0325 00:24:36.163633 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-2860" for this suite. @ 03/25/25 00:24:36.242
• [7.546 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 03/25/25 00:24:36.263
  I0325 00:24:36.263958 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename crd-webhook @ 03/25/25 00:24:36.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:24:36.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:24:36.301
  STEP: Setting up server cert @ 03/25/25 00:24:36.305
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 03/25/25 00:24:36.625
  STEP: Deploying the custom resource conversion webhook pod @ 03/25/25 00:24:36.642
  STEP: Wait for the deployment to be ready @ 03/25/25 00:24:36.664
  I0325 00:24:36.680114 25 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  I0325 00:24:38.698244 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 25, 0, 24, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 24, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 0, 24, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 24, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-99f4d744b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0325 00:24:40.703347 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 25, 0, 24, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 24, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 0, 24, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 24, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-99f4d744b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 03/25/25 00:24:42.702
  STEP: Verifying the service has paired with the endpoint @ 03/25/25 00:24:42.717
  I0325 00:24:43.718202 25 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0325 00:24:43.721970 25 util.go:426] Unexpected error trying to get Endpoints for e2e-test-crd-conversion-webhook : endpoints "e2e-test-crd-conversion-webhook" not found
  I0325 00:24:44.719076 25 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0325 00:24:44.724027 25 util.go:426] Unexpected error trying to get Endpoints for e2e-test-crd-conversion-webhook : endpoints "e2e-test-crd-conversion-webhook" not found
  I0325 00:24:45.718312 25 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0325 00:24:45.721769 25 util.go:426] Unexpected error trying to get Endpoints for e2e-test-crd-conversion-webhook : endpoints "e2e-test-crd-conversion-webhook" not found
  I0325 00:24:46.718715 25 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0325 00:24:46.722268 25 util.go:426] Unexpected error trying to get Endpoints for e2e-test-crd-conversion-webhook : endpoints "e2e-test-crd-conversion-webhook" not found
  I0325 00:24:47.718845 25 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0325 00:24:47.722399 25 util.go:426] Unexpected error trying to get Endpoints for e2e-test-crd-conversion-webhook : endpoints "e2e-test-crd-conversion-webhook" not found
  I0325 00:24:48.718511 25 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0325 00:24:48.725141 25 util.go:426] Unexpected error trying to get Endpoints for e2e-test-crd-conversion-webhook : endpoints "e2e-test-crd-conversion-webhook" not found
  I0325 00:24:49.718934 25 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0325 00:24:49.725473 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Creating a v1 custom resource @ 03/25/25 00:24:57.285
  STEP: v2 custom resource should be converted @ 03/25/25 00:24:57.299
  I0325 00:24:57.863865 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-8663" for this suite. @ 03/25/25 00:24:57.87
• [21.618 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 03/25/25 00:24:57.885
  I0325 00:24:57.885286 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename pod-network-test @ 03/25/25 00:24:57.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:24:57.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:24:57.919
  STEP: Performing setup for networking test in namespace pod-network-test-6546 @ 03/25/25 00:24:57.924
  STEP: creating a selector @ 03/25/25 00:24:57.924
  STEP: Creating the service pods in kubernetes @ 03/25/25 00:24:57.924
  I0325 00:24:57.924662 25 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 03/25/25 00:25:16.116
  I0325 00:25:18.134878 25 utils.go:803] Setting MaxTries for pod polling to 55 for networking test based on endpoint count 5
  I0325 00:25:18.135073 25 networking.go:42] Breadth first check of 10.233.64.60 on host 172.20.10.91...
  I0325 00:25:18.138926 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.65.106:9080/dial?request=hostname&protocol=udp&host=10.233.64.60&port=8081&tries=1'] Namespace:pod-network-test-6546 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 00:25:18.139138 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 00:25:18.139315 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6546/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.65.106%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.64.60%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0325 00:25:18.200953 25 utils.go:356] Waiting for responses: map[]
  I0325 00:25:18.201000 25 utils.go:360] reached 10.233.64.60 after 0/1 tries
  I0325 00:25:18.201011 25 networking.go:42] Breadth first check of 10.233.65.94 on host 172.20.10.146...
  I0325 00:25:18.204913 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.65.106:9080/dial?request=hostname&protocol=udp&host=10.233.65.94&port=8081&tries=1'] Namespace:pod-network-test-6546 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 00:25:18.204947 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 00:25:18.205064 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6546/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.65.106%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.65.94%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0325 00:25:18.262105 25 utils.go:356] Waiting for responses: map[]
  I0325 00:25:18.262222 25 utils.go:360] reached 10.233.65.94 after 0/1 tries
  I0325 00:25:18.262261 25 networking.go:42] Breadth first check of 10.233.66.170 on host 172.20.10.136...
  I0325 00:25:18.266342 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.65.106:9080/dial?request=hostname&protocol=udp&host=10.233.66.170&port=8081&tries=1'] Namespace:pod-network-test-6546 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 00:25:18.266440 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 00:25:18.266525 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6546/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.65.106%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.66.170%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0325 00:25:18.320707 25 utils.go:356] Waiting for responses: map[]
  I0325 00:25:18.320748 25 utils.go:360] reached 10.233.66.170 after 0/1 tries
  I0325 00:25:18.320759 25 networking.go:42] Breadth first check of 10.233.68.216 on host 172.20.10.81...
  I0325 00:25:18.324050 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.65.106:9080/dial?request=hostname&protocol=udp&host=10.233.68.216&port=8081&tries=1'] Namespace:pod-network-test-6546 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 00:25:18.324164 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 00:25:18.324234 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6546/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.65.106%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.68.216%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0325 00:25:18.387584 25 utils.go:356] Waiting for responses: map[]
  I0325 00:25:18.387651 25 utils.go:360] reached 10.233.68.216 after 0/1 tries
  I0325 00:25:18.387661 25 networking.go:42] Breadth first check of 10.233.67.9 on host 172.20.10.227...
  I0325 00:25:18.391354 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.65.106:9080/dial?request=hostname&protocol=udp&host=10.233.67.9&port=8081&tries=1'] Namespace:pod-network-test-6546 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 00:25:18.391391 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 00:25:18.391458 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6546/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.65.106%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.67.9%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0325 00:25:18.447670 25 utils.go:356] Waiting for responses: map[]
  I0325 00:25:18.447713 25 utils.go:360] reached 10.233.67.9 after 0/1 tries
  I0325 00:25:18.447732 25 networking.go:53] Going to retry 0 out of 5 pods....
  I0325 00:25:18.447876 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6546" for this suite. @ 03/25/25 00:25:18.452
• [20.578 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3683
  STEP: Creating a kubernetes client @ 03/25/25 00:25:18.462
  I0325 00:25:18.462561 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename services @ 03/25/25 00:25:18.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:25:18.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:25:18.489
  STEP: creating service multiprotocol-test in namespace services-921 @ 03/25/25 00:25:18.491
  STEP: creating pod pod1 in namespace services-921 @ 03/25/25 00:25:18.503
  STEP: Creating pod pod1 in namespace services-921 @ 03/25/25 00:25:18.503
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-921 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 03/25/25 00:25:24.542
  I0325 00:25:24.555814 25 service.go:4553] successfully validated that service multiprotocol-test in namespace services-921 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 03/25/25 00:25:24.555
  I0325 00:25:24.555933 25 resource.go:361] Creating new exec pod
  I0325 00:25:26.575510 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-921 exec execpodsqgg9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.46.70 80'
  I0325 00:25:26.702831 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.46.70 80\nConnection to 10.233.46.70 80 port [tcp/http] succeeded!\n"
  I0325 00:25:26.702891 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0325 00:25:26.702966 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-921 exec execpodsqgg9 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.46.70 80'
  I0325 00:25:28.834047 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.46.70 80\n"
  I0325 00:25:28.834108 25 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 03/25/25 00:25:28.834
  I0325 00:25:28.843743 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-921 exec execpodsqgg9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.46.70 80'
  I0325 00:25:28.965416 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.46.70 80\nConnection to 10.233.46.70 80 port [tcp/http] succeeded!\n"
  I0325 00:25:28.965467 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0325 00:25:28.965651 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-921 exec execpodsqgg9 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.46.70 80'
  I0325 00:25:29.101576 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.46.70 80\n"
  I0325 00:25:29.101637 25 builder.go:147] stdout: ""
  I0325 00:25:30.965904 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-921 exec execpodsqgg9 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.46.70 80'
  I0325 00:25:31.084006 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.46.70 80\n"
  I0325 00:25:31.084085 25 builder.go:147] stdout: ""
  I0325 00:25:32.966426 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-921 exec execpodsqgg9 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.46.70 80'
  I0325 00:25:33.071767 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.46.70 80\n"
  I0325 00:25:33.071839 25 builder.go:147] stdout: ""
  I0325 00:25:34.966768 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-921 exec execpodsqgg9 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.46.70 80'
  I0325 00:25:35.084958 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.46.70 80\n"
  I0325 00:25:35.085031 25 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 03/25/25 00:25:35.085
  I0325 00:25:35.098688 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-921 exec execpodsqgg9 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.46.70 80'
  I0325 00:25:37.228401 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.46.70 80\n"
  I0325 00:25:37.228460 25 builder.go:147] stdout: "pod1"
  I0325 00:25:37.228773 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-921 exec execpodsqgg9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.46.70 80'
  I0325 00:25:37.354967 25 builder.go:135] rc: 1
  I0325 00:25:37.355155 25 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-921 exec execpodsqgg9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.46.70 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.46.70 80
  nc: connect to 10.233.46.70 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0325 00:25:39.229718 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-921 exec execpodsqgg9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.46.70 80'
  I0325 00:25:39.344076 25 builder.go:135] rc: 1
  I0325 00:25:39.344154 25 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-921 exec execpodsqgg9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.46.70 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.46.70 80
  nc: connect to 10.233.46.70 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0325 00:25:41.228897 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-921 exec execpodsqgg9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.46.70 80'
  I0325 00:25:41.348491 25 builder.go:135] rc: 1
  I0325 00:25:41.348581 25 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-921 exec execpodsqgg9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.46.70 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.233.46.70 80
  + echo hostName
  nc: connect to 10.233.46.70 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0325 00:25:43.230534 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-921 exec execpodsqgg9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.46.70 80'
  I0325 00:25:43.352293 25 builder.go:135] rc: 1
  I0325 00:25:43.352395 25 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-921 exec execpodsqgg9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.46.70 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.46.70 80
  nc: connect to 10.233.46.70 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0325 00:25:43.352820 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-921" for this suite. @ 03/25/25 00:25:43.358
• [24.903 seconds]
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:306
  STEP: Creating a kubernetes client @ 03/25/25 00:25:43.366
  I0325 00:25:43.367193 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename svcaccounts @ 03/25/25 00:25:43.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:25:43.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:25:43.397
  STEP: Creating a pod to test service account token:  @ 03/25/25 00:25:43.4
  STEP: Saw pod success @ 03/25/25 00:25:47.427
  I0325 00:25:47.431112 25 output.go:207] Trying to get logs from node master-2 pod test-pod-1fb6cbcd-d7c1-4c4b-8788-fe901598eb4d container agnhost-container: <nil>
  STEP: delete the pod @ 03/25/25 00:25:47.437
  I0325 00:25:47.466444 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1906" for this suite. @ 03/25/25 00:25:47.471
• [4.117 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 03/25/25 00:25:47.482
  I0325 00:25:47.482992 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename webhook @ 03/25/25 00:25:47.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:25:47.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:25:47.526
  STEP: Setting up server cert @ 03/25/25 00:25:47.631
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/25/25 00:25:47.937
  STEP: Deploying the webhook pod @ 03/25/25 00:25:47.956
  STEP: Wait for the deployment to be ready @ 03/25/25 00:25:47.984
  I0325 00:25:48.005316 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 03/25/25 00:25:50.017
  STEP: Verifying the service has paired with the endpoint @ 03/25/25 00:25:50.06
  I0325 00:25:51.060357 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 03/25/25 00:25:51.069
  STEP: create a pod that should be updated by the webhook @ 03/25/25 00:25:51.093
  I0325 00:25:51.265216 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6770" for this suite. @ 03/25/25 00:25:51.28
  STEP: Destroying namespace "webhook-markers-8838" for this suite. @ 03/25/25 00:25:51.297
• [3.830 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 03/25/25 00:25:51.315
  I0325 00:25:51.315353 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename downward-api @ 03/25/25 00:25:51.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:25:51.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:25:51.369
  STEP: Creating a pod to test downward API volume plugin @ 03/25/25 00:25:51.371
  STEP: Saw pod success @ 03/25/25 00:25:57.416
  I0325 00:25:57.419248 25 output.go:207] Trying to get logs from node master-2 pod downwardapi-volume-4167c7b2-6c75-4eba-9443-ee07b053dc80 container client-container: <nil>
  STEP: delete the pod @ 03/25/25 00:25:57.426
  I0325 00:25:57.460290 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5656" for this suite. @ 03/25/25 00:25:57.464
• [6.158 seconds]
------------------------------
SSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 03/25/25 00:25:57.473
  I0325 00:25:57.473641 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename configmap @ 03/25/25 00:25:57.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:25:57.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:25:57.527
  STEP: Creating configMap configmap-8258/configmap-test-3ec9996f-3804-49d6-aab0-adf0c7ea9ab6 @ 03/25/25 00:25:57.534
  STEP: Creating a pod to test consume configMaps @ 03/25/25 00:25:57.545
  STEP: Saw pod success @ 03/25/25 00:26:01.581
  I0325 00:26:01.584580 25 output.go:207] Trying to get logs from node master-2 pod pod-configmaps-5a526e15-4106-4568-a03c-d54b932c41fa container env-test: <nil>
  STEP: delete the pod @ 03/25/25 00:26:01.591
  I0325 00:26:01.727407 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8258" for this suite. @ 03/25/25 00:26:01.732
• [4.289 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 03/25/25 00:26:01.763
  I0325 00:26:01.763364 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename security-context-test @ 03/25/25 00:26:01.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:26:01.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:26:01.811
  I0325 00:26:05.867932 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9004" for this suite. @ 03/25/25 00:26:05.874
• [4.119 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 03/25/25 00:26:05.882
  I0325 00:26:05.882659 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename services @ 03/25/25 00:26:05.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:26:05.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:26:05.93
  I0325 00:26:05.936758 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4136" for this suite. @ 03/25/25 00:26:05.991
• [0.132 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:839
  STEP: Creating a kubernetes client @ 03/25/25 00:26:06.015
  I0325 00:26:06.015243 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename svcaccounts @ 03/25/25 00:26:06.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:26:06.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:26:06.057
  STEP: Creating ServiceAccount "e2e-sa-mbkmd"  @ 03/25/25 00:26:06.059
  I0325 00:26:06.101682 25 service_accounts.go:854] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-mbkmd"  @ 03/25/25 00:26:06.101
  I0325 00:26:06.122090 25 service_accounts.go:868] AutomountServiceAccountToken: true
  I0325 00:26:06.122482 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3251" for this suite. @ 03/25/25 00:26:06.128
• [0.135 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:130
  STEP: Creating a kubernetes client @ 03/25/25 00:26:06.151
  I0325 00:26:06.151581 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename dns @ 03/25/25 00:26:06.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:26:06.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:26:06.193
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-7659.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-7659.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 03/25/25 00:26:06.195
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-7659.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-7659.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 03/25/25 00:26:06.195
  STEP: creating a pod to probe /etc/hosts @ 03/25/25 00:26:06.195
  STEP: submitting the pod to kubernetes @ 03/25/25 00:26:06.195
  STEP: retrieving the pod @ 03/25/25 00:26:10.233
  STEP: looking for the results for each expected name from probers @ 03/25/25 00:26:10.236
  I0325 00:26:10.249099 25 dns_common.go:546] DNS probes using dns-7659/dns-test-0fbfd080-5fdc-4d49-b0b6-46cd1501a453 succeeded

  STEP: deleting the pod @ 03/25/25 00:26:10.249
  I0325 00:26:10.296300 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7659" for this suite. @ 03/25/25 00:26:10.305
• [4.183 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 03/25/25 00:26:10.334
  I0325 00:26:10.334819 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename configmap @ 03/25/25 00:26:10.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:26:10.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:26:10.409
  STEP: Creating configMap with name configmap-test-volume-map-34c9a6ed-2f35-47b5-8b6e-3c6842e61216 @ 03/25/25 00:26:10.411
  STEP: Creating a pod to test consume configMaps @ 03/25/25 00:26:10.418
  STEP: Saw pod success @ 03/25/25 00:26:14.45
  I0325 00:26:14.454336 25 output.go:207] Trying to get logs from node master-2 pod pod-configmaps-327dd2eb-4046-419f-9033-e22893226dfa container agnhost-container: <nil>
  STEP: delete the pod @ 03/25/25 00:26:14.461
  I0325 00:26:14.513023 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9274" for this suite. @ 03/25/25 00:26:14.524
• [4.200 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 03/25/25 00:26:14.535
  I0325 00:26:14.535238 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename resourcequota @ 03/25/25 00:26:14.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:26:14.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:26:14.586
  STEP: Discovering how many secrets are in namespace by default @ 03/25/25 00:26:14.588
  STEP: Counting existing ResourceQuota @ 03/25/25 00:26:19.602
  STEP: Creating a ResourceQuota @ 03/25/25 00:26:24.608
  STEP: Ensuring resource quota status is calculated @ 03/25/25 00:26:24.637
  STEP: Creating a Secret @ 03/25/25 00:26:26.644
  STEP: Ensuring resource quota status captures secret creation @ 03/25/25 00:26:26.673
  STEP: Deleting a secret @ 03/25/25 00:26:28.678
  STEP: Ensuring resource quota status released usage @ 03/25/25 00:26:28.69
  I0325 00:26:30.695859 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7" for this suite. @ 03/25/25 00:26:30.701
• [16.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 03/25/25 00:26:30.724
  I0325 00:26:30.724195 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename downward-api @ 03/25/25 00:26:30.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:26:30.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:26:30.778
  STEP: Creating a pod to test downward API volume plugin @ 03/25/25 00:26:30.782
  STEP: Saw pod success @ 03/25/25 00:26:34.811
  I0325 00:26:34.814765 25 output.go:207] Trying to get logs from node master-2 pod downwardapi-volume-36c87600-c718-42b5-8539-eb9a2509b0a8 container client-container: <nil>
  STEP: delete the pod @ 03/25/25 00:26:34.83
  I0325 00:26:34.867868 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2310" for this suite. @ 03/25/25 00:26:34.872
• [4.159 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 03/25/25 00:26:34.883
  I0325 00:26:34.883600 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename kubectl @ 03/25/25 00:26:34.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:26:34.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:26:34.913
  STEP: creating a replication controller @ 03/25/25 00:26:34.918
  I0325 00:26:34.918754 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-5895 create -f -'
  I0325 00:26:35.039535 25 builder.go:146] stderr: ""
  I0325 00:26:35.039588 25 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 03/25/25 00:26:35.039
  I0325 00:26:35.039749 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-5895 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0325 00:26:35.139924 25 builder.go:146] stderr: ""
  I0325 00:26:35.139991 25 builder.go:147] stdout: "update-demo-nautilus-x56gl update-demo-nautilus-xzvtd "
  I0325 00:26:35.140061 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-5895 get pods update-demo-nautilus-x56gl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0325 00:26:35.216006 25 builder.go:146] stderr: ""
  I0325 00:26:35.216063 25 builder.go:147] stdout: ""
  I0325 00:26:35.216084 25 kubectl.go:2499] update-demo-nautilus-x56gl is created but not running
  I0325 00:26:40.216904 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-5895 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0325 00:26:40.279084 25 builder.go:146] stderr: ""
  I0325 00:26:40.279238 25 builder.go:147] stdout: "update-demo-nautilus-x56gl update-demo-nautilus-xzvtd "
  I0325 00:26:40.279287 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-5895 get pods update-demo-nautilus-x56gl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0325 00:26:40.352188 25 builder.go:146] stderr: ""
  I0325 00:26:40.352253 25 builder.go:147] stdout: "true"
  I0325 00:26:40.352401 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-5895 get pods update-demo-nautilus-x56gl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0325 00:26:40.414377 25 builder.go:146] stderr: ""
  I0325 00:26:40.414427 25 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0325 00:26:40.414459 25 kubectl.go:2390] validating pod update-demo-nautilus-x56gl
  I0325 00:26:40.421784 25 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0325 00:26:40.421937 25 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0325 00:26:40.421950 25 kubectl.go:2517] update-demo-nautilus-x56gl is verified up and running
  I0325 00:26:40.422018 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-5895 get pods update-demo-nautilus-xzvtd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0325 00:26:40.477674 25 builder.go:146] stderr: ""
  I0325 00:26:40.477721 25 builder.go:147] stdout: "true"
  I0325 00:26:40.477779 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-5895 get pods update-demo-nautilus-xzvtd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0325 00:26:40.536243 25 builder.go:146] stderr: ""
  I0325 00:26:40.536297 25 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0325 00:26:40.536309 25 kubectl.go:2390] validating pod update-demo-nautilus-xzvtd
  I0325 00:26:40.542305 25 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0325 00:26:40.542364 25 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0325 00:26:40.542375 25 kubectl.go:2517] update-demo-nautilus-xzvtd is verified up and running
  STEP: scaling down the replication controller @ 03/25/25 00:26:40.542
  I0325 00:26:40.544536 25 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0325 00:26:40.544586 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-5895 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I0325 00:26:41.627625 25 builder.go:146] stderr: ""
  I0325 00:26:41.627680 25 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 03/25/25 00:26:41.627
  I0325 00:26:41.627807 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-5895 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0325 00:26:41.683194 25 builder.go:146] stderr: ""
  I0325 00:26:41.683246 25 builder.go:147] stdout: "update-demo-nautilus-x56gl "
  I0325 00:26:41.683293 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-5895 get pods update-demo-nautilus-x56gl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0325 00:26:41.741406 25 builder.go:146] stderr: ""
  I0325 00:26:41.741470 25 builder.go:147] stdout: "true"
  I0325 00:26:41.741538 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-5895 get pods update-demo-nautilus-x56gl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0325 00:26:41.794601 25 builder.go:146] stderr: ""
  I0325 00:26:41.794654 25 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0325 00:26:41.794665 25 kubectl.go:2390] validating pod update-demo-nautilus-x56gl
  I0325 00:26:41.798830 25 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0325 00:26:41.798894 25 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0325 00:26:41.798908 25 kubectl.go:2517] update-demo-nautilus-x56gl is verified up and running
  STEP: scaling up the replication controller @ 03/25/25 00:26:41.798
  I0325 00:26:41.800584 25 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0325 00:26:41.800644 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-5895 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I0325 00:26:42.883931 25 builder.go:146] stderr: ""
  I0325 00:26:42.883991 25 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 03/25/25 00:26:42.884
  I0325 00:26:42.884118 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-5895 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0325 00:26:42.943882 25 builder.go:146] stderr: ""
  I0325 00:26:42.943944 25 builder.go:147] stdout: "update-demo-nautilus-5tl2q update-demo-nautilus-x56gl "
  I0325 00:26:42.944010 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-5895 get pods update-demo-nautilus-5tl2q -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0325 00:26:43.004238 25 builder.go:146] stderr: ""
  I0325 00:26:43.004313 25 builder.go:147] stdout: ""
  I0325 00:26:43.004323 25 kubectl.go:2499] update-demo-nautilus-5tl2q is created but not running
  I0325 00:26:48.004575 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-5895 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0325 00:26:48.062439 25 builder.go:146] stderr: ""
  I0325 00:26:48.062491 25 builder.go:147] stdout: "update-demo-nautilus-5tl2q update-demo-nautilus-x56gl "
  I0325 00:26:48.062565 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-5895 get pods update-demo-nautilus-5tl2q -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0325 00:26:48.119398 25 builder.go:146] stderr: ""
  I0325 00:26:48.119521 25 builder.go:147] stdout: "true"
  I0325 00:26:48.119613 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-5895 get pods update-demo-nautilus-5tl2q -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0325 00:26:48.185941 25 builder.go:146] stderr: ""
  I0325 00:26:48.186009 25 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0325 00:26:48.186021 25 kubectl.go:2390] validating pod update-demo-nautilus-5tl2q
  I0325 00:26:48.190979 25 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0325 00:26:48.191049 25 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0325 00:26:48.191062 25 kubectl.go:2517] update-demo-nautilus-5tl2q is verified up and running
  I0325 00:26:48.191117 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-5895 get pods update-demo-nautilus-x56gl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0325 00:26:48.247824 25 builder.go:146] stderr: ""
  I0325 00:26:48.247873 25 builder.go:147] stdout: "true"
  I0325 00:26:48.247918 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-5895 get pods update-demo-nautilus-x56gl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0325 00:26:48.306683 25 builder.go:146] stderr: ""
  I0325 00:26:48.306756 25 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0325 00:26:48.306772 25 kubectl.go:2390] validating pod update-demo-nautilus-x56gl
  I0325 00:26:48.312549 25 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0325 00:26:48.312622 25 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0325 00:26:48.312633 25 kubectl.go:2517] update-demo-nautilus-x56gl is verified up and running
  STEP: using delete to clean up resources @ 03/25/25 00:26:48.312
  I0325 00:26:48.312722 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-5895 delete --grace-period=0 --force -f -'
  I0325 00:26:48.395117 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0325 00:26:48.395178 25 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0325 00:26:48.395332 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-5895 get rc,svc -l name=update-demo --no-headers'
  I0325 00:26:48.590776 25 builder.go:146] stderr: "No resources found in kubectl-5895 namespace.\n"
  I0325 00:26:48.590837 25 builder.go:147] stdout: ""
  I0325 00:26:48.591041 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-5895 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0325 00:26:48.667808 25 builder.go:146] stderr: ""
  I0325 00:26:48.667862 25 builder.go:147] stdout: ""
  I0325 00:26:48.668016 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5895" for this suite. @ 03/25/25 00:26:48.683
• [13.831 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 03/25/25 00:26:48.715
  I0325 00:26:48.715222 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename disruption @ 03/25/25 00:26:48.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:26:48.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:26:48.797
  STEP: Creating a kubernetes client @ 03/25/25 00:26:48.8
  I0325 00:26:48.800692 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename disruption-2 @ 03/25/25 00:26:48.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:26:48.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:26:48.916
  STEP: Waiting for the pdb to be processed @ 03/25/25 00:26:48.936
  STEP: Waiting for the pdb to be processed @ 03/25/25 00:26:50.953
  STEP: Waiting for the pdb to be processed @ 03/25/25 00:26:52.97
  STEP: listing a collection of PDBs across all namespaces @ 03/25/25 00:26:54.975
  STEP: listing a collection of PDBs in namespace disruption-5216 @ 03/25/25 00:26:54.979
  STEP: deleting a collection of PDBs @ 03/25/25 00:26:54.982
  STEP: Waiting for the PDB collection to be deleted @ 03/25/25 00:26:55.036
  I0325 00:26:55.039721 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-829" for this suite. @ 03/25/25 00:26:55.044
  I0325 00:26:55.053696 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5216" for this suite. @ 03/25/25 00:26:55.145
• [6.444 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 03/25/25 00:26:55.159
  I0325 00:26:55.159912 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename webhook @ 03/25/25 00:26:55.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:26:55.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:26:55.216
  STEP: Setting up server cert @ 03/25/25 00:26:55.322
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/25/25 00:26:55.764
  STEP: Deploying the webhook pod @ 03/25/25 00:26:55.797
  STEP: Wait for the deployment to be ready @ 03/25/25 00:26:55.834
  I0325 00:26:55.848315 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 03/25/25 00:26:57.859
  STEP: Verifying the service has paired with the endpoint @ 03/25/25 00:26:57.888
  I0325 00:26:58.888654 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 03/25/25 00:26:58.896
  STEP: Creating a custom resource definition that should be denied by the webhook @ 03/25/25 00:26:58.93
  I0325 00:26:58.930375 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  I0325 00:26:59.056907 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2181" for this suite. @ 03/25/25 00:26:59.066
  STEP: Destroying namespace "webhook-markers-6353" for this suite. @ 03/25/25 00:26:59.098
• [3.951 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 03/25/25 00:26:59.112
  I0325 00:26:59.112083 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename webhook @ 03/25/25 00:26:59.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:26:59.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:26:59.16
  STEP: Setting up server cert @ 03/25/25 00:26:59.264
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/25/25 00:26:59.522
  STEP: Deploying the webhook pod @ 03/25/25 00:26:59.529
  STEP: Wait for the deployment to be ready @ 03/25/25 00:26:59.543
  I0325 00:26:59.552852 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0325 00:27:01.564148 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 25, 0, 26, 59, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 26, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 0, 26, 59, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 26, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 03/25/25 00:27:03.568
  STEP: Verifying the service has paired with the endpoint @ 03/25/25 00:27:03.584
  I0325 00:27:04.584671 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 03/25/25 00:27:04.591
  I0325 00:27:04.705260 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7144" for this suite. @ 03/25/25 00:27:04.712
  STEP: Destroying namespace "webhook-markers-1270" for this suite. @ 03/25/25 00:27:04.725
• [5.622 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 03/25/25 00:27:04.735
  I0325 00:27:04.735501 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename tables @ 03/25/25 00:27:04.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:27:04.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:27:04.763
  I0325 00:27:04.770882 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-298" for this suite. @ 03/25/25 00:27:04.813
• [0.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:934
  STEP: Creating a kubernetes client @ 03/25/25 00:27:04.825
  I0325 00:27:04.825102 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename sched-preemption @ 03/25/25 00:27:04.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:27:04.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:27:04.862
  I0325 00:27:04.885479 25 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0325 00:28:04.890008 25 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 03/25/25 00:28:04.897
  I0325 00:28:04.897952 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename sched-preemption-path @ 03/25/25 00:28:04.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:28:04.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:28:04.929
  I0325 00:28:04.946908 25 preemption.go:940] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0325 00:28:04.952998 25 preemption.go:946] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 03/25/25 00:28:05.021
  STEP: Removing a custom resource @ 03/25/25 00:28:05.03
  STEP: Removing a custom resource @ 03/25/25 00:28:05.04
  STEP: Removing a custom resource @ 03/25/25 00:28:05.048
  STEP: Removing a custom resource @ 03/25/25 00:28:05.067
  I0325 00:28:05.076390 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-6363" for this suite. @ 03/25/25 00:28:05.079
  I0325 00:28:05.086641 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3229" for this suite. @ 03/25/25 00:28:05.18
• [60.365 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 03/25/25 00:28:05.191
  I0325 00:28:05.191525 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename downward-api @ 03/25/25 00:28:05.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:28:05.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:28:05.218
  STEP: Creating a pod to test downward api env vars @ 03/25/25 00:28:05.221
  STEP: Saw pod success @ 03/25/25 00:28:09.241
  I0325 00:28:09.245138 25 output.go:207] Trying to get logs from node master-2 pod downward-api-7e01ccc6-4cd5-4deb-996a-589bb84b98ed container dapi-container: <nil>
  STEP: delete the pod @ 03/25/25 00:28:09.258
  I0325 00:28:09.274462 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8959" for this suite. @ 03/25/25 00:28:09.278
• [4.093 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 03/25/25 00:28:09.284
  I0325 00:28:09.284142 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/25/25 00:28:09.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:28:09.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:28:09.312
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 03/25/25 00:28:09.314
  I0325 00:28:09.315377 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 03/25/25 00:28:22.255
  I0325 00:28:22.255596 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  I0325 00:28:29.609124 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  I0325 00:28:42.367345 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6820" for this suite. @ 03/25/25 00:28:42.376
• [33.099 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 03/25/25 00:28:42.384
  I0325 00:28:42.384063 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename limitrange @ 03/25/25 00:28:42.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:28:42.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:28:42.417
  STEP: Creating a LimitRange @ 03/25/25 00:28:42.419
  STEP: Setting up watch @ 03/25/25 00:28:42.419
  STEP: Submitting a LimitRange @ 03/25/25 00:28:42.523
  STEP: Verifying LimitRange creation was observed @ 03/25/25 00:28:42.531
  STEP: Fetching the LimitRange to ensure it has proper values @ 03/25/25 00:28:42.531
  I0325 00:28:42.535065 25 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0325 00:28:42.535119 25 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 03/25/25 00:28:42.535
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 03/25/25 00:28:42.546
  I0325 00:28:42.550065 25 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0325 00:28:42.550200 25 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 03/25/25 00:28:42.55
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 03/25/25 00:28:42.56
  I0325 00:28:42.563556 25 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0325 00:28:42.563693 25 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 03/25/25 00:28:42.563
  STEP: Failing to create a Pod with more than max resources @ 03/25/25 00:28:42.566
  STEP: Updating a LimitRange @ 03/25/25 00:28:42.568
  STEP: Verifying LimitRange updating is effective @ 03/25/25 00:28:42.573
  STEP: Creating a Pod with less than former min resources @ 03/25/25 00:28:44.578
  STEP: Failing to create a Pod with more than max resources @ 03/25/25 00:28:44.586
  STEP: Deleting a LimitRange @ 03/25/25 00:28:44.589
  STEP: Verifying the LimitRange was deleted @ 03/25/25 00:28:44.61
  I0325 00:28:49.617368 25 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 03/25/25 00:28:49.617
  I0325 00:28:49.628648 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-8225" for this suite. @ 03/25/25 00:28:49.632
• [7.263 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 03/25/25 00:28:49.649
  I0325 00:28:49.649561 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename disruption @ 03/25/25 00:28:49.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:28:49.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:28:49.675
  STEP: Waiting for the pdb to be processed @ 03/25/25 00:28:49.681
  STEP: Waiting for all pods to be running @ 03/25/25 00:28:51.723
  I0325 00:28:51.736094 25 disruption.go:691] running pods: 0 < 3
  I0325 00:28:53.735384 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5594" for this suite. @ 03/25/25 00:28:53.739
• [4.098 seconds]
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1855
  STEP: Creating a kubernetes client @ 03/25/25 00:28:53.748
  I0325 00:28:53.748308 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename kubectl @ 03/25/25 00:28:53.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:28:53.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:28:53.783
  STEP: Starting the proxy @ 03/25/25 00:28:53.786
  I0325 00:28:53.786779 25 util.go:590] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-2495 proxy --unix-socket=/tmp/kubectl-proxy-unix3847821788/test'
  STEP: retrieving proxy /api/ output @ 03/25/25 00:28:53.848
  I0325 00:28:53.850041 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2495" for this suite. @ 03/25/25 00:28:53.853
• [0.116 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 03/25/25 00:28:53.866
  I0325 00:28:53.866906 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename namespaces @ 03/25/25 00:28:53.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:28:53.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:28:53.894
  STEP: Creating a test namespace @ 03/25/25 00:28:53.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:28:54.017
  STEP: Creating a service in the namespace @ 03/25/25 00:28:54.021
  STEP: Deleting the namespace @ 03/25/25 00:28:54.036
  STEP: Waiting for the namespace to be removed. @ 03/25/25 00:28:54.047
  STEP: Recreating the namespace @ 03/25/25 00:29:00.052
  STEP: Verifying there is no service in the namespace @ 03/25/25 00:29:00.105
  I0325 00:29:00.109674 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-522" for this suite. @ 03/25/25 00:29:00.13
  STEP: Destroying namespace "nsdeletetest-6177" for this suite. @ 03/25/25 00:29:00.159
  I0325 00:29:00.163528 25 framework.go:370] Namespace nsdeletetest-6177 was already deleted
  STEP: Destroying namespace "nsdeletetest-2585" for this suite. @ 03/25/25 00:29:00.163
• [6.311 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 03/25/25 00:29:00.177
  I0325 00:29:00.177554 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename gc @ 03/25/25 00:29:00.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:29:00.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:29:00.209
  STEP: create the rc @ 03/25/25 00:29:00.231
  W0325 00:29:00.242524      25 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 03/25/25 00:29:06.257
  STEP: wait for the rc to be deleted @ 03/25/25 00:29:06.269
  I0325 00:29:07.295498 25 garbage_collector.go:670] 91 pods remaining
  I0325 00:29:07.295552 25 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0325 00:29:07.295558 25 garbage_collector.go:678] 
  I0325 00:29:08.366640 25 garbage_collector.go:670] 86 pods remaining
  I0325 00:29:08.366688 25 garbage_collector.go:677] 70 pods has nil DeletionTimestamp
  I0325 00:29:08.366694 25 garbage_collector.go:678] 
  I0325 00:29:09.305832 25 garbage_collector.go:670] 84 pods remaining
  I0325 00:29:09.305887 25 garbage_collector.go:677] 60 pods has nil DeletionTimestamp
  I0325 00:29:09.305894 25 garbage_collector.go:678] 
  I0325 00:29:10.290367 25 garbage_collector.go:670] 76 pods remaining
  I0325 00:29:10.290441 25 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I0325 00:29:10.290447 25 garbage_collector.go:678] 
  I0325 00:29:11.309439 25 garbage_collector.go:670] 73 pods remaining
  I0325 00:29:11.309484 25 garbage_collector.go:677] 30 pods has nil DeletionTimestamp
  I0325 00:29:11.309490 25 garbage_collector.go:678] 
  I0325 00:29:12.289971 25 garbage_collector.go:670] 70 pods remaining
  I0325 00:29:12.290648 25 garbage_collector.go:677] 20 pods has nil DeletionTimestamp
  I0325 00:29:12.290835 25 garbage_collector.go:678] 
  I0325 00:29:13.293017 25 garbage_collector.go:670] 63 pods remaining
  I0325 00:29:13.293190 25 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I0325 00:29:13.293218 25 garbage_collector.go:678] 
  I0325 00:29:14.282142 25 garbage_collector.go:670] 59 pods remaining
  I0325 00:29:14.282317 25 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I0325 00:29:14.282345 25 garbage_collector.go:678] 
  I0325 00:29:15.279343 25 garbage_collector.go:670] 48 pods remaining
  I0325 00:29:15.279385 25 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I0325 00:29:15.279390 25 garbage_collector.go:678] 
  I0325 00:29:16.278938 25 garbage_collector.go:670] 38 pods remaining
  I0325 00:29:16.279129 25 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I0325 00:29:16.279163 25 garbage_collector.go:678] 
  I0325 00:29:17.278187 25 garbage_collector.go:670] 28 pods remaining
  I0325 00:29:17.278427 25 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I0325 00:29:17.279031 25 garbage_collector.go:678] 
  I0325 00:29:18.276390 25 garbage_collector.go:670] 18 pods remaining
  I0325 00:29:18.276550 25 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I0325 00:29:18.276590 25 garbage_collector.go:678] 
  I0325 00:29:19.276187 25 garbage_collector.go:670] 6 pods remaining
  I0325 00:29:19.276242 25 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I0325 00:29:19.276248 25 garbage_collector.go:678] 
  STEP: Gathering metrics @ 03/25/25 00:29:20.277
  I0325 00:29:20.364882 25 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0325 00:29:20.365069 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9858" for this suite. @ 03/25/25 00:29:20.37
• [20.206 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 03/25/25 00:29:20.384
  I0325 00:29:20.384145 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename emptydir @ 03/25/25 00:29:20.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:29:20.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:29:20.533
  STEP: Creating a pod to test emptydir volume type on node default medium @ 03/25/25 00:29:20.535
  STEP: Saw pod success @ 03/25/25 00:29:24.558
  I0325 00:29:24.560609 25 output.go:207] Trying to get logs from node master-2 pod pod-5659a2e7-652b-465a-8424-bcd06f0d23ec container test-container: <nil>
  STEP: delete the pod @ 03/25/25 00:29:24.573
  I0325 00:29:24.595802 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3558" for this suite. @ 03/25/25 00:29:24.6
• [4.231 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 03/25/25 00:29:24.615
  I0325 00:29:24.615611 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename configmap @ 03/25/25 00:29:24.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:29:24.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:29:24.646
  STEP: Creating configMap with name configmap-test-volume-map-0d5da96e-caea-43a6-8190-e530d832a11a @ 03/25/25 00:29:24.649
  STEP: Creating a pod to test consume configMaps @ 03/25/25 00:29:24.654
  STEP: Saw pod success @ 03/25/25 00:29:28.679
  I0325 00:29:28.684341 25 output.go:207] Trying to get logs from node master-2 pod pod-configmaps-489d10fa-39e4-4460-89ab-44ef19e739c0 container agnhost-container: <nil>
  STEP: delete the pod @ 03/25/25 00:29:28.691
  I0325 00:29:28.715644 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6636" for this suite. @ 03/25/25 00:29:28.722
• [4.116 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 03/25/25 00:29:28.731
  I0325 00:29:28.732020 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename namespaces @ 03/25/25 00:29:28.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:29:28.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:29:28.756
  STEP: Creating a test namespace @ 03/25/25 00:29:28.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:29:28.859
  STEP: Creating a pod in the namespace @ 03/25/25 00:29:28.861
  STEP: Waiting for the pod to have running status @ 03/25/25 00:29:28.872
  STEP: Deleting the namespace @ 03/25/25 00:29:30.885
  STEP: Waiting for the namespace to be removed. @ 03/25/25 00:29:30.895
  STEP: Recreating the namespace @ 03/25/25 00:29:41.899
  STEP: Verifying there are no pods in the namespace @ 03/25/25 00:29:41.916
  I0325 00:29:41.919262 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3887" for this suite. @ 03/25/25 00:29:41.922
  STEP: Destroying namespace "nsdeletetest-6809" for this suite. @ 03/25/25 00:29:41.931
  I0325 00:29:41.934099 25 framework.go:370] Namespace nsdeletetest-6809 was already deleted
  STEP: Destroying namespace "nsdeletetest-6326" for this suite. @ 03/25/25 00:29:41.934
• [13.212 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 03/25/25 00:29:41.944
  I0325 00:29:41.944034 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename deployment @ 03/25/25 00:29:41.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:29:42.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:29:42.027
  I0325 00:29:42.041951 25 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  I0325 00:29:47.048391 25 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 03/25/25 00:29:47.048
  I0325 00:29:47.048629 25 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I0325 00:29:49.053483 25 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0325 00:29:49.063585 25 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  I0325 00:29:51.069254 25 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0325 00:29:51.085749 25 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0325 00:29:51.090530 25 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0325 00:29:51.099688 25 deployment.go:314] Updating deployment test-rollover-deployment
  I0325 00:29:51.099768 25 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I0325 00:29:53.106308 25 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0325 00:29:53.112224 25 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0325 00:29:53.117888 25 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0325 00:29:53.118283 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 0, 29, 49, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 29, 49, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 0, 29, 52, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 29, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0325 00:29:55.126200 25 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0325 00:29:55.126269 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 0, 29, 49, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 29, 49, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 0, 29, 52, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 29, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0325 00:29:57.128189 25 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0325 00:29:57.128391 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 0, 29, 49, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 29, 49, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 0, 29, 52, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 29, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0325 00:29:59.127416 25 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0325 00:29:59.127485 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 0, 29, 49, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 29, 49, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 0, 29, 52, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 29, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0325 00:30:01.127207 25 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0325 00:30:01.127296 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 0, 29, 49, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 29, 49, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 0, 29, 52, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 29, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0325 00:30:03.130955 25 deployment.go:95] 
  I0325 00:30:03.131016 25 deployment.go:974] Ensure that both old replica sets have no replicas
  I0325 00:30:03.139793 25 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3551",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0c267b3d-c9fc-4e95-899d-b8cfb10f7528",
      ResourceVersion: (string) (len=7) "2797962",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878459389,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878459391,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878459402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878459389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878459389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878459402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878459389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-7fb4c746bc\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0325 00:30:03.144547 25 deployment.go:40] New ReplicaSet "test-rollover-deployment-7fb4c746bc" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3551",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d4b3e374-c65e-4598-9556-b0f2bb0b9f0b",
      ResourceVersion: (string) (len=7) "2797948",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878459391,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "0c267b3d-c9fc-4e95-899d-b8cfb10f7528",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878459391,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 63 32 36 37 62  33 64 2d 63 39 66 63 2d  |\"0c267b3d-c9fc-|
              00000120  34 65 39 35 2d 38 39 39  64 2d 62 38 63 66 62 31  |4e95-899d-b8cfb1|
              00000130  30 66 37 35 32 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0f7528\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878459402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0325 00:30:03.145125 25 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0325 00:30:03.145580 25 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3551",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7cc4eb16-0c0d-48aa-9e61-3a52052c93e4",
      ResourceVersion: (string) (len=7) "2797961",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878459382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "0c267b3d-c9fc-4e95-899d-b8cfb10f7528",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878459382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878459402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  30 63 32 36 37 62 33 64  2d 63 39 66 63 2d 34 65  |0c267b3d-c9fc-4e|
              000000c0  39 35 2d 38 39 39 64 2d  62 38 63 66 62 31 30 66  |95-899d-b8cfb10f|
              000000d0  37 35 32 38 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |7528\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878459402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0325 00:30:03.146405 25 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3551",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a03004dc-0e65-4bda-9b4a-c0dc22547fd3",
      ResourceVersion: (string) (len=7) "2797843",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878459389,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "0c267b3d-c9fc-4e95-899d-b8cfb10f7528",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878459391,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 63 32 36 37 62  33 64 2d 63 39 66 63 2d  |\"0c267b3d-c9fc-|
              00000120  34 65 39 35 2d 38 39 39  64 2d 62 38 63 66 62 31  |4e95-899d-b8cfb1|
              00000130  30 66 37 35 32 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0f7528\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878459391,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0325 00:30:03.152612 25 deployment.go:68] Pod "test-rollover-deployment-7fb4c746bc-bxjwq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-7fb4c746bc-bxjwq",
      GenerateName: (string) (len=36) "test-rollover-deployment-7fb4c746bc-",
      Namespace: (string) (len=15) "deployment-3551",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fd5b5706-a6e3-4de0-b0e9-033f385cc429",
      ResourceVersion: (string) (len=7) "2797862",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878459391,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
          UID: (types.UID) (len=36) "d4b3e374-c65e-4598-9556-b0f2bb0b9f0b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878459391,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 34  62 33 65 33 37 34 2d 63  |d\":\"d4b3e374-c|
              00000090  36 35 65 2d 34 35 39 38  2d 39 35 35 36 2d 62 30  |65e-4598-9556-b0|
              000000a0  66 32 62 62 30 62 39 66  30 62 5c 22 7d 22 3a 7b  |f2bb0b9f0b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878459392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  31 33 5c 22 7d 22 3a 7b  |.233.65.13\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dq5cw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dq5cw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878459392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878459391,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878459392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878459392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878459391,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.10.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.10.146"
        }
      },
      PodIP: (string) (len=12) "10.233.65.13",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.13"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878459391,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878459391,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://a119e08e1b7fca05c353c5f5f86c5b1713b568fcfa9311db3371192965458161",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dq5cw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:30:03.153814 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3551" for this suite. @ 03/25/25 00:30:03.158
• [21.223 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 03/25/25 00:30:03.167
  I0325 00:30:03.167802 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename containers @ 03/25/25 00:30:03.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:30:03.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:30:03.2
  STEP: Creating a pod to test override command @ 03/25/25 00:30:03.203
  STEP: Saw pod success @ 03/25/25 00:30:07.229
  I0325 00:30:07.233126 25 output.go:207] Trying to get logs from node master-2 pod client-containers-c58df792-d87c-4fed-ba1f-17b0773ed86e container agnhost-container: <nil>
  STEP: delete the pod @ 03/25/25 00:30:07.238
  I0325 00:30:07.259518 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7434" for this suite. @ 03/25/25 00:30:07.263
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 03/25/25 00:30:07.271
  I0325 00:30:07.271342 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename daemonsets @ 03/25/25 00:30:07.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:30:07.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:30:07.298
  STEP: Creating simple DaemonSet "daemon-set" @ 03/25/25 00:30:07.379
  STEP: Check that daemon pods launch on every node of the cluster. @ 03/25/25 00:30:07.389
  I0325 00:30:07.486399 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0325 00:30:07.486469 25 fixtures.go:131] Node master-1 is running 0 daemon pod, expected 1
  I0325 00:30:08.398885 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0325 00:30:08.398935 25 fixtures.go:131] Node master-1 is running 0 daemon pod, expected 1
  I0325 00:30:09.402443 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 5
  I0325 00:30:09.402809 25 fixtures.go:136] Number of running nodes: 5, number of available pods: 5 in daemonset daemon-set
  STEP: listing all DaemonSets @ 03/25/25 00:30:09.406
  STEP: DeleteCollection of the DaemonSets @ 03/25/25 00:30:09.411
  STEP: Verify that ReplicaSets have been deleted @ 03/25/25 00:30:09.421
  I0325 00:30:09.439879 25 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"2798172"},"items":null}

  I0325 00:30:09.454837 25 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"2798177"},"items":[{"metadata":{"name":"daemon-set-2fsrb","generateName":"daemon-set-","namespace":"daemonsets-5686","uid":"0810e171-2ffc-4568-b144-58ab908efce1","resourceVersion":"2798177","creationTimestamp":"2025-03-25T00:30:07Z","deletionTimestamp":"2025-03-25T00:30:39Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"59fcff60-2aaf-460f-a431-2ea120efe821","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-03-25T00:30:07Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59fcff60-2aaf-460f-a431-2ea120efe821\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-03-25T00:30:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.68.81\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-qgdkc","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-qgdkc","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"worker-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["worker-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-25T00:30:09Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-25T00:30:07Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-25T00:30:09Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-25T00:30:09Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-25T00:30:07Z"}],"hostIP":"172.20.10.81","hostIPs":[{"ip":"172.20.10.81"}],"podIP":"10.233.68.81","podIPs":[{"ip":"10.233.68.81"}],"startTime":"2025-03-25T00:30:07Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-03-25T00:30:08Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://1a810fe87db88b5a1ce9d31df705172c083778910798ebab63169fa2b9e79d59","started":true,"volumeMounts":[{"name":"kube-api-access-qgdkc","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-mfjwf","generateName":"daemon-set-","namespace":"daemonsets-5686","uid":"9ba1a8a9-95f9-4f3b-bea5-0cca39cd5968","resourceVersion":"2798176","creationTimestamp":"2025-03-25T00:30:07Z","deletionTimestamp":"2025-03-25T00:30:39Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"59fcff60-2aaf-460f-a431-2ea120efe821","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-03-25T00:30:07Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59fcff60-2aaf-460f-a431-2ea120efe821\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-03-25T00:30:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.65.94\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-9mghm","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-9mghm","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"master-2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["master-2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-25T00:30:09Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-25T00:30:07Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-25T00:30:09Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-25T00:30:09Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-25T00:30:07Z"}],"hostIP":"172.20.10.146","hostIPs":[{"ip":"172.20.10.146"}],"podIP":"10.233.65.94","podIPs":[{"ip":"10.233.65.94"}],"startTime":"2025-03-25T00:30:07Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-03-25T00:30:08Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://073d5aa8dba13d4d6d94db4c894dfffc80abb53f27ebd56c951c05a06d381962","started":true,"volumeMounts":[{"name":"kube-api-access-9mghm","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-qrk7d","generateName":"daemon-set-","namespace":"daemonsets-5686","uid":"5ef517d3-d466-473c-8bbe-950f62b9998b","resourceVersion":"2798173","creationTimestamp":"2025-03-25T00:30:07Z","deletionTimestamp":"2025-03-25T00:30:39Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"59fcff60-2aaf-460f-a431-2ea120efe821","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-03-25T00:30:07Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59fcff60-2aaf-460f-a431-2ea120efe821\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-03-25T00:30:08Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.66.206\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-4kqmb","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-4kqmb","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"master-3","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["master-3"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-25T00:30:08Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-25T00:30:07Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-25T00:30:08Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-25T00:30:08Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-25T00:30:07Z"}],"hostIP":"172.20.10.136","hostIPs":[{"ip":"172.20.10.136"}],"podIP":"10.233.66.206","podIPs":[{"ip":"10.233.66.206"}],"startTime":"2025-03-25T00:30:07Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-03-25T00:30:08Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://e3ca5e121c836c460d3bab2f9a44b8e3a8db7e415ee441c900c9407bec854b61","started":true,"volumeMounts":[{"name":"kube-api-access-4kqmb","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-s4pvv","generateName":"daemon-set-","namespace":"daemonsets-5686","uid":"f4ca5480-bc46-4009-8c61-17c389118575","resourceVersion":"2798175","creationTimestamp":"2025-03-25T00:30:07Z","deletionTimestamp":"2025-03-25T00:30:39Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"59fcff60-2aaf-460f-a431-2ea120efe821","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-03-25T00:30:07Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59fcff60-2aaf-460f-a431-2ea120efe821\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-03-25T00:30:08Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.67.102\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-fr527","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-fr527","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"worker-2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["worker-2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-25T00:30:08Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-25T00:30:07Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-25T00:30:08Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-25T00:30:08Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-25T00:30:07Z"}],"hostIP":"172.20.10.227","hostIPs":[{"ip":"172.20.10.227"}],"podIP":"10.233.67.102","podIPs":[{"ip":"10.233.67.102"}],"startTime":"2025-03-25T00:30:07Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-03-25T00:30:08Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://c4101b6f0d9f5a7b1ecbaadfc9f10d4c21629c9fb7d1c383a3205315afab0c5c","started":true,"volumeMounts":[{"name":"kube-api-access-fr527","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-wjqnv","generateName":"daemon-set-","namespace":"daemonsets-5686","uid":"cf492f85-37aa-4c42-a65a-37c399d85aad","resourceVersion":"2798174","creationTimestamp":"2025-03-25T00:30:07Z","deletionTimestamp":"2025-03-25T00:30:39Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"59fcff60-2aaf-460f-a431-2ea120efe821","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-03-25T00:30:07Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"59fcff60-2aaf-460f-a431-2ea120efe821\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-03-25T00:30:08Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.64.96\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-wvqs6","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-wvqs6","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"master-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["master-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-25T00:30:08Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-25T00:30:07Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-25T00:30:08Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-25T00:30:08Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-03-25T00:30:07Z"}],"hostIP":"172.20.10.91","hostIPs":[{"ip":"172.20.10.91"}],"podIP":"10.233.64.96","podIPs":[{"ip":"10.233.64.96"}],"startTime":"2025-03-25T00:30:07Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-03-25T00:30:08Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://88e131dbc4bc731e5b688d7ee64ca14b8ffd5199cd494a8f78767689e098d7f3","started":true,"volumeMounts":[{"name":"kube-api-access-wvqs6","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I0325 00:30:09.513187 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5686" for this suite. @ 03/25/25 00:30:09.597
• [2.337 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 03/25/25 00:30:09.608
  I0325 00:30:09.608505 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename downward-api @ 03/25/25 00:30:09.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:30:09.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:30:09.635
  STEP: Creating a pod to test downward API volume plugin @ 03/25/25 00:30:09.637
  STEP: Saw pod success @ 03/25/25 00:30:13.66
  I0325 00:30:13.663642 25 output.go:207] Trying to get logs from node master-2 pod downwardapi-volume-3645ff20-b86e-42cf-83e2-3e7abe160efb container client-container: <nil>
  STEP: delete the pod @ 03/25/25 00:30:13.669
  I0325 00:30:13.691564 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6891" for this suite. @ 03/25/25 00:30:13.695
• [4.094 seconds]
------------------------------
S
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 03/25/25 00:30:13.702
  I0325 00:30:13.702400 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename csistoragecapacity @ 03/25/25 00:30:13.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:30:13.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:30:13.733
  STEP: getting /apis @ 03/25/25 00:30:13.735
  STEP: getting /apis/storage.k8s.io @ 03/25/25 00:30:13.742
  STEP: getting /apis/storage.k8s.io/v1 @ 03/25/25 00:30:13.743
  STEP: creating @ 03/25/25 00:30:13.744
  STEP: watching @ 03/25/25 00:30:13.775
  I0325 00:30:13.775768 25 csistoragecapacity.go:143] starting watch
  STEP: getting @ 03/25/25 00:30:13.79
  STEP: listing in namespace @ 03/25/25 00:30:13.793
  STEP: listing across namespaces @ 03/25/25 00:30:13.795
  STEP: patching @ 03/25/25 00:30:13.798
  STEP: updating @ 03/25/25 00:30:13.805
  I0325 00:30:13.810347 25 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0325 00:30:13.810437 25 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 03/25/25 00:30:13.81
  STEP: deleting a collection @ 03/25/25 00:30:13.821
  I0325 00:30:13.839572 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-9665" for this suite. @ 03/25/25 00:30:13.842
• [0.147 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:263
  STEP: Creating a kubernetes client @ 03/25/25 00:30:13.849
  I0325 00:30:13.849156 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename dns @ 03/25/25 00:30:13.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:30:13.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:30:13.873
  STEP: Creating a test headless service @ 03/25/25 00:30:13.875
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-6527.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-6527.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 03/25/25 00:30:13.882
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-6527.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-6527.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 03/25/25 00:30:13.882
  STEP: creating a pod to probe DNS @ 03/25/25 00:30:13.882
  STEP: submitting the pod to kubernetes @ 03/25/25 00:30:13.883
  STEP: retrieving the pod @ 03/25/25 00:30:15.908
  STEP: looking for the results for each expected name from probers @ 03/25/25 00:30:15.911
  I0325 00:30:15.923478 25 dns_common.go:546] DNS probes using dns-6527/dns-test-38d48136-c82b-4304-a863-fd49581b3a91 succeeded

  STEP: deleting the pod @ 03/25/25 00:30:15.924
  STEP: deleting the test headless service @ 03/25/25 00:30:15.945
  I0325 00:30:15.959465 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6527" for this suite. @ 03/25/25 00:30:15.966
• [2.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 03/25/25 00:30:15.976
  I0325 00:30:15.976138 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename pv @ 03/25/25 00:30:15.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:30:15.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:30:16
  STEP: Creating initial PV and PVC @ 03/25/25 00:30:16.003
  I0325 00:30:16.004020 25 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-7502" @ 03/25/25 00:30:16.016
  STEP: Listing PVCs in namespace "pv-7502" @ 03/25/25 00:30:16.02
  STEP: Patching the PV "pv-7502-bp4xn" @ 03/25/25 00:30:16.024
  STEP: Patching the PVC "pvc-6zf77" @ 03/25/25 00:30:16.032
  STEP: Getting PV "pv-7502-bp4xn" @ 03/25/25 00:30:16.038
  STEP: Getting PVC "pvc-6zf77" @ 03/25/25 00:30:16.04
  STEP: Deleting PVC "pvc-6zf77" @ 03/25/25 00:30:16.045
  STEP: Confirm deletion of PVC "pvc-6zf77" @ 03/25/25 00:30:16.056
  STEP: Deleting PV "pv-7502-bp4xn" @ 03/25/25 00:30:18.067
  STEP: Confirm deletion of PV "pv-7502-bp4xn" @ 03/25/25 00:30:18.077
  STEP: Recreating another PV & PVC @ 03/25/25 00:30:20.085
  I0325 00:30:20.085555 25 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-7502-8sjpl" @ 03/25/25 00:30:20.102
  STEP: Updating the PVC "pvc-h2vl8" @ 03/25/25 00:30:20.142
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-h2vl8=updated" @ 03/25/25 00:30:20.15
  STEP: Deleting PVC "pvc-h2vl8" via DeleteCollection @ 03/25/25 00:30:20.153
  STEP: Confirm deletion of PVC "pvc-h2vl8" @ 03/25/25 00:30:20.165
  STEP: Deleting PV "pv-7502-8sjpl" via DeleteCollection @ 03/25/25 00:30:22.171
  STEP: Confirm deletion of PV "pv-7502-8sjpl" @ 03/25/25 00:30:22.181
  I0325 00:30:24.189113 25 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0325 00:30:24.189437 25 pv.go:205] Deleting PersistentVolumeClaim "pvc-h2vl8"
  I0325 00:30:24.192964 25 pv.go:193] Deleting PersistentVolume "pv-7502-8sjpl"
  I0325 00:30:24.195541 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-7502" for this suite. @ 03/25/25 00:30:24.2
• [8.232 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 03/25/25 00:30:24.208
  I0325 00:30:24.208745 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename pods @ 03/25/25 00:30:24.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:30:24.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:30:24.24
  STEP: Create a pod @ 03/25/25 00:30:24.243
  STEP: patching /status @ 03/25/25 00:30:26.263
  I0325 00:30:26.274657 25 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0325 00:30:26.274900 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9504" for this suite. @ 03/25/25 00:30:26.28
• [2.084 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 03/25/25 00:30:26.292
  I0325 00:30:26.292856 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename webhook @ 03/25/25 00:30:26.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:30:26.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:30:26.319
  STEP: Setting up server cert @ 03/25/25 00:30:26.417
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/25/25 00:30:26.76
  STEP: Deploying the webhook pod @ 03/25/25 00:30:26.77
  STEP: Wait for the deployment to be ready @ 03/25/25 00:30:26.787
  I0325 00:30:26.794978 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 03/25/25 00:30:28.806
  STEP: Verifying the service has paired with the endpoint @ 03/25/25 00:30:28.821
  I0325 00:30:29.822287 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 03/25/25 00:30:29.831
  STEP: create a pod that should be denied by the webhook @ 03/25/25 00:30:29.848
  STEP: create a pod that causes the webhook to hang @ 03/25/25 00:30:29.859
  STEP: create a configmap that should be denied by the webhook @ 03/25/25 00:30:39.866
  STEP: create a configmap that should be admitted by the webhook @ 03/25/25 00:30:39.876
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 03/25/25 00:30:39.886
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 03/25/25 00:30:39.907
  STEP: create a namespace that bypass the webhook @ 03/25/25 00:30:39.914
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 03/25/25 00:30:39.935
  I0325 00:30:40.032159 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8744" for this suite. @ 03/25/25 00:30:40.039
  STEP: Destroying namespace "webhook-markers-9261" for this suite. @ 03/25/25 00:30:40.049
  STEP: Destroying namespace "exempted-namespace-7851" for this suite. @ 03/25/25 00:30:40.073
• [13.790 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 03/25/25 00:30:40.082
  I0325 00:30:40.083124 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename validating-admission-policy @ 03/25/25 00:30:40.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:30:40.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:30:40.127
  STEP: creating the policy @ 03/25/25 00:30:40.144
  STEP: waiting until the marker is denied @ 03/25/25 00:30:40.168
  STEP: testing a replicated Deployment to be allowed @ 03/25/25 00:30:40.378
  STEP: testing a non-replicated ReplicaSet not to be denied @ 03/25/25 00:30:40.402
  I0325 00:30:40.471901 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-8288" for this suite. @ 03/25/25 00:30:40.48
• [0.408 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 03/25/25 00:30:40.49
  I0325 00:30:40.490423 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename resourcequota @ 03/25/25 00:30:40.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:30:40.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:30:40.526
  STEP: Creating a ResourceQuota with best effort scope @ 03/25/25 00:30:40.529
  STEP: Ensuring ResourceQuota status is calculated @ 03/25/25 00:30:40.538
  STEP: Creating a ResourceQuota with not best effort scope @ 03/25/25 00:30:42.543
  STEP: Ensuring ResourceQuota status is calculated @ 03/25/25 00:30:42.551
  STEP: Creating a best-effort pod @ 03/25/25 00:30:44.555
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 03/25/25 00:30:44.571
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 03/25/25 00:30:46.577
  STEP: Deleting the pod @ 03/25/25 00:30:48.582
  STEP: Ensuring resource quota status released the pod usage @ 03/25/25 00:30:48.602
  STEP: Creating a not best-effort pod @ 03/25/25 00:30:50.607
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 03/25/25 00:30:50.622
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 03/25/25 00:30:52.628
  STEP: Deleting the pod @ 03/25/25 00:30:54.633
  STEP: Ensuring resource quota status released the pod usage @ 03/25/25 00:30:54.646
  I0325 00:30:56.651813 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7435" for this suite. @ 03/25/25 00:30:56.656
• [16.174 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 03/25/25 00:30:56.665
  I0325 00:30:56.665562 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename resourcequota @ 03/25/25 00:30:56.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:30:56.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:30:56.711
  STEP: Counting existing ResourceQuota @ 03/25/25 00:30:56.713
  STEP: Creating a ResourceQuota @ 03/25/25 00:31:01.718
  STEP: Ensuring resource quota status is calculated @ 03/25/25 00:31:01.724
  STEP: Creating a ReplicaSet @ 03/25/25 00:31:03.729
  STEP: Ensuring resource quota status captures replicaset creation @ 03/25/25 00:31:03.749
  STEP: Deleting a ReplicaSet @ 03/25/25 00:31:05.754
  STEP: Ensuring resource quota status released usage @ 03/25/25 00:31:05.762
  I0325 00:31:07.771292 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6093" for this suite. @ 03/25/25 00:31:07.776
• [11.118 seconds]
------------------------------
SSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 03/25/25 00:31:07.784
  I0325 00:31:07.784561 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename endpointslice @ 03/25/25 00:31:07.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:31:07.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:31:07.812
  STEP: getting /apis @ 03/25/25 00:31:07.815
  STEP: getting /apis/discovery.k8s.io @ 03/25/25 00:31:07.819
  STEP: getting /apis/discovery.k8s.iov1 @ 03/25/25 00:31:07.82
  STEP: creating @ 03/25/25 00:31:07.82
  STEP: getting @ 03/25/25 00:31:07.836
  STEP: listing @ 03/25/25 00:31:07.839
  STEP: watching @ 03/25/25 00:31:07.841
  I0325 00:31:07.841941 25 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 03/25/25 00:31:07.843
  STEP: cluster-wide watching @ 03/25/25 00:31:07.845
  I0325 00:31:07.845766 25 endpointslice.go:459] starting watch
  STEP: patching @ 03/25/25 00:31:07.846
  STEP: updating @ 03/25/25 00:31:07.851
  I0325 00:31:07.859576 25 endpointslice.go:482] waiting for watch events with expected annotations
  I0325 00:31:07.859614 25 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 03/25/25 00:31:07.859
  STEP: deleting a collection @ 03/25/25 00:31:07.872
  I0325 00:31:07.885880 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8570" for this suite. @ 03/25/25 00:31:07.889
• [0.113 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 03/25/25 00:31:07.897
  I0325 00:31:07.898036 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/25/25 00:31:07.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:31:07.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:31:07.928
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 03/25/25 00:31:07.931
  I0325 00:31:07.931588 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  I0325 00:31:15.463539 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  I0325 00:31:28.783593 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5015" for this suite. @ 03/25/25 00:31:28.79
• [20.900 seconds]
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 03/25/25 00:31:28.799
  I0325 00:31:28.799262 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename runtimeclass @ 03/25/25 00:31:28.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:31:28.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:31:28.827
  STEP: getting /apis @ 03/25/25 00:31:28.83
  STEP: getting /apis/node.k8s.io @ 03/25/25 00:31:28.836
  STEP: getting /apis/node.k8s.io/v1 @ 03/25/25 00:31:28.837
  STEP: creating @ 03/25/25 00:31:28.838
  STEP: watching @ 03/25/25 00:31:28.861
  I0325 00:31:28.861641 25 runtimeclass.go:275] starting watch
  STEP: getting @ 03/25/25 00:31:28.871
  STEP: listing @ 03/25/25 00:31:28.874
  STEP: patching @ 03/25/25 00:31:28.877
  STEP: updating @ 03/25/25 00:31:28.882
  I0325 00:31:28.889081 25 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 03/25/25 00:31:28.889
  STEP: deleting a collection @ 03/25/25 00:31:28.899
  I0325 00:31:28.916542 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6721" for this suite. @ 03/25/25 00:31:28.922
• [0.131 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 03/25/25 00:31:28.93
  I0325 00:31:28.930646 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename secrets @ 03/25/25 00:31:28.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:31:28.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:31:28.954
  STEP: Creating secret with name secret-test-4ee0c547-9cdd-452f-b3c1-6e961450f032 @ 03/25/25 00:31:29.062
  STEP: Creating a pod to test consume secrets @ 03/25/25 00:31:29.068
  STEP: Saw pod success @ 03/25/25 00:31:33.092
  I0325 00:31:33.097789 25 output.go:207] Trying to get logs from node master-2 pod pod-secrets-83de4771-0da5-4231-a8ac-008a1c7fc053 container secret-volume-test: <nil>
  STEP: delete the pod @ 03/25/25 00:31:33.108
  I0325 00:31:33.123426 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8772" for this suite. @ 03/25/25 00:31:33.126
  STEP: Destroying namespace "secret-namespace-7518" for this suite. @ 03/25/25 00:31:33.134
• [4.210 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 03/25/25 00:31:33.141
  I0325 00:31:33.141477 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename projected @ 03/25/25 00:31:33.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:31:33.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:31:33.211
  STEP: Creating projection with secret that has name projected-secret-test-b3059b72-7a57-4a2c-980b-e40f20f3a430 @ 03/25/25 00:31:33.214
  STEP: Creating a pod to test consume secrets @ 03/25/25 00:31:33.228
  STEP: Saw pod success @ 03/25/25 00:31:37.258
  I0325 00:31:37.263771 25 output.go:207] Trying to get logs from node master-2 pod pod-projected-secrets-05eae35f-5cbd-4dae-88fe-87b18ccc0ed5 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 03/25/25 00:31:37.27
  I0325 00:31:37.288684 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-980" for this suite. @ 03/25/25 00:31:37.292
• [4.162 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 03/25/25 00:31:37.304
  I0325 00:31:37.304330 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename secrets @ 03/25/25 00:31:37.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:31:37.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:31:37.327
  STEP: Creating secret with name secret-test-map-84f04935-da9d-4c67-a647-b8aaf9388a68 @ 03/25/25 00:31:37.33
  STEP: Creating a pod to test consume secrets @ 03/25/25 00:31:37.335
  STEP: Saw pod success @ 03/25/25 00:31:41.358
  I0325 00:31:41.361746 25 output.go:207] Trying to get logs from node master-2 pod pod-secrets-594f29c5-1b20-4041-8aed-4693a21511f3 container secret-volume-test: <nil>
  STEP: delete the pod @ 03/25/25 00:31:41.371
  I0325 00:31:41.395389 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8541" for this suite. @ 03/25/25 00:31:41.401
• [4.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 03/25/25 00:31:41.409
  I0325 00:31:41.409426 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename csi-storageclass @ 03/25/25 00:31:41.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:31:41.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:31:41.466
  STEP: Creating a StorageClass @ 03/25/25 00:31:41.469
  STEP: Get StorageClass "e2e-nfvnl" @ 03/25/25 00:31:41.475
  STEP: Patching the StorageClass "e2e-nfvnl" @ 03/25/25 00:31:41.479
  STEP: Delete StorageClass "e2e-nfvnl" @ 03/25/25 00:31:41.486
  STEP: Confirm deletion of StorageClass "e2e-nfvnl" @ 03/25/25 00:31:41.493
  STEP: Create a replacement StorageClass @ 03/25/25 00:31:41.496
  STEP: Updating StorageClass "e2e-v2-lqmx4" @ 03/25/25 00:31:41.502
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-lqmx4=updated" @ 03/25/25 00:31:41.513
  STEP: Deleting StorageClass "e2e-v2-lqmx4" via DeleteCollection @ 03/25/25 00:31:41.516
  STEP: Confirm deletion of StorageClass "e2e-v2-lqmx4" @ 03/25/25 00:31:41.525
  I0325 00:31:41.528709 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-4185" for this suite. @ 03/25/25 00:31:41.535
• [0.139 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 03/25/25 00:31:41.549
  I0325 00:31:41.549988 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename security-context @ 03/25/25 00:31:41.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:31:41.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:31:41.577
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 03/25/25 00:31:41.579
  STEP: Saw pod success @ 03/25/25 00:31:45.609
  I0325 00:31:45.612355 25 output.go:207] Trying to get logs from node master-2 pod security-context-79df68c2-8bf4-40a0-8160-d7caa4e9055e container test-container: <nil>
  STEP: delete the pod @ 03/25/25 00:31:45.618
  I0325 00:31:45.637507 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-8196" for this suite. @ 03/25/25 00:31:45.641
• [4.100 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 03/25/25 00:31:45.649
  I0325 00:31:45.649936 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename container-probe @ 03/25/25 00:31:45.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:31:45.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:31:45.781
  I0325 00:32:45.801300 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1847" for this suite. @ 03/25/25 00:32:45.805
• [60.162 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 03/25/25 00:32:45.811
  I0325 00:32:45.811927 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename container-probe @ 03/25/25 00:32:45.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:32:45.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:32:45.839
  STEP: Creating pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993 @ 03/25/25 00:32:45.842
  STEP: checking the pod's current state and verifying that restartCount is present @ 03/25/25 00:32:47.86
  I0325 00:32:47.864345 25 container_probe.go:1749] Initial restart count of pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d is 0
  I0325 00:32:47.867250 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:32:49.872886 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:32:51.877072 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:32:53.881662 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:32:55.887909 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:32:57.894887 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:32:59.901518 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:33:01.907441 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:33:03.913404 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:33:05.919024 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:33:07.924556 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:33:09.928759 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:33:11.933892 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:33:13.940270 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:33:15.945205 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:33:17.951743 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:33:19.957496 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:33:21.961944 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:33:23.967018 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:33:25.972702 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:33:27.978159 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:33:29.982899 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:33:31.988102 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:33:33.992073 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:33:35.998167 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:33:38.003354 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:33:40.011402 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:33:42.016397 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:33:44.022612 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:33:46.027483 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:33:48.032739 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:33:50.037653 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:33:52.042402 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:33:54.047741 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:33:56.053168 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:33:58.058304 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:34:00.063183 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:34:02.067975 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:34:04.073511 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:34:06.078392 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:34:08.083696 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:34:10.088934 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:34:12.094422 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:34:14.099180 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:34:16.103596 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:34:18.108305 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:34:20.111930 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:34:22.117281 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:34:24.121910 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:34:26.126793 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:34:28.131782 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:34:30.137139 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:34:32.142263 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:34:34.146763 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:34:36.154621 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:34:38.159172 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:34:40.163120 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:34:42.168869 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:34:44.174446 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:34:46.179335 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:34:48.183944 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:34:50.194028 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:34:52.199120 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:34:54.204583 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:34:56.209156 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:34:58.214777 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:35:00.219451 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:35:02.226216 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:35:04.232796 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:35:06.238363 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:35:08.243873 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:35:10.248700 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:35:12.254065 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:35:14.258708 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:35:16.265066 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:35:18.270133 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:35:20.274989 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:35:22.281882 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:35:24.287273 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:35:26.293292 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:35:28.297310 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:35:30.303262 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:35:32.308583 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:35:34.313457 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:35:36.318455 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:35:38.325071 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:35:40.330758 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:35:42.335359 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:35:44.340080 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:35:46.345860 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:35:48.350305 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:35:50.355462 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:35:52.361208 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:35:54.366045 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:35:56.372292 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:35:58.378957 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:36:00.384033 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:36:02.389099 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:36:04.393474 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:36:06.397976 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:36:08.402793 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:36:10.409074 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:36:12.414881 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:36:14.418972 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:36:16.426143 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:36:18.432307 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:36:20.436829 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:36:22.442051 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:36:24.452072 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:36:26.458522 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:36:28.463076 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:36:30.467950 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:36:32.472544 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:36:34.478107 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:36:36.485176 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:36:38.491369 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:36:40.496439 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:36:42.501793 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:36:44.508276 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  I0325 00:36:46.513798 25 container_probe.go:1759] Get pod test-grpc-53a9db77-92e3-4b4c-afbf-01c883a7f96d in namespace container-probe-4993
  STEP: deleting the pod @ 03/25/25 00:36:48.515
  I0325 00:36:48.538902 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4993" for this suite. @ 03/25/25 00:36:48.544
• [242.742 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 03/25/25 00:36:48.554
  I0325 00:36:48.554368 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename daemonsets @ 03/25/25 00:36:48.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:36:48.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:36:48.592
  I0325 00:36:48.669080 25 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 03/25/25 00:36:48.677
  I0325 00:36:48.750636 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0325 00:36:48.750816 25 fixtures.go:131] Node master-1 is running 0 daemon pod, expected 1
  I0325 00:36:49.687069 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0325 00:36:49.687124 25 fixtures.go:131] Node master-1 is running 0 daemon pod, expected 1
  I0325 00:36:50.686955 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 5
  I0325 00:36:50.687109 25 fixtures.go:136] Number of running nodes: 5, number of available pods: 5 in daemonset daemon-set
  STEP: Update daemon pods image. @ 03/25/25 00:36:50.7
  STEP: Check that daemon pods images are updated. @ 03/25/25 00:36:50.784
  I0325 00:36:50.791822 25 daemon_set.go:1193] Wrong image for pod: daemon-set-27f4b. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0325 00:36:50.791878 25 daemon_set.go:1193] Wrong image for pod: daemon-set-2mhq7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0325 00:36:50.791886 25 daemon_set.go:1193] Wrong image for pod: daemon-set-2zfc2. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0325 00:36:50.791892 25 daemon_set.go:1193] Wrong image for pod: daemon-set-b5754. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0325 00:36:51.789806 25 daemon_set.go:1193] Wrong image for pod: daemon-set-27f4b. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0325 00:36:51.789879 25 daemon_set.go:1193] Wrong image for pod: daemon-set-2mhq7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0325 00:36:51.789887 25 daemon_set.go:1193] Wrong image for pod: daemon-set-2zfc2. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0325 00:36:51.789895 25 daemon_set.go:1193] Wrong image for pod: daemon-set-b5754. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0325 00:36:51.789906 25 daemon_set.go:1198] Pod daemon-set-ks2wk is not available
  I0325 00:36:52.789980 25 daemon_set.go:1193] Wrong image for pod: daemon-set-27f4b. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0325 00:36:52.790043 25 daemon_set.go:1193] Wrong image for pod: daemon-set-2mhq7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0325 00:36:52.790050 25 daemon_set.go:1193] Wrong image for pod: daemon-set-2zfc2. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0325 00:36:52.790056 25 daemon_set.go:1193] Wrong image for pod: daemon-set-b5754. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0325 00:36:52.790191 25 daemon_set.go:1198] Pod daemon-set-ks2wk is not available
  I0325 00:36:53.787882 25 daemon_set.go:1193] Wrong image for pod: daemon-set-2mhq7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0325 00:36:53.787921 25 daemon_set.go:1193] Wrong image for pod: daemon-set-2zfc2. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0325 00:36:53.787931 25 daemon_set.go:1193] Wrong image for pod: daemon-set-b5754. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0325 00:36:54.790812 25 daemon_set.go:1193] Wrong image for pod: daemon-set-2mhq7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0325 00:36:54.790852 25 daemon_set.go:1193] Wrong image for pod: daemon-set-2zfc2. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0325 00:36:54.790862 25 daemon_set.go:1193] Wrong image for pod: daemon-set-b5754. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0325 00:36:54.790868 25 daemon_set.go:1198] Pod daemon-set-frp87 is not available
  I0325 00:36:55.790035 25 daemon_set.go:1193] Wrong image for pod: daemon-set-2mhq7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0325 00:36:55.790085 25 daemon_set.go:1193] Wrong image for pod: daemon-set-b5754. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0325 00:36:55.790094 25 daemon_set.go:1198] Pod daemon-set-dhsrx is not available
  I0325 00:36:56.790001 25 daemon_set.go:1193] Wrong image for pod: daemon-set-2mhq7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0325 00:36:56.790044 25 daemon_set.go:1193] Wrong image for pod: daemon-set-b5754. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0325 00:36:56.790052 25 daemon_set.go:1198] Pod daemon-set-dhsrx is not available
  I0325 00:36:57.789768 25 daemon_set.go:1193] Wrong image for pod: daemon-set-b5754. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0325 00:36:57.789826 25 daemon_set.go:1198] Pod daemon-set-bgwnd is not available
  I0325 00:36:58.788575 25 daemon_set.go:1198] Pod daemon-set-6vblp is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 03/25/25 00:36:58.791
  I0325 00:36:58.798808 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0325 00:36:58.798845 25 fixtures.go:131] Node worker-2 is running 0 daemon pod, expected 1
  I0325 00:36:59.800691 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 5
  I0325 00:36:59.800746 25 fixtures.go:136] Number of running nodes: 5, number of available pods: 5 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 03/25/25 00:36:59.815
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1084, will wait for the garbage collector to delete the pods @ 03/25/25 00:36:59.815
  I0325 00:36:59.877660 25 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.417768ms
  I0325 00:36:59.978146 25 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.434415ms
  I0325 00:37:01.682955 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0325 00:37:01.683112 25 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0325 00:37:01.687157 25 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"2801394"},"items":null}

  I0325 00:37:01.690108 25 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"2801394"},"items":null}

  I0325 00:37:01.710429 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1084" for this suite. @ 03/25/25 00:37:01.797
• [13.255 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:469
  STEP: Creating a kubernetes client @ 03/25/25 00:37:01.808
  I0325 00:37:01.808990 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename sched-preemption @ 03/25/25 00:37:01.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:37:01.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:37:01.842
  I0325 00:37:01.868401 25 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0325 00:38:01.873634 25 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 03/25/25 00:38:01.878
  STEP: Adding a custom resource @ 03/25/25 00:38:01.878
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 03/25/25 00:38:01.89
  I0325 00:38:01.905356 25 preemption.go:503] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 03/25/25 00:38:01.905
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 03/25/25 00:38:03.915
  I0325 00:38:03.922810 25 preemption.go:521] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 03/25/25 00:38:03.922
  STEP: Verifying the pod has the pod disruption condition @ 03/25/25 00:38:05.931
  I0325 00:38:05.939858 25 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I0325 00:38:06.457788 25 pod_client.go:173] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 03/25/25 00:38:06.501
  STEP: Removing a custom resource @ 03/25/25 00:38:06.515
  STEP: Removing a custom resource @ 03/25/25 00:38:06.524
  STEP: Removing a custom resource @ 03/25/25 00:38:06.536
  STEP: Removing a custom resource @ 03/25/25 00:38:06.544
  I0325 00:38:06.553453 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2170" for this suite. @ 03/25/25 00:38:06.556
• [64.759 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 03/25/25 00:38:06.568
  I0325 00:38:06.568276 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename webhook @ 03/25/25 00:38:06.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:38:06.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:38:06.596
  STEP: Setting up server cert @ 03/25/25 00:38:06.697
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/25/25 00:38:06.929
  STEP: Deploying the webhook pod @ 03/25/25 00:38:06.943
  STEP: Wait for the deployment to be ready @ 03/25/25 00:38:06.967
  I0325 00:38:06.979130 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 03/25/25 00:38:08.989
  STEP: Verifying the service has paired with the endpoint @ 03/25/25 00:38:09.002
  I0325 00:38:10.002670 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 03/25/25 00:38:10.012
  STEP: verifying the mutating webhook match conditions @ 03/25/25 00:38:10.022
  STEP: updating the mutating webhook match conditions @ 03/25/25 00:38:10.029
  STEP: verifying the mutating webhook match conditions @ 03/25/25 00:38:10.039
  I0325 00:38:10.106826 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1847" for this suite. @ 03/25/25 00:38:10.11
  STEP: Destroying namespace "webhook-markers-7448" for this suite. @ 03/25/25 00:38:10.124
• [3.569 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 03/25/25 00:38:10.14
  I0325 00:38:10.140081 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename replication-controller @ 03/25/25 00:38:10.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:38:10.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:38:10.176
  STEP: Given a ReplicationController is created @ 03/25/25 00:38:10.181
  STEP: When the matched label of one of its pods change @ 03/25/25 00:38:10.189
  I0325 00:38:10.203178 25 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  I0325 00:38:15.209446 25 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 03/25/25 00:38:15.223
  I0325 00:38:16.240640 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6399" for this suite. @ 03/25/25 00:38:16.246
• [6.116 seconds]
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 03/25/25 00:38:16.255
  I0325 00:38:16.256161 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename container-probe @ 03/25/25 00:38:16.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:38:16.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:38:16.287
  STEP: Creating pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053 @ 03/25/25 00:38:16.29
  STEP: checking the pod's current state and verifying that restartCount is present @ 03/25/25 00:38:20.314
  I0325 00:38:20.318306 25 container_probe.go:1749] Initial restart count of pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 is 0
  I0325 00:38:20.321429 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:38:22.326287 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:38:24.333752 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:38:26.338561 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:38:28.343323 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:38:30.347746 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:38:32.354014 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:38:34.359385 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:38:36.364293 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:38:38.638869 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:38:40.654002 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:38:42.665949 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:38:44.671994 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:38:46.685279 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:38:48.690326 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:38:50.695217 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:38:52.700867 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:38:54.706919 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:38:56.712159 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:38:58.717381 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:39:00.723091 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:39:02.728439 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:39:04.733893 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:39:06.744969 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:39:08.749942 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:39:10.754437 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:39:12.759892 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:39:14.765594 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:39:16.771512 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:39:18.776914 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:39:20.781724 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:39:22.786301 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:39:24.791783 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:39:26.797318 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:39:28.802207 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:39:30.806929 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:39:32.811751 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:39:34.817050 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:39:36.823362 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:39:38.827822 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:39:40.833434 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:39:42.837876 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:39:44.842459 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:39:46.847178 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:39:48.852154 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:39:50.857798 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:39:52.863214 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:39:54.868523 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:39:56.874963 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:39:58.880565 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:40:00.886409 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:40:02.896888 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:40:04.901354 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:40:06.907826 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:40:08.913570 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:40:10.919435 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:40:12.924531 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:40:14.930017 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:40:16.935154 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:40:18.941314 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:40:20.945522 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:40:22.951961 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:40:24.961694 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:40:26.967034 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:40:28.971667 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:40:30.977170 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:40:32.983097 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:40:34.987705 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:40:36.993838 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:40:38.998711 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:40:41.004525 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:40:43.009957 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:40:45.014599 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:40:47.021416 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:40:49.026311 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:40:51.030457 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:40:53.036271 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:40:55.041170 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:40:57.046189 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:40:59.051593 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:41:01.057231 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:41:03.061877 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:41:05.067643 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:41:07.073889 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:41:09.078260 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:41:11.083059 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:41:13.087884 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:41:15.093425 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:41:17.100291 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:41:19.104390 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:41:21.112301 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:41:23.116844 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:41:25.122343 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:41:27.127766 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:41:29.134527 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:41:31.139904 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:41:33.145710 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:41:35.150619 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:41:37.156297 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:41:39.163968 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:41:41.170619 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:41:43.175537 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:41:45.180620 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:41:47.185870 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:41:49.190092 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:41:51.195392 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:41:53.201284 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:41:55.206079 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:41:57.211323 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:41:59.220157 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:42:01.224875 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:42:03.230739 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:42:05.237822 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:42:07.243135 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:42:09.249611 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:42:11.255699 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:42:13.261177 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:42:15.265880 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:42:17.270926 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  I0325 00:42:19.274746 25 container_probe.go:1759] Get pod busybox-829e4531-d48a-4360-a667-dac36c311fc9 in namespace container-probe-3053
  STEP: deleting the pod @ 03/25/25 00:42:21.276
  I0325 00:42:21.300280 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3053" for this suite. @ 03/25/25 00:42:21.309
• [245.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 03/25/25 00:42:21.319
  I0325 00:42:21.319257 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename field-validation @ 03/25/25 00:42:21.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:42:21.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:42:21.348
  I0325 00:42:21.351007 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  W0325 00:42:28.894430      25 warnings.go:70] unknown field "alpha"
  W0325 00:42:28.894498      25 warnings.go:70] unknown field "beta"
  W0325 00:42:28.894503      25 warnings.go:70] unknown field "delta"
  W0325 00:42:28.894512      25 warnings.go:70] unknown field "epsilon"
  W0325 00:42:28.894516      25 warnings.go:70] unknown field "gamma"
  I0325 00:42:29.438787 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-703" for this suite. @ 03/25/25 00:42:29.442
• [8.130 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 03/25/25 00:42:29.449
  I0325 00:42:29.449681 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename certificates @ 03/25/25 00:42:29.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:42:29.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:42:29.477
  STEP: getting /apis @ 03/25/25 00:42:30.121
  STEP: getting /apis/certificates.k8s.io @ 03/25/25 00:42:30.126
  STEP: getting /apis/certificates.k8s.io/v1 @ 03/25/25 00:42:30.127
  STEP: creating @ 03/25/25 00:42:30.129
  STEP: getting @ 03/25/25 00:42:30.15
  STEP: listing @ 03/25/25 00:42:30.153
  STEP: watching @ 03/25/25 00:42:30.156
  I0325 00:42:30.156267 25 certificates.go:316] starting watch
  STEP: patching @ 03/25/25 00:42:30.157
  STEP: updating @ 03/25/25 00:42:30.165
  I0325 00:42:30.174710 25 certificates.go:332] waiting for watch events with expected annotations
  I0325 00:42:30.174755 25 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 03/25/25 00:42:30.174
  STEP: patching /approval @ 03/25/25 00:42:30.178
  STEP: updating /approval @ 03/25/25 00:42:30.189
  STEP: getting /status @ 03/25/25 00:42:30.201
  STEP: patching /status @ 03/25/25 00:42:30.203
  STEP: updating /status @ 03/25/25 00:42:30.212
  STEP: deleting @ 03/25/25 00:42:30.22
  STEP: deleting a collection @ 03/25/25 00:42:30.232
  I0325 00:42:30.251429 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-4115" for this suite. @ 03/25/25 00:42:30.255
• [0.812 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 03/25/25 00:42:30.262
  I0325 00:42:30.262502 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename daemonsets @ 03/25/25 00:42:30.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:42:30.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:42:30.29
  STEP: Creating simple DaemonSet "daemon-set" @ 03/25/25 00:42:30.373
  STEP: Check that daemon pods launch on every node of the cluster. @ 03/25/25 00:42:30.383
  I0325 00:42:30.489022 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0325 00:42:30.489085 25 fixtures.go:131] Node master-1 is running 0 daemon pod, expected 1
  I0325 00:42:31.394144 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0325 00:42:31.394220 25 fixtures.go:131] Node master-1 is running 0 daemon pod, expected 1
  I0325 00:42:32.393486 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0325 00:42:32.393559 25 fixtures.go:131] Node worker-1 is running 0 daemon pod, expected 1
  I0325 00:42:33.392477 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 5
  I0325 00:42:33.392518 25 fixtures.go:136] Number of running nodes: 5, number of available pods: 5 in daemonset daemon-set
  STEP: Getting /status @ 03/25/25 00:42:33.396
  I0325 00:42:33.400029 25 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 03/25/25 00:42:33.4
  I0325 00:42:33.411528 25 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 03/25/25 00:42:33.411
  I0325 00:42:33.414392 25 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0325 00:42:33.414621 25 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0325 00:42:33.414776 25 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0325 00:42:33.414877 25 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0325 00:42:33.414951 25 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0325 00:42:33.415043 25 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0325 00:42:33.415419 25 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0325 00:42:33.415472 25 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-7866 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0325 00:42:33.415484 25 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 03/25/25 00:42:33.415
  STEP: watching for the daemon set status to be patched @ 03/25/25 00:42:33.425
  I0325 00:42:33.426651 25 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0325 00:42:33.426729 25 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0325 00:42:33.427040 25 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0325 00:42:33.427124 25 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0325 00:42:33.427185 25 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0325 00:42:33.427588 25 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0325 00:42:33.427972 25 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0325 00:42:33.428023 25 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-7866 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0325 00:42:33.428166 25 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0325 00:42:33.428188 25 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-7866 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0325 00:42:33.428200 25 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 03/25/25 00:42:33.432
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7866, will wait for the garbage collector to delete the pods @ 03/25/25 00:42:33.432
  I0325 00:42:33.502062 25 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.907051ms
  I0325 00:42:33.602513 25 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.413255ms
  I0325 00:42:35.506988 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0325 00:42:35.507180 25 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0325 00:42:35.510878 25 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"2803876"},"items":null}

  I0325 00:42:35.518400 25 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"2803876"},"items":null}

  I0325 00:42:35.538729 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7866" for this suite. @ 03/25/25 00:42:35.542
• [5.290 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 03/25/25 00:42:35.552
  I0325 00:42:35.552740 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename deployment @ 03/25/25 00:42:35.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:42:35.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:42:35.581
  I0325 00:42:35.607565 25 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  I0325 00:42:40.612291 25 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 03/25/25 00:42:40.612
  I0325 00:42:40.612653 25 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 03/25/25 00:42:40.623
  I0325 00:42:40.635081 25 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5885",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3152a37c-80c1-4324-b23f-215f11839c6b",
      ResourceVersion: (string) (len=7) "2803933",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878460160,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878460160,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0325 00:42:40.669422 25 deployment.go:40] New ReplicaSet "test-cleanup-deployment-69b989f764" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5885",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ea9b4dbc-0cb6-4c3d-bca5-bd3f548b803a",
      ResourceVersion: (string) (len=7) "2803941",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878460160,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "3152a37c-80c1-4324-b23f-215f11839c6b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878460160,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 31 35 32 61 33  37 63 2d 38 30 63 31 2d  |\"3152a37c-80c1-|
              00000120  34 33 32 34 2d 62 32 33  66 2d 32 31 35 66 31 31  |4324-b23f-215f11|
              00000130  38 33 39 63 36 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |839c6b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878460160,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=40) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 7d 7d                           |on":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0325 00:42:40.670028 25 deployment.go:45] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0325 00:42:40.670289 25 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5885",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d16207bc-47da-44ed-9ae2-2af91fdab9f5",
      ResourceVersion: (string) (len=7) "2803934",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878460155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "3152a37c-80c1-4324-b23f-215f11839c6b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878460155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878460156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878460160,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 33 31 35 32 61 33 37  |"uid\":\"3152a37|
              00000040  63 2d 38 30 63 31 2d 34  33 32 34 2d 62 32 33 66  |c-80c1-4324-b23f|
              00000050  2d 32 31 35 66 31 31 38  33 39 63 36 62 5c 22 7d  |-215f11839c6b\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0325 00:42:40.675822 25 deployment.go:68] Pod "test-cleanup-controller-mshqj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-mshqj",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-5885",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "910b3d97-3697-4f85-8dcd-b2f6875c1d33",
      ResourceVersion: (string) (len=7) "2803910",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878460155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "d16207bc-47da-44ed-9ae2-2af91fdab9f5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878460155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  64 31 36 32 30 37 62 63  |uid\":\"d16207bc|
              00000080  2d 34 37 64 61 2d 34 34  65 64 2d 39 61 65 32 2d  |-47da-44ed-9ae2-|
              00000090  32 61 66 39 31 66 64 61  62 39 66 35 5c 22 7d 22  |2af91fdab9f5\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878460156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  34 37 5c 22 7d 22 3a 7b  |.233.65.47\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zk2xm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zk2xm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878460156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878460155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878460156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878460156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878460155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.10.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.10.146"
        }
      },
      PodIP: (string) (len=12) "10.233.65.47",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.47"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878460155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878460156,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://562c5e6b667970c4b77b09f0f7a8fdbd25902526b8683d08e5d889faaff13562",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zk2xm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:42:40.678837 25 deployment.go:68] Pod "test-cleanup-deployment-69b989f764-r8wgh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-69b989f764-r8wgh",
      GenerateName: (string) (len=35) "test-cleanup-deployment-69b989f764-",
      Namespace: (string) (len=15) "deployment-5885",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dfd533b9-ca30-42b9-bc0d-d76f7c5829cd",
      ResourceVersion: (string) (len=7) "2803942",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878460160,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
          UID: (types.UID) (len=36) "ea9b4dbc-0cb6-4c3d-bca5-bd3f548b803a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878460160,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 61  39 62 34 64 62 63 2d 30  |d\":\"ea9b4dbc-0|
              00000090  63 62 36 2d 34 63 33 64  2d 62 63 61 35 2d 62 64  |cb6-4c3d-bca5-bd|
              000000a0  33 66 35 34 38 62 38 30  33 61 5c 22 7d 22 3a 7b  |3f548b803a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z4wjp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z4wjp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878460160,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 00:42:40.679501 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5885" for this suite. @ 03/25/25 00:42:40.688
• [5.152 seconds]
------------------------------
S
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 03/25/25 00:42:40.705
  I0325 00:42:40.705018 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 03/25/25 00:42:40.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:42:40.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:42:40.735
  STEP: creating a target pod @ 03/25/25 00:42:40.737
  STEP: adding an ephemeral container @ 03/25/25 00:42:42.761
  STEP: checking pod container endpoints @ 03/25/25 00:42:44.781
  I0325 00:42:44.781562 25 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-7102 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 00:42:44.781585 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 00:42:44.781640 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-7102/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0325 00:42:44.845624 25 exec_util.go:108] Exec stderr: ""
  I0325 00:42:44.869566 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-7102" for this suite. @ 03/25/25 00:42:44.875
• [4.179 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 03/25/25 00:42:44.884
  I0325 00:42:44.884493 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename projected @ 03/25/25 00:42:44.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:42:44.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:42:44.923
  STEP: Creating configMap with name projected-configmap-test-volume-beccb6d8-8f26-490d-bac7-6a038243d18d @ 03/25/25 00:42:44.926
  STEP: Creating a pod to test consume configMaps @ 03/25/25 00:42:44.933
  STEP: Saw pod success @ 03/25/25 00:42:48.954
  I0325 00:42:48.957871 25 output.go:207] Trying to get logs from node master-2 pod pod-projected-configmaps-99a1a7b4-ff69-4e17-af3f-8377f4197c5d container agnhost-container: <nil>
  STEP: delete the pod @ 03/25/25 00:42:48.964
  I0325 00:42:48.987260 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7101" for this suite. @ 03/25/25 00:42:48.991
• [4.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 03/25/25 00:42:49.001
  I0325 00:42:49.001765 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename replication-controller @ 03/25/25 00:42:49.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:42:49.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:42:49.035
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 03/25/25 00:42:49.038
  STEP: When a replication controller with a matching selector is created @ 03/25/25 00:42:51.058
  STEP: Then the orphan pod is adopted @ 03/25/25 00:42:51.066
  I0325 00:42:52.075881 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5434" for this suite. @ 03/25/25 00:42:52.081
• [3.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 03/25/25 00:42:52.122
  I0325 00:42:52.122427 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename projected @ 03/25/25 00:42:52.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:42:52.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:42:52.272
  STEP: Creating a pod to test downward API volume plugin @ 03/25/25 00:42:52.274
  STEP: Saw pod success @ 03/25/25 00:42:56.297
  I0325 00:42:56.300866 25 output.go:207] Trying to get logs from node master-2 pod downwardapi-volume-b1bb1834-070e-4abd-a2c8-30d276417a11 container client-container: <nil>
  STEP: delete the pod @ 03/25/25 00:42:56.307
  I0325 00:42:56.325323 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1294" for this suite. @ 03/25/25 00:42:56.33
• [4.218 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 03/25/25 00:42:56.341
  I0325 00:42:56.342050 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename gc @ 03/25/25 00:42:56.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:42:56.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:42:56.37
  STEP: create the deployment @ 03/25/25 00:42:56.373
  W0325 00:42:56.384529      25 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 03/25/25 00:42:56.384
  STEP: delete the deployment @ 03/25/25 00:42:56.899
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 03/25/25 00:42:56.907
  STEP: Gathering metrics @ 03/25/25 00:42:57.627
  I0325 00:42:57.704559 25 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0325 00:42:57.704820 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2358" for this suite. @ 03/25/25 00:42:57.708
• [1.376 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 03/25/25 00:42:57.717
  I0325 00:42:57.717654 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename apf @ 03/25/25 00:42:57.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:42:57.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:42:57.747
  STEP: getting /apis @ 03/25/25 00:42:57.749
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 03/25/25 00:42:57.752
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 03/25/25 00:42:57.753
  STEP: creating @ 03/25/25 00:42:57.754
  STEP: getting @ 03/25/25 00:42:57.772
  STEP: listing @ 03/25/25 00:42:57.777
  STEP: watching @ 03/25/25 00:42:57.78
  I0325 00:42:57.780355 25 flowcontrol.go:620] starting watch
  STEP: patching @ 03/25/25 00:42:57.781
  STEP: updating @ 03/25/25 00:42:57.789
  I0325 00:42:57.804991 25 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 03/25/25 00:42:57.805
  STEP: patching /status @ 03/25/25 00:42:57.807
  STEP: updating /status @ 03/25/25 00:42:57.813
  STEP: deleting @ 03/25/25 00:42:57.824
  STEP: deleting a collection @ 03/25/25 00:42:57.834
  I0325 00:42:57.851117 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-2799" for this suite. @ 03/25/25 00:42:57.855
• [0.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 03/25/25 00:42:57.865
  I0325 00:42:57.865076 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename var-expansion @ 03/25/25 00:42:57.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:42:57.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:42:57.891
  I0325 00:42:59.918636 25 delete.go:62] Deleting pod "var-expansion-50316b82-a764-4e1c-b86b-6726adf1d76a" in namespace "var-expansion-7041"
  I0325 00:42:59.929082 25 delete.go:70] Wait up to 5m0s for pod "var-expansion-50316b82-a764-4e1c-b86b-6726adf1d76a" to be fully deleted
  I0325 00:43:01.937683 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7041" for this suite. @ 03/25/25 00:43:01.943
• [4.088 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 03/25/25 00:43:01.953
  I0325 00:43:01.953387 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename replicaset @ 03/25/25 00:43:01.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:43:01.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:43:01.98
  STEP: Create a ReplicaSet @ 03/25/25 00:43:01.983
  STEP: Verify that the required pods have come up @ 03/25/25 00:43:01.99
  I0325 00:43:01.993918 25 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  I0325 00:43:07.001974 25 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 03/25/25 00:43:07.002
  I0325 00:43:07.005249 25 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 03/25/25 00:43:07.005
  STEP: DeleteCollection of the ReplicaSets @ 03/25/25 00:43:07.015
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 03/25/25 00:43:07.022
  I0325 00:43:07.025251 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6982" for this suite. @ 03/25/25 00:43:07.03
• [5.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 03/25/25 00:43:07.051
  I0325 00:43:07.051296 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename aggregator @ 03/25/25 00:43:07.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:43:07.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:43:07.09
  I0325 00:43:07.094662 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Registering the sample API server. @ 03/25/25 00:43:07.097
  I0325 00:43:07.461774 25 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0325 00:43:07.493405 25 deployment.go:223] new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  I0325 00:43:09.642555 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0325 00:43:11.647628 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0325 00:43:13.647165 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0325 00:43:15.654056 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0325 00:43:17.647234 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0325 00:43:19.647648 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0325 00:43:21.649834 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0325 00:43:23.646949 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0325 00:43:25.646577 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0325 00:43:27.648535 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0325 00:43:29.647081 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0325 00:43:31.648336 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0325 00:43:33.649373 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0325 00:43:35.647718 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0325 00:43:37.648450 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0325 00:43:39.646922 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0325 00:43:41.649511 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0325 00:43:43.646756 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0325 00:43:45.646569 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0325 00:43:47.776374 25 aggregator.go:755] Waited 120.738592ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 03/25/25 00:43:47.822
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 03/25/25 00:43:47.827
  STEP: List APIServices @ 03/25/25 00:43:47.837
  I0325 00:43:47.843736 25 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 03/25/25 00:43:47.843
  I0325 00:43:47.855692 25 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 03/25/25 00:43:47.855
  I0325 00:43:47.870451 25 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.March, 25, 0, 43, 47, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 03/25/25 00:43:47.87
  I0325 00:43:47.873010 25 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-03-25 00:43:47 +0000 UTC Passed all checks passed}
  I0325 00:43:47.873055 25 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0325 00:43:47.873069 25 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 03/25/25 00:43:47.873
  I0325 00:43:47.884273 25 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-811306359" @ 03/25/25 00:43:47.884
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 03/25/25 00:43:47.893
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 03/25/25 00:43:47.913
  STEP: Patch APIService Status @ 03/25/25 00:43:47.917
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 03/25/25 00:43:47.927
  I0325 00:43:47.931626 25 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-03-25 00:43:47 +0000 UTC Passed all checks passed}
  I0325 00:43:47.931661 25 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0325 00:43:47.931671 25 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0325 00:43:47.931681 25 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 03/25/25 00:43:47.931
  STEP: Confirm that the generated APIService has been deleted @ 03/25/25 00:43:47.939
  I0325 00:43:47.939107 25 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I0325 00:43:47.941083 25 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0325 00:43:47.941161 25 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I0325 00:43:48.072485 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-4264" for this suite. @ 03/25/25 00:43:48.077
• [41.034 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 03/25/25 00:43:48.085
  I0325 00:43:48.085198 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename watch @ 03/25/25 00:43:48.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:43:48.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:43:48.119
  STEP: getting a starting resourceVersion @ 03/25/25 00:43:48.123
  STEP: starting a background goroutine to produce watch events @ 03/25/25 00:43:48.125
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 03/25/25 00:43:48.125
  I0325 00:43:50.899354 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1768" for this suite. @ 03/25/25 00:43:50.942
• [2.912 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 03/25/25 00:43:50.998
  I0325 00:43:50.998276 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename projected @ 03/25/25 00:43:50.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:43:51.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:43:51.024
  STEP: Creating a pod to test downward API volume plugin @ 03/25/25 00:43:51.028
  STEP: Saw pod success @ 03/25/25 00:43:55.055
  I0325 00:43:55.058207 25 output.go:207] Trying to get logs from node master-2 pod downwardapi-volume-edfe79da-8ab9-40df-913e-61c0408c1dbd container client-container: <nil>
  STEP: delete the pod @ 03/25/25 00:43:55.065
  I0325 00:43:55.085229 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8695" for this suite. @ 03/25/25 00:43:55.089
• [4.100 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 03/25/25 00:43:55.099
  I0325 00:43:55.099108 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename validating-admission-policy @ 03/25/25 00:43:55.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:43:55.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:43:55.127
  STEP: getting /apis @ 03/25/25 00:43:55.137
  STEP: getting /apis/admissionregistration.k8s.io @ 03/25/25 00:43:55.141
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 03/25/25 00:43:55.141
  STEP: creating @ 03/25/25 00:43:55.142
  STEP: getting @ 03/25/25 00:43:55.162
  STEP: listing @ 03/25/25 00:43:55.165
  STEP: watching @ 03/25/25 00:43:55.167
  I0325 00:43:55.167775 25 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 03/25/25 00:43:55.168
  STEP: updating @ 03/25/25 00:43:55.175
  I0325 00:43:55.193057 25 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  STEP: getting /status @ 03/25/25 00:43:55.193
  STEP: patching /status @ 03/25/25 00:43:55.201
  STEP: updating /status @ 03/25/25 00:43:55.216
  STEP: deleting @ 03/25/25 00:43:55.286
  STEP: deleting a collection @ 03/25/25 00:43:55.298
  I0325 00:43:55.321208 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-7512" for this suite. @ 03/25/25 00:43:55.325
• [0.233 seconds]
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 03/25/25 00:43:55.331
  I0325 00:43:55.331741 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename sched-pred @ 03/25/25 00:43:55.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:43:55.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:43:55.357
  I0325 00:43:55.359350 25 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0325 00:43:55.431534 25 util.go:396] Waiting for terminating namespaces to be deleted...
  I0325 00:43:55.435850 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node master-1 before test
  I0325 00:43:55.441694 25 predicates.go:957] oauth2-proxy-admin-89ccc8b6d-gkxsf from auth started at 2025-03-20 01:11:24 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.442111 25 predicates.go:959] 	Container oauth2-proxy-admin ready: true, restart count 5
  I0325 00:43:55.442164 25 predicates.go:957] oauth2-redis-admin-4 from auth started at 2025-03-20 01:11:58 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.442340 25 predicates.go:959] 	Container redis ready: true, restart count 0
  I0325 00:43:55.442406 25 predicates.go:957] maestro-common-api-d4f57ffc9-v25ts from cmp started at 2025-03-20 01:11:25 +0000 UTC (2 container statuses recorded)
  I0325 00:43:55.442503 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 00:43:55.442533 25 predicates.go:959] 	Container maestro-common-api ready: true, restart count 0
  I0325 00:43:55.442812 25 predicates.go:957] maestro-remote-app-b677d7995-ttggb from cmp started at 2025-03-20 01:11:25 +0000 UTC (2 container statuses recorded)
  I0325 00:43:55.442887 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 00:43:55.442923 25 predicates.go:959] 	Container maestro-remote-app ready: true, restart count 0
  I0325 00:43:55.442971 25 predicates.go:957] istiod-99fc7b678-c74hx from istio-system started at 2025-03-20 01:11:42 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.443007 25 predicates.go:959] 	Container discovery ready: true, restart count 0
  I0325 00:43:55.443067 25 predicates.go:957] cilium-nb9w6 from kube-system started at 2025-03-24 08:39:20 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.443122 25 predicates.go:959] 	Container cilium-agent ready: true, restart count 0
  I0325 00:43:55.443156 25 predicates.go:957] coredns-5c54f84c97-s7pm8 from kube-system started at 2025-03-20 07:44:46 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.443198 25 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0325 00:43:55.443250 25 predicates.go:957] dns-autoscaler-76ddddbbc-njtdg from kube-system started at 2025-03-19 11:32:46 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.443307 25 predicates.go:959] 	Container autoscaler ready: true, restart count 0
  I0325 00:43:55.443351 25 predicates.go:957] kube-apiserver-master-1 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.443385 25 predicates.go:959] 	Container kube-apiserver ready: true, restart count 1
  I0325 00:43:55.443441 25 predicates.go:957] kube-controller-manager-master-1 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.443483 25 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 2
  I0325 00:43:55.443545 25 predicates.go:957] kube-proxy-c9vn6 from kube-system started at 2025-03-19 11:31:14 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.443629 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0325 00:43:55.443708 25 predicates.go:957] kube-scheduler-master-1 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.443803 25 predicates.go:959] 	Container kube-scheduler ready: true, restart count 1
  I0325 00:43:55.443873 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-fa7539a130154f7a-69xpv from sonobuoy started at 2025-03-25 00:21:29 +0000 UTC (2 container statuses recorded)
  I0325 00:43:55.443938 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0325 00:43:55.443969 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0325 00:43:55.444042 25 predicates.go:957] viola-remote-app-5b964d4757-mx9xg from viola started at 2025-03-20 01:11:24 +0000 UTC (2 container statuses recorded)
  I0325 00:43:55.444096 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 00:43:55.444186 25 predicates.go:959] 	Container viola-remote-app ready: true, restart count 0
  I0325 00:43:55.444253 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node master-2 before test
  I0325 00:43:55.450058 25 predicates.go:957] redis-cluster-maintenance-cronjob-29047710-l7jlf from auth started at 2025-03-25 00:30:00 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.450083 25 predicates.go:959] 	Container redis-cluster-check ready: false, restart count 0
  I0325 00:43:55.450091 25 predicates.go:957] mariadb-backup-cronjob-29047680-xtr79 from dataplatform started at 2025-03-25 00:00:00 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.450096 25 predicates.go:959] 	Container mariadb-backup-cronjob ready: false, restart count 0
  I0325 00:43:55.450101 25 predicates.go:957] vault-backup-cronjob-29047680-c9424 from dataplatform started at 2025-03-25 00:00:00 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.450106 25 predicates.go:959] 	Container clean-backup ready: false, restart count 0
  I0325 00:43:55.450110 25 predicates.go:957] vault-unsealer-29047720-htxzq from dataplatform started at 2025-03-25 00:40:00 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.450114 25 predicates.go:959] 	Container unsealer ready: false, restart count 0
  I0325 00:43:55.450119 25 predicates.go:957] cilium-7mfqv from kube-system started at 2025-03-24 08:39:20 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.450124 25 predicates.go:959] 	Container cilium-agent ready: true, restart count 0
  I0325 00:43:55.450129 25 predicates.go:957] cilium-operator-75896ddc6-2dpsx from kube-system started at 2025-03-24 08:39:25 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.450133 25 predicates.go:959] 	Container cilium-operator ready: true, restart count 0
  I0325 00:43:55.450139 25 predicates.go:957] kube-apiserver-master-2 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.450148 25 predicates.go:959] 	Container kube-apiserver ready: true, restart count 1
  I0325 00:43:55.450157 25 predicates.go:957] kube-controller-manager-master-2 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.450161 25 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 2
  I0325 00:43:55.450167 25 predicates.go:957] kube-proxy-btnc7 from kube-system started at 2025-03-19 11:31:18 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.450172 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0325 00:43:55.450219 25 predicates.go:957] kube-scheduler-master-2 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.450224 25 predicates.go:959] 	Container kube-scheduler ready: true, restart count 1
  I0325 00:43:55.450229 25 predicates.go:957] sonobuoy from sonobuoy started at 2025-03-25 00:21:28 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.450234 25 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0325 00:43:55.450244 25 predicates.go:957] sonobuoy-e2e-job-377d99148b324b41 from sonobuoy started at 2025-03-25 00:21:29 +0000 UTC (2 container statuses recorded)
  I0325 00:43:55.450248 25 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0325 00:43:55.450253 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0325 00:43:55.450257 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-fa7539a130154f7a-l2cln from sonobuoy started at 2025-03-25 00:21:29 +0000 UTC (2 container statuses recorded)
  I0325 00:43:55.450272 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0325 00:43:55.450276 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0325 00:43:55.450281 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node master-3 before test
  I0325 00:43:55.454550 25 predicates.go:957] keycloak-8458dcb89f-56vd4 from auth started at 2025-03-20 01:11:26 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.454571 25 predicates.go:959] 	Container keycloak ready: true, restart count 0
  I0325 00:43:55.454577 25 predicates.go:957] oauth2-redis-admin-0 from auth started at 2025-03-20 01:11:28 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.454583 25 predicates.go:959] 	Container redis ready: true, restart count 0
  I0325 00:43:55.454588 25 predicates.go:957] oauth2-redis-admin-1 from auth started at 2025-03-20 08:36:39 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.454593 25 predicates.go:959] 	Container redis ready: true, restart count 0
  I0325 00:43:55.454597 25 predicates.go:957] cloud-service-api-c9d968c5d-ds8b7 from cmp started at 2025-03-20 01:11:25 +0000 UTC (2 container statuses recorded)
  I0325 00:43:55.454602 25 predicates.go:959] 	Container cloud-service-api ready: true, restart count 0
  I0325 00:43:55.454606 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 00:43:55.454610 25 predicates.go:957] maestro-host-app-594465b98c-q6xr7 from cmp started at 2025-03-20 07:44:46 +0000 UTC (2 container statuses recorded)
  I0325 00:43:55.454615 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 00:43:55.454620 25 predicates.go:959] 	Container maestro-host-app ready: true, restart count 0
  I0325 00:43:55.454625 25 predicates.go:957] notification-adapter-api-6cfc54858d-r2572 from cmp started at 2025-03-20 01:11:24 +0000 UTC (2 container statuses recorded)
  I0325 00:43:55.454632 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 00:43:55.454637 25 predicates.go:959] 	Container noti-api ready: true, restart count 1
  I0325 00:43:55.454643 25 predicates.go:957] my-cluster-kafka-1 from dataplatform started at 2025-03-20 01:12:42 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.454648 25 predicates.go:959] 	Container kafka ready: true, restart count 0
  I0325 00:43:55.454653 25 predicates.go:957] my-cluster-zookeeper-2 from dataplatform started at 2025-03-20 01:11:45 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.454658 25 predicates.go:959] 	Container zookeeper ready: true, restart count 0
  I0325 00:43:55.454663 25 predicates.go:957] vault-2 from dataplatform started at 2025-03-20 08:36:44 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.454667 25 predicates.go:959] 	Container vault ready: true, restart count 0
  I0325 00:43:55.454673 25 predicates.go:957] cilium-sz75f from kube-system started at 2025-03-24 08:39:20 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.454678 25 predicates.go:959] 	Container cilium-agent ready: true, restart count 0
  I0325 00:43:55.454683 25 predicates.go:957] coredns-5c54f84c97-k84w6 from kube-system started at 2025-03-19 11:32:47 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.454688 25 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0325 00:43:55.454693 25 predicates.go:957] kube-apiserver-master-3 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.454697 25 predicates.go:959] 	Container kube-apiserver ready: true, restart count 1
  I0325 00:43:55.454706 25 predicates.go:957] kube-controller-manager-master-3 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.454710 25 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 2
  I0325 00:43:55.454715 25 predicates.go:957] kube-proxy-wmb9b from kube-system started at 2025-03-19 11:31:19 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.454719 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0325 00:43:55.454725 25 predicates.go:957] kube-scheduler-master-3 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.454729 25 predicates.go:959] 	Container kube-scheduler ready: true, restart count 1
  I0325 00:43:55.454734 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-fa7539a130154f7a-6r4nq from sonobuoy started at 2025-03-25 00:21:29 +0000 UTC (2 container statuses recorded)
  I0325 00:43:55.454739 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0325 00:43:55.454743 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0325 00:43:55.454747 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker-1 before test
  I0325 00:43:55.461783 25 predicates.go:957] mariadb-keycloak-0 from auth started at 2025-03-20 01:11:24 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.461890 25 predicates.go:959] 	Container mariadb-keycloak ready: true, restart count 0
  I0325 00:43:55.461920 25 predicates.go:957] oauth2-proxy-admin-89ccc8b6d-nvwdp from auth started at 2025-03-20 01:11:24 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.461968 25 predicates.go:959] 	Container oauth2-proxy-admin ready: true, restart count 5
  I0325 00:43:55.462289 25 predicates.go:957] oauth2-redis-admin-3 from auth started at 2025-03-20 01:11:54 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.462446 25 predicates.go:959] 	Container redis ready: true, restart count 0
  I0325 00:43:55.462504 25 predicates.go:957] maestro-auth-gateway-5c697fc7b6-zphwv from cmp started at 2025-03-20 01:11:25 +0000 UTC (2 container statuses recorded)
  I0325 00:43:55.462588 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 00:43:55.462932 25 predicates.go:959] 	Container maestro-auth-gateway ready: true, restart count 0
  I0325 00:43:55.463012 25 predicates.go:957] maestro-event-pusher-58b995bc56-szcmn from cmp started at 2025-03-20 01:11:24 +0000 UTC (2 container statuses recorded)
  I0325 00:43:55.463055 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 00:43:55.463275 25 predicates.go:959] 	Container maestro-event-pusher ready: false, restart count 1365
  I0325 00:43:55.463399 25 predicates.go:957] mariadb-maxscale-66c484df55-94v5c from dataplatform started at 2025-03-20 01:11:23 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.463475 25 predicates.go:959] 	Container maxscale ready: true, restart count 0
  I0325 00:43:55.465181 25 predicates.go:957] mariadb-sts-1 from dataplatform started at 2025-03-20 01:11:32 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.465309 25 predicates.go:959] 	Container mariadb ready: true, restart count 0
  I0325 00:43:55.466191 25 predicates.go:957] my-cluster-kafka-2 from dataplatform started at 2025-03-20 01:12:42 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.466324 25 predicates.go:959] 	Container kafka ready: true, restart count 0
  I0325 00:43:55.466395 25 predicates.go:957] my-cluster-zookeeper-1 from dataplatform started at 2025-03-20 01:11:45 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.467264 25 predicates.go:959] 	Container zookeeper ready: true, restart count 0
  I0325 00:43:55.467327 25 predicates.go:957] strimzi-cluster-operator-54669f99c6-drmn2 from dataplatform started at 2025-03-20 01:11:24 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.467393 25 predicates.go:959] 	Container strimzi-cluster-operator ready: true, restart count 0
  I0325 00:43:55.467715 25 predicates.go:957] vault-1 from dataplatform started at 2025-03-20 01:11:29 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.467783 25 predicates.go:959] 	Container vault ready: true, restart count 0
  I0325 00:43:55.467861 25 predicates.go:957] nfs-client-provisioner-75dbf5b896-6pxh9 from default started at 2025-03-19 11:51:03 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.467891 25 predicates.go:959] 	Container nfs-client-provisioner ready: true, restart count 0
  I0325 00:43:55.468050 25 predicates.go:957] ingress-nginx-admission-create-2s6qz from ingress-nginx started at 2025-03-19 11:45:01 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.468272 25 predicates.go:959] 	Container create ready: false, restart count 0
  I0325 00:43:55.468351 25 predicates.go:957] ingress-nginx-admission-patch-znhld from ingress-nginx started at 2025-03-19 11:45:01 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.468384 25 predicates.go:959] 	Container patch ready: false, restart count 0
  I0325 00:43:55.468472 25 predicates.go:957] ingress-nginx-controller-d498747d7-g2shr from ingress-nginx started at 2025-03-19 11:45:01 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.468791 25 predicates.go:959] 	Container controller ready: true, restart count 0
  I0325 00:43:55.468852 25 predicates.go:957] istio-gateway-6966544c9c-blbvp from istio-system started at 2025-03-19 11:41:10 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.469025 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 00:43:55.469868 25 predicates.go:957] cilium-hcjv9 from kube-system started at 2025-03-24 08:39:20 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.469996 25 predicates.go:959] 	Container cilium-agent ready: true, restart count 0
  I0325 00:43:55.470532 25 predicates.go:957] cilium-operator-75896ddc6-2gh9q from kube-system started at 2025-03-24 08:39:25 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.470699 25 predicates.go:959] 	Container cilium-operator ready: true, restart count 0
  I0325 00:43:55.470799 25 predicates.go:957] kube-proxy-844j7 from kube-system started at 2025-03-19 11:31:57 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.470901 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0325 00:43:55.471687 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-fa7539a130154f7a-j662m from sonobuoy started at 2025-03-25 00:21:29 +0000 UTC (2 container statuses recorded)
  I0325 00:43:55.471757 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0325 00:43:55.472039 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0325 00:43:55.472108 25 predicates.go:957] viola-api-5465c989b9-nmngm from viola started at 2025-03-20 01:11:25 +0000 UTC (2 container statuses recorded)
  I0325 00:43:55.472178 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 00:43:55.472272 25 predicates.go:959] 	Container viola-api ready: true, restart count 0
  I0325 00:43:55.472341 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker-2 before test
  I0325 00:43:55.478379 25 predicates.go:957] keycloak-8458dcb89f-bcx8k from auth started at 2025-03-20 01:11:25 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.478401 25 predicates.go:959] 	Container keycloak ready: true, restart count 0
  I0325 00:43:55.478408 25 predicates.go:957] oauth2-redis-admin-2 from auth started at 2025-03-20 01:11:51 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.478416 25 predicates.go:959] 	Container redis ready: true, restart count 0
  I0325 00:43:55.478422 25 predicates.go:957] oauth2-redis-admin-5 from auth started at 2025-03-20 01:12:20 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.478427 25 predicates.go:959] 	Container redis ready: true, restart count 0
  I0325 00:43:55.478432 25 predicates.go:957] cloud-service-collector-69b56994cb-s2gck from cmp started at 2025-03-20 01:11:25 +0000 UTC (2 container statuses recorded)
  I0325 00:43:55.478436 25 predicates.go:959] 	Container cloud-service-collector ready: true, restart count 4
  I0325 00:43:55.478442 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 00:43:55.478447 25 predicates.go:957] maestro-iam-adapter-api-7df55b4d5f-srt98 from cmp started at 2025-03-20 08:36:38 +0000 UTC (2 container statuses recorded)
  I0325 00:43:55.478452 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 00:43:55.478459 25 predicates.go:959] 	Container maestro-iam-adapter-api ready: true, restart count 0
  I0325 00:43:55.478464 25 predicates.go:957] mariadb-maxscale-66c484df55-sljkg from dataplatform started at 2025-03-20 01:11:23 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.478468 25 predicates.go:959] 	Container maxscale ready: true, restart count 0
  I0325 00:43:55.478472 25 predicates.go:957] mariadb-sts-0 from dataplatform started at 2025-03-20 01:11:27 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.478477 25 predicates.go:959] 	Container mariadb ready: true, restart count 0
  I0325 00:43:55.478486 25 predicates.go:957] my-cluster-entity-operator-5fc55954dc-qfw2l from dataplatform started at 2025-03-20 01:13:10 +0000 UTC (2 container statuses recorded)
  I0325 00:43:55.478490 25 predicates.go:959] 	Container topic-operator ready: true, restart count 0
  I0325 00:43:55.478494 25 predicates.go:959] 	Container user-operator ready: true, restart count 0
  I0325 00:43:55.478498 25 predicates.go:957] my-cluster-kafka-0 from dataplatform started at 2025-03-20 01:12:42 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.478502 25 predicates.go:959] 	Container kafka ready: true, restart count 0
  I0325 00:43:55.478507 25 predicates.go:957] my-cluster-zookeeper-0 from dataplatform started at 2025-03-20 01:11:44 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.478511 25 predicates.go:959] 	Container zookeeper ready: true, restart count 0
  I0325 00:43:55.478515 25 predicates.go:957] pds-integration-service-bb7f75d74-x2l6x from dataplatform started at 2025-03-20 07:44:46 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.478520 25 predicates.go:959] 	Container pds-integration-service ready: true, restart count 0
  I0325 00:43:55.478527 25 predicates.go:957] redis-0 from dataplatform started at 2025-03-20 07:44:47 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.478532 25 predicates.go:959] 	Container redis ready: true, restart count 0
  I0325 00:43:55.478539 25 predicates.go:957] vault-0 from dataplatform started at 2025-03-20 01:11:28 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.478556 25 predicates.go:959] 	Container vault ready: true, restart count 0
  I0325 00:43:55.478563 25 predicates.go:957] cilium-77tzn from kube-system started at 2025-03-24 08:39:20 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.478569 25 predicates.go:959] 	Container cilium-agent ready: true, restart count 0
  I0325 00:43:55.478575 25 predicates.go:957] kube-proxy-phlgh from kube-system started at 2025-03-19 11:32:02 +0000 UTC (1 container statuses recorded)
  I0325 00:43:55.478581 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0325 00:43:55.478588 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-fa7539a130154f7a-dxpq8 from sonobuoy started at 2025-03-25 00:21:29 +0000 UTC (2 container statuses recorded)
  I0325 00:43:55.478594 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0325 00:43:55.478600 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 03/25/25 00:43:55.478
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.182fe50f7d9998e6], Reason = [FailedScheduling], Message = [0/5 nodes are available: 5 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 03/25/25 00:43:55.522
  I0325 00:43:56.519796 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2672" for this suite. @ 03/25/25 00:43:56.523
• [1.202 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 03/25/25 00:43:56.535
  I0325 00:43:56.535645 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename subpath @ 03/25/25 00:43:56.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:43:56.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:43:56.566
  STEP: Setting up data @ 03/25/25 00:43:56.569
  STEP: Creating pod pod-subpath-test-projected-nxss @ 03/25/25 00:43:56.581
  STEP: Creating a pod to test atomic-volume-subpath @ 03/25/25 00:43:56.581
  STEP: Saw pod success @ 03/25/25 00:44:20.666
  I0325 00:44:20.669770 25 output.go:207] Trying to get logs from node master-2 pod pod-subpath-test-projected-nxss container test-container-subpath-projected-nxss: <nil>
  STEP: delete the pod @ 03/25/25 00:44:20.677
  STEP: Deleting pod pod-subpath-test-projected-nxss @ 03/25/25 00:44:20.707
  I0325 00:44:20.707650 25 delete.go:62] Deleting pod "pod-subpath-test-projected-nxss" in namespace "subpath-5146"
  I0325 00:44:20.710588 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5146" for this suite. @ 03/25/25 00:44:20.713
• [24.187 seconds]
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 03/25/25 00:44:20.722
  I0325 00:44:20.723006 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename secrets @ 03/25/25 00:44:20.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:44:20.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:44:20.758
  STEP: Creating secret with name secret-test-79003466-4afa-446d-9c83-c92ee2c2638d @ 03/25/25 00:44:20.76
  STEP: Creating a pod to test consume secrets @ 03/25/25 00:44:20.766
  STEP: Saw pod success @ 03/25/25 00:44:24.787
  I0325 00:44:24.790798 25 output.go:207] Trying to get logs from node master-2 pod pod-secrets-95ddb677-0418-4799-9e2f-0db06433b8aa container secret-env-test: <nil>
  STEP: delete the pod @ 03/25/25 00:44:24.797
  I0325 00:44:24.816403 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-126" for this suite. @ 03/25/25 00:44:24.819
• [4.104 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 03/25/25 00:44:24.827
  I0325 00:44:24.827022 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename cronjob @ 03/25/25 00:44:24.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:44:24.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:44:24.851
  STEP: Creating a ReplaceConcurrent cronjob @ 03/25/25 00:44:24.853
  STEP: Ensuring a job is scheduled @ 03/25/25 00:44:24.859
  STEP: Ensuring exactly one is scheduled @ 03/25/25 00:45:00.93
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 03/25/25 00:45:00.935
  STEP: Ensuring the job is replaced with a new one @ 03/25/25 00:45:00.938
  STEP: Removing cronjob @ 03/25/25 00:46:00.943
  I0325 00:46:00.951756 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4347" for this suite. @ 03/25/25 00:46:00.955
• [96.137 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 03/25/25 00:46:00.965
  I0325 00:46:00.965201 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename endpointslicemirroring @ 03/25/25 00:46:00.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:46:00.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:46:01
  STEP: mirroring a new custom Endpoint @ 03/25/25 00:46:01.025
  I0325 00:46:01.038136 25 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 03/25/25 00:46:03.043
  STEP: mirroring deletion of a custom Endpoint @ 03/25/25 00:46:03.057
  I0325 00:46:03.077455 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-8216" for this suite. @ 03/25/25 00:46:03.082
• [2.132 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 03/25/25 00:46:03.098
  I0325 00:46:03.098127 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/25/25 00:46:03.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:46:03.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:46:03.125
  I0325 00:46:03.130657 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 03/25/25 00:46:10.876
  I0325 00:46:10.877103 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=crd-publish-openapi-1876 --namespace=crd-publish-openapi-1876 create -f -'
  I0325 00:46:10.996579 25 builder.go:146] stderr: ""
  I0325 00:46:10.996646 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-372-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0325 00:46:10.996720 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=crd-publish-openapi-1876 --namespace=crd-publish-openapi-1876 delete e2e-test-crd-publish-openapi-372-crds test-cr'
  I0325 00:46:11.073237 25 builder.go:146] stderr: ""
  I0325 00:46:11.073308 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-372-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0325 00:46:11.073363 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=crd-publish-openapi-1876 --namespace=crd-publish-openapi-1876 apply -f -'
  I0325 00:46:11.156221 25 builder.go:146] stderr: ""
  I0325 00:46:11.156274 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-372-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0325 00:46:11.156323 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=crd-publish-openapi-1876 --namespace=crd-publish-openapi-1876 delete e2e-test-crd-publish-openapi-372-crds test-cr'
  I0325 00:46:11.236950 25 builder.go:146] stderr: ""
  I0325 00:46:11.237023 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-372-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 03/25/25 00:46:11.237
  I0325 00:46:11.237413 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=crd-publish-openapi-1876 explain e2e-test-crd-publish-openapi-372-crds'
  I0325 00:46:11.298271 25 builder.go:146] stderr: ""
  I0325 00:46:11.298349 25 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-372-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0325 00:46:13.462177 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1876" for this suite. @ 03/25/25 00:46:13.474
• [10.384 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:968
  STEP: Creating a kubernetes client @ 03/25/25 00:46:13.481
  I0325 00:46:13.481973 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename statefulset @ 03/25/25 00:46:13.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:46:13.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:46:13.515
  STEP: Creating service test in namespace statefulset-3047 @ 03/25/25 00:46:13.522
  I0325 00:46:13.546747 25 wait.go:40] Found 0 stateful pods, waiting for 1
  I0325 00:46:23.550256 25 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 03/25/25 00:46:23.556
  I0325 00:46:23.589844 25 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0325 00:46:23.589906 25 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  I0325 00:46:33.584503 25 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0325 00:46:33.584566 25 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 03/25/25 00:46:33.591
  STEP: Delete all of the StatefulSets @ 03/25/25 00:46:33.594
  STEP: Verify that StatefulSets have been deleted @ 03/25/25 00:46:33.601
  I0325 00:46:33.604539 25 statefulset.go:138] Deleting all statefulset in ns statefulset-3047
  I0325 00:46:33.623949 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3047" for this suite. @ 03/25/25 00:46:33.633
• [20.161 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 03/25/25 00:46:33.643
  I0325 00:46:33.643107 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename webhook @ 03/25/25 00:46:33.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:46:33.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:46:33.675
  STEP: Setting up server cert @ 03/25/25 00:46:33.773
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/25/25 00:46:34.163
  STEP: Deploying the webhook pod @ 03/25/25 00:46:34.179
  STEP: Wait for the deployment to be ready @ 03/25/25 00:46:34.192
  I0325 00:46:34.204084 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 03/25/25 00:46:36.214
  STEP: Verifying the service has paired with the endpoint @ 03/25/25 00:46:36.238
  I0325 00:46:37.238454 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 03/25/25 00:46:37.246
  I0325 00:46:37.316974 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1226" for this suite. @ 03/25/25 00:46:37.33
  STEP: Destroying namespace "webhook-markers-2420" for this suite. @ 03/25/25 00:46:37.342
• [3.708 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 03/25/25 00:46:37.352
  I0325 00:46:37.352075 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename custom-resource-definition @ 03/25/25 00:46:37.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:46:37.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:46:37.383
  I0325 00:46:37.389520 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  I0325 00:46:42.947370 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3229" for this suite. @ 03/25/25 00:46:42.965
• [5.627 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1753
  STEP: Creating a kubernetes client @ 03/25/25 00:46:42.979
  I0325 00:46:42.979631 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename kubectl @ 03/25/25 00:46:42.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:46:43.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:46:43.006
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 03/25/25 00:46:43.008
  I0325 00:46:43.008385 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-1817 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0325 00:46:43.191258 25 builder.go:146] stderr: ""
  I0325 00:46:43.191311 25 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 03/25/25 00:46:43.191
  I0325 00:46:43.199952 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-1817 delete pods e2e-test-httpd-pod'
  I0325 00:46:44.736817 25 builder.go:146] stderr: ""
  I0325 00:46:44.736876 25 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0325 00:46:44.737258 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1817" for this suite. @ 03/25/25 00:46:44.742
• [1.769 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 03/25/25 00:46:44.749
  I0325 00:46:44.749273 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename var-expansion @ 03/25/25 00:46:44.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:46:44.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:46:44.772
  STEP: Creating a pod to test substitution in volume subpath @ 03/25/25 00:46:44.774
  STEP: Saw pod success @ 03/25/25 00:46:48.809
  I0325 00:46:48.812634 25 output.go:207] Trying to get logs from node master-2 pod var-expansion-99f6b84b-e67c-4537-aec8-43f95b92cec3 container dapi-container: <nil>
  STEP: delete the pod @ 03/25/25 00:46:48.826
  I0325 00:46:48.848640 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7061" for this suite. @ 03/25/25 00:46:48.859
• [4.117 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 03/25/25 00:46:48.866
  I0325 00:46:48.866795 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename resourcequota @ 03/25/25 00:46:48.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:46:48.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:46:48.909
  STEP: Creating a ResourceQuota @ 03/25/25 00:46:48.911
  STEP: Getting a ResourceQuota @ 03/25/25 00:46:48.918
  STEP: Updating a ResourceQuota @ 03/25/25 00:46:48.92
  STEP: Verifying a ResourceQuota was modified @ 03/25/25 00:46:48.929
  STEP: Deleting a ResourceQuota @ 03/25/25 00:46:48.931
  STEP: Verifying the deleted ResourceQuota @ 03/25/25 00:46:48.94
  I0325 00:46:48.943668 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7126" for this suite. @ 03/25/25 00:46:48.963
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 03/25/25 00:46:48.971
  I0325 00:46:48.971474 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename crd-selectable-fields @ 03/25/25 00:46:48.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:46:48.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:46:49
  STEP: Setting up server cert @ 03/25/25 00:46:49.003
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 03/25/25 00:46:49.236
  STEP: Deploying the custom resource conversion webhook pod @ 03/25/25 00:46:49.242
  STEP: Wait for the deployment to be ready @ 03/25/25 00:46:49.276
  I0325 00:46:49.285756 25 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 03/25/25 00:46:51.299
  STEP: Verifying the service has paired with the endpoint @ 03/25/25 00:46:51.315
  I0325 00:46:52.316342 25 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 03/25/25 00:46:52.324
  I0325 00:46:52.324995 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Creating a custom resource conversion webhook @ 03/25/25 00:46:57.84
  STEP: Watching with field selectors @ 03/25/25 00:46:59.891
  STEP: Registering informers with field selectors @ 03/25/25 00:46:59.9
  STEP: Creating custom resources @ 03/25/25 00:46:59.9
  STEP: Listing v2 custom resources with field selector host=host1 @ 03/25/25 00:46:59.929
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 03/25/25 00:46:59.933
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 03/25/25 00:46:59.936
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 03/25/25 00:46:59.938
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 03/25/25 00:46:59.94
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 03/25/25 00:46:59.946
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 03/25/25 00:46:59.946
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 03/25/25 00:46:59.946
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 03/25/25 00:46:59.946
  STEP: Deleting one custom resources to ensure that deletions are observed @ 03/25/25 00:46:59.946
  STEP: Updating one custom resources to ensure that deletions are observed @ 03/25/25 00:46:59.96
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 03/25/25 00:46:59.972
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 03/25/25 00:46:59.975
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 03/25/25 00:46:59.977
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 03/25/25 00:46:59.982
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 03/25/25 00:46:59.982
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 03/25/25 00:46:59.983
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 03/25/25 00:46:59.983
  I0325 00:47:00.549941 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-3955" for this suite. @ 03/25/25 00:47:00.554
• [11.591 seconds]
------------------------------
SS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295
  STEP: Creating a kubernetes client @ 03/25/25 00:47:00.563
  I0325 00:47:00.563409 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename downward-api @ 03/25/25 00:47:00.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:47:00.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:47:00.609
  STEP: Creating a pod to test downward api env vars @ 03/25/25 00:47:00.612
  STEP: Saw pod success @ 03/25/25 00:47:08.753
  I0325 00:47:08.756114 25 output.go:207] Trying to get logs from node master-2 pod downward-api-f8828a05-6b70-44d7-b499-ae028edcee51 container dapi-container: <nil>
  STEP: delete the pod @ 03/25/25 00:47:08.762
  I0325 00:47:08.785296 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9467" for this suite. @ 03/25/25 00:47:08.789
• [8.235 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 03/25/25 00:47:08.797
  I0325 00:47:08.797884 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename runtimeclass @ 03/25/25 00:47:08.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:47:08.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:47:08.828
  I0325 00:47:08.838676 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5607" for this suite. @ 03/25/25 00:47:08.891
• [0.102 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 03/25/25 00:47:08.9
  I0325 00:47:08.900545 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename resourcequota @ 03/25/25 00:47:08.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:47:08.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:47:08.928
  STEP: Creating resourceQuota "e2e-rq-status-zdx26" @ 03/25/25 00:47:09.007
  I0325 00:47:09.018175 25 resource_quota.go:1102] Resource quota "e2e-rq-status-zdx26" reports spec: hard cpu limit of 500m
  I0325 00:47:09.018582 25 resource_quota.go:1104] Resource quota "e2e-rq-status-zdx26" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-zdx26" /status @ 03/25/25 00:47:09.019
  STEP: Confirm /status for "e2e-rq-status-zdx26" resourceQuota via watch @ 03/25/25 00:47:09.051
  I0325 00:47:09.052824 25 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-zdx26" in namespace "resourcequota-3659" with hard status: v1.ResourceList(nil)
  I0325 00:47:09.052926 25 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-zdx26" in namespace "resourcequota-3659" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0325 00:47:09.052936 25 resource_quota.go:1141] ResourceQuota "e2e-rq-status-zdx26" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 03/25/25 00:47:09.056
  I0325 00:47:09.062540 25 resource_quota.go:1152] Resource quota "e2e-rq-status-zdx26" reports spec: hard cpu limit of 1
  I0325 00:47:09.062571 25 resource_quota.go:1153] Resource quota "e2e-rq-status-zdx26" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-zdx26" /status @ 03/25/25 00:47:09.062
  STEP: Confirm /status for "e2e-rq-status-zdx26" resourceQuota via watch @ 03/25/25 00:47:09.069
  I0325 00:47:09.070306 25 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-zdx26" in namespace "resourcequota-3659" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0325 00:47:09.070337 25 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-zdx26" in namespace "resourcequota-3659" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0325 00:47:09.070355 25 resource_quota.go:1185] ResourceQuota "e2e-rq-status-zdx26" /status was patched
  STEP: Get "e2e-rq-status-zdx26" /status @ 03/25/25 00:47:09.07
  I0325 00:47:09.075775 25 resource_quota.go:1196] Resourcequota "e2e-rq-status-zdx26" reports status: hard cpu of 1
  I0325 00:47:09.075806 25 resource_quota.go:1198] Resourcequota "e2e-rq-status-zdx26" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-zdx26" /status before checking Spec is unchanged @ 03/25/25 00:47:09.079
  I0325 00:47:09.085115 25 resource_quota.go:1218] Resourcequota "e2e-rq-status-zdx26" reports status: hard cpu of 2
  I0325 00:47:09.085154 25 resource_quota.go:1220] Resourcequota "e2e-rq-status-zdx26" reports status: hard memory of 2Gi
  I0325 00:47:09.086425 25 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-zdx26" in namespace "resourcequota-3659" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0325 00:47:09.089889 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-zdx26" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zdx26", GenerateName:"", Namespace:"resourcequota-3659", SelfLink:"", UID:"90634709-911f-4ab0-a7bb-fec67bd441cd", ResourceVersion:"2806724", Generation:0, CreationTimestamp:time.Date(2025, time.March, 25, 0, 47, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zdx26"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.March, 25, 0, 47, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0048893b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.March, 25, 0, 47, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004889428), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.March, 25, 0, 47, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004889488), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList(nil)}}
  I0325 00:47:14.092379 25 resource_quota.go:1260] ResourceQuota "e2e-rq-status-zdx26" Spec was unchanged and /status reset
  I0325 00:47:14.092526 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3659" for this suite. @ 03/25/25 00:47:14.097
• [5.204 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 03/25/25 00:47:14.104
  I0325 00:47:14.104903 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename podtemplate @ 03/25/25 00:47:14.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:47:14.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:47:14.135
  STEP: Create a pod template @ 03/25/25 00:47:14.138
  STEP: Replace a pod template @ 03/25/25 00:47:14.145
  I0325 00:47:14.155431 25 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0325 00:47:14.155561 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7694" for this suite. @ 03/25/25 00:47:14.198
• [0.101 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 03/25/25 00:47:14.206
  I0325 00:47:14.206246 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename csiinlinevolumes @ 03/25/25 00:47:14.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:47:14.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:47:14.23
  STEP: Creating two CSIDrivers @ 03/25/25 00:47:14.232
  STEP: Getting "inline-driver-663a1a9a-8b53-434e-bd75-a204bd9ab718" & "inline-driver-6e78c53c-a9e9-4f20-9229-5d6b2ba11ee4" @ 03/25/25 00:47:14.268
  STEP: Patching the CSIDriver "inline-driver-6e78c53c-a9e9-4f20-9229-5d6b2ba11ee4" @ 03/25/25 00:47:14.274
  STEP: Updating the CSIDriver "inline-driver-6e78c53c-a9e9-4f20-9229-5d6b2ba11ee4" @ 03/25/25 00:47:14.281
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-4837" @ 03/25/25 00:47:14.29
  STEP: Deleting CSIDriver "inline-driver-663a1a9a-8b53-434e-bd75-a204bd9ab718" @ 03/25/25 00:47:14.294
  STEP: Confirm deletion of CSIDriver "inline-driver-663a1a9a-8b53-434e-bd75-a204bd9ab718" @ 03/25/25 00:47:14.302
  STEP: Deleting CSIDriver "inline-driver-6e78c53c-a9e9-4f20-9229-5d6b2ba11ee4" via DeleteCollection @ 03/25/25 00:47:14.305
  STEP: Confirm deletion of CSIDriver "inline-driver-6e78c53c-a9e9-4f20-9229-5d6b2ba11ee4" @ 03/25/25 00:47:14.312
  I0325 00:47:14.315368 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-4837" for this suite. @ 03/25/25 00:47:14.318
• [0.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245
  STEP: Creating a kubernetes client @ 03/25/25 00:47:14.328
  I0325 00:47:14.328740 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename downward-api @ 03/25/25 00:47:14.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:47:14.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:47:14.352
  STEP: Creating a pod to test downward api env vars @ 03/25/25 00:47:14.354
  STEP: Saw pod success @ 03/25/25 00:47:18.38
  I0325 00:47:18.384479 25 output.go:207] Trying to get logs from node master-2 pod downward-api-038dd5b1-dbac-46b3-b246-337a90259f24 container dapi-container: <nil>
  STEP: delete the pod @ 03/25/25 00:47:18.39
  I0325 00:47:18.411800 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8252" for this suite. @ 03/25/25 00:47:18.415
• [4.093 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 03/25/25 00:47:18.423
  I0325 00:47:18.423692 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename custom-resource-definition @ 03/25/25 00:47:18.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:47:18.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:47:18.457
  I0325 00:47:18.460262 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  I0325 00:47:26.548335 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7234" for this suite. @ 03/25/25 00:47:26.555
• [8.139 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 03/25/25 00:47:26.563
  I0325 00:47:26.563206 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename emptydir @ 03/25/25 00:47:26.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:47:26.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:47:26.595
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 03/25/25 00:47:26.597
  STEP: Saw pod success @ 03/25/25 00:47:30.628
  I0325 00:47:30.632245 25 output.go:207] Trying to get logs from node master-2 pod pod-16a45707-8212-4bca-b8a1-a04c48494f45 container test-container: <nil>
  STEP: delete the pod @ 03/25/25 00:47:30.638
  I0325 00:47:30.665279 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7938" for this suite. @ 03/25/25 00:47:30.669
• [4.113 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:338
  STEP: Creating a kubernetes client @ 03/25/25 00:47:30.676
  I0325 00:47:30.676523 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename statefulset @ 03/25/25 00:47:30.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:47:30.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:47:30.702
  STEP: Creating service test in namespace statefulset-3705 @ 03/25/25 00:47:30.705
  STEP: Creating a new StatefulSet @ 03/25/25 00:47:30.71
  I0325 00:47:30.725345 25 wait.go:40] Found 0 stateful pods, waiting for 3
  I0325 00:47:40.724968 25 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0325 00:47:40.725014 25 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0325 00:47:40.725023 25 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 03/25/25 00:47:40.731
  I0325 00:47:40.740980 25 statefulset.go:2510] Updating stateful set ss2
  STEP: Creating a new revision @ 03/25/25 00:47:40.741
  STEP: Not applying an update when the partition is greater than the number of replicas @ 03/25/25 00:47:50.752
  STEP: Performing a canary update @ 03/25/25 00:47:50.752
  I0325 00:47:50.762292 25 statefulset.go:2510] Updating stateful set ss2
  I0325 00:47:50.775934 25 wait.go:74] Waiting for Pod statefulset-3705/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 03/25/25 00:48:00.773
  I0325 00:48:00.833647 25 wait.go:40] Found 1 stateful pods, waiting for 3
  I0325 00:48:10.829499 25 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0325 00:48:10.829573 25 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0325 00:48:10.829638 25 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 03/25/25 00:48:10.837
  I0325 00:48:10.853229 25 statefulset.go:2510] Updating stateful set ss2
  I0325 00:48:10.870428 25 wait.go:74] Waiting for Pod statefulset-3705/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0325 00:48:20.874266 25 statefulset.go:2510] Updating stateful set ss2
  I0325 00:48:20.882694 25 wait.go:56] Waiting for StatefulSet statefulset-3705/ss2 to complete update
  I0325 00:48:20.882947 25 wait.go:63] Waiting for Pod statefulset-3705/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0325 00:48:30.883611 25 statefulset.go:138] Deleting all statefulset in ns statefulset-3705
  I0325 00:48:30.887966 25 rest.go:152] Scaling statefulset ss2 to 0
  I0325 00:48:40.912827 25 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0325 00:48:40.916520 25 rest.go:90] Deleting statefulset ss2
  I0325 00:48:40.930950 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3705" for this suite. @ 03/25/25 00:48:40.938
• [70.275 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 03/25/25 00:48:40.953
  I0325 00:48:40.953968 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/25/25 00:48:40.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:48:40.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:48:40.981
  STEP: set up a multi version CRD @ 03/25/25 00:48:40.984
  I0325 00:48:40.985119 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: mark a version not serverd @ 03/25/25 00:48:50.802
  STEP: check the unserved version gets removed @ 03/25/25 00:48:50.826
  STEP: check the other version is not changed @ 03/25/25 00:48:52.564
  I0325 00:48:56.298164 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5685" for this suite. @ 03/25/25 00:48:56.308
• [15.365 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 03/25/25 00:48:56.317
  I0325 00:48:56.317754 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename secrets @ 03/25/25 00:48:56.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:48:56.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:48:56.342
  STEP: Creating secret with name secret-test-bc7eabe8-cf33-4047-b0b2-e0b2c899c733 @ 03/25/25 00:48:56.344
  STEP: Creating a pod to test consume secrets @ 03/25/25 00:48:56.35
  STEP: Saw pod success @ 03/25/25 00:49:00.375
  I0325 00:49:00.379253 25 output.go:207] Trying to get logs from node master-2 pod pod-secrets-c6cb8178-b8df-41c2-85c2-d63995d0e54a container secret-volume-test: <nil>
  STEP: delete the pod @ 03/25/25 00:49:00.385
  I0325 00:49:00.403312 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7297" for this suite. @ 03/25/25 00:49:00.414
• [4.105 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 03/25/25 00:49:00.422
  I0325 00:49:00.422486 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename emptydir @ 03/25/25 00:49:00.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:49:00.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:49:00.449
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 03/25/25 00:49:00.459
  STEP: Saw pod success @ 03/25/25 00:49:04.506
  I0325 00:49:04.509481 25 output.go:207] Trying to get logs from node master-2 pod pod-bc68411a-707f-467e-8177-057fcbeadb91 container test-container: <nil>
  STEP: delete the pod @ 03/25/25 00:49:04.515
  I0325 00:49:04.537539 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9030" for this suite. @ 03/25/25 00:49:04.541
• [4.126 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 03/25/25 00:49:04.548
  I0325 00:49:04.548382 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename csiinlinevolumes @ 03/25/25 00:49:04.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:49:04.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:49:04.574
  STEP: creating @ 03/25/25 00:49:04.576
  STEP: getting @ 03/25/25 00:49:04.604
  STEP: listing in namespace @ 03/25/25 00:49:04.609
  STEP: patching @ 03/25/25 00:49:04.611
  STEP: deleting @ 03/25/25 00:49:04.629
  I0325 00:49:04.641634 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-8374" for this suite. @ 03/25/25 00:49:04.645
• [0.106 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 03/25/25 00:49:04.654
  I0325 00:49:04.654581 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename containers @ 03/25/25 00:49:04.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:49:04.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:49:04.701
  STEP: Creating a pod to test override arguments @ 03/25/25 00:49:04.704
  STEP: Saw pod success @ 03/25/25 00:49:08.744
  I0325 00:49:08.747744 25 output.go:207] Trying to get logs from node master-2 pod client-containers-68d58c90-8294-4a33-b4aa-d9f95263e1d2 container agnhost-container: <nil>
  STEP: delete the pod @ 03/25/25 00:49:08.753
  I0325 00:49:08.775535 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3992" for this suite. @ 03/25/25 00:49:08.779
• [4.132 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:192
  STEP: Creating a kubernetes client @ 03/25/25 00:49:08.786
  I0325 00:49:08.786413 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename svcaccounts @ 03/25/25 00:49:08.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:49:08.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:49:08.813
  I0325 00:49:08.837952 25 service_accounts.go:282] created pod pod-service-account-defaultsa
  I0325 00:49:08.838001 25 service_accounts.go:296] pod pod-service-account-defaultsa service account token volume mount: true
  I0325 00:49:08.848308 25 service_accounts.go:282] created pod pod-service-account-mountsa
  I0325 00:49:08.848400 25 service_accounts.go:296] pod pod-service-account-mountsa service account token volume mount: true
  I0325 00:49:08.857855 25 service_accounts.go:282] created pod pod-service-account-nomountsa
  I0325 00:49:08.857891 25 service_accounts.go:296] pod pod-service-account-nomountsa service account token volume mount: false
  I0325 00:49:08.868395 25 service_accounts.go:282] created pod pod-service-account-defaultsa-mountspec
  I0325 00:49:08.868433 25 service_accounts.go:296] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0325 00:49:08.877624 25 service_accounts.go:282] created pod pod-service-account-mountsa-mountspec
  I0325 00:49:08.878128 25 service_accounts.go:296] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0325 00:49:08.884836 25 service_accounts.go:282] created pod pod-service-account-nomountsa-mountspec
  I0325 00:49:08.884863 25 service_accounts.go:296] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0325 00:49:08.894907 25 service_accounts.go:282] created pod pod-service-account-defaultsa-nomountspec
  I0325 00:49:08.895012 25 service_accounts.go:296] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0325 00:49:08.936849 25 service_accounts.go:282] created pod pod-service-account-mountsa-nomountspec
  I0325 00:49:08.936927 25 service_accounts.go:296] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0325 00:49:08.946710 25 service_accounts.go:282] created pod pod-service-account-nomountsa-nomountspec
  I0325 00:49:08.946753 25 service_accounts.go:296] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0325 00:49:08.946883 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1549" for this suite. @ 03/25/25 00:49:08.959
• [0.185 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 03/25/25 00:49:08.972
  I0325 00:49:08.972054 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename configmap @ 03/25/25 00:49:08.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:49:09.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:49:09.004
  STEP: Creating configMap with name cm-test-opt-del-049b7d79-4972-480e-a746-0d5483887fe1 @ 03/25/25 00:49:09.059
  STEP: Creating configMap with name cm-test-opt-upd-6257150b-b099-44ba-87d6-78fd5f6a46cc @ 03/25/25 00:49:09.064
  STEP: Creating the pod @ 03/25/25 00:49:09.074
  STEP: Deleting configmap cm-test-opt-del-049b7d79-4972-480e-a746-0d5483887fe1 @ 03/25/25 00:49:11.146
  STEP: Updating configmap cm-test-opt-upd-6257150b-b099-44ba-87d6-78fd5f6a46cc @ 03/25/25 00:49:11.152
  STEP: Creating configMap with name cm-test-opt-create-e782d589-a1f8-428a-8c3c-17dd49d240a6 @ 03/25/25 00:49:11.158
  STEP: waiting to observe update in volume @ 03/25/25 00:49:11.163
  I0325 00:50:33.562326 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3102" for this suite. @ 03/25/25 00:50:33.567
• [84.606 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1527
  STEP: Creating a kubernetes client @ 03/25/25 00:50:33.579
  I0325 00:50:33.579500 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename kubectl @ 03/25/25 00:50:33.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:50:33.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:50:33.611
  STEP: creating Agnhost RC @ 03/25/25 00:50:33.614
  I0325 00:50:33.615075 25 kubectl.go:1534] namespace kubectl-2634
  I0325 00:50:33.615263 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-2634 create -f -'
  I0325 00:50:33.745675 25 builder.go:146] stderr: ""
  I0325 00:50:33.745728 25 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 03/25/25 00:50:33.745
  I0325 00:50:34.750989 25 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0325 00:50:34.751033 25 framework.go:733] Found 0 / 1
  I0325 00:50:35.751033 25 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0325 00:50:35.751086 25 framework.go:733] Found 1 / 1
  I0325 00:50:35.751106 25 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0325 00:50:35.753844 25 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0325 00:50:35.753875 25 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0325 00:50:35.753883 25 kubectl.go:1541] wait on agnhost-primary startup in kubectl-2634 
  I0325 00:50:35.753950 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-2634 logs agnhost-primary-qtvcx agnhost-primary'
  I0325 00:50:35.822987 25 builder.go:146] stderr: ""
  I0325 00:50:35.823051 25 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 03/25/25 00:50:35.823
  I0325 00:50:35.823161 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-2634 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0325 00:50:35.900370 25 builder.go:146] stderr: ""
  I0325 00:50:35.900431 25 builder.go:147] stdout: "service/rm2 exposed\n"
  I0325 00:50:35.907211 25 utils.go:1203] Service rm2 in namespace kubectl-2634 found.
  STEP: exposing service @ 03/25/25 00:50:37.916
  I0325 00:50:37.916563 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-2634 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0325 00:50:37.992909 25 builder.go:146] stderr: ""
  I0325 00:50:37.992958 25 builder.go:147] stdout: "service/rm3 exposed\n"
  I0325 00:50:38.004116 25 utils.go:1203] Service rm3 in namespace kubectl-2634 found.
  I0325 00:50:40.015643 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2634" for this suite. @ 03/25/25 00:50:40.025
• [6.455 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 03/25/25 00:50:40.034
  I0325 00:50:40.034826 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename webhook @ 03/25/25 00:50:40.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:50:40.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:50:40.061
  STEP: Setting up server cert @ 03/25/25 00:50:40.16
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/25/25 00:50:40.634
  STEP: Deploying the webhook pod @ 03/25/25 00:50:40.643
  STEP: Wait for the deployment to be ready @ 03/25/25 00:50:40.659
  I0325 00:50:40.669817 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0325 00:50:42.681970 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 25, 0, 50, 40, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 50, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 0, 50, 40, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 50, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0325 00:50:44.702075 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 25, 0, 50, 40, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 50, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 0, 50, 40, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 0, 50, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 03/25/25 00:50:46.686
  STEP: Verifying the service has paired with the endpoint @ 03/25/25 00:50:46.704
  I0325 00:50:47.704566 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 03/25/25 00:50:47.817
  STEP: Creating a configMap that should be mutated @ 03/25/25 00:50:47.829
  STEP: Deleting the collection of validation webhooks @ 03/25/25 00:50:47.858
  STEP: Creating a configMap that should not be mutated @ 03/25/25 00:50:47.91
  I0325 00:50:47.990873 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5106" for this suite. @ 03/25/25 00:50:47.999
  STEP: Destroying namespace "webhook-markers-6150" for this suite. @ 03/25/25 00:50:48.007
• [7.983 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 03/25/25 00:50:48.018
  I0325 00:50:48.018216 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename resourcequota @ 03/25/25 00:50:48.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:50:48.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:50:48.06
  STEP: Counting existing ResourceQuota @ 03/25/25 00:50:48.063
  STEP: Creating a ResourceQuota @ 03/25/25 00:50:53.067
  STEP: Ensuring resource quota status is calculated @ 03/25/25 00:50:53.075
  STEP: Creating a ReplicationController @ 03/25/25 00:50:55.08
  STEP: Ensuring resource quota status captures replication controller creation @ 03/25/25 00:50:55.096
  STEP: Deleting a ReplicationController @ 03/25/25 00:50:57.101
  STEP: Ensuring resource quota status released usage @ 03/25/25 00:50:57.108
  I0325 00:50:59.118127 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5625" for this suite. @ 03/25/25 00:50:59.123
• [11.113 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 03/25/25 00:50:59.131
  I0325 00:50:59.131578 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename csinodes @ 03/25/25 00:50:59.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:50:59.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:50:59.159
  STEP: Creating initial csiNode "e2e-csinode-l7j4t" @ 03/25/25 00:50:59.163
  STEP: Getting initial csiNode "e2e-csinode-l7j4t" @ 03/25/25 00:50:59.169
  STEP: Patching initial csiNode: "e2e-csinode-l7j4t" @ 03/25/25 00:50:59.171
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-l7j4t=patched" @ 03/25/25 00:50:59.179
  STEP: Delete initial csiNode: "e2e-csinode-l7j4t" @ 03/25/25 00:50:59.181
  STEP: Confirm deletion of csiNode "e2e-csinode-l7j4t" @ 03/25/25 00:50:59.19
  STEP: Creating replacement csiNode "e2e-csinode-qjpqx" @ 03/25/25 00:50:59.192
  STEP: Getting replacement csiNode "e2e-csinode-qjpqx" @ 03/25/25 00:50:59.197
  STEP: Updating replacement csiNode "e2e-csinode-qjpqx" @ 03/25/25 00:50:59.2
  STEP: DeleteCollection of CSINodes with "e2e-csinode-qjpqx=updated" label @ 03/25/25 00:50:59.211
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-qjpqx=updated" @ 03/25/25 00:50:59.219
  I0325 00:50:59.222522 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-8245" for this suite. @ 03/25/25 00:50:59.226
• [0.105 seconds]
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 03/25/25 00:50:59.236
  I0325 00:50:59.236637 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename container-runtime @ 03/25/25 00:50:59.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:50:59.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:50:59.261
  STEP: create the container @ 03/25/25 00:50:59.263
  W0325 00:50:59.275221      25 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 03/25/25 00:50:59.275
  STEP: get the container status @ 03/25/25 00:51:02.293
  STEP: the container should be terminated @ 03/25/25 00:51:02.297
  STEP: the termination message should be set @ 03/25/25 00:51:02.297
  I0325 00:51:02.297641 25 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 03/25/25 00:51:02.297
  I0325 00:51:02.318234 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7929" for this suite. @ 03/25/25 00:51:02.322
• [3.094 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 03/25/25 00:51:02.331
  I0325 00:51:02.331098 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename kubectl @ 03/25/25 00:51:02.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:51:02.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:51:02.356
  STEP: creating all guestbook components @ 03/25/25 00:51:02.359
  I0325 00:51:02.359548 25 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0325 00:51:02.359611 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-1515 create -f -'
  I0325 00:51:02.482638 25 builder.go:146] stderr: ""
  I0325 00:51:02.482809 25 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0325 00:51:02.483051 25 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0325 00:51:02.483115 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-1515 create -f -'
  I0325 00:51:02.661978 25 builder.go:146] stderr: ""
  I0325 00:51:02.662039 25 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0325 00:51:02.662114 25 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0325 00:51:02.662191 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-1515 create -f -'
  I0325 00:51:02.824696 25 builder.go:146] stderr: ""
  I0325 00:51:02.824743 25 builder.go:147] stdout: "service/frontend created\n"
  I0325 00:51:02.824841 25 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0325 00:51:02.824921 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-1515 create -f -'
  I0325 00:51:02.944882 25 builder.go:146] stderr: ""
  I0325 00:51:02.944928 25 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0325 00:51:02.945020 25 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0325 00:51:02.945087 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-1515 create -f -'
  I0325 00:51:03.092533 25 builder.go:146] stderr: ""
  I0325 00:51:03.092591 25 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0325 00:51:03.092674 25 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0325 00:51:03.092745 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-1515 create -f -'
  I0325 00:51:03.213262 25 builder.go:146] stderr: ""
  I0325 00:51:03.213319 25 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 03/25/25 00:51:03.213
  I0325 00:51:03.213376 25 kubectl.go:2269] Waiting for all frontend pods to be Running.
  I0325 00:51:08.264303 25 kubectl.go:2273] Waiting for frontend to serve content.
  I0325 00:51:08.283220 25 kubectl.go:2278] Trying to add a new entry to the guestbook.
  I0325 00:51:08.300722 25 kubectl.go:2283] Verifying that added entry can be retrieved.
  I0325 00:51:08.312819 25 kubectl.go:2296] Failed to get response from guestbook. err: <nil>, response: {"data":""}
  STEP: using delete to clean up resources @ 03/25/25 00:51:13.322
  I0325 00:51:13.322376 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-1515 delete --grace-period=0 --force -f -'
  I0325 00:51:13.402335 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0325 00:51:13.402383 25 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 03/25/25 00:51:13.402
  I0325 00:51:13.402507 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-1515 delete --grace-period=0 --force -f -'
  I0325 00:51:13.484944 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0325 00:51:13.484991 25 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 03/25/25 00:51:13.485
  I0325 00:51:13.485135 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-1515 delete --grace-period=0 --force -f -'
  I0325 00:51:13.565239 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0325 00:51:13.565290 25 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 03/25/25 00:51:13.565
  I0325 00:51:13.565466 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-1515 delete --grace-period=0 --force -f -'
  I0325 00:51:13.635487 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0325 00:51:13.635538 25 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 03/25/25 00:51:13.635
  I0325 00:51:13.636213 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-1515 delete --grace-period=0 --force -f -'
  I0325 00:51:13.738252 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0325 00:51:13.738316 25 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 03/25/25 00:51:13.738
  I0325 00:51:13.739784 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-1515 delete --grace-period=0 --force -f -'
  I0325 00:51:13.817566 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0325 00:51:13.817617 25 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0325 00:51:13.817828 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1515" for this suite. @ 03/25/25 00:51:13.823
• [11.501 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 03/25/25 00:51:13.832
  I0325 00:51:13.832100 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename services @ 03/25/25 00:51:13.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:51:13.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:51:13.867
  STEP: creating service in namespace services-5157 @ 03/25/25 00:51:13.869
  STEP: creating service affinity-nodeport in namespace services-5157 @ 03/25/25 00:51:13.869
  STEP: creating replication controller affinity-nodeport in namespace services-5157 @ 03/25/25 00:51:13.894
  I0325 00:51:13.911226      25 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-5157, replica count: 3
  I0325 00:51:16.963193      25 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 1 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0325 00:51:19.963503      25 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0325 00:51:19.977551 25 resource.go:361] Creating new exec pod
  I0325 00:51:25.012847 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-5157 exec execpod-affinityqjxrs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0325 00:51:25.157843 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.233.9.160) 80 port [tcp/http] succeeded!\n"
  I0325 00:51:25.157913 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0325 00:51:25.157999 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-5157 exec execpod-affinityqjxrs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.9.160 80'
  I0325 00:51:25.271088 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.9.160 80\nConnection to 10.233.9.160 80 port [tcp/http] succeeded!\n"
  I0325 00:51:25.271141 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0325 00:51:25.271229 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-5157 exec execpod-affinityqjxrs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.10.91 31519'
  I0325 00:51:25.386448 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.10.91 31519\nConnection to 172.20.10.91 31519 port [tcp/*] succeeded!\n"
  I0325 00:51:25.386520 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0325 00:51:25.386599 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-5157 exec execpod-affinityqjxrs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.10.227 31519'
  I0325 00:51:25.499678 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.10.227 31519\nConnection to 172.20.10.227 31519 port [tcp/*] succeeded!\n"
  I0325 00:51:25.499734 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0325 00:51:25.499810 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-5157 exec execpod-affinityqjxrs -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.20.10.91:31519/ ; done'
  I0325 00:51:25.688704 25 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:31519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:31519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:31519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:31519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:31519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:31519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:31519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:31519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:31519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:31519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:31519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:31519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:31519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:31519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:31519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:31519/\n"
  I0325 00:51:25.688797 25 builder.go:147] stdout: "\naffinity-nodeport-jngwq\naffinity-nodeport-jngwq\naffinity-nodeport-jngwq\naffinity-nodeport-jngwq\naffinity-nodeport-jngwq\naffinity-nodeport-jngwq\naffinity-nodeport-jngwq\naffinity-nodeport-jngwq\naffinity-nodeport-jngwq\naffinity-nodeport-jngwq\naffinity-nodeport-jngwq\naffinity-nodeport-jngwq\naffinity-nodeport-jngwq\naffinity-nodeport-jngwq\naffinity-nodeport-jngwq\naffinity-nodeport-jngwq"
  I0325 00:51:25.688831 25 service.go:242] Received response from host: affinity-nodeport-jngwq
  I0325 00:51:25.688840 25 service.go:242] Received response from host: affinity-nodeport-jngwq
  I0325 00:51:25.688847 25 service.go:242] Received response from host: affinity-nodeport-jngwq
  I0325 00:51:25.688853 25 service.go:242] Received response from host: affinity-nodeport-jngwq
  I0325 00:51:25.688859 25 service.go:242] Received response from host: affinity-nodeport-jngwq
  I0325 00:51:25.688865 25 service.go:242] Received response from host: affinity-nodeport-jngwq
  I0325 00:51:25.688870 25 service.go:242] Received response from host: affinity-nodeport-jngwq
  I0325 00:51:25.688875 25 service.go:242] Received response from host: affinity-nodeport-jngwq
  I0325 00:51:25.688884 25 service.go:242] Received response from host: affinity-nodeport-jngwq
  I0325 00:51:25.688889 25 service.go:242] Received response from host: affinity-nodeport-jngwq
  I0325 00:51:25.688897 25 service.go:242] Received response from host: affinity-nodeport-jngwq
  I0325 00:51:25.688902 25 service.go:242] Received response from host: affinity-nodeport-jngwq
  I0325 00:51:25.688907 25 service.go:242] Received response from host: affinity-nodeport-jngwq
  I0325 00:51:25.688913 25 service.go:242] Received response from host: affinity-nodeport-jngwq
  I0325 00:51:25.688918 25 service.go:242] Received response from host: affinity-nodeport-jngwq
  I0325 00:51:25.688923 25 service.go:242] Received response from host: affinity-nodeport-jngwq
  I0325 00:51:25.689032 25 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-5157, will wait for the garbage collector to delete the pods @ 03/25/25 00:51:25.733
  I0325 00:51:25.796559 25 resources.go:139] Deleting ReplicationController affinity-nodeport took: 8.834789ms
  I0325 00:51:25.897719 25 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 101.151404ms
  I0325 00:51:29.024442 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5157" for this suite. @ 03/25/25 00:51:29.028
• [15.206 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 03/25/25 00:51:29.038
  I0325 00:51:29.038127 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename emptydir @ 03/25/25 00:51:29.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:51:29.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:51:29.07
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 03/25/25 00:51:29.074
  STEP: Saw pod success @ 03/25/25 00:51:37.11
  I0325 00:51:37.115096 25 output.go:207] Trying to get logs from node master-2 pod pod-38317f34-81ff-4f6b-b1b8-4647369b10b9 container test-container: <nil>
  STEP: delete the pod @ 03/25/25 00:51:37.125
  I0325 00:51:37.142693 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-275" for this suite. @ 03/25/25 00:51:37.147
• [8.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 03/25/25 00:51:37.156
  I0325 00:51:37.156478 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename replication-controller @ 03/25/25 00:51:37.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:51:37.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:51:37.195
  STEP: creating a ReplicationController @ 03/25/25 00:51:37.202
  STEP: waiting for RC to be added @ 03/25/25 00:51:37.211
  STEP: waiting for available Replicas @ 03/25/25 00:51:37.212
  STEP: patching ReplicationController @ 03/25/25 00:51:38.562
  STEP: waiting for RC to be modified @ 03/25/25 00:51:38.571
  STEP: patching ReplicationController status @ 03/25/25 00:51:38.571
  STEP: waiting for RC to be modified @ 03/25/25 00:51:38.578
  STEP: waiting for available Replicas @ 03/25/25 00:51:38.578
  STEP: fetching ReplicationController status @ 03/25/25 00:51:38.588
  STEP: patching ReplicationController scale @ 03/25/25 00:51:38.591
  STEP: waiting for RC to be modified @ 03/25/25 00:51:38.599
  STEP: waiting for ReplicationController's scale to be the max amount @ 03/25/25 00:51:38.6
  STEP: fetching ReplicationController; ensuring that it's patched @ 03/25/25 00:51:40.013
  STEP: updating ReplicationController status @ 03/25/25 00:51:40.017
  STEP: waiting for RC to be modified @ 03/25/25 00:51:40.024
  STEP: listing all ReplicationControllers @ 03/25/25 00:51:40.024
  STEP: checking that ReplicationController has expected values @ 03/25/25 00:51:40.027
  STEP: deleting ReplicationControllers by collection @ 03/25/25 00:51:40.027
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 03/25/25 00:51:40.041
  E0325 00:51:40.102204      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:51:40.102381 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7737" for this suite. @ 03/25/25 00:51:40.105
• [2.959 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 03/25/25 00:51:40.115
  I0325 00:51:40.115740 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename replicaset @ 03/25/25 00:51:40.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:51:40.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:51:40.142
  STEP: Create a Replicaset @ 03/25/25 00:51:40.147
  STEP: Verify that the required pods have come up. @ 03/25/25 00:51:40.155
  I0325 00:51:40.158525 25 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0325 00:51:41.102746      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:51:42.103842      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:51:43.104356      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:51:44.104662      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:51:45.105626      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:51:45.163734 25 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 03/25/25 00:51:45.164
  STEP: Getting /status @ 03/25/25 00:51:45.165
  I0325 00:51:45.171294 25 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 03/25/25 00:51:45.171
  I0325 00:51:45.186100 25 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 03/25/25 00:51:45.186
  I0325 00:51:45.188112 25 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0325 00:51:45.188208 25 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0325 00:51:45.188290 25 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0325 00:51:45.188677 25 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0325 00:51:45.189201 25 replica_set.go:682] Found replicaset test-rs in namespace replicaset-3675 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0325 00:51:45.189423 25 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 03/25/25 00:51:45.189
  I0325 00:51:45.190456 25 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0325 00:51:45.200682 25 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 03/25/25 00:51:45.2
  I0325 00:51:45.202257 25 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0325 00:51:45.202376 25 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0325 00:51:45.202459 25 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0325 00:51:45.202794 25 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0325 00:51:45.202926 25 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-3675 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0325 00:51:45.203710 25 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0325 00:51:45.203772 25 replica_set.go:718] Found replicaset test-rs in namespace replicaset-3675 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0325 00:51:45.203837 25 replica_set.go:729] Replicaset test-rs has a patched status
  I0325 00:51:45.204143 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3675" for this suite. @ 03/25/25 00:51:45.214
• [5.106 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 03/25/25 00:51:45.221
  I0325 00:51:45.221298 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename configmap @ 03/25/25 00:51:45.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:51:45.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:51:45.248
  STEP: Creating configMap with name configmap-test-volume-8b920513-0801-4682-b828-11ec1f2c7144 @ 03/25/25 00:51:45.25
  STEP: Creating a pod to test consume configMaps @ 03/25/25 00:51:45.255
  E0325 00:51:46.106377      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:51:47.106477      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:51:48.106697      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:51:49.107004      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 00:51:49.278
  I0325 00:51:49.281877 25 output.go:207] Trying to get logs from node master-2 pod pod-configmaps-2cb630bd-8923-45e7-8774-7bb15ed129db container agnhost-container: <nil>
  STEP: delete the pod @ 03/25/25 00:51:49.289
  I0325 00:51:49.309414 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5261" for this suite. @ 03/25/25 00:51:49.314
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 03/25/25 00:51:49.322
  I0325 00:51:49.322401 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename disruption @ 03/25/25 00:51:49.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:51:49.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:51:49.345
  STEP: Creating a pdb that targets all three pods in a test replica set @ 03/25/25 00:51:49.347
  STEP: Waiting for the pdb to be processed @ 03/25/25 00:51:49.352
  E0325 00:51:50.107265      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:51:51.107433      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 03/25/25 00:51:51.363
  STEP: Waiting for all pods to be running @ 03/25/25 00:51:51.364
  I0325 00:51:51.367430 25 disruption.go:680] pods: 0 < 3
  E0325 00:51:52.107778      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:51:53.107950      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 03/25/25 00:51:53.37
  STEP: Updating the pdb to allow a pod to be evicted @ 03/25/25 00:51:53.378
  STEP: Waiting for the pdb to be processed @ 03/25/25 00:51:53.558
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 03/25/25 00:51:53.561
  STEP: Waiting for all pods to be running @ 03/25/25 00:51:53.561
  STEP: Waiting for the pdb to observed all healthy pods @ 03/25/25 00:51:53.565
  STEP: Patching the pdb to disallow a pod to be evicted @ 03/25/25 00:51:53.616
  STEP: Waiting for the pdb to be processed @ 03/25/25 00:51:53.652
  E0325 00:51:54.109029      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:51:55.109729      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 03/25/25 00:51:55.657
  STEP: locating a running pod @ 03/25/25 00:51:55.664
  STEP: Deleting the pdb to allow a pod to be evicted @ 03/25/25 00:51:55.671
  STEP: Waiting for the pdb to be deleted @ 03/25/25 00:51:55.68
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 03/25/25 00:51:55.683
  STEP: Waiting for all pods to be running @ 03/25/25 00:51:55.683
  I0325 00:51:55.789934 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3628" for this suite. @ 03/25/25 00:51:55.803
• [6.495 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 03/25/25 00:51:55.817
  I0325 00:51:55.817283 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename cronjob @ 03/25/25 00:51:55.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:51:55.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:51:55.88
  STEP: Creating a cronjob @ 03/25/25 00:51:55.885
  STEP: creating @ 03/25/25 00:51:55.885
  STEP: getting @ 03/25/25 00:51:55.895
  STEP: listing @ 03/25/25 00:51:55.901
  STEP: watching @ 03/25/25 00:51:55.904
  I0325 00:51:55.904451 25 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 03/25/25 00:51:55.905
  STEP: cluster-wide watching @ 03/25/25 00:51:55.908
  I0325 00:51:55.908541 25 cronjob.go:407] starting watch
  STEP: patching @ 03/25/25 00:51:55.911
  STEP: updating @ 03/25/25 00:51:55.92
  I0325 00:51:55.931554 25 cronjob.go:431] waiting for watch events with expected annotations
  I0325 00:51:55.931625 25 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 03/25/25 00:51:55.931
  STEP: updating /status @ 03/25/25 00:51:55.937
  STEP: get /status @ 03/25/25 00:51:55.943
  STEP: deleting @ 03/25/25 00:51:55.946
  STEP: deleting a collection @ 03/25/25 00:51:55.961
  I0325 00:51:55.973661 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-462" for this suite. @ 03/25/25 00:51:55.978
• [0.173 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 03/25/25 00:51:55.991
  I0325 00:51:55.991110 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename webhook @ 03/25/25 00:51:55.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:51:56.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:51:56.017
  E0325 00:51:56.110679      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 03/25/25 00:51:56.12
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/25/25 00:51:56.307
  STEP: Deploying the webhook pod @ 03/25/25 00:51:56.319
  STEP: Wait for the deployment to be ready @ 03/25/25 00:51:56.34
  I0325 00:51:56.351990 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0325 00:51:57.111517      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:51:58.111899      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/25/25 00:51:58.363
  STEP: Verifying the service has paired with the endpoint @ 03/25/25 00:51:58.381
  E0325 00:51:59.112748      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:51:59.382238 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 03/25/25 00:51:59.389
  STEP: create a pod @ 03/25/25 00:51:59.41
  E0325 00:52:00.113057      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:01.114138      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:02.114698      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:03.114938      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:04.116022      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:05.117030      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 03/25/25 00:52:05.443
  I0325 00:52:05.443595 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=webhook-447 attach --namespace=webhook-447 to-be-attached-pod -i -c=container1'
  I0325 00:52:05.526943 25 builder.go:135] rc: 1
  I0325 00:52:05.593840 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-447" for this suite. @ 03/25/25 00:52:05.603
  STEP: Destroying namespace "webhook-markers-5703" for this suite. @ 03/25/25 00:52:05.612
• [9.628 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 03/25/25 00:52:05.619
  I0325 00:52:05.619788 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename container-runtime @ 03/25/25 00:52:05.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:52:05.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:52:05.655
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 03/25/25 00:52:05.672
  E0325 00:52:06.118330      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:07.118440      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:08.119507      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:09.119769      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:10.120021      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:11.120537      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:12.120561      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:13.120954      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:14.121403      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:15.122084      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:16.122568      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:17.123564      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:18.124286      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:19.124449      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:20.125398      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:21.126091      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:22.127069      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:23.127097      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:24.127797      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:25.128029      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:26.128348      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 03/25/25 00:52:26.786
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 03/25/25 00:52:26.789
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 03/25/25 00:52:26.797
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 03/25/25 00:52:26.797
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 03/25/25 00:52:26.831
  E0325 00:52:27.128563      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:28.129066      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 03/25/25 00:52:28.849
  E0325 00:52:29.129153      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:30.129756      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 03/25/25 00:52:30.866
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 03/25/25 00:52:30.872
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 03/25/25 00:52:30.872
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 03/25/25 00:52:30.902
  E0325 00:52:31.130702      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 03/25/25 00:52:31.911
  E0325 00:52:32.131227      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:33.131312      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:34.132140      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 03/25/25 00:52:34.927
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 03/25/25 00:52:34.932
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 03/25/25 00:52:34.932
  I0325 00:52:34.970082 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9982" for this suite. @ 03/25/25 00:52:34.974
• [29.363 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 03/25/25 00:52:34.984
  I0325 00:52:34.984111 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename chunking @ 03/25/25 00:52:34.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:52:35.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:52:35.012
  STEP: creating a large number of resources @ 03/25/25 00:52:35.014
  E0325 00:52:35.132204      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:36.132658      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:37.133356      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:38.134265      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:39.135451      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:40.135787      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:41.135910      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:42.136501      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:43.136549      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:44.136669      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:45.136694      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:46.137308      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:47.138138      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:48.138388      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:49.138984      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:50.139212      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:51.140062      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:52.141179      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 03/25/25 00:52:52.711
  I0325 00:52:52.740897 25 chunking.go:98] Retrieved 17/17 results with rv 2811003 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwMywic3RhcnQiOiIvdGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0325 00:52:52.793457 25 chunking.go:98] Retrieved 17/17 results with rv 2811003 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  I0325 00:52:52.840872 25 chunking.go:98] Retrieved 17/17 results with rv 2811003 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  I0325 00:52:52.891173 25 chunking.go:98] Retrieved 17/17 results with rv 2811003 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  I0325 00:52:52.941242 25 chunking.go:98] Retrieved 17/17 results with rv 2811003 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  I0325 00:52:52.991601 25 chunking.go:98] Retrieved 17/17 results with rv 2811003 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  I0325 00:52:53.041475 25 chunking.go:98] Retrieved 17/17 results with rv 2811003 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  I0325 00:52:53.091471 25 chunking.go:98] Retrieved 17/17 results with rv 2811003 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  I0325 00:52:53.140213 25 chunking.go:98] Retrieved 17/17 results with rv 2811003 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  E0325 00:52:53.142123      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:52:53.190168 25 chunking.go:98] Retrieved 17/17 results with rv 2811003 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  I0325 00:52:53.243284 25 chunking.go:98] Retrieved 17/17 results with rv 2811003 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  I0325 00:52:53.289536 25 chunking.go:98] Retrieved 17/17 results with rv 2811003 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  I0325 00:52:53.341589 25 chunking.go:98] Retrieved 17/17 results with rv 2811003 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  I0325 00:52:53.390766 25 chunking.go:98] Retrieved 17/17 results with rv 2811003 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  I0325 00:52:53.439486 25 chunking.go:98] Retrieved 17/17 results with rv 2811003 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  I0325 00:52:53.490543 25 chunking.go:98] Retrieved 17/17 results with rv 2811003 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  I0325 00:52:53.540791 25 chunking.go:98] Retrieved 17/17 results with rv 2811003 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  I0325 00:52:53.590169 25 chunking.go:98] Retrieved 17/17 results with rv 2811003 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  I0325 00:52:53.641415 25 chunking.go:98] Retrieved 17/17 results with rv 2811003 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  I0325 00:52:53.690674 25 chunking.go:98] Retrieved 17/17 results with rv 2811003 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  I0325 00:52:53.753206 25 chunking.go:98] Retrieved 17/17 results with rv 2811003 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  I0325 00:52:53.790240 25 chunking.go:98] Retrieved 17/17 results with rv 2811003 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  I0325 00:52:53.840603 25 chunking.go:98] Retrieved 17/17 results with rv 2811003 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  I0325 00:52:53.890692 25 chunking.go:98] Retrieved 9/17 results with rv 2811003 and continue 
  I0325 00:52:53.941533 25 chunking.go:98] Retrieved 17/17 results with rv 2811007 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwNywic3RhcnQiOiIvdGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0325 00:52:53.991181 25 chunking.go:98] Retrieved 17/17 results with rv 2811007 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  I0325 00:52:54.039877 25 chunking.go:98] Retrieved 17/17 results with rv 2811007 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  I0325 00:52:54.091213 25 chunking.go:98] Retrieved 17/17 results with rv 2811007 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  I0325 00:52:54.141197 25 chunking.go:98] Retrieved 17/17 results with rv 2811007 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  E0325 00:52:54.143110      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:52:54.190684 25 chunking.go:98] Retrieved 17/17 results with rv 2811007 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  I0325 00:52:54.240486 25 chunking.go:98] Retrieved 17/17 results with rv 2811007 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  I0325 00:52:54.291072 25 chunking.go:98] Retrieved 17/17 results with rv 2811007 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  I0325 00:52:54.343188 25 chunking.go:98] Retrieved 17/17 results with rv 2811007 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  I0325 00:52:54.391732 25 chunking.go:98] Retrieved 17/17 results with rv 2811007 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  I0325 00:52:54.441251 25 chunking.go:98] Retrieved 17/17 results with rv 2811007 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  I0325 00:52:54.489982 25 chunking.go:98] Retrieved 17/17 results with rv 2811007 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  I0325 00:52:54.540502 25 chunking.go:98] Retrieved 17/17 results with rv 2811007 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  I0325 00:52:54.591115 25 chunking.go:98] Retrieved 17/17 results with rv 2811007 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  I0325 00:52:54.639629 25 chunking.go:98] Retrieved 17/17 results with rv 2811007 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  I0325 00:52:54.690868 25 chunking.go:98] Retrieved 17/17 results with rv 2811007 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  I0325 00:52:54.741161 25 chunking.go:98] Retrieved 17/17 results with rv 2811007 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  I0325 00:52:54.790924 25 chunking.go:98] Retrieved 17/17 results with rv 2811007 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  I0325 00:52:54.841218 25 chunking.go:98] Retrieved 17/17 results with rv 2811007 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  I0325 00:52:54.890175 25 chunking.go:98] Retrieved 17/17 results with rv 2811007 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  I0325 00:52:54.940261 25 chunking.go:98] Retrieved 17/17 results with rv 2811007 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  I0325 00:52:54.990515 25 chunking.go:98] Retrieved 17/17 results with rv 2811007 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  I0325 00:52:55.041121 25 chunking.go:98] Retrieved 17/17 results with rv 2811007 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAwNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  I0325 00:52:55.090477 25 chunking.go:98] Retrieved 9/17 results with rv 2811007 and continue 
  I0325 00:52:55.140980 25 chunking.go:98] Retrieved 17/17 results with rv 2811010 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAxMCwic3RhcnQiOiIvdGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  E0325 00:52:55.143933      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:52:55.193487 25 chunking.go:98] Retrieved 17/17 results with rv 2811010 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  I0325 00:52:55.239847 25 chunking.go:98] Retrieved 17/17 results with rv 2811010 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  I0325 00:52:55.296654 25 chunking.go:98] Retrieved 17/17 results with rv 2811010 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  I0325 00:52:55.341343 25 chunking.go:98] Retrieved 17/17 results with rv 2811010 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  I0325 00:52:55.390120 25 chunking.go:98] Retrieved 17/17 results with rv 2811010 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  I0325 00:52:55.441459 25 chunking.go:98] Retrieved 17/17 results with rv 2811010 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  I0325 00:52:55.491369 25 chunking.go:98] Retrieved 17/17 results with rv 2811010 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  I0325 00:52:55.540140 25 chunking.go:98] Retrieved 17/17 results with rv 2811010 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  I0325 00:52:55.590844 25 chunking.go:98] Retrieved 17/17 results with rv 2811010 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  I0325 00:52:55.640672 25 chunking.go:98] Retrieved 17/17 results with rv 2811010 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  I0325 00:52:55.690421 25 chunking.go:98] Retrieved 17/17 results with rv 2811010 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  I0325 00:52:55.740866 25 chunking.go:98] Retrieved 17/17 results with rv 2811010 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  I0325 00:52:55.793586 25 chunking.go:98] Retrieved 17/17 results with rv 2811010 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  I0325 00:52:55.840713 25 chunking.go:98] Retrieved 17/17 results with rv 2811010 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  I0325 00:52:55.891751 25 chunking.go:98] Retrieved 17/17 results with rv 2811010 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  I0325 00:52:55.941199 25 chunking.go:98] Retrieved 17/17 results with rv 2811010 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  I0325 00:52:55.990267 25 chunking.go:98] Retrieved 17/17 results with rv 2811010 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  I0325 00:52:56.041343 25 chunking.go:98] Retrieved 17/17 results with rv 2811010 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  I0325 00:52:56.090852 25 chunking.go:98] Retrieved 17/17 results with rv 2811010 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  I0325 00:52:56.140296 25 chunking.go:98] Retrieved 17/17 results with rv 2811010 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  E0325 00:52:56.144333      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:52:56.193201 25 chunking.go:98] Retrieved 17/17 results with rv 2811010 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  I0325 00:52:56.249104 25 chunking.go:98] Retrieved 17/17 results with rv 2811010 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgxMTAxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  I0325 00:52:56.289436 25 chunking.go:98] Retrieved 9/17 results with rv 2811010 and continue 
  STEP: retrieving those results all at once @ 03/25/25 00:52:56.289
  I0325 00:52:56.347694 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-6509" for this suite. @ 03/25/25 00:52:56.39
• [21.461 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 03/25/25 00:52:56.445
  I0325 00:52:56.445108 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename pods @ 03/25/25 00:52:56.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:52:56.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:52:56.478
  STEP: creating the pod @ 03/25/25 00:52:56.482
  STEP: submitting the pod to kubernetes @ 03/25/25 00:52:56.482
  E0325 00:52:57.145420      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:52:58.146110      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 03/25/25 00:52:58.505
  STEP: updating the pod @ 03/25/25 00:52:58.508
  I0325 00:52:59.039556 25 pod_client.go:173] Successfully updated pod "pod-update-0b76522b-0da5-4e58-8287-f3ffac460ed1"
  STEP: verifying the updated pod is in kubernetes @ 03/25/25 00:52:59.046
  I0325 00:52:59.056461 25 pods.go:391] Pod update OK
  I0325 00:52:59.056611 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5444" for this suite. @ 03/25/25 00:52:59.067
• [2.629 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 03/25/25 00:52:59.073
  I0325 00:52:59.074014 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename configmap @ 03/25/25 00:52:59.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:52:59.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:52:59.105
  I0325 00:52:59.141525 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0325 00:52:59.146617      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "configmap-2397" for this suite. @ 03/25/25 00:52:59.164
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 03/25/25 00:52:59.177
  I0325 00:52:59.177247 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename configmap @ 03/25/25 00:52:59.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:52:59.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:52:59.216
  STEP: Creating configMap configmap-9887/configmap-test-cf1e4d57-202f-42f2-93c9-c138aa8052e4 @ 03/25/25 00:52:59.218
  STEP: Creating a pod to test consume configMaps @ 03/25/25 00:52:59.224
  E0325 00:53:00.147499      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:01.147762      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:02.147917      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:03.148359      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 00:53:03.249
  I0325 00:53:03.253474 25 output.go:207] Trying to get logs from node master-2 pod pod-configmaps-9215372c-86ff-4eb5-867a-e494cf695a30 container env-test: <nil>
  STEP: delete the pod @ 03/25/25 00:53:03.265
  I0325 00:53:03.300265 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9887" for this suite. @ 03/25/25 00:53:03.305
• [4.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 03/25/25 00:53:03.317
  I0325 00:53:03.317483 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename configmap @ 03/25/25 00:53:03.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:53:03.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:53:03.359
  STEP: Creating configMap with name configmap-test-volume-map-d756687b-1085-4ade-b37e-08516534c571 @ 03/25/25 00:53:03.362
  STEP: Creating a pod to test consume configMaps @ 03/25/25 00:53:03.369
  E0325 00:53:04.149065      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:05.150021      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:06.150160      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:07.150199      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 00:53:07.4
  I0325 00:53:07.403782 25 output.go:207] Trying to get logs from node master-2 pod pod-configmaps-d6f13283-bfef-4770-9b25-e7d376eb147b container agnhost-container: <nil>
  STEP: delete the pod @ 03/25/25 00:53:07.409
  I0325 00:53:07.430149 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7849" for this suite. @ 03/25/25 00:53:07.434
• [4.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 03/25/25 00:53:07.444
  I0325 00:53:07.444696 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename secrets @ 03/25/25 00:53:07.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:53:07.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:53:07.474
  STEP: creating secret secrets-2936/secret-test-08e68918-a025-44b3-9150-16e082d2486f @ 03/25/25 00:53:07.477
  STEP: Creating a pod to test consume secrets @ 03/25/25 00:53:07.484
  E0325 00:53:08.151092      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:09.151481      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:10.152520      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:11.153014      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 00:53:11.506
  I0325 00:53:11.510640 25 output.go:207] Trying to get logs from node master-2 pod pod-configmaps-cea4fdc6-d992-4e9f-be1f-afc092107ea9 container env-test: <nil>
  STEP: delete the pod @ 03/25/25 00:53:11.516
  I0325 00:53:11.536843 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2936" for this suite. @ 03/25/25 00:53:11.54
• [4.112 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 03/25/25 00:53:11.556
  I0325 00:53:11.556683 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename runtimeclass @ 03/25/25 00:53:11.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:53:11.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:53:11.581
  E0325 00:53:12.153156      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:13.153255      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:53:13.613660 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9930" for this suite. @ 03/25/25 00:53:13.618
• [2.070 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 03/25/25 00:53:13.626
  I0325 00:53:13.626845 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename discovery @ 03/25/25 00:53:13.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:53:13.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:53:13.651
  STEP: Setting up server cert @ 03/25/25 00:53:13.656
  I0325 00:53:13.816092 25 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0325 00:53:13.817101 25 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0325 00:53:13.817125 25 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0325 00:53:13.817131 25 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0325 00:53:13.817137 25 discovery.go:139] Checking APIGroup: apps
  I0325 00:53:13.818181 25 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0325 00:53:13.818201 25 discovery.go:148] Versions found [{apps/v1 v1}]
  I0325 00:53:13.818207 25 discovery.go:154] apps/v1 matches apps/v1
  I0325 00:53:13.818213 25 discovery.go:139] Checking APIGroup: events.k8s.io
  I0325 00:53:13.818984 25 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0325 00:53:13.819126 25 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0325 00:53:13.819148 25 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0325 00:53:13.819154 25 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0325 00:53:13.820177 25 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0325 00:53:13.820206 25 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0325 00:53:13.820212 25 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0325 00:53:13.820217 25 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0325 00:53:13.820932 25 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0325 00:53:13.820948 25 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0325 00:53:13.820966 25 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0325 00:53:13.820972 25 discovery.go:139] Checking APIGroup: autoscaling
  I0325 00:53:13.821862 25 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0325 00:53:13.821876 25 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0325 00:53:13.821881 25 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0325 00:53:13.821887 25 discovery.go:139] Checking APIGroup: batch
  I0325 00:53:13.822737 25 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0325 00:53:13.822782 25 discovery.go:148] Versions found [{batch/v1 v1}]
  I0325 00:53:13.822787 25 discovery.go:154] batch/v1 matches batch/v1
  I0325 00:53:13.822792 25 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0325 00:53:13.823655 25 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0325 00:53:13.823670 25 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0325 00:53:13.823676 25 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0325 00:53:13.823681 25 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0325 00:53:13.824523 25 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0325 00:53:13.824539 25 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0325 00:53:13.824544 25 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0325 00:53:13.824549 25 discovery.go:139] Checking APIGroup: policy
  I0325 00:53:13.826310 25 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0325 00:53:13.826342 25 discovery.go:148] Versions found [{policy/v1 v1}]
  I0325 00:53:13.826350 25 discovery.go:154] policy/v1 matches policy/v1
  I0325 00:53:13.826356 25 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0325 00:53:13.827802 25 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0325 00:53:13.827866 25 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0325 00:53:13.827899 25 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0325 00:53:13.827957 25 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0325 00:53:13.828918 25 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0325 00:53:13.828944 25 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0325 00:53:13.828951 25 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0325 00:53:13.828957 25 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0325 00:53:13.830108 25 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0325 00:53:13.830127 25 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0325 00:53:13.830133 25 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0325 00:53:13.830138 25 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0325 00:53:13.831061 25 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0325 00:53:13.831075 25 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0325 00:53:13.831081 25 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0325 00:53:13.831087 25 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0325 00:53:13.831927 25 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0325 00:53:13.831949 25 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0325 00:53:13.831955 25 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0325 00:53:13.831961 25 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0325 00:53:13.832677 25 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0325 00:53:13.832687 25 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0325 00:53:13.832692 25 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0325 00:53:13.832697 25 discovery.go:139] Checking APIGroup: node.k8s.io
  I0325 00:53:13.833417 25 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0325 00:53:13.833443 25 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0325 00:53:13.833449 25 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0325 00:53:13.833454 25 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0325 00:53:13.834110 25 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0325 00:53:13.834125 25 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0325 00:53:13.834146 25 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0325 00:53:13.834162 25 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0325 00:53:13.835096 25 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0325 00:53:13.835126 25 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0325 00:53:13.835138 25 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0325 00:53:13.835144 25 discovery.go:139] Checking APIGroup: networking.istio.io
  I0325 00:53:13.836304 25 discovery.go:147] PreferredVersion.GroupVersion: networking.istio.io/v1
  I0325 00:53:13.836343 25 discovery.go:148] Versions found [{networking.istio.io/v1 v1} {networking.istio.io/v1beta1 v1beta1} {networking.istio.io/v1alpha3 v1alpha3}]
  I0325 00:53:13.836360 25 discovery.go:154] networking.istio.io/v1 matches networking.istio.io/v1
  I0325 00:53:13.836367 25 discovery.go:139] Checking APIGroup: security.istio.io
  I0325 00:53:13.837570 25 discovery.go:147] PreferredVersion.GroupVersion: security.istio.io/v1
  I0325 00:53:13.837635 25 discovery.go:148] Versions found [{security.istio.io/v1 v1} {security.istio.io/v1beta1 v1beta1}]
  I0325 00:53:13.837643 25 discovery.go:154] security.istio.io/v1 matches security.istio.io/v1
  I0325 00:53:13.837660 25 discovery.go:139] Checking APIGroup: telemetry.istio.io
  I0325 00:53:13.838466 25 discovery.go:147] PreferredVersion.GroupVersion: telemetry.istio.io/v1
  I0325 00:53:13.838506 25 discovery.go:148] Versions found [{telemetry.istio.io/v1 v1} {telemetry.istio.io/v1alpha1 v1alpha1}]
  I0325 00:53:13.838512 25 discovery.go:154] telemetry.istio.io/v1 matches telemetry.istio.io/v1
  I0325 00:53:13.838518 25 discovery.go:139] Checking APIGroup: extensions.istio.io
  I0325 00:53:13.839320 25 discovery.go:147] PreferredVersion.GroupVersion: extensions.istio.io/v1alpha1
  I0325 00:53:13.839345 25 discovery.go:148] Versions found [{extensions.istio.io/v1alpha1 v1alpha1}]
  I0325 00:53:13.839351 25 discovery.go:154] extensions.istio.io/v1alpha1 matches extensions.istio.io/v1alpha1
  I0325 00:53:13.839367 25 discovery.go:139] Checking APIGroup: kafka.strimzi.io
  I0325 00:53:13.840072 25 discovery.go:147] PreferredVersion.GroupVersion: kafka.strimzi.io/v1beta2
  I0325 00:53:13.840100 25 discovery.go:148] Versions found [{kafka.strimzi.io/v1beta2 v1beta2} {kafka.strimzi.io/v1beta1 v1beta1} {kafka.strimzi.io/v1alpha1 v1alpha1}]
  I0325 00:53:13.840109 25 discovery.go:154] kafka.strimzi.io/v1beta2 matches kafka.strimzi.io/v1beta2
  I0325 00:53:13.840116 25 discovery.go:139] Checking APIGroup: core.strimzi.io
  I0325 00:53:13.841003 25 discovery.go:147] PreferredVersion.GroupVersion: core.strimzi.io/v1beta2
  I0325 00:53:13.841025 25 discovery.go:148] Versions found [{core.strimzi.io/v1beta2 v1beta2}]
  I0325 00:53:13.841033 25 discovery.go:154] core.strimzi.io/v1beta2 matches core.strimzi.io/v1beta2
  I0325 00:53:13.841041 25 discovery.go:139] Checking APIGroup: cilium.io
  I0325 00:53:13.841800 25 discovery.go:147] PreferredVersion.GroupVersion: cilium.io/v2
  I0325 00:53:13.841888 25 discovery.go:148] Versions found [{cilium.io/v2 v2} {cilium.io/v2alpha1 v2alpha1}]
  I0325 00:53:13.841894 25 discovery.go:154] cilium.io/v2 matches cilium.io/v2
  I0325 00:53:13.842043 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-6567" for this suite. @ 03/25/25 00:53:13.846
• [0.229 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 03/25/25 00:53:13.856
  I0325 00:53:13.856116 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename runtimeclass @ 03/25/25 00:53:13.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:53:13.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:53:13.891
  STEP: Deleting RuntimeClass runtimeclass-555-delete-me @ 03/25/25 00:53:13.898
  STEP: Waiting for the RuntimeClass to disappear @ 03/25/25 00:53:13.906
  I0325 00:53:13.922874 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-555" for this suite. @ 03/25/25 00:53:13.947
• [0.102 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 03/25/25 00:53:13.957
  I0325 00:53:13.957835 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename projected @ 03/25/25 00:53:13.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:53:13.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:53:13.994
  STEP: Creating configMap with name projected-configmap-test-volume-map-0ef2f6c8-3bbe-45a0-a076-93737bf7c515 @ 03/25/25 00:53:13.996
  STEP: Creating a pod to test consume configMaps @ 03/25/25 00:53:14.002
  E0325 00:53:14.154209      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:15.154437      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:16.155383      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:17.155716      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 00:53:18.044
  I0325 00:53:18.049250 25 output.go:207] Trying to get logs from node master-2 pod pod-projected-configmaps-b50fbdb4-9474-4f23-b8a2-20f0b435582f container agnhost-container: <nil>
  STEP: delete the pod @ 03/25/25 00:53:18.055
  I0325 00:53:18.082337 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4375" for this suite. @ 03/25/25 00:53:18.087
• [4.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 03/25/25 00:53:18.101
  I0325 00:53:18.101149 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename projected @ 03/25/25 00:53:18.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:53:18.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:53:18.129
  E0325 00:53:18.156740      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-7c678441-a81c-465c-848f-39468a4176d7 @ 03/25/25 00:53:18.186
  STEP: Creating the pod @ 03/25/25 00:53:18.192
  E0325 00:53:19.157922      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:20.158887      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-7c678441-a81c-465c-848f-39468a4176d7 @ 03/25/25 00:53:20.218
  STEP: waiting to observe update in volume @ 03/25/25 00:53:20.226
  E0325 00:53:21.159420      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:22.159646      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:23.160262      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:24.161101      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:25.162155      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:26.162700      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:27.163002      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:28.163542      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:29.163758      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:30.163852      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:31.164014      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:32.164206      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:33.164385      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:34.164553      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:35.165018      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:36.166180      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:37.166244      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:38.166665      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:39.167220      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:40.167403      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:41.167591      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:42.167749      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:43.167799      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:44.168067      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:45.168260      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:46.168901      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:47.169704      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:48.169904      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:49.170081      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:50.170192      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:51.170343      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:52.170731      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:53.171035      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:54.171250      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:55.171866      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:56.172028      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:57.172218      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:58.172584      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:53:59.172783      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:00.173010      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:01.173194      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:02.174185      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:03.175256      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:04.176302      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:05.176371      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:06.176756      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:07.176993      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:08.177716      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:09.177857      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:10.178011      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:11.178975      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:12.179139      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:13.179385      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:14.179599      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:15.180503      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:16.180721      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:17.181113      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:18.181211      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:19.181568      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:20.181727      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:21.182847      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:22.182688      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:23.184248      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:24.184613      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:54:24.523350 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-64" for this suite. @ 03/25/25 00:54:24.528
• [66.438 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 03/25/25 00:54:24.541
  I0325 00:54:24.541651 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename pods @ 03/25/25 00:54:24.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:54:24.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:54:24.565
  E0325 00:54:25.185006      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:26.185071      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:27.186013      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:28.186373      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:29.186803      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:30.188287      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:31.188106      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:32.188864      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:33.189789      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:34.190385      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 00:54:34.645
  I0325 00:54:34.648895 25 output.go:207] Trying to get logs from node master-2 pod client-envvars-0786e5ed-f617-4261-9fe6-c579df3f8fe8 container env3cont: <nil>
  STEP: delete the pod @ 03/25/25 00:54:34.656
  I0325 00:54:34.678603 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6250" for this suite. @ 03/25/25 00:54:34.684
• [10.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 03/25/25 00:54:34.692
  I0325 00:54:34.692739 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename custom-resource-definition @ 03/25/25 00:54:34.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:54:34.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:54:34.723
  I0325 00:54:34.726850 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  E0325 00:54:35.190885      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:36.191536      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:37.191845      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:38.192716      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:39.193119      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:40.194126      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:41.194174      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:42.194583      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:43.194968      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:44.196045      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:45.196701      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:46.197010      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:47.198149      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:48.198531      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:49.199257      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:50.199490      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:51.199527      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:52.200449      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:53.200332      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:54.201414      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:55.202161      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:56.202417      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:57.202627      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:58.202688      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:54:59.203529      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:00.204284      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:01.204689      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:02.205362      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:03.205594      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:04.206038      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:05.206581      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:06.206883      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:07.207757      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:08.208424      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:09.209402      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:10.210478      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:11.210717      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:12.211175      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:13.211236      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:14.212169      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:15.212566      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:16.213383      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:17.213599      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:18.214537      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:19.215580      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:20.216079      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:21.216437      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:22.217171      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:23.217266      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:24.217722      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:25.217926      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:26.218694      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:27.219105      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:28.220034      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:29.220870      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:30.221174      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:31.221758      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:32.221896      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:33.222196      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:34.222789      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:35.223035      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:55:36.149199 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7691" for this suite. @ 03/25/25 00:55:36.154
• [61.471 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 03/25/25 00:55:36.164
  I0325 00:55:36.164363 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename downward-api @ 03/25/25 00:55:36.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:55:36.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:55:36.192
  STEP: Creating a pod to test downward API volume plugin @ 03/25/25 00:55:36.194
  E0325 00:55:36.223395      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:37.223661      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:38.224660      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:39.224830      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 00:55:40.222
  E0325 00:55:40.225175      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:55:40.225369 25 output.go:207] Trying to get logs from node master-2 pod downwardapi-volume-72a09662-9163-4f58-a2ab-8c8d033bc31a container client-container: <nil>
  STEP: delete the pod @ 03/25/25 00:55:40.233
  I0325 00:55:40.277862 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1120" for this suite. @ 03/25/25 00:55:40.282
• [4.126 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 03/25/25 00:55:40.29
  I0325 00:55:40.290968 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename projected @ 03/25/25 00:55:40.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:55:40.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:55:40.321
  STEP: Creating configMap with name cm-test-opt-del-b5896d34-9703-4f23-810e-1e190ea08838 @ 03/25/25 00:55:40.383
  STEP: Creating configMap with name cm-test-opt-upd-86d2c382-af1c-4d9d-b04f-2c4e0f33dfe9 @ 03/25/25 00:55:40.389
  STEP: Creating the pod @ 03/25/25 00:55:40.396
  E0325 00:55:41.226095      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:42.226739      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-b5896d34-9703-4f23-810e-1e190ea08838 @ 03/25/25 00:55:42.437
  STEP: Updating configmap cm-test-opt-upd-86d2c382-af1c-4d9d-b04f-2c4e0f33dfe9 @ 03/25/25 00:55:42.444
  STEP: Creating configMap with name cm-test-opt-create-ed6b86f7-b8ef-49d6-abcc-b9e1c0a7ad68 @ 03/25/25 00:55:42.45
  STEP: waiting to observe update in volume @ 03/25/25 00:55:42.457
  E0325 00:55:43.227538      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:44.227727      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:45.227964      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:46.228134      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:55:46.493742 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1121" for this suite. @ 03/25/25 00:55:46.499
• [6.215 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 03/25/25 00:55:46.505
  I0325 00:55:46.505854 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename security-context @ 03/25/25 00:55:46.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:55:46.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:55:46.531
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 03/25/25 00:55:46.534
  E0325 00:55:47.228637      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:48.228897      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:49.229755      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:50.229942      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 00:55:50.556
  I0325 00:55:50.559121 25 output.go:207] Trying to get logs from node master-2 pod security-context-384528a1-cfc1-41dd-957d-d643b4473343 container test-container: <nil>
  STEP: delete the pod @ 03/25/25 00:55:50.566
  I0325 00:55:50.601651 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-8288" for this suite. @ 03/25/25 00:55:50.605
• [4.106 seconds]
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 03/25/25 00:55:50.612
  I0325 00:55:50.612258 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename container-probe @ 03/25/25 00:55:50.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:55:50.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:55:50.641
  STEP: Creating pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387 @ 03/25/25 00:55:50.644
  E0325 00:55:51.230801      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:52.231129      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 03/25/25 00:55:52.667
  I0325 00:55:52.670625 25 container_probe.go:1749] Initial restart count of pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 is 0
  I0325 00:55:52.672956 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:55:53.231650      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:54.231972      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:55:54.678205 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:55:55.232794      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:56.233660      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:55:56.683069 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:55:57.233718      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:55:58.233751      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:55:58.686612 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:55:59.234286      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:56:00.235185      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:56:00.691287 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:56:01.235911      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:56:02.236339      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:56:02.697216 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:56:03.236865      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:56:04.237129      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:56:04.700865 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:56:05.237384      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:56:06.237794      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:56:06.706137 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:56:07.238831      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:56:08.238860      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:56:08.710186 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:56:09.239807      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:56:10.239971      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:56:10.714457 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:56:11.240140      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:56:12.240777      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:56:12.720125 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:56:13.241818      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:56:14.242081      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:56:14.725329 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:56:15.244015      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:56:16.243271      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:56:16.729677 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:56:17.244254      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:56:18.244861      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:56:18.734382 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:56:19.245813      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:56:20.246010      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:56:20.740197 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:56:21.246779      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:56:22.247192      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:56:22.746250 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:56:23.247915      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:56:24.248224      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:56:24.751223 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:56:25.248761      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:56:26.249059      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:56:26.755614 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:56:27.250114      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:56:28.250477      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:56:28.760025 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:56:29.250583      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:56:30.250689      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:56:30.764476 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:56:31.251024      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:56:32.251161      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:56:32.768857 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:56:33.251434      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:56:34.251492      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:56:34.772831 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:56:35.252403      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:56:36.253408      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:56:36.777869 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:56:37.253498      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:56:38.253783      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:56:38.782935 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:56:39.254607      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:56:40.254740      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:56:40.787618 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:56:41.254948      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:56:42.255045      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:56:42.793076 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:56:43.255599      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:56:44.255734      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:56:44.797528 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:56:45.255836      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:56:46.256135      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:56:46.802547 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:56:47.257201      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:56:48.258097      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:56:48.808562 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:56:49.259039      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:56:50.259192      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:56:50.813939 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:56:51.259388      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:56:52.259742      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:56:52.819679 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:56:53.260783      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:56:54.260954      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:56:54.824351 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:56:55.261759      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:56:56.261864      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:56:56.830114 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:56:57.262036      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:56:58.262224      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:56:58.833991 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:56:59.263110      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:57:00.264064      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:57:00.838733 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:57:01.264130      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:57:02.264431      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:57:02.841910 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:57:03.265479      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:57:04.265730      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:57:04.851342 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:57:05.265851      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:57:06.266104      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:57:06.856225 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:57:07.266495      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:57:08.266764      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:57:08.861459 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:57:09.266806      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:57:10.266945      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:57:10.867137 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:57:11.267704      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:57:12.267969      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:57:12.872086 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:57:13.269764      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:57:14.268832      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:57:14.876289 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:57:15.269788      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:57:16.270301      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:57:16.880866 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:57:17.270330      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:57:18.270521      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:57:18.885460 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:57:19.270769      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:57:20.271095      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:57:20.891499 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:57:21.271979      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:57:22.272437      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:57:22.895850 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:57:23.272999      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:57:24.273687      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:57:24.901217 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:57:25.274552      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:57:26.274724      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:57:26.906199 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:57:27.275700      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:57:28.275865      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:57:28.910895 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:57:29.276573      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:57:30.276771      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:57:30.916485 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:57:31.276761      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:57:32.277150      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:57:32.920306 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:57:33.277842      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:57:34.278115      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:57:34.926197 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:57:35.278792      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:57:36.279180      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:57:36.931157 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:57:37.279452      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:57:38.279827      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:57:38.935620 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:57:39.280722      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:57:40.280880      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:57:40.940499 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:57:41.280944      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:57:42.281340      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:57:42.944898 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:57:43.282343      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:57:44.282723      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:57:44.948713 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:57:45.283258      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:57:46.283927      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:57:46.954834 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:57:47.284206      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:57:48.284543      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:57:48.959890 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:57:49.285270      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:57:50.285628      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:57:50.966012 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:57:51.286134      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:57:52.286358      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:57:52.971952 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:57:53.286363      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:57:54.286790      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:57:54.978169 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:57:55.287659      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:57:56.287743      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:57:56.984949 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:57:57.288533      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:57:58.288552      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:57:58.989685 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:57:59.289137      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:58:00.289256      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:58:00.994209 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:58:01.289601      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:58:02.290136      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:58:02.999344 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:58:03.290764      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:58:04.291141      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:58:05.004074 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:58:05.291515      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:58:06.292111      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:58:07.008529 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:58:07.292761      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:58:08.292922      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:58:09.013515 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:58:09.293709      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:58:10.294781      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:58:11.022507 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:58:11.294890      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:58:12.295331      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:58:13.026315 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:58:13.295728      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:58:14.296107      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:58:15.031483 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:58:15.296893      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:58:16.297154      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:58:17.036071 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:58:17.297274      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:58:18.297590      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:58:19.040347 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:58:19.298588      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:58:20.298804      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:58:21.045159 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:58:21.299731      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:58:22.300119      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:58:23.050432 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:58:23.309645      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:58:24.309853      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:58:25.059066 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:58:25.310203      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:58:26.310307      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:58:27.063775 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:58:27.311112      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:58:28.311349      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:58:29.078170 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:58:29.312409      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:58:30.312789      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:58:31.083127 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:58:31.313417      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:58:32.313695      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:58:33.095801 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:58:33.314181      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:58:34.314437      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:58:35.100994 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:58:35.315387      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:58:36.315743      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:58:37.105546 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:58:37.315863      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:58:38.316712      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:58:39.112710 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:58:39.317264      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:58:40.317809      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:58:41.116919 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:58:41.318323      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:58:42.318641      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:58:43.127450 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:58:43.318733      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:58:44.319014      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:58:45.132351 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:58:45.319789      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:58:46.320197      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:58:47.321049      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:58:47.325103 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:58:48.321193      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:58:49.321525      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:58:49.334648 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:58:50.321987      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:58:51.322364      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:58:51.340256 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:58:52.323307      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:58:53.324276      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:58:53.345516 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:58:54.324622      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:58:55.324854      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:58:55.349312 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:58:56.325033      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:58:57.325320      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:58:57.355162 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:58:58.325547      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:58:59.326420      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:58:59.359907 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:59:00.327109      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:59:01.327209      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:59:01.364768 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:59:02.327401      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:59:03.327664      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:59:03.370553 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:59:04.327809      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:59:05.328064      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:59:05.375042 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:59:06.328982      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:59:07.329277      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:59:07.379982 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:59:08.329965      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:59:09.330127      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:59:09.384334 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:59:10.330285      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:59:11.330574      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:59:11.390368 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:59:12.331248      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:59:13.331429      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:59:13.396026 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:59:14.331549      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:59:15.331956      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:59:15.401627 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:59:16.332094      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:59:17.332176      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:59:17.407130 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:59:18.332364      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:59:19.332625      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:59:19.411658 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:59:20.333103      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:59:21.333955      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:59:21.417252 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:59:22.334148      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:59:23.334884      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:59:23.421136 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:59:24.335187      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:59:25.335515      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:59:25.425273 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:59:26.336260      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:59:27.336574      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:59:27.430193 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:59:28.337392      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:59:29.337671      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:59:29.444868 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:59:30.338082      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:59:31.338371      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:59:31.450176 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:59:32.338880      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:59:33.339031      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:59:33.455642 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:59:34.339310      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:59:35.340208      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:59:35.461261 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:59:36.340295      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:59:37.340414      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:59:37.465616 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:59:38.340512      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:59:39.340642      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:59:39.470466 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:59:40.341688      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:59:41.342566      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:59:41.474779 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:59:42.342778      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:59:43.343062      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:59:43.479269 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:59:44.343419      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:59:45.343566      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:59:45.484496 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:59:46.344377      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:59:47.344658      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:59:47.489866 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:59:48.344739      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:59:49.345053      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:59:49.494021 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:59:50.345134      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:59:51.345502      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:59:51.499545 25 container_probe.go:1759] Get pod test-webserver-6e919477-f1a5-42b5-8399-d9c6d8011e63 in namespace container-probe-2387
  E0325 00:59:52.345492      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:59:53.345782      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 03/25/25 00:59:53.5
  I0325 00:59:53.534933 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2387" for this suite. @ 03/25/25 00:59:53.541
• [242.962 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 03/25/25 00:59:53.575
  I0325 00:59:53.575182 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename kubelet-test @ 03/25/25 00:59:53.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:59:53.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:59:53.619
  E0325 00:59:54.345957      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:59:55.346101      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:59:55.673476 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-822" for this suite. @ 03/25/25 00:59:55.678
• [2.121 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 03/25/25 00:59:55.697
  I0325 00:59:55.697864 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename crd-webhook @ 03/25/25 00:59:55.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 00:59:55.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 00:59:55.745
  STEP: Setting up server cert @ 03/25/25 00:59:55.747
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 03/25/25 00:59:55.945
  STEP: Deploying the custom resource conversion webhook pod @ 03/25/25 00:59:55.959
  STEP: Wait for the deployment to be ready @ 03/25/25 00:59:55.995
  I0325 00:59:56.010761 25 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0325 00:59:56.346540      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 00:59:57.346861      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/25/25 00:59:58.021
  STEP: Verifying the service has paired with the endpoint @ 03/25/25 00:59:58.051
  E0325 00:59:58.347006      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 00:59:59.052689 25 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0325 00:59:59.059327 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  E0325 00:59:59.347553      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:00.348480      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:01.349459      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:02.349584      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:03.350694      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:04.351075      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:05.351294      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:06.351950      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 03/25/25 01:00:06.647
  STEP: Create a v2 custom resource @ 03/25/25 01:00:06.671
  STEP: List CRs in v1 @ 03/25/25 01:00:06.696
  STEP: List CRs in v2 @ 03/25/25 01:00:06.699
  I0325 01:00:07.270688 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-8570" for this suite. @ 03/25/25 01:00:07.275
• [11.601 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 03/25/25 01:00:07.299
  I0325 01:00:07.299324 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 03/25/25 01:00:07.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:00:07.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:00:07.328
  E0325 01:00:07.351810      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the container to handle the HTTPGet hook request. @ 03/25/25 01:00:07.376
  E0325 01:00:08.352636      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:09.352855      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:10.353059      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:11.353407      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:12.353454      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:13.353606      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 03/25/25 01:00:13.418
  E0325 01:00:14.353661      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:15.353830      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 03/25/25 01:00:15.44
  STEP: delete the pod with lifecycle hook @ 03/25/25 01:00:15.454
  E0325 01:00:16.354713      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:17.355243      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:00:17.473707 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8483" for this suite. @ 03/25/25 01:00:17.478
• [10.194 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 03/25/25 01:00:17.493
  I0325 01:00:17.493770 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename projected @ 03/25/25 01:00:17.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:00:17.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:00:17.532
  STEP: Creating a pod to test downward API volume plugin @ 03/25/25 01:00:17.535
  E0325 01:00:18.355308      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:19.355530      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:20.356448      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:21.356985      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 01:00:21.567
  I0325 01:00:21.570735 25 output.go:207] Trying to get logs from node master-2 pod downwardapi-volume-caa03267-09ce-419c-b726-6b1c7c7e0ab7 container client-container: <nil>
  STEP: delete the pod @ 03/25/25 01:00:21.576
  I0325 01:00:21.606059 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9510" for this suite. @ 03/25/25 01:00:21.611
• [4.125 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 03/25/25 01:00:21.619
  I0325 01:00:21.619837 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/25/25 01:00:21.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:00:21.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:00:21.656
  I0325 01:00:21.660984 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  E0325 01:00:22.358285      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:23.359148      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:24.359479      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:25.360294      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:26.360488      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:27.361246      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:28.362221      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 03/25/25 01:00:29.034
  I0325 01:00:29.034941 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=crd-publish-openapi-3648 --namespace=crd-publish-openapi-3648 create -f -'
  I0325 01:00:29.137571 25 builder.go:146] stderr: ""
  I0325 01:00:29.137647 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-240-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0325 01:00:29.137711 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=crd-publish-openapi-3648 --namespace=crd-publish-openapi-3648 delete e2e-test-crd-publish-openapi-240-crds test-foo'
  I0325 01:00:29.205064 25 builder.go:146] stderr: ""
  I0325 01:00:29.205140 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-240-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0325 01:00:29.205190 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=crd-publish-openapi-3648 --namespace=crd-publish-openapi-3648 apply -f -'
  I0325 01:00:29.288597 25 builder.go:146] stderr: ""
  I0325 01:00:29.288661 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-240-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0325 01:00:29.288798 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=crd-publish-openapi-3648 --namespace=crd-publish-openapi-3648 delete e2e-test-crd-publish-openapi-240-crds test-foo'
  I0325 01:00:29.352984 25 builder.go:146] stderr: ""
  I0325 01:00:29.353045 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-240-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 03/25/25 01:00:29.353
  I0325 01:00:29.353256 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=crd-publish-openapi-3648 --namespace=crd-publish-openapi-3648 create -f -'
  E0325 01:00:29.362607      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:00:29.418794 25 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 03/25/25 01:00:29.418
  I0325 01:00:29.419052 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=crd-publish-openapi-3648 --namespace=crd-publish-openapi-3648 create -f -'
  I0325 01:00:29.476117 25 builder.go:135] rc: 1
  I0325 01:00:29.476303 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=crd-publish-openapi-3648 --namespace=crd-publish-openapi-3648 apply -f -'
  I0325 01:00:29.540433 25 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 03/25/25 01:00:29.54
  I0325 01:00:29.540773 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=crd-publish-openapi-3648 --namespace=crd-publish-openapi-3648 create -f -'
  I0325 01:00:29.598615 25 builder.go:135] rc: 1
  I0325 01:00:29.598755 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=crd-publish-openapi-3648 --namespace=crd-publish-openapi-3648 apply -f -'
  I0325 01:00:29.657266 25 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 03/25/25 01:00:29.657
  I0325 01:00:29.657600 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=crd-publish-openapi-3648 explain e2e-test-crd-publish-openapi-240-crds'
  I0325 01:00:29.712276 25 builder.go:146] stderr: ""
  I0325 01:00:29.712336 25 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-240-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 03/25/25 01:00:29.712
  I0325 01:00:29.712758 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=crd-publish-openapi-3648 explain e2e-test-crd-publish-openapi-240-crds.metadata'
  I0325 01:00:29.767891 25 builder.go:146] stderr: ""
  I0325 01:00:29.768072 25 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-240-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0325 01:00:29.768471 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=crd-publish-openapi-3648 explain e2e-test-crd-publish-openapi-240-crds.spec'
  I0325 01:00:29.827159 25 builder.go:146] stderr: ""
  I0325 01:00:29.827214 25 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-240-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0325 01:00:29.827530 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=crd-publish-openapi-3648 explain e2e-test-crd-publish-openapi-240-crds.spec.bars'
  I0325 01:00:29.883168 25 builder.go:146] stderr: ""
  I0325 01:00:29.883232 25 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-240-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 03/25/25 01:00:29.883
  I0325 01:00:29.883464 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=crd-publish-openapi-3648 explain e2e-test-crd-publish-openapi-240-crds.spec.bars2'
  I0325 01:00:29.938785 25 builder.go:135] rc: 1
  E0325 01:00:30.363333      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:31.363941      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:00:32.007455 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3648" for this suite. @ 03/25/25 01:00:32.018
• [10.408 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1362
  STEP: Creating a kubernetes client @ 03/25/25 01:00:32.027
  I0325 01:00:32.027747 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename kubectl @ 03/25/25 01:00:32.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:00:32.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:00:32.058
  STEP: validating cluster-info @ 03/25/25 01:00:32.061
  I0325 01:00:32.061159 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-7683 cluster-info'
  I0325 01:00:32.119902 25 builder.go:146] stderr: ""
  I0325 01:00:32.119949 25 builder.go:147] stdout: "Kubernetes control plane is running at https://10.233.0.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0325 01:00:32.120074 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7683" for this suite. @ 03/25/25 01:00:32.124
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 03/25/25 01:00:32.131
  I0325 01:00:32.131262 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename aggregateddiscovery @ 03/25/25 01:00:32.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:00:32.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:00:32.163
  I0325 01:00:32.170857 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7304" for this suite. @ 03/25/25 01:00:32.225
• [0.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 03/25/25 01:00:32.24
  I0325 01:00:32.240252 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename replicaset @ 03/25/25 01:00:32.241
  E0325 01:00:32.364754      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:00:32.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:00:32.369
  I0325 01:00:32.372075 25 replica_set.go:191] Creating ReplicaSet my-hostname-basic-1c7eac42-4b81-40fa-b717-4b26546c4dab
  I0325 01:00:32.381791 25 resource.go:87] Pod name my-hostname-basic-1c7eac42-4b81-40fa-b717-4b26546c4dab: Found 0 pods out of 1
  E0325 01:00:33.364910      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:34.365163      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:35.365456      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:36.365810      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:37.366608      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:00:37.387074 25 resource.go:87] Pod name my-hostname-basic-1c7eac42-4b81-40fa-b717-4b26546c4dab: Found 1 pods out of 1
  I0325 01:00:37.387123 25 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-1c7eac42-4b81-40fa-b717-4b26546c4dab" is running
  I0325 01:00:37.389812 25 replica_set.go:220] Pod "my-hostname-basic-1c7eac42-4b81-40fa-b717-4b26546c4dab-x8qs5" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-03-25 01:00:33 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-03-25 01:00:32 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-03-25 01:00:33 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-03-25 01:00:33 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-03-25 01:00:32 +0000 UTC Reason: Message:}])
  I0325 01:00:37.389855 25 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 03/25/25 01:00:37.389
  I0325 01:00:37.398485 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3927" for this suite. @ 03/25/25 01:00:37.401
• [5.168 seconds]
------------------------------
S
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 03/25/25 01:00:37.408
  I0325 01:00:37.408906 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename secrets @ 03/25/25 01:00:37.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:00:37.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:00:37.514
  STEP: creating a secret @ 03/25/25 01:00:37.517
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 03/25/25 01:00:37.53
  STEP: patching the secret @ 03/25/25 01:00:37.535
  STEP: deleting the secret using a LabelSelector @ 03/25/25 01:00:37.549
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 03/25/25 01:00:37.557
  I0325 01:00:37.560271 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5237" for this suite. @ 03/25/25 01:00:37.563
• [0.172 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 03/25/25 01:00:37.581
  I0325 01:00:37.582098 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename replication-controller @ 03/25/25 01:00:37.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:00:37.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:00:37.613
  STEP: Creating replication controller my-hostname-basic-bf296b4d-3582-4605-969c-dd66cab04df7 @ 03/25/25 01:00:37.617
  I0325 01:00:37.629284 25 resource.go:87] Pod name my-hostname-basic-bf296b4d-3582-4605-969c-dd66cab04df7: Found 0 pods out of 1
  E0325 01:00:38.367090      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:39.367229      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:40.367447      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:41.367881      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:42.368595      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:00:42.634788 25 resource.go:87] Pod name my-hostname-basic-bf296b4d-3582-4605-969c-dd66cab04df7: Found 1 pods out of 1
  I0325 01:00:42.634838 25 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-bf296b4d-3582-4605-969c-dd66cab04df7" are running
  I0325 01:00:42.637665 25 rc.go:523] Pod "my-hostname-basic-bf296b4d-3582-4605-969c-dd66cab04df7-d4nws" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-03-25 01:00:38 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-03-25 01:00:37 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-03-25 01:00:38 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-03-25 01:00:38 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-03-25 01:00:37 +0000 UTC Reason: Message:}])
  I0325 01:00:42.637778 25 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 03/25/25 01:00:42.637
  I0325 01:00:42.646333 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-330" for this suite. @ 03/25/25 01:00:42.65
• [5.078 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:742
  STEP: Creating a kubernetes client @ 03/25/25 01:00:42.66
  I0325 01:00:42.660349 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename job @ 03/25/25 01:00:42.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:00:42.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:00:42.694
  STEP: Creating a job @ 03/25/25 01:00:42.696
  STEP: Ensuring job reaches completions @ 03/25/25 01:00:42.706
  E0325 01:00:43.368764      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:44.369058      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:45.369563      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:46.370087      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:47.370998      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:48.371412      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:49.372480      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:50.372645      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:51.372626      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:52.372772      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:00:53.126704 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2447" for this suite. @ 03/25/25 01:00:53.131
• [10.479 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 03/25/25 01:00:53.139
  I0325 01:00:53.139974 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename taint-multiple-pods @ 03/25/25 01:00:53.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:00:53.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:00:53.169
  I0325 01:00:53.172053 25 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0325 01:00:53.373166      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:54.373177      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:55.373430      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:56.374123      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:57.374620      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:58.375442      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:00:59.375984      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:00.377300      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:01.378067      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:02.378190      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:03.379210      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:04.379924      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:05.380657      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:06.380830      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:07.381713      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:08.382045      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:09.382518      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:10.382745      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:11.382986      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:12.383718      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:13.383838      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:14.384567      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:15.385460      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:16.386137      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:17.386887      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:18.387307      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:19.387352      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:20.387426      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:21.387467      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:22.387927      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:23.388637      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:24.388768      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:25.388983      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:26.389302      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:27.389934      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:28.390029      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:29.390234      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:30.390285      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:31.390616      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:32.390734      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:33.391928      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:34.391953      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:35.392397      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:36.392797      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:37.393300      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:38.393694      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:39.393824      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:40.394271      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:41.394988      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:42.395281      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:43.396332      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:44.396606      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:45.397175      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:46.397273      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:47.397782      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:48.398049      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:49.398509      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:50.398626      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:51.399104      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:52.399190      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:01:53.172765 25 util.go:396] Waiting for terminating namespaces to be deleted...
  I0325 01:01:53.177467 25 taints.go:144] Starting informer...
  STEP: Starting pods... @ 03/25/25 01:01:53.177
  I0325 01:01:53.398698 25 taints.go:463] Pod1 is running on master-2. Tainting Node
  E0325 01:01:53.400300      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:54.400722      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:55.401223      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:01:55.618690 25 taints.go:471] Pod2 is running on master-2. Tainting Node
  STEP: Trying to apply a taint on the Node @ 03/25/25 01:01:55.618
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 03/25/25 01:01:55.635
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 03/25/25 01:01:55.639
  E0325 01:01:56.402112      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:57.402449      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:58.402737      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:01:59.402781      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:00.403025      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:02:01.220317 25 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  E0325 01:02:01.403671      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:02.404676      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:03.404881      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:04.405279      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:05.405464      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:06.405748      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:07.405888      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:08.406360      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:09.406540      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:10.406659      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:11.407165      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:12.407434      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:13.407699      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:14.408039      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:15.408156      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:16.408459      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:17.408774      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:18.409154      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:19.409461      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:20.410437      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:02:21.264051 25 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 03/25/25 01:02:21.278
  I0325 01:02:21.282279 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-9175" for this suite. @ 03/25/25 01:02:21.285
• [88.153 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1788
  STEP: Creating a kubernetes client @ 03/25/25 01:02:21.292
  I0325 01:02:21.292600 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename kubectl @ 03/25/25 01:02:21.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:02:21.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:02:21.32
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 03/25/25 01:02:21.322
  I0325 01:02:21.322934 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-172 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0325 01:02:21.389006 25 builder.go:146] stderr: ""
  I0325 01:02:21.389058 25 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 03/25/25 01:02:21.389
  E0325 01:02:21.411057      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:22.411148      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:23.411732      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:24.412043      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:25.412280      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:26.412599      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 03/25/25 01:02:26.44
  I0325 01:02:26.440835 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-172 get pod e2e-test-httpd-pod -o json'
  I0325 01:02:26.503901 25 builder.go:146] stderr: ""
  I0325 01:02:26.504034 25 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2025-03-25T01:02:21Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-172\",\n        \"resourceVersion\": \"2815944\",\n        \"uid\": \"574713b6-74d6-4fab-8148-1ab9fa39c933\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-qnzvj\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"master-2\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-qnzvj\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-03-25T01:02:22Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-03-25T01:02:21Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-03-25T01:02:22Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-03-25T01:02:22Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-03-25T01:02:21Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://81f12613bad37f7df7fc86080d2e0655b833353ad57f1029e520f934365c7658\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-03-25T01:02:22Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-qnzvj\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"172.20.10.146\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.20.10.146\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.233.65.25\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.233.65.25\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-03-25T01:02:21Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 03/25/25 01:02:26.504
  I0325 01:02:26.504142 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-172 replace -f -'
  I0325 01:02:26.637364 25 builder.go:146] stderr: ""
  I0325 01:02:26.637415 25 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 03/25/25 01:02:26.637
  I0325 01:02:26.641100 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-172 delete pods e2e-test-httpd-pod'
  E0325 01:02:27.413060      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:02:28.283467 25 builder.go:146] stderr: ""
  I0325 01:02:28.283523 25 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0325 01:02:28.283893 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-172" for this suite. @ 03/25/25 01:02:28.292
• [7.007 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 03/25/25 01:02:28.299
  I0325 01:02:28.299784 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename daemonsets @ 03/25/25 01:02:28.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:02:28.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:02:28.326
  E0325 01:02:28.413028      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating simple DaemonSet "daemon-set" @ 03/25/25 01:02:28.417
  STEP: Check that daemon pods launch on every node of the cluster. @ 03/25/25 01:02:28.425
  I0325 01:02:28.498932 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0325 01:02:28.498986 25 fixtures.go:131] Node master-1 is running 0 daemon pod, expected 1
  E0325 01:02:29.414086      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:02:29.437729 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0325 01:02:29.437773 25 fixtures.go:131] Node master-1 is running 0 daemon pod, expected 1
  E0325 01:02:30.414911      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:02:30.433840 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 5
  I0325 01:02:30.434060 25 fixtures.go:136] Number of running nodes: 5, number of available pods: 5 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 03/25/25 01:02:30.437
  I0325 01:02:30.535515 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0325 01:02:30.535561 25 fixtures.go:131] Node worker-2 is running 0 daemon pod, expected 1
  E0325 01:02:31.415390      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:02:31.461101 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0325 01:02:31.461145 25 fixtures.go:131] Node worker-2 is running 0 daemon pod, expected 1
  E0325 01:02:32.416400      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:02:32.459404 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0325 01:02:32.459549 25 fixtures.go:131] Node worker-2 is running 0 daemon pod, expected 1
  E0325 01:02:33.416502      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:02:33.458587 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 5
  I0325 01:02:33.458628 25 fixtures.go:136] Number of running nodes: 5, number of available pods: 5 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 03/25/25 01:02:33.461
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9744, will wait for the garbage collector to delete the pods @ 03/25/25 01:02:33.461
  I0325 01:02:33.528528 25 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 13.781272ms
  I0325 01:02:33.628984 25 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.442064ms
  E0325 01:02:34.416894      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:02:35.033620 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0325 01:02:35.033679 25 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0325 01:02:35.037724 25 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"2816216"},"items":null}

  I0325 01:02:35.040493 25 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"2816216"},"items":null}

  I0325 01:02:35.062910 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9744" for this suite. @ 03/25/25 01:02:35.066
• [6.775 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 03/25/25 01:02:35.075
  I0325 01:02:35.075559 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename resourcequota @ 03/25/25 01:02:35.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:02:35.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:02:35.103
  STEP: Creating a ResourceQuota @ 03/25/25 01:02:35.11
  STEP: Getting a ResourceQuota @ 03/25/25 01:02:35.118
  STEP: Listing all ResourceQuotas with LabelSelector @ 03/25/25 01:02:35.12
  STEP: Patching the ResourceQuota @ 03/25/25 01:02:35.128
  STEP: Deleting a Collection of ResourceQuotas @ 03/25/25 01:02:35.134
  STEP: Verifying the deleted ResourceQuota @ 03/25/25 01:02:35.147
  I0325 01:02:35.149697 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6546" for this suite. @ 03/25/25 01:02:35.153
• [0.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 03/25/25 01:02:35.162
  I0325 01:02:35.162052 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename runtimeclass @ 03/25/25 01:02:35.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:02:35.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:02:35.224
  E0325 01:02:35.417825      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:36.418249      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:02:37.255513 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7654" for this suite. @ 03/25/25 01:02:37.266
• [2.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 03/25/25 01:02:37.274
  I0325 01:02:37.274477 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename sched-pred @ 03/25/25 01:02:37.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:02:37.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:02:37.304
  I0325 01:02:37.307357 25 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0325 01:02:37.364265 25 util.go:396] Waiting for terminating namespaces to be deleted...
  I0325 01:02:37.370765 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node master-1 before test
  I0325 01:02:37.376135 25 predicates.go:957] oauth2-proxy-admin-89ccc8b6d-gkxsf from auth started at 2025-03-20 01:11:24 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.376297 25 predicates.go:959] 	Container oauth2-proxy-admin ready: true, restart count 5
  I0325 01:02:37.376628 25 predicates.go:957] oauth2-redis-admin-4 from auth started at 2025-03-20 01:11:58 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.376718 25 predicates.go:959] 	Container redis ready: true, restart count 0
  I0325 01:02:37.376840 25 predicates.go:957] maestro-common-api-d4f57ffc9-v25ts from cmp started at 2025-03-20 01:11:25 +0000 UTC (2 container statuses recorded)
  I0325 01:02:37.376921 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 01:02:37.376985 25 predicates.go:959] 	Container maestro-common-api ready: true, restart count 0
  I0325 01:02:37.377071 25 predicates.go:957] maestro-remote-app-b677d7995-ttggb from cmp started at 2025-03-20 01:11:25 +0000 UTC (2 container statuses recorded)
  I0325 01:02:37.377205 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 01:02:37.378295 25 predicates.go:959] 	Container maestro-remote-app ready: true, restart count 0
  I0325 01:02:37.378407 25 predicates.go:957] istiod-99fc7b678-c74hx from istio-system started at 2025-03-20 01:11:42 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.378513 25 predicates.go:959] 	Container discovery ready: true, restart count 0
  I0325 01:02:37.379126 25 predicates.go:957] cilium-nb9w6 from kube-system started at 2025-03-24 08:39:20 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.379229 25 predicates.go:959] 	Container cilium-agent ready: true, restart count 0
  I0325 01:02:37.379480 25 predicates.go:957] coredns-5c54f84c97-s7pm8 from kube-system started at 2025-03-20 07:44:46 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.379565 25 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0325 01:02:37.379663 25 predicates.go:957] dns-autoscaler-76ddddbbc-njtdg from kube-system started at 2025-03-19 11:32:46 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.379776 25 predicates.go:959] 	Container autoscaler ready: true, restart count 0
  I0325 01:02:37.379856 25 predicates.go:957] kube-apiserver-master-1 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.379973 25 predicates.go:959] 	Container kube-apiserver ready: true, restart count 1
  I0325 01:02:37.380065 25 predicates.go:957] kube-controller-manager-master-1 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.380291 25 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 2
  I0325 01:02:37.380419 25 predicates.go:957] kube-proxy-c9vn6 from kube-system started at 2025-03-19 11:31:14 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.380506 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0325 01:02:37.380565 25 predicates.go:957] kube-scheduler-master-1 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.380641 25 predicates.go:959] 	Container kube-scheduler ready: true, restart count 1
  I0325 01:02:37.380759 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-fa7539a130154f7a-69xpv from sonobuoy started at 2025-03-25 00:21:29 +0000 UTC (2 container statuses recorded)
  I0325 01:02:37.380822 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0325 01:02:37.380912 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0325 01:02:37.381096 25 predicates.go:957] viola-remote-app-5b964d4757-mx9xg from viola started at 2025-03-20 01:11:24 +0000 UTC (2 container statuses recorded)
  I0325 01:02:37.381241 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 01:02:37.381282 25 predicates.go:959] 	Container viola-remote-app ready: true, restart count 0
  I0325 01:02:37.381358 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node master-2 before test
  E0325 01:02:37.418364      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:02:37.481258 25 predicates.go:957] cilium-7mfqv from kube-system started at 2025-03-24 08:39:20 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.481299 25 predicates.go:959] 	Container cilium-agent ready: true, restart count 0
  I0325 01:02:37.481306 25 predicates.go:957] cilium-operator-75896ddc6-2dpsx from kube-system started at 2025-03-24 08:39:25 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.481312 25 predicates.go:959] 	Container cilium-operator ready: true, restart count 0
  I0325 01:02:37.481337 25 predicates.go:957] kube-apiserver-master-2 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.481350 25 predicates.go:959] 	Container kube-apiserver ready: true, restart count 1
  I0325 01:02:37.481359 25 predicates.go:957] kube-controller-manager-master-2 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.481364 25 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 2
  I0325 01:02:37.481369 25 predicates.go:957] kube-proxy-btnc7 from kube-system started at 2025-03-19 11:31:18 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.481374 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0325 01:02:37.481380 25 predicates.go:957] kube-scheduler-master-2 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.481384 25 predicates.go:959] 	Container kube-scheduler ready: true, restart count 1
  I0325 01:02:37.481389 25 predicates.go:957] test-runtimeclass-runtimeclass-7654-preconfigured-handler-7gjhq from runtimeclass-7654 started at 2025-03-25 01:02:35 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.481394 25 predicates.go:959] 	Container test ready: false, restart count 0
  I0325 01:02:37.481400 25 predicates.go:957] sonobuoy from sonobuoy started at 2025-03-25 00:21:28 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.481405 25 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0325 01:02:37.481411 25 predicates.go:957] sonobuoy-e2e-job-377d99148b324b41 from sonobuoy started at 2025-03-25 00:21:29 +0000 UTC (2 container statuses recorded)
  I0325 01:02:37.481415 25 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0325 01:02:37.481419 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0325 01:02:37.481424 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-fa7539a130154f7a-l2cln from sonobuoy started at 2025-03-25 00:21:29 +0000 UTC (2 container statuses recorded)
  I0325 01:02:37.481433 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0325 01:02:37.481437 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0325 01:02:37.481444 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node master-3 before test
  I0325 01:02:37.486350 25 predicates.go:957] keycloak-8458dcb89f-56vd4 from auth started at 2025-03-20 01:11:26 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.486385 25 predicates.go:959] 	Container keycloak ready: true, restart count 0
  I0325 01:02:37.486393 25 predicates.go:957] oauth2-redis-admin-0 from auth started at 2025-03-20 01:11:28 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.486403 25 predicates.go:959] 	Container redis ready: true, restart count 0
  I0325 01:02:37.486477 25 predicates.go:957] oauth2-redis-admin-1 from auth started at 2025-03-20 08:36:39 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.486482 25 predicates.go:959] 	Container redis ready: true, restart count 0
  I0325 01:02:37.486488 25 predicates.go:957] cloud-service-api-c9d968c5d-ds8b7 from cmp started at 2025-03-20 01:11:25 +0000 UTC (2 container statuses recorded)
  I0325 01:02:37.486492 25 predicates.go:959] 	Container cloud-service-api ready: true, restart count 0
  I0325 01:02:37.486526 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 01:02:37.486545 25 predicates.go:957] maestro-host-app-594465b98c-q6xr7 from cmp started at 2025-03-20 07:44:46 +0000 UTC (2 container statuses recorded)
  I0325 01:02:37.486550 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 01:02:37.486554 25 predicates.go:959] 	Container maestro-host-app ready: true, restart count 0
  I0325 01:02:37.488868 25 predicates.go:957] notification-adapter-api-6cfc54858d-r2572 from cmp started at 2025-03-20 01:11:24 +0000 UTC (2 container statuses recorded)
  I0325 01:02:37.488900 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 01:02:37.488907 25 predicates.go:959] 	Container noti-api ready: true, restart count 1
  I0325 01:02:37.488927 25 predicates.go:957] my-cluster-kafka-1 from dataplatform started at 2025-03-20 01:12:42 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.488932 25 predicates.go:959] 	Container kafka ready: true, restart count 0
  I0325 01:02:37.488938 25 predicates.go:957] my-cluster-zookeeper-2 from dataplatform started at 2025-03-20 01:11:45 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.488942 25 predicates.go:959] 	Container zookeeper ready: true, restart count 0
  I0325 01:02:37.488948 25 predicates.go:957] vault-2 from dataplatform started at 2025-03-20 08:36:44 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.488952 25 predicates.go:959] 	Container vault ready: true, restart count 0
  I0325 01:02:37.488958 25 predicates.go:957] cilium-sz75f from kube-system started at 2025-03-24 08:39:20 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.488974 25 predicates.go:959] 	Container cilium-agent ready: true, restart count 0
  I0325 01:02:37.488979 25 predicates.go:957] coredns-5c54f84c97-k84w6 from kube-system started at 2025-03-19 11:32:47 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.488984 25 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0325 01:02:37.488989 25 predicates.go:957] kube-apiserver-master-3 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.488993 25 predicates.go:959] 	Container kube-apiserver ready: true, restart count 1
  I0325 01:02:37.488998 25 predicates.go:957] kube-controller-manager-master-3 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.489010 25 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 2
  I0325 01:02:37.489015 25 predicates.go:957] kube-proxy-wmb9b from kube-system started at 2025-03-19 11:31:19 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.489021 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0325 01:02:37.489025 25 predicates.go:957] kube-scheduler-master-3 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.489029 25 predicates.go:959] 	Container kube-scheduler ready: true, restart count 1
  I0325 01:02:37.489035 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-fa7539a130154f7a-6r4nq from sonobuoy started at 2025-03-25 00:21:29 +0000 UTC (2 container statuses recorded)
  I0325 01:02:37.489058 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0325 01:02:37.489062 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0325 01:02:37.489067 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker-1 before test
  I0325 01:02:37.496560 25 predicates.go:957] mariadb-keycloak-0 from auth started at 2025-03-20 01:11:24 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.496585 25 predicates.go:959] 	Container mariadb-keycloak ready: true, restart count 0
  I0325 01:02:37.496593 25 predicates.go:957] oauth2-proxy-admin-89ccc8b6d-nvwdp from auth started at 2025-03-20 01:11:24 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.496599 25 predicates.go:959] 	Container oauth2-proxy-admin ready: true, restart count 5
  I0325 01:02:37.496604 25 predicates.go:957] oauth2-redis-admin-3 from auth started at 2025-03-20 01:11:54 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.496608 25 predicates.go:959] 	Container redis ready: true, restart count 0
  I0325 01:02:37.496613 25 predicates.go:957] maestro-auth-gateway-5c697fc7b6-zphwv from cmp started at 2025-03-20 01:11:25 +0000 UTC (2 container statuses recorded)
  I0325 01:02:37.496622 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 01:02:37.496626 25 predicates.go:959] 	Container maestro-auth-gateway ready: true, restart count 0
  I0325 01:02:37.496636 25 predicates.go:957] maestro-event-pusher-58b995bc56-szcmn from cmp started at 2025-03-20 01:11:24 +0000 UTC (2 container statuses recorded)
  I0325 01:02:37.496641 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 01:02:37.496645 25 predicates.go:959] 	Container maestro-event-pusher ready: true, restart count 1369
  I0325 01:02:37.496650 25 predicates.go:957] mariadb-maxscale-66c484df55-94v5c from dataplatform started at 2025-03-20 01:11:23 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.496655 25 predicates.go:959] 	Container maxscale ready: true, restart count 0
  I0325 01:02:37.496659 25 predicates.go:957] mariadb-sts-1 from dataplatform started at 2025-03-20 01:11:32 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.496663 25 predicates.go:959] 	Container mariadb ready: true, restart count 0
  I0325 01:02:37.496668 25 predicates.go:957] my-cluster-kafka-2 from dataplatform started at 2025-03-20 01:12:42 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.496672 25 predicates.go:959] 	Container kafka ready: true, restart count 0
  I0325 01:02:37.496681 25 predicates.go:957] my-cluster-zookeeper-1 from dataplatform started at 2025-03-20 01:11:45 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.496685 25 predicates.go:959] 	Container zookeeper ready: true, restart count 0
  I0325 01:02:37.496689 25 predicates.go:957] strimzi-cluster-operator-54669f99c6-drmn2 from dataplatform started at 2025-03-20 01:11:24 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.496693 25 predicates.go:959] 	Container strimzi-cluster-operator ready: true, restart count 0
  I0325 01:02:37.496698 25 predicates.go:957] vault-1 from dataplatform started at 2025-03-20 01:11:29 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.496707 25 predicates.go:959] 	Container vault ready: true, restart count 0
  I0325 01:02:37.496712 25 predicates.go:957] nfs-client-provisioner-75dbf5b896-6pxh9 from default started at 2025-03-19 11:51:03 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.496716 25 predicates.go:959] 	Container nfs-client-provisioner ready: true, restart count 0
  I0325 01:02:37.496722 25 predicates.go:957] ingress-nginx-admission-create-2s6qz from ingress-nginx started at 2025-03-19 11:45:01 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.496728 25 predicates.go:959] 	Container create ready: false, restart count 0
  I0325 01:02:37.496733 25 predicates.go:957] ingress-nginx-admission-patch-znhld from ingress-nginx started at 2025-03-19 11:45:01 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.496737 25 predicates.go:959] 	Container patch ready: false, restart count 0
  I0325 01:02:37.496742 25 predicates.go:957] ingress-nginx-controller-d498747d7-g2shr from ingress-nginx started at 2025-03-19 11:45:01 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.496746 25 predicates.go:959] 	Container controller ready: true, restart count 0
  I0325 01:02:37.496756 25 predicates.go:957] istio-gateway-6966544c9c-blbvp from istio-system started at 2025-03-19 11:41:10 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.496761 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 01:02:37.496771 25 predicates.go:957] cilium-hcjv9 from kube-system started at 2025-03-24 08:39:20 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.496776 25 predicates.go:959] 	Container cilium-agent ready: true, restart count 0
  I0325 01:02:37.496781 25 predicates.go:957] cilium-operator-75896ddc6-2gh9q from kube-system started at 2025-03-24 08:39:25 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.496791 25 predicates.go:959] 	Container cilium-operator ready: true, restart count 0
  I0325 01:02:37.496799 25 predicates.go:957] kube-proxy-844j7 from kube-system started at 2025-03-19 11:31:57 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.496825 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0325 01:02:37.496830 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-fa7539a130154f7a-j662m from sonobuoy started at 2025-03-25 00:21:29 +0000 UTC (2 container statuses recorded)
  I0325 01:02:37.496835 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0325 01:02:37.496847 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0325 01:02:37.496853 25 predicates.go:957] viola-api-5465c989b9-nmngm from viola started at 2025-03-20 01:11:25 +0000 UTC (2 container statuses recorded)
  I0325 01:02:37.496857 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 01:02:37.496862 25 predicates.go:959] 	Container viola-api ready: true, restart count 0
  I0325 01:02:37.496867 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker-2 before test
  I0325 01:02:37.502472 25 predicates.go:957] keycloak-8458dcb89f-bcx8k from auth started at 2025-03-20 01:11:25 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.502503 25 predicates.go:959] 	Container keycloak ready: true, restart count 0
  I0325 01:02:37.502511 25 predicates.go:957] oauth2-redis-admin-2 from auth started at 2025-03-20 01:11:51 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.502517 25 predicates.go:959] 	Container redis ready: true, restart count 0
  I0325 01:02:37.502522 25 predicates.go:957] oauth2-redis-admin-5 from auth started at 2025-03-20 01:12:20 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.502526 25 predicates.go:959] 	Container redis ready: true, restart count 0
  I0325 01:02:37.502532 25 predicates.go:957] cloud-service-collector-69b56994cb-s2gck from cmp started at 2025-03-20 01:11:25 +0000 UTC (2 container statuses recorded)
  I0325 01:02:37.502538 25 predicates.go:959] 	Container cloud-service-collector ready: true, restart count 4
  I0325 01:02:37.502542 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 01:02:37.502547 25 predicates.go:957] maestro-iam-adapter-api-7df55b4d5f-srt98 from cmp started at 2025-03-20 08:36:38 +0000 UTC (2 container statuses recorded)
  I0325 01:02:37.502551 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 01:02:37.502556 25 predicates.go:959] 	Container maestro-iam-adapter-api ready: true, restart count 0
  I0325 01:02:37.502562 25 predicates.go:957] mariadb-maxscale-66c484df55-sljkg from dataplatform started at 2025-03-20 01:11:23 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.502571 25 predicates.go:959] 	Container maxscale ready: true, restart count 0
  I0325 01:02:37.502579 25 predicates.go:957] mariadb-sts-0 from dataplatform started at 2025-03-20 01:11:27 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.502583 25 predicates.go:959] 	Container mariadb ready: true, restart count 0
  I0325 01:02:37.502588 25 predicates.go:957] my-cluster-entity-operator-5fc55954dc-qfw2l from dataplatform started at 2025-03-20 01:13:10 +0000 UTC (2 container statuses recorded)
  I0325 01:02:37.502597 25 predicates.go:959] 	Container topic-operator ready: true, restart count 0
  I0325 01:02:37.502603 25 predicates.go:959] 	Container user-operator ready: true, restart count 0
  I0325 01:02:37.502610 25 predicates.go:957] my-cluster-kafka-0 from dataplatform started at 2025-03-20 01:12:42 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.502619 25 predicates.go:959] 	Container kafka ready: true, restart count 0
  I0325 01:02:37.502624 25 predicates.go:957] my-cluster-zookeeper-0 from dataplatform started at 2025-03-20 01:11:44 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.502629 25 predicates.go:959] 	Container zookeeper ready: true, restart count 0
  I0325 01:02:37.502635 25 predicates.go:957] pds-integration-service-bb7f75d74-x2l6x from dataplatform started at 2025-03-20 07:44:46 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.502642 25 predicates.go:959] 	Container pds-integration-service ready: true, restart count 0
  I0325 01:02:37.502648 25 predicates.go:957] redis-0 from dataplatform started at 2025-03-20 07:44:47 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.502652 25 predicates.go:959] 	Container redis ready: true, restart count 0
  I0325 01:02:37.502657 25 predicates.go:957] vault-0 from dataplatform started at 2025-03-20 01:11:28 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.502662 25 predicates.go:959] 	Container vault ready: true, restart count 0
  I0325 01:02:37.502666 25 predicates.go:957] vault-unsealer-29047740-np99c from dataplatform started at 2025-03-25 01:00:00 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.502671 25 predicates.go:959] 	Container unsealer ready: false, restart count 0
  I0325 01:02:37.502676 25 predicates.go:957] cilium-77tzn from kube-system started at 2025-03-24 08:39:20 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.502681 25 predicates.go:959] 	Container cilium-agent ready: true, restart count 0
  I0325 01:02:37.502693 25 predicates.go:957] kube-proxy-phlgh from kube-system started at 2025-03-19 11:32:02 +0000 UTC (1 container statuses recorded)
  I0325 01:02:37.502698 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0325 01:02:37.502703 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-fa7539a130154f7a-dxpq8 from sonobuoy started at 2025-03-25 00:21:29 +0000 UTC (2 container statuses recorded)
  I0325 01:02:37.502714 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0325 01:02:37.502719 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 03/25/25 01:02:37.502
  E0325 01:02:38.418389      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:39.418616      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 03/25/25 01:02:39.524
  STEP: Trying to apply a random label on the found node. @ 03/25/25 01:02:39.542
  STEP: verifying the node has the label kubernetes.io/e2e-c695d2c3-8117-4ac0-b1b3-e6a6ed82400e 42 @ 03/25/25 01:02:39.561
  STEP: Trying to relaunch the pod, now with labels. @ 03/25/25 01:02:39.568
  E0325 01:02:40.418748      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:41.418892      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-c695d2c3-8117-4ac0-b1b3-e6a6ed82400e off the node master-2 @ 03/25/25 01:02:41.597
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-c695d2c3-8117-4ac0-b1b3-e6a6ed82400e @ 03/25/25 01:02:41.632
  I0325 01:02:41.640537 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-563" for this suite. @ 03/25/25 01:02:41.643
• [4.381 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 03/25/25 01:02:41.655
  I0325 01:02:41.656003 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename kubectl @ 03/25/25 01:02:41.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:02:41.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:02:41.686
  STEP: creating a replication controller @ 03/25/25 01:02:41.689
  I0325 01:02:41.689465 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-7732 create -f -'
  I0325 01:02:41.820605 25 builder.go:146] stderr: ""
  I0325 01:02:41.820982 25 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 03/25/25 01:02:41.821
  I0325 01:02:41.821189 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-7732 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0325 01:02:41.886017 25 builder.go:146] stderr: ""
  I0325 01:02:41.886084 25 builder.go:147] stdout: "update-demo-nautilus-dd57x update-demo-nautilus-hbq7t "
  I0325 01:02:41.886208 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-7732 get pods update-demo-nautilus-dd57x -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0325 01:02:41.941132 25 builder.go:146] stderr: ""
  I0325 01:02:41.941185 25 builder.go:147] stdout: ""
  I0325 01:02:41.941219 25 kubectl.go:2499] update-demo-nautilus-dd57x is created but not running
  E0325 01:02:42.418963      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:43.419251      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:44.419511      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:45.419723      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:46.420018      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:02:46.942101 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-7732 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0325 01:02:47.024584 25 builder.go:146] stderr: ""
  I0325 01:02:47.024666 25 builder.go:147] stdout: "update-demo-nautilus-dd57x update-demo-nautilus-hbq7t "
  I0325 01:02:47.024738 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-7732 get pods update-demo-nautilus-dd57x -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0325 01:02:47.091380 25 builder.go:146] stderr: ""
  I0325 01:02:47.091433 25 builder.go:147] stdout: "true"
  I0325 01:02:47.091498 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-7732 get pods update-demo-nautilus-dd57x -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0325 01:02:47.158776 25 builder.go:146] stderr: ""
  I0325 01:02:47.158824 25 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0325 01:02:47.158836 25 kubectl.go:2390] validating pod update-demo-nautilus-dd57x
  I0325 01:02:47.164195 25 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0325 01:02:47.164261 25 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0325 01:02:47.164271 25 kubectl.go:2517] update-demo-nautilus-dd57x is verified up and running
  I0325 01:02:47.164310 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-7732 get pods update-demo-nautilus-hbq7t -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0325 01:02:47.221140 25 builder.go:146] stderr: ""
  I0325 01:02:47.221192 25 builder.go:147] stdout: "true"
  I0325 01:02:47.221245 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-7732 get pods update-demo-nautilus-hbq7t -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0325 01:02:47.281856 25 builder.go:146] stderr: ""
  I0325 01:02:47.281906 25 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0325 01:02:47.281917 25 kubectl.go:2390] validating pod update-demo-nautilus-hbq7t
  I0325 01:02:47.286967 25 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0325 01:02:47.287011 25 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0325 01:02:47.287019 25 kubectl.go:2517] update-demo-nautilus-hbq7t is verified up and running
  STEP: using delete to clean up resources @ 03/25/25 01:02:47.287
  I0325 01:02:47.287106 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-7732 delete --grace-period=0 --force -f -'
  I0325 01:02:47.360120 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0325 01:02:47.360167 25 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0325 01:02:47.360216 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-7732 get rc,svc -l name=update-demo --no-headers'
  E0325 01:02:47.420923      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:02:47.439581 25 builder.go:146] stderr: "No resources found in kubectl-7732 namespace.\n"
  I0325 01:02:47.439634 25 builder.go:147] stdout: ""
  I0325 01:02:47.439692 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-7732 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0325 01:02:47.504453 25 builder.go:146] stderr: ""
  I0325 01:02:47.504502 25 builder.go:147] stdout: ""
  I0325 01:02:47.504631 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7732" for this suite. @ 03/25/25 01:02:47.508
• [5.860 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 03/25/25 01:02:47.516
  I0325 01:02:47.516164 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename init-container @ 03/25/25 01:02:47.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:02:47.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:02:47.562
  STEP: creating the pod @ 03/25/25 01:02:47.564
  I0325 01:02:47.564298 25 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E0325 01:02:48.421007      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:49.421757      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:50.421909      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:51.422590      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:52.422683      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:02:52.579567 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1847" for this suite. @ 03/25/25 01:02:52.583
• [5.076 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 03/25/25 01:02:52.592
  I0325 01:02:52.592378 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename field-validation @ 03/25/25 01:02:52.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:02:52.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:02:52.618
  I0325 01:02:52.620563 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  E0325 01:02:53.423346      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:54.424182      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:55.424714      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:56.425709      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:57.426260      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:58.426895      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:02:59.427208      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:00.427609      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:03:00.707231 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1038" for this suite. @ 03/25/25 01:03:00.711
• [8.127 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 03/25/25 01:03:00.72
  I0325 01:03:00.720941 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename services @ 03/25/25 01:03:00.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:03:00.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:03:00.756
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-7338 @ 03/25/25 01:03:00.759
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 03/25/25 01:03:00.774
  STEP: creating service externalsvc in namespace services-7338 @ 03/25/25 01:03:00.774
  STEP: creating replication controller externalsvc in namespace services-7338 @ 03/25/25 01:03:00.796
  I0325 01:03:00.810328      25 runners.go:193] Created replication controller with name: externalsvc, namespace: services-7338, replica count: 2
  E0325 01:03:01.428005      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:02.428139      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:03.428692      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:03:03.861990      25 runners.go:193] externalsvc Pods: 2 out of 2 created, 0 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0325 01:03:04.428853      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:05.430105      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:06.430592      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:03:06.862838      25 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 03/25/25 01:03:06.867
  I0325 01:03:06.882862 25 resource.go:361] Creating new exec pod
  E0325 01:03:07.431397      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:08.431821      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:09.431921      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:10.431990      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:03:10.906967 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-7338 exec execpodp97jr -- /bin/sh -x -c nslookup clusterip-service.services-7338.svc.cluster.local'
  I0325 01:03:11.157716 25 builder.go:146] stderr: "+ nslookup clusterip-service.services-7338.svc.cluster.local\n"
  I0325 01:03:11.157780 25 builder.go:147] stdout: "Server:\t\t10.233.0.3\nAddress:\t10.233.0.3#53\n\nclusterip-service.services-7338.svc.cluster.local\tcanonical name = externalsvc.services-7338.svc.cluster.local.\nName:\texternalsvc.services-7338.svc.cluster.local\nAddress: 10.233.55.131\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-7338, will wait for the garbage collector to delete the pods @ 03/25/25 01:03:11.157
  I0325 01:03:11.224964 25 resources.go:139] Deleting ReplicationController externalsvc took: 11.634183ms
  I0325 01:03:11.325972 25 resources.go:163] Terminating ReplicationController externalsvc pods took: 101.00614ms
  E0325 01:03:11.432590      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:12.432952      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:13.433159      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:14.434026      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:03:14.547939 25 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I0325 01:03:14.562525 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7338" for this suite. @ 03/25/25 01:03:14.566
• [13.853 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 03/25/25 01:03:14.575
  I0325 01:03:14.575406 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename projected @ 03/25/25 01:03:14.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:03:14.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:03:14.605
  STEP: Creating a pod to test downward API volume plugin @ 03/25/25 01:03:14.608
  E0325 01:03:15.434176      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:16.434302      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:17.434390      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:18.434935      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:19.435343      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:20.436255      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:21.436329      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:22.436767      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 01:03:22.639
  I0325 01:03:22.643589 25 output.go:207] Trying to get logs from node master-2 pod downwardapi-volume-e26890c9-490c-4819-9915-105cff067429 container client-container: <nil>
  STEP: delete the pod @ 03/25/25 01:03:22.654
  I0325 01:03:22.673395 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3429" for this suite. @ 03/25/25 01:03:22.677
• [8.109 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 03/25/25 01:03:22.685
  I0325 01:03:22.685201 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename sched-pred @ 03/25/25 01:03:22.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:03:22.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:03:22.713
  I0325 01:03:22.715553 25 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0325 01:03:22.782902 25 util.go:396] Waiting for terminating namespaces to be deleted...
  I0325 01:03:22.787681 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node master-1 before test
  I0325 01:03:22.793765 25 predicates.go:957] oauth2-proxy-admin-89ccc8b6d-gkxsf from auth started at 2025-03-20 01:11:24 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.793793 25 predicates.go:959] 	Container oauth2-proxy-admin ready: true, restart count 5
  I0325 01:03:22.793800 25 predicates.go:957] oauth2-redis-admin-4 from auth started at 2025-03-20 01:11:58 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.793825 25 predicates.go:959] 	Container redis ready: true, restart count 0
  I0325 01:03:22.793831 25 predicates.go:957] maestro-common-api-d4f57ffc9-v25ts from cmp started at 2025-03-20 01:11:25 +0000 UTC (2 container statuses recorded)
  I0325 01:03:22.793838 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 01:03:22.793845 25 predicates.go:959] 	Container maestro-common-api ready: true, restart count 0
  I0325 01:03:22.793852 25 predicates.go:957] maestro-remote-app-b677d7995-ttggb from cmp started at 2025-03-20 01:11:25 +0000 UTC (2 container statuses recorded)
  I0325 01:03:22.793873 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 01:03:22.793895 25 predicates.go:959] 	Container maestro-remote-app ready: true, restart count 0
  I0325 01:03:22.793903 25 predicates.go:957] istiod-99fc7b678-c74hx from istio-system started at 2025-03-20 01:11:42 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.793910 25 predicates.go:959] 	Container discovery ready: true, restart count 0
  I0325 01:03:22.793925 25 predicates.go:957] cilium-nb9w6 from kube-system started at 2025-03-24 08:39:20 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.793932 25 predicates.go:959] 	Container cilium-agent ready: true, restart count 0
  I0325 01:03:22.793961 25 predicates.go:957] coredns-5c54f84c97-s7pm8 from kube-system started at 2025-03-20 07:44:46 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.793972 25 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0325 01:03:22.793977 25 predicates.go:957] dns-autoscaler-76ddddbbc-njtdg from kube-system started at 2025-03-19 11:32:46 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.793982 25 predicates.go:959] 	Container autoscaler ready: true, restart count 0
  I0325 01:03:22.793987 25 predicates.go:957] kube-apiserver-master-1 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.793992 25 predicates.go:959] 	Container kube-apiserver ready: true, restart count 1
  I0325 01:03:22.793997 25 predicates.go:957] kube-controller-manager-master-1 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.794017 25 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 2
  I0325 01:03:22.794021 25 predicates.go:957] kube-proxy-c9vn6 from kube-system started at 2025-03-19 11:31:14 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.794036 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0325 01:03:22.794045 25 predicates.go:957] kube-scheduler-master-1 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.794050 25 predicates.go:959] 	Container kube-scheduler ready: true, restart count 1
  I0325 01:03:22.794054 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-fa7539a130154f7a-69xpv from sonobuoy started at 2025-03-25 00:21:29 +0000 UTC (2 container statuses recorded)
  I0325 01:03:22.794058 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0325 01:03:22.794062 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0325 01:03:22.794067 25 predicates.go:957] viola-remote-app-5b964d4757-mx9xg from viola started at 2025-03-20 01:11:24 +0000 UTC (2 container statuses recorded)
  I0325 01:03:22.794071 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 01:03:22.794075 25 predicates.go:959] 	Container viola-remote-app ready: true, restart count 0
  I0325 01:03:22.794080 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node master-2 before test
  I0325 01:03:22.800792 25 predicates.go:957] cilium-7mfqv from kube-system started at 2025-03-24 08:39:20 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.800896 25 predicates.go:959] 	Container cilium-agent ready: true, restart count 0
  I0325 01:03:22.800929 25 predicates.go:957] cilium-operator-75896ddc6-2dpsx from kube-system started at 2025-03-24 08:39:25 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.800986 25 predicates.go:959] 	Container cilium-operator ready: true, restart count 0
  I0325 01:03:22.801026 25 predicates.go:957] kube-apiserver-master-2 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.801073 25 predicates.go:959] 	Container kube-apiserver ready: true, restart count 1
  I0325 01:03:22.801104 25 predicates.go:957] kube-controller-manager-master-2 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.801143 25 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 2
  I0325 01:03:22.801178 25 predicates.go:957] kube-proxy-btnc7 from kube-system started at 2025-03-19 11:31:18 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.801208 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0325 01:03:22.801254 25 predicates.go:957] kube-scheduler-master-2 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.801285 25 predicates.go:959] 	Container kube-scheduler ready: true, restart count 1
  I0325 01:03:22.801339 25 predicates.go:957] sonobuoy from sonobuoy started at 2025-03-25 00:21:28 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.801375 25 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0325 01:03:22.801411 25 predicates.go:957] sonobuoy-e2e-job-377d99148b324b41 from sonobuoy started at 2025-03-25 00:21:29 +0000 UTC (2 container statuses recorded)
  I0325 01:03:22.801456 25 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0325 01:03:22.801490 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0325 01:03:22.801530 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-fa7539a130154f7a-l2cln from sonobuoy started at 2025-03-25 00:21:29 +0000 UTC (2 container statuses recorded)
  I0325 01:03:22.801566 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0325 01:03:22.801596 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0325 01:03:22.801638 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node master-3 before test
  I0325 01:03:22.817910 25 predicates.go:957] keycloak-8458dcb89f-56vd4 from auth started at 2025-03-20 01:11:26 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.818063 25 predicates.go:959] 	Container keycloak ready: true, restart count 0
  I0325 01:03:22.819069 25 predicates.go:957] oauth2-redis-admin-0 from auth started at 2025-03-20 01:11:28 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.819275 25 predicates.go:959] 	Container redis ready: true, restart count 0
  I0325 01:03:22.819486 25 predicates.go:957] oauth2-redis-admin-1 from auth started at 2025-03-20 08:36:39 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.819559 25 predicates.go:959] 	Container redis ready: true, restart count 0
  I0325 01:03:22.819656 25 predicates.go:957] cloud-service-api-c9d968c5d-ds8b7 from cmp started at 2025-03-20 01:11:25 +0000 UTC (2 container statuses recorded)
  I0325 01:03:22.819743 25 predicates.go:959] 	Container cloud-service-api ready: true, restart count 0
  I0325 01:03:22.819869 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 01:03:22.819949 25 predicates.go:957] maestro-host-app-594465b98c-q6xr7 from cmp started at 2025-03-20 07:44:46 +0000 UTC (2 container statuses recorded)
  I0325 01:03:22.820196 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 01:03:22.820228 25 predicates.go:959] 	Container maestro-host-app ready: true, restart count 0
  I0325 01:03:22.820371 25 predicates.go:957] notification-adapter-api-6cfc54858d-r2572 from cmp started at 2025-03-20 01:11:24 +0000 UTC (2 container statuses recorded)
  I0325 01:03:22.822782 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 01:03:22.822808 25 predicates.go:959] 	Container noti-api ready: true, restart count 1
  I0325 01:03:22.822820 25 predicates.go:957] my-cluster-kafka-1 from dataplatform started at 2025-03-20 01:12:42 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.822831 25 predicates.go:959] 	Container kafka ready: true, restart count 0
  I0325 01:03:22.822838 25 predicates.go:957] my-cluster-zookeeper-2 from dataplatform started at 2025-03-20 01:11:45 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.822844 25 predicates.go:959] 	Container zookeeper ready: true, restart count 0
  I0325 01:03:22.822859 25 predicates.go:957] vault-2 from dataplatform started at 2025-03-20 08:36:44 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.822865 25 predicates.go:959] 	Container vault ready: true, restart count 0
  I0325 01:03:22.822873 25 predicates.go:957] cilium-sz75f from kube-system started at 2025-03-24 08:39:20 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.822886 25 predicates.go:959] 	Container cilium-agent ready: true, restart count 0
  I0325 01:03:22.822892 25 predicates.go:957] coredns-5c54f84c97-k84w6 from kube-system started at 2025-03-19 11:32:47 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.822906 25 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0325 01:03:22.822920 25 predicates.go:957] kube-apiserver-master-3 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.822925 25 predicates.go:959] 	Container kube-apiserver ready: true, restart count 1
  I0325 01:03:22.822933 25 predicates.go:957] kube-controller-manager-master-3 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.822938 25 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 2
  I0325 01:03:22.822946 25 predicates.go:957] kube-proxy-wmb9b from kube-system started at 2025-03-19 11:31:19 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.822977 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0325 01:03:22.822987 25 predicates.go:957] kube-scheduler-master-3 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.822994 25 predicates.go:959] 	Container kube-scheduler ready: true, restart count 1
  I0325 01:03:22.823000 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-fa7539a130154f7a-6r4nq from sonobuoy started at 2025-03-25 00:21:29 +0000 UTC (2 container statuses recorded)
  I0325 01:03:22.823004 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0325 01:03:22.823043 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0325 01:03:22.823049 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker-1 before test
  I0325 01:03:22.831461 25 predicates.go:957] mariadb-keycloak-0 from auth started at 2025-03-20 01:11:24 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.831614 25 predicates.go:959] 	Container mariadb-keycloak ready: true, restart count 0
  I0325 01:03:22.832460 25 predicates.go:957] oauth2-proxy-admin-89ccc8b6d-nvwdp from auth started at 2025-03-20 01:11:24 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.832673 25 predicates.go:959] 	Container oauth2-proxy-admin ready: true, restart count 5
  I0325 01:03:22.832903 25 predicates.go:957] oauth2-redis-admin-3 from auth started at 2025-03-20 01:11:54 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.832953 25 predicates.go:959] 	Container redis ready: true, restart count 0
  I0325 01:03:22.833080 25 predicates.go:957] maestro-auth-gateway-5c697fc7b6-zphwv from cmp started at 2025-03-20 01:11:25 +0000 UTC (2 container statuses recorded)
  I0325 01:03:22.833160 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 01:03:22.833294 25 predicates.go:959] 	Container maestro-auth-gateway ready: true, restart count 0
  I0325 01:03:22.833585 25 predicates.go:957] maestro-event-pusher-58b995bc56-szcmn from cmp started at 2025-03-20 01:11:24 +0000 UTC (2 container statuses recorded)
  I0325 01:03:22.833709 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 01:03:22.833782 25 predicates.go:959] 	Container maestro-event-pusher ready: false, restart count 1369
  I0325 01:03:22.833876 25 predicates.go:957] mariadb-maxscale-66c484df55-94v5c from dataplatform started at 2025-03-20 01:11:23 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.833930 25 predicates.go:959] 	Container maxscale ready: true, restart count 0
  I0325 01:03:22.833998 25 predicates.go:957] mariadb-sts-1 from dataplatform started at 2025-03-20 01:11:32 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.834083 25 predicates.go:959] 	Container mariadb ready: true, restart count 0
  I0325 01:03:22.834153 25 predicates.go:957] my-cluster-kafka-2 from dataplatform started at 2025-03-20 01:12:42 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.834256 25 predicates.go:959] 	Container kafka ready: true, restart count 0
  I0325 01:03:22.834497 25 predicates.go:957] my-cluster-zookeeper-1 from dataplatform started at 2025-03-20 01:11:45 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.835387 25 predicates.go:959] 	Container zookeeper ready: true, restart count 0
  I0325 01:03:22.835424 25 predicates.go:957] strimzi-cluster-operator-54669f99c6-drmn2 from dataplatform started at 2025-03-20 01:11:24 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.835465 25 predicates.go:959] 	Container strimzi-cluster-operator ready: true, restart count 0
  I0325 01:03:22.836188 25 predicates.go:957] vault-1 from dataplatform started at 2025-03-20 01:11:29 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.836250 25 predicates.go:959] 	Container vault ready: true, restart count 0
  I0325 01:03:22.836340 25 predicates.go:957] nfs-client-provisioner-75dbf5b896-6pxh9 from default started at 2025-03-19 11:51:03 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.836383 25 predicates.go:959] 	Container nfs-client-provisioner ready: true, restart count 0
  I0325 01:03:22.836435 25 predicates.go:957] ingress-nginx-admission-create-2s6qz from ingress-nginx started at 2025-03-19 11:45:01 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.836508 25 predicates.go:959] 	Container create ready: false, restart count 0
  I0325 01:03:22.836550 25 predicates.go:957] ingress-nginx-admission-patch-znhld from ingress-nginx started at 2025-03-19 11:45:01 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.836608 25 predicates.go:959] 	Container patch ready: false, restart count 0
  I0325 01:03:22.836672 25 predicates.go:957] ingress-nginx-controller-d498747d7-g2shr from ingress-nginx started at 2025-03-19 11:45:01 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.836798 25 predicates.go:959] 	Container controller ready: true, restart count 0
  I0325 01:03:22.837042 25 predicates.go:957] istio-gateway-6966544c9c-blbvp from istio-system started at 2025-03-19 11:41:10 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.837084 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 01:03:22.837213 25 predicates.go:957] cilium-hcjv9 from kube-system started at 2025-03-24 08:39:20 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.837283 25 predicates.go:959] 	Container cilium-agent ready: true, restart count 0
  I0325 01:03:22.837562 25 predicates.go:957] cilium-operator-75896ddc6-2gh9q from kube-system started at 2025-03-24 08:39:25 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.837796 25 predicates.go:959] 	Container cilium-operator ready: true, restart count 0
  I0325 01:03:22.837894 25 predicates.go:957] kube-proxy-844j7 from kube-system started at 2025-03-19 11:31:57 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.838007 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0325 01:03:22.838165 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-fa7539a130154f7a-j662m from sonobuoy started at 2025-03-25 00:21:29 +0000 UTC (2 container statuses recorded)
  I0325 01:03:22.838781 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0325 01:03:22.838919 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0325 01:03:22.839013 25 predicates.go:957] viola-api-5465c989b9-nmngm from viola started at 2025-03-20 01:11:25 +0000 UTC (2 container statuses recorded)
  I0325 01:03:22.839070 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 01:03:22.839482 25 predicates.go:959] 	Container viola-api ready: true, restart count 0
  I0325 01:03:22.839568 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker-2 before test
  I0325 01:03:22.847890 25 predicates.go:957] keycloak-8458dcb89f-bcx8k from auth started at 2025-03-20 01:11:25 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.847923 25 predicates.go:959] 	Container keycloak ready: true, restart count 0
  I0325 01:03:22.847930 25 predicates.go:957] oauth2-redis-admin-2 from auth started at 2025-03-20 01:11:51 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.847935 25 predicates.go:959] 	Container redis ready: true, restart count 0
  I0325 01:03:22.847940 25 predicates.go:957] oauth2-redis-admin-5 from auth started at 2025-03-20 01:12:20 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.847946 25 predicates.go:959] 	Container redis ready: true, restart count 0
  I0325 01:03:22.847952 25 predicates.go:957] cloud-service-collector-69b56994cb-s2gck from cmp started at 2025-03-20 01:11:25 +0000 UTC (2 container statuses recorded)
  I0325 01:03:22.848143 25 predicates.go:959] 	Container cloud-service-collector ready: true, restart count 4
  I0325 01:03:22.848148 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 01:03:22.848154 25 predicates.go:957] maestro-iam-adapter-api-7df55b4d5f-srt98 from cmp started at 2025-03-20 08:36:38 +0000 UTC (2 container statuses recorded)
  I0325 01:03:22.848159 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 01:03:22.848167 25 predicates.go:959] 	Container maestro-iam-adapter-api ready: true, restart count 0
  I0325 01:03:22.848172 25 predicates.go:957] mariadb-maxscale-66c484df55-sljkg from dataplatform started at 2025-03-20 01:11:23 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.848177 25 predicates.go:959] 	Container maxscale ready: true, restart count 0
  I0325 01:03:22.848182 25 predicates.go:957] mariadb-sts-0 from dataplatform started at 2025-03-20 01:11:27 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.848187 25 predicates.go:959] 	Container mariadb ready: true, restart count 0
  I0325 01:03:22.848192 25 predicates.go:957] my-cluster-entity-operator-5fc55954dc-qfw2l from dataplatform started at 2025-03-20 01:13:10 +0000 UTC (2 container statuses recorded)
  I0325 01:03:22.848196 25 predicates.go:959] 	Container topic-operator ready: true, restart count 0
  I0325 01:03:22.848200 25 predicates.go:959] 	Container user-operator ready: true, restart count 0
  I0325 01:03:22.848204 25 predicates.go:957] my-cluster-kafka-0 from dataplatform started at 2025-03-20 01:12:42 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.848209 25 predicates.go:959] 	Container kafka ready: true, restart count 0
  I0325 01:03:22.848213 25 predicates.go:957] my-cluster-zookeeper-0 from dataplatform started at 2025-03-20 01:11:44 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.848240 25 predicates.go:959] 	Container zookeeper ready: true, restart count 0
  I0325 01:03:22.848247 25 predicates.go:957] pds-integration-service-bb7f75d74-x2l6x from dataplatform started at 2025-03-20 07:44:46 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.848251 25 predicates.go:959] 	Container pds-integration-service ready: true, restart count 0
  I0325 01:03:22.848256 25 predicates.go:957] redis-0 from dataplatform started at 2025-03-20 07:44:47 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.848260 25 predicates.go:959] 	Container redis ready: true, restart count 0
  I0325 01:03:22.848266 25 predicates.go:957] vault-0 from dataplatform started at 2025-03-20 01:11:28 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.848271 25 predicates.go:959] 	Container vault ready: true, restart count 0
  I0325 01:03:22.848275 25 predicates.go:957] vault-unsealer-29047740-np99c from dataplatform started at 2025-03-25 01:00:00 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.848280 25 predicates.go:959] 	Container unsealer ready: false, restart count 0
  I0325 01:03:22.848285 25 predicates.go:957] cilium-77tzn from kube-system started at 2025-03-24 08:39:20 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.848289 25 predicates.go:959] 	Container cilium-agent ready: true, restart count 0
  I0325 01:03:22.848293 25 predicates.go:957] kube-proxy-phlgh from kube-system started at 2025-03-19 11:32:02 +0000 UTC (1 container statuses recorded)
  I0325 01:03:22.848297 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0325 01:03:22.848303 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-fa7539a130154f7a-dxpq8 from sonobuoy started at 2025-03-25 00:21:29 +0000 UTC (2 container statuses recorded)
  I0325 01:03:22.848307 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0325 01:03:22.848311 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 03/25/25 01:03:22.848
  E0325 01:03:23.437637      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:24.438212      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 03/25/25 01:03:24.874
  STEP: Trying to apply a random label on the found node. @ 03/25/25 01:03:24.892
  STEP: verifying the node has the label kubernetes.io/e2e-ac2d40b9-7c90-410f-9d64-46adaed0c2ef 95 @ 03/25/25 01:03:24.902
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 03/25/25 01:03:24.908
  E0325 01:03:25.438386      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:26.438726      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.20.10.146 on the node which pod4 resides and expect not scheduled @ 03/25/25 01:03:26.928
  E0325 01:03:27.439679      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:28.440181      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:29.440330      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:30.441365      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:31.442088      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:32.442257      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:33.443243      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:34.443453      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:35.443572      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:36.443862      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:37.444715      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:38.445037      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:39.446014      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:40.446162      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:41.446752      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:42.447000      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:43.447553      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:44.447917      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:45.448785      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:46.449057      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:47.449715      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:48.450005      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:49.450392      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:50.450696      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:51.451182      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:52.451634      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:53.452377      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:54.452770      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:55.452879      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:56.453133      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:57.453266      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:58.453428      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:03:59.453597      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:00.453793      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:01.454679      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:02.454962      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:03.455499      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:04.455620      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:05.456285      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:06.456481      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:07.456834      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:08.457052      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:09.457197      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:10.457425      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:11.458387      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:12.458790      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:13.458712      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:14.458937      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:15.458905      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:16.458997      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:17.459795      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:18.459940      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:19.460427      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:20.460475      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:21.461057      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:22.461513      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:23.461732      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:24.462129      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:25.463057      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:26.463421      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:27.463330      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:28.463921      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:29.464841      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:30.465185      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:31.465742      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:32.465860      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:33.466780      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:34.466945      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:35.467720      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:36.468014      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:37.468415      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:38.468678      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:39.469887      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:40.469976      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:41.470969      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:42.471596      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:43.472163      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:44.472507      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:45.473022      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:46.473030      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:47.473415      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:48.473600      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:49.473756      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:50.474066      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:51.474777      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:52.475275      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:53.475725      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:54.475851      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:55.476655      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:56.477532      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:57.477849      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:58.478289      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:04:59.480378      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:00.479927      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:01.480463      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:02.481065      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:03.482053      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:04.482536      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:05.482604      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:06.482702      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:07.483374      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:08.483605      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:09.483979      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:10.484243      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:11.484516      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:12.484927      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:13.485370      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:14.486245      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:15.486283      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:16.486752      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:17.486962      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:18.487475      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:19.487953      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:20.488269      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:21.488620      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:22.489134      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:23.489099      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:24.489084      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:25.489797      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:26.490177      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:27.490282      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:28.490643      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:29.491671      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:30.492004      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:31.492800      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:32.493072      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:33.493822      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:34.494046      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:35.495020      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:36.495160      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:37.495240      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:38.495385      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:39.496190      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:40.496592      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:41.497616      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:42.497698      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:43.498377      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:44.498772      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:45.499197      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:46.499768      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:47.500135      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:48.500577      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:49.501517      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:50.501892      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:51.502761      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:52.502890      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:53.503882      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:54.504642      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:55.505365      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:56.505543      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:57.506221      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:58.506341      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:05:59.506916      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:00.507044      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:01.508100      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:02.508334      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:03.509013      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:04.509214      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:05.509648      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:06.509848      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:07.510831      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:08.511700      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:09.512315      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:10.512454      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:11.513471      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:12.513585      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:13.514411      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:14.514666      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:15.515783      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:16.516089      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:17.516971      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:18.517220      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:19.518125      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:20.518269      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:21.518723      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:22.519322      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:23.519669      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:24.519932      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:25.520419      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:26.521072      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:27.522125      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:28.522617      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:29.523509      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:30.523210      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:31.523541      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:32.523710      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:33.524400      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:34.525443      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:35.526279      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:36.526398      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:37.526864      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:38.527034      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:39.527790      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:40.528441      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:41.529240      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:42.529395      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:43.530396      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:44.531650      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:45.532122      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:46.532251      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:47.532411      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:48.532571      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:49.533637      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:50.533738      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:51.534479      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:52.534732      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:53.535895      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:54.536013      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:55.536300      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:56.536689      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:57.537415      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:58.538179      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:06:59.538801      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:00.539208      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:01.539741      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:02.540142      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:03.540473      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:04.540753      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:05.541557      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:06.541931      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:07.542167      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:08.543186      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:09.543387      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:10.544102      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:11.544691      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:12.545281      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:13.545686      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:14.546879      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:15.547456      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:16.547632      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:17.548098      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:18.548947      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:19.549499      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:20.549647      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:21.549971      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:22.549964      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:23.550982      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:24.550920      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:25.551248      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:26.551772      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:27.552084      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:28.552489      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:29.552749      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:30.552876      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:31.553089      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:32.554151      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:33.554226      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:34.554640      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:35.554995      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:36.555534      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:37.555391      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:38.555484      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:39.556566      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:40.556668      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:41.556997      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:42.557045      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:43.557418      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:44.557325      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:45.558097      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:46.558408      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:47.559058      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:48.559385      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:49.559899      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:50.560376      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:51.560712      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:52.561227      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:53.561608      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:54.562587      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:55.563055      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:56.563578      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:57.565250      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:58.566042      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:07:59.566213      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:00.566589      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:01.566697      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:02.566902      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:03.567347      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:04.567436      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:05.568185      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:06.568463      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:07.569035      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:08.569095      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:09.569439      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:10.569471      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:11.569754      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:12.570577      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:13.570725      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:14.571579      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:15.571969      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:16.572726      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:17.573014      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:18.573711      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:19.573950      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:20.574894      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:21.575194      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:22.575838      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:23.576323      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:24.577521      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:25.577960      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:26.578671      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-ac2d40b9-7c90-410f-9d64-46adaed0c2ef off the node master-2 @ 03/25/25 01:08:26.947
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-ac2d40b9-7c90-410f-9d64-46adaed0c2ef @ 03/25/25 01:08:26.967
  I0325 01:08:26.980663 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6060" for this suite. @ 03/25/25 01:08:26.995
• [304.323 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 03/25/25 01:08:27.008
  I0325 01:08:27.008857 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename custom-resource-definition @ 03/25/25 01:08:27.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:08:27.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:08:27.146
  I0325 01:08:27.148728 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  E0325 01:08:27.578908      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:28.579156      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:29.579959      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:30.580289      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:31.581068      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:32.581739      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:08:33.180032 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6665" for this suite. @ 03/25/25 01:08:33.185
• [6.186 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 03/25/25 01:08:33.194
  I0325 01:08:33.194896 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename emptydir-wrapper @ 03/25/25 01:08:33.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:08:33.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:08:33.223
  E0325 01:08:33.582140      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:34.582479      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 03/25/25 01:08:35.255
  STEP: Cleaning up the configmap @ 03/25/25 01:08:35.263
  STEP: Cleaning up the pod @ 03/25/25 01:08:35.271
  I0325 01:08:35.294791 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-9401" for this suite. @ 03/25/25 01:08:35.304
• [2.117 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 03/25/25 01:08:35.312
  I0325 01:08:35.312386 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename endpointslice @ 03/25/25 01:08:35.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:08:35.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:08:35.442
  E0325 01:08:35.583233      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:36.583457      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:37.584167      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:38.584486      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:39.592873      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:40.585083      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 03/25/25 01:08:41.566
  STEP: referencing matching pods with named port @ 03/25/25 01:08:41.579
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 03/25/25 01:08:41.585
  E0325 01:08:41.585549      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 03/25/25 01:08:41.597
  I0325 01:08:41.628531 25 endpointslice.go:938] EndpointSlice for Service endpointslice-6700/example-named-port not found
  E0325 01:08:42.585708      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:43.585900      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:08:43.632977 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6700" for this suite. @ 03/25/25 01:08:43.638
• [8.334 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 03/25/25 01:08:43.647
  I0325 01:08:43.647782 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename resourcequota @ 03/25/25 01:08:43.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:08:43.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:08:43.677
  STEP: Counting existing ResourceQuota @ 03/25/25 01:08:43.679
  E0325 01:08:44.585988      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:45.586190      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:46.586747      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:47.586801      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:48.587034      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 03/25/25 01:08:48.685
  STEP: Ensuring resource quota status is calculated @ 03/25/25 01:08:48.692
  E0325 01:08:49.589312      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:50.589456      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:08:50.695810 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1759" for this suite. @ 03/25/25 01:08:50.7
• [7.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 03/25/25 01:08:50.718
  I0325 01:08:50.718718 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename emptydir @ 03/25/25 01:08:50.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:08:50.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:08:50.774
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 03/25/25 01:08:50.777
  E0325 01:08:51.589632      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:52.589757      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:53.590535      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:54.591637      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:55.591843      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:56.592182      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 01:08:56.806
  I0325 01:08:56.810069 25 output.go:207] Trying to get logs from node master-2 pod pod-fba62c2b-a7a9-4044-91a1-8a62d93fa0b0 container test-container: <nil>
  STEP: delete the pod @ 03/25/25 01:08:56.824
  I0325 01:08:56.846993 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7546" for this suite. @ 03/25/25 01:08:56.851
• [6.139 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 03/25/25 01:08:56.858
  I0325 01:08:56.858125 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/25/25 01:08:56.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:08:56.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:08:56.966
  I0325 01:08:56.969108 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  E0325 01:08:57.592913      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:58.593587      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:08:59.594149      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:00.594307      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:01.594378      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:02.595568      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:03.596396      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 03/25/25 01:09:04.536
  I0325 01:09:04.536362 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=crd-publish-openapi-1924 --namespace=crd-publish-openapi-1924 create -f -'
  E0325 01:09:04.597203      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:09:04.651429 25 builder.go:146] stderr: ""
  I0325 01:09:04.651480 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7689-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0325 01:09:04.651535 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=crd-publish-openapi-1924 --namespace=crd-publish-openapi-1924 delete e2e-test-crd-publish-openapi-7689-crds test-cr'
  I0325 01:09:04.724086 25 builder.go:146] stderr: ""
  I0325 01:09:04.724147 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7689-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0325 01:09:04.724195 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=crd-publish-openapi-1924 --namespace=crd-publish-openapi-1924 apply -f -'
  I0325 01:09:04.803043 25 builder.go:146] stderr: ""
  I0325 01:09:04.803095 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7689-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0325 01:09:04.803136 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=crd-publish-openapi-1924 --namespace=crd-publish-openapi-1924 delete e2e-test-crd-publish-openapi-7689-crds test-cr'
  I0325 01:09:04.877436 25 builder.go:146] stderr: ""
  I0325 01:09:04.877489 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7689-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 03/25/25 01:09:04.877
  I0325 01:09:04.877626 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=crd-publish-openapi-1924 explain e2e-test-crd-publish-openapi-7689-crds'
  I0325 01:09:04.931747 25 builder.go:146] stderr: ""
  I0325 01:09:04.931809 25 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-7689-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0325 01:09:05.598167      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:06.598837      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:09:07.184669 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1924" for this suite. @ 03/25/25 01:09:07.193
• [10.343 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 03/25/25 01:09:07.202
  I0325 01:09:07.202761 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename namespaces @ 03/25/25 01:09:07.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:09:07.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:09:07.234
  STEP: Creating namespace "e2e-ns-tdjn7" @ 03/25/25 01:09:07.24
  I0325 01:09:07.442109 25 namespace.go:411] Namespace "e2e-ns-tdjn7-4889" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-tdjn7-4889" @ 03/25/25 01:09:07.442
  I0325 01:09:07.455044 25 namespace.go:434] Namespace "e2e-ns-tdjn7-4889" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-tdjn7-4889" @ 03/25/25 01:09:07.455
  I0325 01:09:07.463390 25 namespace.go:463] Namespace "e2e-ns-tdjn7-4889" has []v1.FinalizerName{"kubernetes"}
  I0325 01:09:07.463521 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-81" for this suite. @ 03/25/25 01:09:07.467
  STEP: Destroying namespace "e2e-ns-tdjn7-4889" for this suite. @ 03/25/25 01:09:07.472
• [0.278 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 03/25/25 01:09:07.482
  I0325 01:09:07.483022 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename sysctl @ 03/25/25 01:09:07.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:09:07.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:09:07.528
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 03/25/25 01:09:07.53
  STEP: Watching for error events or started pod @ 03/25/25 01:09:07.541
  E0325 01:09:07.599103      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:08.599331      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 03/25/25 01:09:09.546
  E0325 01:09:09.599657      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:10.600001      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:11.600866      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 03/25/25 01:09:11.648
  STEP: Getting logs from the pod @ 03/25/25 01:09:11.648
  STEP: Checking that the sysctl is actually updated @ 03/25/25 01:09:11.659
  I0325 01:09:11.659270 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-785" for this suite. @ 03/25/25 01:09:11.663
• [4.326 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 03/25/25 01:09:11.808
  I0325 01:09:11.808887 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename projected @ 03/25/25 01:09:11.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:09:11.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:09:11.844
  STEP: Creating configMap with name projected-configmap-test-volume-map-2cc48079-4550-4bfa-ab98-b8836956ce13 @ 03/25/25 01:09:11.848
  STEP: Creating a pod to test consume configMaps @ 03/25/25 01:09:11.853
  E0325 01:09:12.601824      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:13.602180      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:14.603202      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:15.603543      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 01:09:15.945
  I0325 01:09:15.948320 25 output.go:207] Trying to get logs from node master-2 pod pod-projected-configmaps-47229385-8639-45cd-84e7-67c0ee413014 container agnhost-container: <nil>
  STEP: delete the pod @ 03/25/25 01:09:15.953
  I0325 01:09:15.969976 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5925" for this suite. @ 03/25/25 01:09:15.973
• [4.172 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 03/25/25 01:09:15.981
  I0325 01:09:15.982005 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename podtemplate @ 03/25/25 01:09:15.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:09:15.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:09:15.999
  I0325 01:09:16.050563 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3459" for this suite. @ 03/25/25 01:09:16.074
• [0.103 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 03/25/25 01:09:16.084
  I0325 01:09:16.084756 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename init-container @ 03/25/25 01:09:16.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:09:16.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:09:16.102
  STEP: creating the pod @ 03/25/25 01:09:16.105
  I0325 01:09:16.105779 25 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E0325 01:09:16.604065      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:17.604714      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:18.605594      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:09:19.562779 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2485" for this suite. @ 03/25/25 01:09:19.568
• [3.492 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 03/25/25 01:09:19.577
  I0325 01:09:19.577727 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename var-expansion @ 03/25/25 01:09:19.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:09:19.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:09:19.596
  E0325 01:09:19.605841      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:20.606526      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:21.606848      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:09:21.617690 25 delete.go:62] Deleting pod "var-expansion-515d6742-4788-47ea-b2dc-779565123948" in namespace "var-expansion-1710"
  I0325 01:09:21.626822 25 delete.go:70] Wait up to 5m0s for pod "var-expansion-515d6742-4788-47ea-b2dc-779565123948" to be fully deleted
  E0325 01:09:22.607951      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:23.608281      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:09:23.634890 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1710" for this suite. @ 03/25/25 01:09:23.638
• [4.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 03/25/25 01:09:23.646
  I0325 01:09:23.646869 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename emptydir @ 03/25/25 01:09:23.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:09:23.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:09:23.667
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 03/25/25 01:09:23.67
  E0325 01:09:24.608931      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:25.609079      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:26.610111      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:27.610796      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 01:09:27.7
  I0325 01:09:27.707298 25 output.go:207] Trying to get logs from node master-2 pod pod-e39e07a1-986d-491b-a722-3c8ee345c461 container test-container: <nil>
  STEP: delete the pod @ 03/25/25 01:09:27.713
  I0325 01:09:27.737139 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9271" for this suite. @ 03/25/25 01:09:27.742
• [4.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 03/25/25 01:09:27.752
  I0325 01:09:27.752105 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename var-expansion @ 03/25/25 01:09:27.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:09:27.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:09:27.776
  STEP: Creating a pod to test substitution in container's args @ 03/25/25 01:09:27.778
  E0325 01:09:28.610962      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:29.611195      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:30.611348      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:31.611916      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 01:09:31.806
  I0325 01:09:31.810961 25 output.go:207] Trying to get logs from node master-2 pod var-expansion-39842005-2829-4414-8bbd-dace207a4e51 container dapi-container: <nil>
  STEP: delete the pod @ 03/25/25 01:09:31.816
  I0325 01:09:31.837234 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5308" for this suite. @ 03/25/25 01:09:31.841
• [4.098 seconds]
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 03/25/25 01:09:31.849
  I0325 01:09:31.850484 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename downward-api @ 03/25/25 01:09:31.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:09:31.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:09:31.889
  STEP: Creating a pod to test downward API volume plugin @ 03/25/25 01:09:31.892
  E0325 01:09:32.611989      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:33.612972      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:34.613709      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:35.613848      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 01:09:35.914
  I0325 01:09:35.917597 25 output.go:207] Trying to get logs from node master-2 pod downwardapi-volume-02ee5338-a797-40aa-9fdb-0ac5392b3145 container client-container: <nil>
  STEP: delete the pod @ 03/25/25 01:09:35.924
  I0325 01:09:35.943051 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9534" for this suite. @ 03/25/25 01:09:35.948
• [4.108 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:560
  STEP: Creating a kubernetes client @ 03/25/25 01:09:35.958
  I0325 01:09:35.958446 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename svcaccounts @ 03/25/25 01:09:35.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:09:35.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:09:35.98
  I0325 01:09:35.997823 25 service_accounts.go:647] created pod
  E0325 01:09:36.614291      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:37.614991      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:38.615566      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:39.616029      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 01:09:40.014
  E0325 01:09:40.616898      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:41.617044      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:42.617399      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:43.617696      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:44.618101      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:45.618348      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:46.618563      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:47.618871      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:48.619147      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:49.619616      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:50.619893      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:51.620205      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:52.620504      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:53.620840      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:54.621362      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:55.621672      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:56.621960      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:57.622340      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:58.622661      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:09:59.622804      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:00.623131      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:01.623583      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:02.623962      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:03.624033      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:04.624239      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:05.624551      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:06.624973      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:07.625010      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:08.626084      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:09.626268      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:10:10.014634 25 service_accounts.go:653] polling logs
  I0325 01:10:10.022735 25 service_accounts.go:663] Pod logs: 
  I0325 01:09:36.854978       1 log.go:245] OK: Got token
  I0325 01:09:36.855093       1 log.go:245] validating with in-cluster discovery
  I0325 01:09:36.855583       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0325 01:09:36.855604       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-1901:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000327610), NotBefore:(*jwt.NumericDate)(0xc000327700), IssuedAt:(*jwt.NumericDate)(0xc000327620), ID:"39366bae-47d0-45f0-9785-21a697130eb3"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-1901", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"66b7c97d-1433-44d0-872f-13e3589a3c11"}}}
  I0325 01:09:36.928541       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0325 01:09:36.931752       1 log.go:245] OK: Validated signature on JWT
  I0325 01:09:36.931819       1 log.go:245] OK: Got valid claims from token!
  I0325 01:09:36.931838       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-1901:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00014d640), NotBefore:(*jwt.NumericDate)(0xc00014d668), IssuedAt:(*jwt.NumericDate)(0xc00014d648), ID:"39366bae-47d0-45f0-9785-21a697130eb3"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-1901", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"66b7c97d-1433-44d0-872f-13e3589a3c11"}}}

  I0325 01:10:10.022778 25 service_accounts.go:667] completed pod
  I0325 01:10:10.029954 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1901" for this suite. @ 03/25/25 01:10:10.037
• [34.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 03/25/25 01:10:10.046
  I0325 01:10:10.046932 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename kubelet-test @ 03/25/25 01:10:10.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:10:10.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:10:10.074
  STEP: Waiting for pod completion @ 03/25/25 01:10:10.087
  E0325 01:10:10.627300      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:11.628012      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:12.629479      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:13.630083      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:10:14.113130 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3517" for this suite. @ 03/25/25 01:10:14.118
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 03/25/25 01:10:14.126
  I0325 01:10:14.126315 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename security-context-test @ 03/25/25 01:10:14.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:10:14.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:10:14.147
  E0325 01:10:14.630236      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:15.630432      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:16.630541      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:17.630990      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:10:18.176998 25 security_context.go:538] Got logs for pod "busybox-privileged-false-65c40647-0acf-4434-8d69-bb2b2070e42e": "ip: RTNETLINK answers: Operation not permitted\n"
  I0325 01:10:18.177181 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4166" for this suite. @ 03/25/25 01:10:18.18
• [4.063 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 03/25/25 01:10:18.189
  I0325 01:10:18.189260 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename pods @ 03/25/25 01:10:18.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:10:18.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:10:18.212
  STEP: creating the pod @ 03/25/25 01:10:18.214
  STEP: setting up watch @ 03/25/25 01:10:18.215
  STEP: submitting the pod to kubernetes @ 03/25/25 01:10:18.318
  STEP: verifying the pod is in kubernetes @ 03/25/25 01:10:18.33
  STEP: verifying pod creation was observed @ 03/25/25 01:10:18.338
  E0325 01:10:18.632179      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:19.632282      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 03/25/25 01:10:20.35
  STEP: verifying pod deletion was observed @ 03/25/25 01:10:20.361
  E0325 01:10:20.632842      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:10:21.529771 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7575" for this suite. @ 03/25/25 01:10:21.534
• [3.355 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 03/25/25 01:10:21.544
  I0325 01:10:21.544909 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename container-probe @ 03/25/25 01:10:21.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:10:21.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:10:21.568
  STEP: Creating pod liveness-6aa3a5c2-6b45-4d1d-890b-0d446a2881f8 in namespace container-probe-710 @ 03/25/25 01:10:21.571
  E0325 01:10:21.633641      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:22.634116      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 03/25/25 01:10:23.6
  I0325 01:10:23.605030 25 container_probe.go:1749] Initial restart count of pod liveness-6aa3a5c2-6b45-4d1d-890b-0d446a2881f8 is 0
  I0325 01:10:23.607463 25 container_probe.go:1759] Get pod liveness-6aa3a5c2-6b45-4d1d-890b-0d446a2881f8 in namespace container-probe-710
  E0325 01:10:23.634709      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:24.634848      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:10:25.612313 25 container_probe.go:1759] Get pod liveness-6aa3a5c2-6b45-4d1d-890b-0d446a2881f8 in namespace container-probe-710
  E0325 01:10:25.635410      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:26.635750      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:10:27.617163 25 container_probe.go:1759] Get pod liveness-6aa3a5c2-6b45-4d1d-890b-0d446a2881f8 in namespace container-probe-710
  E0325 01:10:27.636363      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:28.637009      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:10:29.622033 25 container_probe.go:1759] Get pod liveness-6aa3a5c2-6b45-4d1d-890b-0d446a2881f8 in namespace container-probe-710
  E0325 01:10:29.637199      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:30.638195      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:10:31.625924 25 container_probe.go:1759] Get pod liveness-6aa3a5c2-6b45-4d1d-890b-0d446a2881f8 in namespace container-probe-710
  E0325 01:10:31.639098      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:32.639231      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:10:33.630707 25 container_probe.go:1759] Get pod liveness-6aa3a5c2-6b45-4d1d-890b-0d446a2881f8 in namespace container-probe-710
  E0325 01:10:33.639802      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:34.640628      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:10:35.636397 25 container_probe.go:1759] Get pod liveness-6aa3a5c2-6b45-4d1d-890b-0d446a2881f8 in namespace container-probe-710
  E0325 01:10:35.641538      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:36.641722      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:10:37.640647 25 container_probe.go:1759] Get pod liveness-6aa3a5c2-6b45-4d1d-890b-0d446a2881f8 in namespace container-probe-710
  E0325 01:10:37.641677      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:38.642033      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:39.642642      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:10:39.644604 25 container_probe.go:1759] Get pod liveness-6aa3a5c2-6b45-4d1d-890b-0d446a2881f8 in namespace container-probe-710
  E0325 01:10:40.642885      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:41.643337      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:10:41.648439 25 container_probe.go:1759] Get pod liveness-6aa3a5c2-6b45-4d1d-890b-0d446a2881f8 in namespace container-probe-710
  E0325 01:10:42.643465      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:43.643719      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:10:43.653943 25 container_probe.go:1759] Get pod liveness-6aa3a5c2-6b45-4d1d-890b-0d446a2881f8 in namespace container-probe-710
  I0325 01:10:43.653996 25 container_probe.go:1763] Restart count of pod container-probe-710/liveness-6aa3a5c2-6b45-4d1d-890b-0d446a2881f8 is now 1 (20.04891041s elapsed)
  STEP: deleting the pod @ 03/25/25 01:10:43.654
  I0325 01:10:43.670101 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-710" for this suite. @ 03/25/25 01:10:43.676
• [22.139 seconds]
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 03/25/25 01:10:43.684
  I0325 01:10:43.684078 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename containers @ 03/25/25 01:10:43.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:10:43.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:10:43.709
  E0325 01:10:44.644599      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:45.644897      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:10:45.836242 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3023" for this suite. @ 03/25/25 01:10:45.841
• [2.164 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 03/25/25 01:10:45.849
  I0325 01:10:45.849118 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename downward-api @ 03/25/25 01:10:45.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:10:45.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:10:45.879
  STEP: Creating a pod to test downward api env vars @ 03/25/25 01:10:45.882
  E0325 01:10:46.645066      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:47.646080      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:48.647110      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:49.647503      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 01:10:49.923
  I0325 01:10:49.926522 25 output.go:207] Trying to get logs from node master-2 pod downward-api-3af328ff-57d6-49cb-986d-9386f6422c29 container dapi-container: <nil>
  STEP: delete the pod @ 03/25/25 01:10:49.933
  I0325 01:10:49.952135 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6400" for this suite. @ 03/25/25 01:10:49.955
• [4.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 03/25/25 01:10:49.965
  I0325 01:10:49.965318 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename services @ 03/25/25 01:10:49.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:10:49.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:10:49.985
  STEP: creating service endpoint-test2 in namespace services-3960 @ 03/25/25 01:10:49.987
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3960 to expose endpoints map[] @ 03/25/25 01:10:50.003
  I0325 01:10:50.005665 25 service.go:4428] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E0325 01:10:50.648503      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:10:51.013925 25 service.go:4460] successfully validated that service endpoint-test2 in namespace services-3960 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-3960 @ 03/25/25 01:10:51.014
  E0325 01:10:51.648752      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:52.649608      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:53.650265      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:54.651290      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:55.651831      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:56.652065      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3960 to expose endpoints map[pod1:[80]] @ 03/25/25 01:10:57.049
  I0325 01:10:57.058284 25 service.go:4460] successfully validated that service endpoint-test2 in namespace services-3960 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 03/25/25 01:10:57.058
  I0325 01:10:57.058350 25 resource.go:361] Creating new exec pod
  E0325 01:10:57.652333      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:58.652606      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:10:59.653379      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:11:00.075092 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-3960 exec execpod4bwzn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0325 01:11:00.199394 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.233.52.95) 80 port [tcp/http] succeeded!\n"
  I0325 01:11:00.199455 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0325 01:11:00.199632 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-3960 exec execpod4bwzn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.52.95 80'
  I0325 01:11:00.316461 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.52.95 80\nConnection to 10.233.52.95 80 port [tcp/http] succeeded!\n"
  I0325 01:11:00.316529 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-3960 @ 03/25/25 01:11:00.316
  E0325 01:11:00.654379      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:01.654656      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3960 to expose endpoints map[pod1:[80] pod2:[80]] @ 03/25/25 01:11:02.334
  I0325 01:11:02.345057 25 service.go:4460] successfully validated that service endpoint-test2 in namespace services-3960 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 03/25/25 01:11:02.345
  E0325 01:11:02.655297      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:11:03.346289 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-3960 exec execpod4bwzn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0325 01:11:03.467644 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.233.52.95) 80 port [tcp/http] succeeded!\n"
  I0325 01:11:03.467793 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0325 01:11:03.468063 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-3960 exec execpod4bwzn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.52.95 80'
  I0325 01:11:03.581720 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.52.95 80\nConnection to 10.233.52.95 80 port [tcp/http] succeeded!\n"
  I0325 01:11:03.581796 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-3960 @ 03/25/25 01:11:03.581
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3960 to expose endpoints map[pod2:[80]] @ 03/25/25 01:11:03.597
  I0325 01:11:03.617095 25 service.go:4460] successfully validated that service endpoint-test2 in namespace services-3960 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 03/25/25 01:11:03.617
  E0325 01:11:03.655642      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:11:04.617759 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-3960 exec execpod4bwzn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0325 01:11:04.655820      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:11:04.739398 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.233.52.95) 80 port [tcp/http] succeeded!\n"
  I0325 01:11:04.739466 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0325 01:11:04.739786 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-3960 exec execpod4bwzn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.52.95 80'
  I0325 01:11:04.859577 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.52.95 80\nConnection to 10.233.52.95 80 port [tcp/http] succeeded!\n"
  I0325 01:11:04.859655 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-3960 @ 03/25/25 01:11:04.859
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3960 to expose endpoints map[] @ 03/25/25 01:11:04.883
  I0325 01:11:04.896596 25 service.go:4460] successfully validated that service endpoint-test2 in namespace services-3960 exposes endpoints map[]
  I0325 01:11:04.932919 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3960" for this suite. @ 03/25/25 01:11:04.942
• [14.985 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 03/25/25 01:11:04.95
  I0325 01:11:04.950438 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename projected @ 03/25/25 01:11:04.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:11:04.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:11:04.972
  STEP: Creating configMap with name configmap-projected-all-test-volume-df4f7224-ed32-4ce0-a0d1-d804c5ec8321 @ 03/25/25 01:11:04.974
  STEP: Creating secret with name secret-projected-all-test-volume-0d34de7f-74dd-45ab-a381-bf464f2e4fd1 @ 03/25/25 01:11:04.978
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 03/25/25 01:11:04.983
  W0325 01:11:04.994367      25 warnings.go:70] volume "podinfo" (Projected): overlapping paths: "podname" (DownwardAPI) with "podname" (DownwardAPI)
  E0325 01:11:05.657036      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:06.657553      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:07.657290      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:08.657774      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:09.658579      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:10.659005      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:11.659697      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:12.660205      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 01:11:13.022
  I0325 01:11:13.024981 25 output.go:207] Trying to get logs from node master-2 pod projected-volume-95cabe1d-27f9-4bb0-aabf-048d4995dd4c container projected-all-volume-test: <nil>
  STEP: delete the pod @ 03/25/25 01:11:13.03
  I0325 01:11:13.052795 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8854" for this suite. @ 03/25/25 01:11:13.057
• [8.115 seconds]
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 03/25/25 01:11:13.065
  I0325 01:11:13.065486 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename container-runtime @ 03/25/25 01:11:13.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:11:13.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:11:13.086
  STEP: create the container @ 03/25/25 01:11:13.089
  W0325 01:11:13.099475      25 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 03/25/25 01:11:13.1
  E0325 01:11:13.660541      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:14.661138      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:15.662131      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: get the container status @ 03/25/25 01:11:16.121
  STEP: the container should be terminated @ 03/25/25 01:11:16.124
  STEP: the termination message should be set @ 03/25/25 01:11:16.124
  I0325 01:11:16.124774 25 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 03/25/25 01:11:16.124
  I0325 01:11:16.145187 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8099" for this suite. @ 03/25/25 01:11:16.149
• [3.090 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 03/25/25 01:11:16.155
  I0325 01:11:16.155345 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename kubectl-logs @ 03/25/25 01:11:16.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:11:16.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:11:16.179
  STEP: creating a pod @ 03/25/25 01:11:16.182
  I0325 01:11:16.182294 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-logs-6332 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0325 01:11:16.257500 25 builder.go:146] stderr: ""
  I0325 01:11:16.257550 25 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 03/25/25 01:11:16.257
  I0325 01:11:16.257690 25 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0325 01:11:16.663093      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:17.663357      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:11:18.268721 25 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 03/25/25 01:11:18.268
  I0325 01:11:18.268856 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-logs-6332 logs logs-generator logs-generator'
  I0325 01:11:18.344905 25 builder.go:146] stderr: ""
  I0325 01:11:18.344969 25 builder.go:147] stdout: "I0325 01:11:17.069658       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/56gk 499\nI0325 01:11:17.269988       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/2qj 316\nI0325 01:11:17.470302       1 logs_generator.go:76] 2 GET /api/v1/namespaces/kube-system/pods/8xn 366\nI0325 01:11:17.670684       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/xf6 462\nI0325 01:11:17.869990       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/pjrb 338\nI0325 01:11:18.070376       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/gbbr 402\nI0325 01:11:18.270546       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/bpcw 557\n"
  STEP: limiting log lines @ 03/25/25 01:11:18.345
  I0325 01:11:18.345417 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-logs-6332 logs logs-generator logs-generator --tail=1'
  I0325 01:11:18.417070 25 builder.go:146] stderr: ""
  I0325 01:11:18.417264 25 builder.go:147] stdout: "I0325 01:11:18.270546       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/bpcw 557\n"
  I0325 01:11:18.417275 25 logs.go:180] got output "I0325 01:11:18.270546       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/bpcw 557\n"
  STEP: limiting log bytes @ 03/25/25 01:11:18.417
  I0325 01:11:18.417442 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-logs-6332 logs logs-generator logs-generator --limit-bytes=1'
  I0325 01:11:18.480795 25 builder.go:146] stderr: ""
  I0325 01:11:18.480861 25 builder.go:147] stdout: "I"
  I0325 01:11:18.480870 25 logs.go:186] got output "I"
  STEP: exposing timestamps @ 03/25/25 01:11:18.48
  I0325 01:11:18.481163 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-logs-6332 logs logs-generator logs-generator --tail=1 --timestamps'
  I0325 01:11:18.562155 25 builder.go:146] stderr: ""
  I0325 01:11:18.562219 25 builder.go:147] stdout: "2025-03-25T01:11:18.470004339Z I0325 01:11:18.469848       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/twm 505\n"
  I0325 01:11:18.562231 25 logs.go:192] got output "2025-03-25T01:11:18.470004339Z I0325 01:11:18.469848       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/twm 505\n"
  STEP: restricting to a time range @ 03/25/25 01:11:18.562
  E0325 01:11:18.663486      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:19.663800      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:20.664269      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:11:21.062497 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-logs-6332 logs logs-generator logs-generator --since=1s'
  I0325 01:11:21.131519 25 builder.go:146] stderr: ""
  I0325 01:11:21.131590 25 builder.go:147] stdout: "I0325 01:11:20.270539       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/txt2 243\nI0325 01:11:20.469789       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/vpht 456\nI0325 01:11:20.670161       1 logs_generator.go:76] 18 POST /api/v1/namespaces/ns/pods/mcml 509\nI0325 01:11:20.870540       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/96dp 350\nI0325 01:11:21.070870       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/ntxs 314\n"
  I0325 01:11:21.131642 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-logs-6332 logs logs-generator logs-generator --since=24h'
  I0325 01:11:21.195186 25 builder.go:146] stderr: ""
  I0325 01:11:21.195297 25 builder.go:147] stdout: "I0325 01:11:17.069658       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/56gk 499\nI0325 01:11:17.269988       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/2qj 316\nI0325 01:11:17.470302       1 logs_generator.go:76] 2 GET /api/v1/namespaces/kube-system/pods/8xn 366\nI0325 01:11:17.670684       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/xf6 462\nI0325 01:11:17.869990       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/pjrb 338\nI0325 01:11:18.070376       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/gbbr 402\nI0325 01:11:18.270546       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/bpcw 557\nI0325 01:11:18.469848       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/twm 505\nI0325 01:11:18.669977       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/jnc 207\nI0325 01:11:18.870356       1 logs_generator.go:76] 9 POST /api/v1/namespaces/ns/pods/wz9 292\nI0325 01:11:19.070714       1 logs_generator.go:76] 10 GET /api/v1/namespaces/ns/pods/8kb 264\nI0325 01:11:19.270060       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/kube-system/pods/snkf 234\nI0325 01:11:19.470377       1 logs_generator.go:76] 12 POST /api/v1/namespaces/default/pods/kkn8 371\nI0325 01:11:19.670704       1 logs_generator.go:76] 13 POST /api/v1/namespaces/default/pods/9lg4 536\nI0325 01:11:19.870061       1 logs_generator.go:76] 14 POST /api/v1/namespaces/default/pods/5nn 575\nI0325 01:11:20.072131       1 logs_generator.go:76] 15 POST /api/v1/namespaces/ns/pods/prlb 432\nI0325 01:11:20.270539       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/txt2 243\nI0325 01:11:20.469789       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/vpht 456\nI0325 01:11:20.670161       1 logs_generator.go:76] 18 POST /api/v1/namespaces/ns/pods/mcml 509\nI0325 01:11:20.870540       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/96dp 350\nI0325 01:11:21.070870       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/ntxs 314\n"
  I0325 01:11:21.195468 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-logs-6332 delete pod logs-generator'
  E0325 01:11:21.664494      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:11:21.707529 25 builder.go:146] stderr: ""
  I0325 01:11:21.707587 25 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0325 01:11:21.707743 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-6332" for this suite. @ 03/25/25 01:11:21.712
• [5.567 seconds]
------------------------------
SSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 03/25/25 01:11:21.722
  I0325 01:11:21.722583 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename init-container @ 03/25/25 01:11:21.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:11:21.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:11:21.747
  STEP: creating the pod @ 03/25/25 01:11:21.749
  I0325 01:11:21.749978 25 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E0325 01:11:22.664970      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:23.665543      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:24.666314      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:25.666520      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:26.666672      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:27.667255      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:28.667339      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:29.667539      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:30.667659      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:31.668038      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:32.668174      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:33.668542      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:34.669551      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:35.670092      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:36.670541      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:37.670787      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:38.671078      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:39.671470      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:40.671781      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:41.671929      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:42.672239      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:43.672384      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:44.673125      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:45.673204      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:46.673567      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:47.673646      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:48.673949      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:49.674041      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:50.674448      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:51.674734      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:52.674905      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:53.675311      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:54.675520      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:55.675828      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:56.676239      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:57.676595      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:58.676922      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:11:59.677029      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:00.677065      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:01.677364      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:02.678123      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:12:02.816635 25 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-4e10fcca-0760-4c5e-aa00-d706e0dc23bc", GenerateName:"", Namespace:"init-container-3701", SelfLink:"", UID:"a5766716-bcf6-488b-bbb2-b296882b4e40", ResourceVersion:"2821026", Generation:0, CreationTimestamp:time.Date(2025, time.March, 25, 1, 11, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"749946106"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.March, 25, 1, 11, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e69578), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.March, 25, 1, 12, 2, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e695a8), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-nt6sb", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc004ccace0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-nt6sb", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-nt6sb", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-nt6sb", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0020851c0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"master-2", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc000f32bd0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002085250)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002085270)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc002085278), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00208527c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc00093ece0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.March, 25, 1, 11, 22, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.March, 25, 1, 11, 21, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.March, 25, 1, 11, 21, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.March, 25, 1, 11, 21, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.March, 25, 1, 11, 21, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.20.10.146", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.20.10.146"}}, PodIP:"10.233.65.31", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.233.65.31"}}, StartTime:time.Date(2025, time.March, 25, 1, 11, 21, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0002f1ea0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0002f1f10)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://47cd75288c15943ba885ea8bdfec662f28dbbe784b7f16639752686e74c5c381", Started:(*bool)(0xc00208532a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-nt6sb", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc00093ed30)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004ccad40), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc00208533d), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-nt6sb", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc00093ed40)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004ccad20), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc0020852ff), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-nt6sb", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc00093ed00)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0325 01:12:02.817011 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3701" for this suite. @ 03/25/25 01:12:02.823
• [41.109 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 03/25/25 01:12:02.831
  I0325 01:12:02.831599 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename watch @ 03/25/25 01:12:02.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:12:02.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:12:02.863
  STEP: creating a watch on configmaps with label A @ 03/25/25 01:12:02.866
  STEP: creating a watch on configmaps with label B @ 03/25/25 01:12:02.869
  STEP: creating a watch on configmaps with label A or B @ 03/25/25 01:12:02.871
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 03/25/25 01:12:02.873
  I0325 01:12:02.878908 25 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7034  be08df5e-d1c1-4a17-bca9-ec5cc9169d46 2821033 0 2025-03-25 01:12:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-03-25 01:12:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0325 01:12:02.879132 25 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7034  be08df5e-d1c1-4a17-bca9-ec5cc9169d46 2821033 0 2025-03-25 01:12:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-03-25 01:12:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 03/25/25 01:12:02.879
  I0325 01:12:02.886011 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7034  be08df5e-d1c1-4a17-bca9-ec5cc9169d46 2821034 0 2025-03-25 01:12:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-03-25 01:12:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0325 01:12:02.886113 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7034  be08df5e-d1c1-4a17-bca9-ec5cc9169d46 2821034 0 2025-03-25 01:12:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-03-25 01:12:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 03/25/25 01:12:02.886
  I0325 01:12:02.894211 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7034  be08df5e-d1c1-4a17-bca9-ec5cc9169d46 2821035 0 2025-03-25 01:12:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-03-25 01:12:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0325 01:12:02.894295 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7034  be08df5e-d1c1-4a17-bca9-ec5cc9169d46 2821035 0 2025-03-25 01:12:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-03-25 01:12:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 03/25/25 01:12:02.894
  I0325 01:12:02.900034 25 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7034  be08df5e-d1c1-4a17-bca9-ec5cc9169d46 2821036 0 2025-03-25 01:12:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-03-25 01:12:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0325 01:12:02.900074 25 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7034  be08df5e-d1c1-4a17-bca9-ec5cc9169d46 2821036 0 2025-03-25 01:12:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-03-25 01:12:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 03/25/25 01:12:02.9
  I0325 01:12:02.906082 25 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7034  7eb3c7e0-9d8f-41a4-accc-efa26caeef60 2821037 0 2025-03-25 01:12:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-03-25 01:12:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0325 01:12:02.906249 25 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7034  7eb3c7e0-9d8f-41a4-accc-efa26caeef60 2821037 0 2025-03-25 01:12:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-03-25 01:12:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0325 01:12:03.678265      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:04.678477      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:05.679411      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:06.679654      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:07.679954      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:08.680197      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:09.680240      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:10.680351      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:11.680938      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:12.681066      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 03/25/25 01:12:12.907
  I0325 01:12:12.915994 25 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7034  7eb3c7e0-9d8f-41a4-accc-efa26caeef60 2821105 0 2025-03-25 01:12:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-03-25 01:12:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0325 01:12:12.916362 25 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7034  7eb3c7e0-9d8f-41a4-accc-efa26caeef60 2821105 0 2025-03-25 01:12:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-03-25 01:12:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0325 01:12:13.681337      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:14.682046      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:15.682164      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:16.682575      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:17.682809      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:18.683032      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:19.683122      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:20.683245      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:21.683946      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:22.684061      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:12:22.917642 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7034" for this suite. @ 03/25/25 01:12:22.923
• [20.100 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 03/25/25 01:12:22.933
  I0325 01:12:22.933235 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename configmap @ 03/25/25 01:12:22.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:12:22.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:12:22.967
  STEP: Creating configMap with name configmap-test-volume-528b0278-bde3-4434-a2da-41fb94acbe4e @ 03/25/25 01:12:22.97
  STEP: Creating a pod to test consume configMaps @ 03/25/25 01:12:22.977
  E0325 01:12:23.685044      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:24.685177      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:25.685315      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:26.686319      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 01:12:27.004
  I0325 01:12:27.008304 25 output.go:207] Trying to get logs from node master-2 pod pod-configmaps-bf387d64-c54c-4b7e-a7ba-5029570d58a8 container agnhost-container: <nil>
  STEP: delete the pod @ 03/25/25 01:12:27.014
  I0325 01:12:27.033126 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1017" for this suite. @ 03/25/25 01:12:27.037
• [4.116 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1621
  STEP: Creating a kubernetes client @ 03/25/25 01:12:27.049
  I0325 01:12:27.049808 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename kubectl @ 03/25/25 01:12:27.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:12:27.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:12:27.074
  STEP: creating the pod @ 03/25/25 01:12:27.077
  I0325 01:12:27.077353 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-6365 create -f -'
  I0325 01:12:27.204786 25 builder.go:146] stderr: ""
  I0325 01:12:27.204861 25 builder.go:147] stdout: "pod/pause created\n"
  E0325 01:12:27.689035      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:28.689133      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 03/25/25 01:12:29.221
  I0325 01:12:29.221796 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-6365 label pods pause testing-label=testing-label-value'
  I0325 01:12:29.288987 25 builder.go:146] stderr: ""
  I0325 01:12:29.289038 25 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 03/25/25 01:12:29.289
  I0325 01:12:29.289126 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-6365 get pod pause -L testing-label'
  I0325 01:12:29.354981 25 builder.go:146] stderr: ""
  I0325 01:12:29.355055 25 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 03/25/25 01:12:29.355
  I0325 01:12:29.355139 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-6365 label pods pause testing-label-'
  I0325 01:12:29.422431 25 builder.go:146] stderr: ""
  I0325 01:12:29.422488 25 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 03/25/25 01:12:29.422
  I0325 01:12:29.422585 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-6365 get pod pause -L testing-label'
  I0325 01:12:29.476054 25 builder.go:146] stderr: ""
  I0325 01:12:29.476105 25 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 03/25/25 01:12:29.476
  I0325 01:12:29.476347 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-6365 delete --grace-period=0 --force -f -'
  I0325 01:12:29.549455 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0325 01:12:29.549579 25 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0325 01:12:29.550096 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-6365 get rc,svc -l name=pause --no-headers'
  I0325 01:12:29.609004 25 builder.go:146] stderr: "No resources found in kubectl-6365 namespace.\n"
  I0325 01:12:29.609075 25 builder.go:147] stdout: ""
  I0325 01:12:29.609157 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-6365 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0325 01:12:29.664685 25 builder.go:146] stderr: ""
  I0325 01:12:29.664841 25 builder.go:147] stdout: ""
  I0325 01:12:29.665007 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6365" for this suite. @ 03/25/25 01:12:29.67
• [2.629 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 03/25/25 01:12:29.678
  I0325 01:12:29.678492 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename container-runtime @ 03/25/25 01:12:29.679
  E0325 01:12:29.689136      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:12:29.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:12:29.697
  STEP: create the container @ 03/25/25 01:12:29.7
  W0325 01:12:29.714616      25 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 03/25/25 01:12:29.714
  E0325 01:12:30.690113      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:31.690347      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:32.690364      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: get the container status @ 03/25/25 01:12:32.742
  STEP: the container should be terminated @ 03/25/25 01:12:32.744
  STEP: the termination message should be set @ 03/25/25 01:12:32.744
  I0325 01:12:32.744944 25 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 03/25/25 01:12:32.744
  I0325 01:12:32.763619 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3180" for this suite. @ 03/25/25 01:12:32.767
• [3.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:878
  STEP: Creating a kubernetes client @ 03/25/25 01:12:32.776
  I0325 01:12:32.776774 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename kubectl @ 03/25/25 01:12:32.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:12:32.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:12:32.799
  STEP: validating api versions @ 03/25/25 01:12:32.801
  I0325 01:12:32.802107 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-44 api-versions'
  I0325 01:12:32.858033 25 builder.go:146] stderr: ""
  I0325 01:12:32.858234 25 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncilium.io/v2\ncilium.io/v2alpha1\ncoordination.k8s.io/v1\ncore.strimzi.io/v1beta2\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nextensions.istio.io/v1alpha1\nflowcontrol.apiserver.k8s.io/v1\nkafka.strimzi.io/v1alpha1\nkafka.strimzi.io/v1beta1\nkafka.strimzi.io/v1beta2\nnetworking.istio.io/v1\nnetworking.istio.io/v1alpha3\nnetworking.istio.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nsecurity.istio.io/v1\nsecurity.istio.io/v1beta1\nstorage.k8s.io/v1\ntelemetry.istio.io/v1\ntelemetry.istio.io/v1alpha1\nv1\n"
  I0325 01:12:32.859076 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-44" for this suite. @ 03/25/25 01:12:32.868
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 03/25/25 01:12:32.881
  I0325 01:12:32.881078 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename deployment @ 03/25/25 01:12:32.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:12:32.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:12:32.909
  STEP: creating a Deployment @ 03/25/25 01:12:32.915
  STEP: waiting for Deployment to be created @ 03/25/25 01:12:32.922
  STEP: waiting for all Replicas to be Ready @ 03/25/25 01:12:32.924
  I0325 01:12:32.926053 25 deployment.go:246] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0325 01:12:32.926086 25 deployment.go:248] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0325 01:12:32.951153 25 deployment.go:246] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0325 01:12:32.951216 25 deployment.go:248] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0325 01:12:32.964727 25 deployment.go:246] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0325 01:12:32.964770 25 deployment.go:248] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0325 01:12:33.003717 25 deployment.go:246] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0325 01:12:33.003767 25 deployment.go:248] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0325 01:12:33.690539      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:12:33.920293 25 deployment.go:246] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0325 01:12:33.920353 25 deployment.go:248] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0325 01:12:34.350720 25 deployment.go:248] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 03/25/25 01:12:34.35
  I0325 01:12:34.362812 25 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 03/25/25 01:12:34.362
  I0325 01:12:34.364522 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 0
  I0325 01:12:34.364544 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 0
  I0325 01:12:34.365718 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 0
  I0325 01:12:34.365747 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 0
  I0325 01:12:34.365756 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 0
  I0325 01:12:34.365761 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 0
  I0325 01:12:34.365771 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 0
  I0325 01:12:34.365778 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 0
  I0325 01:12:34.366142 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 1
  I0325 01:12:34.366200 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 1
  I0325 01:12:34.366214 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 2
  I0325 01:12:34.366226 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 2
  I0325 01:12:34.366255 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 2
  I0325 01:12:34.366266 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 2
  I0325 01:12:34.381511 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 2
  I0325 01:12:34.381538 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 2
  I0325 01:12:34.407631 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 2
  I0325 01:12:34.407669 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 2
  I0325 01:12:34.422689 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 1
  I0325 01:12:34.422724 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 1
  I0325 01:12:34.434258 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 1
  I0325 01:12:34.434290 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 1
  E0325 01:12:34.690958      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:35.691279      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:12:35.942670 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 2
  I0325 01:12:35.942720 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 2
  I0325 01:12:36.014700 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 1
  STEP: listing Deployments @ 03/25/25 01:12:36.014
  I0325 01:12:36.017829 25 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 03/25/25 01:12:36.017
  I0325 01:12:36.033549 25 deployment.go:360] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 03/25/25 01:12:36.033
  I0325 01:12:36.039418 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0325 01:12:36.059112 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0325 01:12:36.090262 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0325 01:12:36.116749 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0325 01:12:36.130165 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0325 01:12:36.692034      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:12:36.969082 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0325 01:12:37.031550 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0325 01:12:37.047481 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0325 01:12:37.692415      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:12:38.390532 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 03/25/25 01:12:38.425
  STEP: fetching the DeploymentStatus @ 03/25/25 01:12:38.445
  I0325 01:12:38.457040 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 1
  I0325 01:12:38.457173 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 1
  I0325 01:12:38.457184 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 1
  I0325 01:12:38.457269 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 1
  I0325 01:12:38.457289 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 1
  I0325 01:12:38.457296 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 2
  I0325 01:12:38.457448 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 2
  I0325 01:12:38.457465 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 2
  I0325 01:12:38.457475 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-5371 with ReadyReplicas 3
  STEP: deleting the Deployment @ 03/25/25 01:12:38.457
  I0325 01:12:38.466752 25 deployment.go:475] observed event type MODIFIED
  I0325 01:12:38.466795 25 deployment.go:475] observed event type MODIFIED
  I0325 01:12:38.466807 25 deployment.go:475] observed event type MODIFIED
  I0325 01:12:38.466955 25 deployment.go:475] observed event type MODIFIED
  I0325 01:12:38.466966 25 deployment.go:475] observed event type MODIFIED
  I0325 01:12:38.467118 25 deployment.go:475] observed event type MODIFIED
  I0325 01:12:38.467128 25 deployment.go:475] observed event type MODIFIED
  I0325 01:12:38.467142 25 deployment.go:475] observed event type MODIFIED
  I0325 01:12:38.467259 25 deployment.go:475] observed event type MODIFIED
  I0325 01:12:38.467267 25 deployment.go:475] observed event type MODIFIED
  I0325 01:12:38.467288 25 deployment.go:475] observed event type MODIFIED
  I0325 01:12:38.467390 25 deployment.go:475] observed event type MODIFIED
  I0325 01:12:38.470213 25 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0325 01:12:38.474519 25 deployment.go:657] ReplicaSet "test-deployment-564597bcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-564597bcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5371",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ba45b79c-2cee-4937-bbd1-8886eedcf8d5",
      ResourceVersion: (string) (len=7) "2821433",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878461952,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "6c5f638e-bfd3-4349-8dde-6f44672a0fb0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878461955,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 36 63 35 66  36 33 38 65 2d 62 66 64  |":\"6c5f638e-bfd|
              00000130  33 2d 34 33 34 39 2d 38  64 64 65 2d 36 66 34 34  |3-4349-8dde-6f44|
              00000140  36 37 32 61 30 66 62 30  5c 22 7d 22 3a 7b 7d 7d  |672a0fb0\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878461956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0325 01:12:38.479696 25 deployment.go:657] ReplicaSet "test-deployment-79899bcfcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-79899bcfcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5371",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "232c28d5-4ebb-44a4-8c3e-264c64b1c405",
      ResourceVersion: (string) (len=7) "2821530",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878461956,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "6c5f638e-bfd3-4349-8dde-6f44672a0fb0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878461956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 36 63 35 66  36 33 38 65 2d 62 66 64  |":\"6c5f638e-bfd|
              00000130  33 2d 34 33 34 39 2d 38  64 64 65 2d 36 66 34 34  |3-4349-8dde-6f44|
              00000140  36 37 32 61 30 66 62 30  5c 22 7d 22 3a 7b 7d 7d  |672a0fb0\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878461958,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0325 01:12:38.484076 25 deployment.go:669] pod: "test-deployment-79899bcfcc-rgvqf":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-rgvqf",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-5371",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ef1f2651-0c4a-4b9e-a2e1-70e4115aaf2a",
      ResourceVersion: (string) (len=7) "2821485",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878461956,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "232c28d5-4ebb-44a4-8c3e-264c64b1c405",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878461956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  32 33 32 63 32 38 64 35  |uid\":\"232c28d5|
              000000a0  2d 34 65 62 62 2d 34 34  61 34 2d 38 63 33 65 2d  |-4ebb-44a4-8c3e-|
              000000b0  32 36 34 63 36 34 62 31  63 34 30 35 5c 22 7d 22  |264c64b1c405\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878461956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  35 5c 22 7d 22 3a 7b 22  |.233.65.5\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-whfvl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-whfvl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878461956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878461956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878461956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878461956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878461956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.10.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.10.146"
        }
      },
      PodIP: (string) (len=11) "10.233.65.5",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.233.65.5"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878461956,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878461956,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9aac1113749e31e5a4260f87f35f955f36c68490ddeb706699a236e22c62554a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-whfvl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0325 01:12:38.485930 25 deployment.go:669] pod: "test-deployment-79899bcfcc-tbrcc":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-tbrcc",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-5371",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e7b12576-325c-45a4-a632-9ef553acf9ad",
      ResourceVersion: (string) (len=7) "2821529",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878461956,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "232c28d5-4ebb-44a4-8c3e-264c64b1c405",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878461956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  32 33 32 63 32 38 64 35  |uid\":\"232c28d5|
              000000a0  2d 34 65 62 62 2d 34 34  61 34 2d 38 63 33 65 2d  |-4ebb-44a4-8c3e-|
              000000b0  32 36 34 63 36 34 62 31  63 34 30 35 5c 22 7d 22  |264c64b1c405\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878461958,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 37 2e  32 32 33 5c 22 7d 22 3a  |.233.67.223\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dq6q9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dq6q9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878461958,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878461957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878461958,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878461958,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878461956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.10.227",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.10.227"
        }
      },
      PodIP: (string) (len=13) "10.233.67.223",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.67.223"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878461957,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878461957,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://314a2367109f235a6fe0ed0e681b8eb5b9ea5420e3df23913fc501b233989f75",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dq6q9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0325 01:12:38.487466 25 deployment.go:657] ReplicaSet "test-deployment-f78d658f9":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-f78d658f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5371",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "62598f05-5434-4370-99bc-9ed964fa5fe7",
      ResourceVersion: (string) (len=7) "2821540",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878461954,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "6c5f638e-bfd3-4349-8dde-6f44672a0fb0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878461958,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 36 63 35 66  36 33 38 65 2d 62 66 64  |":\"6c5f638e-bfd|
              00000130  33 2d 34 33 34 39 2d 38  64 64 65 2d 36 66 34 34  |3-4349-8dde-6f44|
              00000140  36 37 32 61 30 66 62 30  5c 22 7d 22 3a 7b 7d 7d  |672a0fb0\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878461958,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0325 01:12:38.497109 25 deployment.go:669] pod: "test-deployment-f78d658f9-5ffdt":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-f78d658f9-5ffdt",
      GenerateName: (string) (len=26) "test-deployment-f78d658f9-",
      Namespace: (string) (len=15) "deployment-5371",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "95e2c073-309b-4d1f-8f51-18d396984a25",
      ResourceVersion: (string) (len=7) "2821536",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878461954,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878461960,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-f78d658f9",
          UID: (types.UID) (len=36) "62598f05-5434-4370-99bc-9ed964fa5fe7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878461954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  36 32 35 39 38 66 30 35  |uid\":\"62598f05|
              000000a0  2d 35 34 33 34 2d 34 33  37 30 2d 39 39 62 63 2d  |-5434-4370-99bc-|
              000000b0  39 65 64 39 36 34 66 61  35 66 65 37 5c 22 7d 22  |9ed964fa5fe7\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878461955,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  33 37 5c 22 7d 22 3a 7b  |.233.65.37\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5hwps",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5hwps",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878461955,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878461954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878461955,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878461955,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878461954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.10.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.10.146"
        }
      },
      PodIP: (string) (len=12) "10.233.65.37",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.37"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878461954,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878461955,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=71) "sha256:873ed75102791e5b0b8a7fcd41606c92fcec98d56d05ead4ac5131650004c136",
          ContainerID: (string) (len=77) "containerd://fb72d3e76a3b03b2763d294c7769fc1b18cfeb3bfdf7cd2eff689b679f25f95d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5hwps",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0325 01:12:38.498171 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5371" for this suite. @ 03/25/25 01:12:38.504
• [5.635 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 03/25/25 01:12:38.516
  I0325 01:12:38.516108 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename emptydir @ 03/25/25 01:12:38.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:12:38.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:12:38.537
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 03/25/25 01:12:38.54
  E0325 01:12:38.692676      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:39.692833      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:40.693037      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:41.693444      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 01:12:42.579
  I0325 01:12:42.582453 25 output.go:207] Trying to get logs from node master-2 pod pod-0704277a-1eb9-4614-a366-47dad9c8679b container test-container: <nil>
  STEP: delete the pod @ 03/25/25 01:12:42.588
  I0325 01:12:42.606421 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7546" for this suite. @ 03/25/25 01:12:42.61
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 03/25/25 01:12:42.62
  I0325 01:12:42.620778 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename services @ 03/25/25 01:12:42.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:12:42.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:12:42.65
  STEP: creating service in namespace services-5825 @ 03/25/25 01:12:42.654
  STEP: creating service affinity-clusterip-transition in namespace services-5825 @ 03/25/25 01:12:42.654
  STEP: creating replication controller affinity-clusterip-transition in namespace services-5825 @ 03/25/25 01:12:42.669
  I0325 01:12:42.680942      25 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-5825, replica count: 3
  E0325 01:12:42.693830      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:43.694732      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:44.694789      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:45.695098      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:12:45.732135      25 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 0 running, 3 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0325 01:12:46.697560      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:47.697782      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:48.698130      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:12:48.733098      25 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0325 01:12:48.739481 25 resource.go:361] Creating new exec pod
  E0325 01:12:49.698619      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:50.698974      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:51.699389      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:12:51.768828 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-5825 exec execpod-affinity7h49h -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0325 01:12:51.900037 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.233.56.188) 80 port [tcp/http] succeeded!\n"
  I0325 01:12:51.900134 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0325 01:12:51.900313 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-5825 exec execpod-affinity7h49h -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.56.188 80'
  I0325 01:12:52.010167 25 builder.go:146] stderr: "+ + ncecho -v hostName -t -w\n 2 10.233.56.188 80\nConnection to 10.233.56.188 80 port [tcp/http] succeeded!\n"
  I0325 01:12:52.010221 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0325 01:12:52.024554 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-5825 exec execpod-affinity7h49h -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.56.188:80/ ; done'
  I0325 01:12:52.238601 25 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.188:80/\n"
  I0325 01:12:52.238684 25 builder.go:147] stdout: "\naffinity-clusterip-transition-n8pkd\naffinity-clusterip-transition-n8pkd\naffinity-clusterip-transition-7jh4r\naffinity-clusterip-transition-mqnpq\naffinity-clusterip-transition-7jh4r\naffinity-clusterip-transition-7jh4r\naffinity-clusterip-transition-7jh4r\naffinity-clusterip-transition-mqnpq\naffinity-clusterip-transition-mqnpq\naffinity-clusterip-transition-mqnpq\naffinity-clusterip-transition-7jh4r\naffinity-clusterip-transition-7jh4r\naffinity-clusterip-transition-n8pkd\naffinity-clusterip-transition-mqnpq\naffinity-clusterip-transition-mqnpq\naffinity-clusterip-transition-7jh4r"
  I0325 01:12:52.238703 25 service.go:242] Received response from host: affinity-clusterip-transition-n8pkd
  I0325 01:12:52.238718 25 service.go:242] Received response from host: affinity-clusterip-transition-n8pkd
  I0325 01:12:52.238725 25 service.go:242] Received response from host: affinity-clusterip-transition-7jh4r
  I0325 01:12:52.238730 25 service.go:242] Received response from host: affinity-clusterip-transition-mqnpq
  I0325 01:12:52.238736 25 service.go:242] Received response from host: affinity-clusterip-transition-7jh4r
  I0325 01:12:52.238741 25 service.go:242] Received response from host: affinity-clusterip-transition-7jh4r
  I0325 01:12:52.238746 25 service.go:242] Received response from host: affinity-clusterip-transition-7jh4r
  I0325 01:12:52.238751 25 service.go:242] Received response from host: affinity-clusterip-transition-mqnpq
  I0325 01:12:52.238757 25 service.go:242] Received response from host: affinity-clusterip-transition-mqnpq
  I0325 01:12:52.238761 25 service.go:242] Received response from host: affinity-clusterip-transition-mqnpq
  I0325 01:12:52.238766 25 service.go:242] Received response from host: affinity-clusterip-transition-7jh4r
  I0325 01:12:52.238770 25 service.go:242] Received response from host: affinity-clusterip-transition-7jh4r
  I0325 01:12:52.238785 25 service.go:242] Received response from host: affinity-clusterip-transition-n8pkd
  I0325 01:12:52.238795 25 service.go:242] Received response from host: affinity-clusterip-transition-mqnpq
  I0325 01:12:52.238799 25 service.go:242] Received response from host: affinity-clusterip-transition-mqnpq
  I0325 01:12:52.238804 25 service.go:242] Received response from host: affinity-clusterip-transition-7jh4r
  I0325 01:12:52.249983 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-5825 exec execpod-affinity7h49h -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.56.188:80/ ; done'
  I0325 01:12:52.452143 25 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.188:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.56.188:80/\n"
  I0325 01:12:52.452208 25 builder.go:147] stdout: "\naffinity-clusterip-transition-n8pkd\naffinity-clusterip-transition-n8pkd\naffinity-clusterip-transition-n8pkd\naffinity-clusterip-transition-n8pkd\naffinity-clusterip-transition-n8pkd\naffinity-clusterip-transition-n8pkd\naffinity-clusterip-transition-n8pkd\naffinity-clusterip-transition-n8pkd\naffinity-clusterip-transition-n8pkd\naffinity-clusterip-transition-n8pkd\naffinity-clusterip-transition-n8pkd\naffinity-clusterip-transition-n8pkd\naffinity-clusterip-transition-n8pkd\naffinity-clusterip-transition-n8pkd\naffinity-clusterip-transition-n8pkd\naffinity-clusterip-transition-n8pkd"
  I0325 01:12:52.452227 25 service.go:242] Received response from host: affinity-clusterip-transition-n8pkd
  I0325 01:12:52.452238 25 service.go:242] Received response from host: affinity-clusterip-transition-n8pkd
  I0325 01:12:52.452248 25 service.go:242] Received response from host: affinity-clusterip-transition-n8pkd
  I0325 01:12:52.452255 25 service.go:242] Received response from host: affinity-clusterip-transition-n8pkd
  I0325 01:12:52.452264 25 service.go:242] Received response from host: affinity-clusterip-transition-n8pkd
  I0325 01:12:52.452272 25 service.go:242] Received response from host: affinity-clusterip-transition-n8pkd
  I0325 01:12:52.452279 25 service.go:242] Received response from host: affinity-clusterip-transition-n8pkd
  I0325 01:12:52.452287 25 service.go:242] Received response from host: affinity-clusterip-transition-n8pkd
  I0325 01:12:52.452296 25 service.go:242] Received response from host: affinity-clusterip-transition-n8pkd
  I0325 01:12:52.452310 25 service.go:242] Received response from host: affinity-clusterip-transition-n8pkd
  I0325 01:12:52.452334 25 service.go:242] Received response from host: affinity-clusterip-transition-n8pkd
  I0325 01:12:52.452342 25 service.go:242] Received response from host: affinity-clusterip-transition-n8pkd
  I0325 01:12:52.452351 25 service.go:242] Received response from host: affinity-clusterip-transition-n8pkd
  I0325 01:12:52.452362 25 service.go:242] Received response from host: affinity-clusterip-transition-n8pkd
  I0325 01:12:52.452369 25 service.go:242] Received response from host: affinity-clusterip-transition-n8pkd
  I0325 01:12:52.452375 25 service.go:242] Received response from host: affinity-clusterip-transition-n8pkd
  I0325 01:12:52.452503 25 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-5825, will wait for the garbage collector to delete the pods @ 03/25/25 01:12:52.467
  I0325 01:12:52.530327 25 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 8.844943ms
  I0325 01:12:52.630955 25 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 100.61297ms
  E0325 01:12:52.700468      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:53.700871      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:54.701793      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:12:55.449672 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5825" for this suite. @ 03/25/25 01:12:55.456
• [12.845 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:678
  STEP: Creating a kubernetes client @ 03/25/25 01:12:55.466
  I0325 01:12:55.466196 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename svcaccounts @ 03/25/25 01:12:55.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:12:55.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:12:55.488
  STEP: creating a ServiceAccount @ 03/25/25 01:12:55.491
  STEP: watching for the ServiceAccount to be added @ 03/25/25 01:12:55.507
  STEP: patching the ServiceAccount @ 03/25/25 01:12:55.511
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 03/25/25 01:12:55.517
  STEP: deleting the ServiceAccount @ 03/25/25 01:12:55.519
  I0325 01:12:55.533594 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5623" for this suite. @ 03/25/25 01:12:55.555
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 03/25/25 01:12:55.564
  I0325 01:12:55.564789 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename aggregateddiscovery @ 03/25/25 01:12:55.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:12:55.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:12:55.595
  I0325 01:12:55.598297 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  E0325 01:12:55.702264      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:56.703109      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:57.703183      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:58.703787      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:12:59.704028      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:00.704276      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:01.704720      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:02.705159      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:13:03.664498 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-643" for this suite. @ 03/25/25 01:13:03.67
• [8.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 03/25/25 01:13:03.682
  I0325 01:13:03.682294 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename projected @ 03/25/25 01:13:03.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:13:03.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:13:03.703
  E0325 01:13:03.705126      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a pod to test downward API volume plugin @ 03/25/25 01:13:03.707
  E0325 01:13:04.706197      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:05.706444      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:06.708343      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:07.706885      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 01:13:07.729
  I0325 01:13:07.733372 25 output.go:207] Trying to get logs from node master-2 pod downwardapi-volume-0fa64759-4db3-4c4f-9d49-d9dd4989beaa container client-container: <nil>
  STEP: delete the pod @ 03/25/25 01:13:07.739
  I0325 01:13:07.756036 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9169" for this suite. @ 03/25/25 01:13:07.764
• [4.089 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 03/25/25 01:13:07.771
  I0325 01:13:07.771702 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename downward-api @ 03/25/25 01:13:07.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:13:07.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:13:07.792
  STEP: Creating the pod @ 03/25/25 01:13:07.794
  E0325 01:13:08.706994      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:09.707160      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:13:10.342328 25 pod_client.go:173] Successfully updated pod "labelsupdate465cf80e-c1fc-41e4-85d6-60d3830fa574"
  E0325 01:13:10.707402      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:11.707741      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:13:12.364080 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-214" for this suite. @ 03/25/25 01:13:12.37
• [4.606 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 03/25/25 01:13:12.377
  I0325 01:13:12.377835 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename field-validation @ 03/25/25 01:13:12.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:13:12.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:13:12.401
  I0325 01:13:12.403667 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  E0325 01:13:12.708276      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:13.708366      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:14.709552      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:15.710129      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:16.711018      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:17.711621      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:18.712286      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:19.712422      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  W0325 01:13:19.950020      25 warnings.go:70] unknown field "alpha"
  W0325 01:13:19.950055      25 warnings.go:70] unknown field "beta"
  W0325 01:13:19.950060      25 warnings.go:70] unknown field "delta"
  W0325 01:13:19.950064      25 warnings.go:70] unknown field "epsilon"
  W0325 01:13:19.950068      25 warnings.go:70] unknown field "gamma"
  I0325 01:13:20.495447 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3917" for this suite. @ 03/25/25 01:13:20.499
• [8.131 seconds]
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 03/25/25 01:13:20.508
  I0325 01:13:20.508728 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename projected @ 03/25/25 01:13:20.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:13:20.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:13:20.53
  STEP: Creating the pod @ 03/25/25 01:13:20.532
  E0325 01:13:20.712482      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:21.713013      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:22.713413      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:13:23.081944 25 pod_client.go:173] Successfully updated pod "labelsupdate21dc3a0c-eb94-4769-9050-3053ddd97569"
  E0325 01:13:23.713945      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:24.714582      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:13:25.095984 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-248" for this suite. @ 03/25/25 01:13:25.1
• [4.599 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1687
  STEP: Creating a kubernetes client @ 03/25/25 01:13:25.11
  I0325 01:13:25.110119 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename kubectl @ 03/25/25 01:13:25.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:13:25.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:13:25.134
  STEP: creating Agnhost RC @ 03/25/25 01:13:25.137
  I0325 01:13:25.137482 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-8432 create -f -'
  I0325 01:13:25.256623 25 builder.go:146] stderr: ""
  I0325 01:13:25.256673 25 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 03/25/25 01:13:25.256
  E0325 01:13:25.715264      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:13:26.262859 25 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0325 01:13:26.262901 25 framework.go:733] Found 0 / 1
  E0325 01:13:26.715368      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:13:27.262575 25 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0325 01:13:27.262619 25 framework.go:733] Found 1 / 1
  I0325 01:13:27.262641 25 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 03/25/25 01:13:27.262
  I0325 01:13:27.266311 25 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0325 01:13:27.266348 25 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0325 01:13:27.266394 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-8432 patch pod agnhost-primary-dthq7 -p {"metadata":{"annotations":{"x":"y"}}}'
  I0325 01:13:27.343403 25 builder.go:146] stderr: ""
  I0325 01:13:27.343455 25 builder.go:147] stdout: "pod/agnhost-primary-dthq7 patched\n"
  STEP: checking annotations @ 03/25/25 01:13:27.343
  I0325 01:13:27.347359 25 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0325 01:13:27.347400 25 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0325 01:13:27.347739 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8432" for this suite. @ 03/25/25 01:13:27.352
• [2.254 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 03/25/25 01:13:27.364
  I0325 01:13:27.364421 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename webhook @ 03/25/25 01:13:27.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:13:27.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:13:27.386
  STEP: Setting up server cert @ 03/25/25 01:13:27.494
  E0325 01:13:27.715836      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/25/25 01:13:27.772
  STEP: Deploying the webhook pod @ 03/25/25 01:13:27.781
  STEP: Wait for the deployment to be ready @ 03/25/25 01:13:27.795
  I0325 01:13:27.805622 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0325 01:13:28.716687      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:29.716526      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/25/25 01:13:29.819
  STEP: Verifying the service has paired with the endpoint @ 03/25/25 01:13:29.831
  E0325 01:13:30.717040      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:13:30.832333 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 03/25/25 01:13:30.84
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 03/25/25 01:13:30.865
  STEP: Creating a dummy validating-webhook-configuration object @ 03/25/25 01:13:30.88
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 03/25/25 01:13:30.892
  STEP: Creating a dummy mutating-webhook-configuration object @ 03/25/25 01:13:30.903
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 03/25/25 01:13:30.918
  I0325 01:13:30.986065 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1880" for this suite. @ 03/25/25 01:13:30.99
  STEP: Destroying namespace "webhook-markers-3457" for this suite. @ 03/25/25 01:13:31.004
• [3.655 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 03/25/25 01:13:31.023
  I0325 01:13:31.023925 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename configmap @ 03/25/25 01:13:31.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:13:31.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:13:31.046
  STEP: creating a ConfigMap @ 03/25/25 01:13:31.049
  STEP: fetching the ConfigMap @ 03/25/25 01:13:31.054
  STEP: patching the ConfigMap @ 03/25/25 01:13:31.057
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 03/25/25 01:13:31.063
  STEP: deleting the ConfigMap by collection with a label selector @ 03/25/25 01:13:31.075
  STEP: listing all ConfigMaps in test namespace @ 03/25/25 01:13:31.09
  I0325 01:13:31.095558 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3445" for this suite. @ 03/25/25 01:13:31.113
• [0.102 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 03/25/25 01:13:31.125
  I0325 01:13:31.125962 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename proxy @ 03/25/25 01:13:31.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:13:31.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:13:31.148
  I0325 01:13:31.151896 25 proxy.go:387] Creating pod...
  E0325 01:13:31.717968      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:32.717958      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:33.721021      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:34.721391      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:13:35.181714 25 proxy.go:411] Creating service...
  I0325 01:13:35.196430 25 proxy.go:448] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9584/pods/agnhost/proxy?method=DELETE
  I0325 01:13:35.201465 25 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0325 01:13:35.201520 25 proxy.go:448] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9584/pods/agnhost/proxy?method=OPTIONS
  I0325 01:13:35.208941 25 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0325 01:13:35.208989 25 proxy.go:448] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9584/pods/agnhost/proxy?method=PATCH
  I0325 01:13:35.212752 25 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0325 01:13:35.212787 25 proxy.go:448] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9584/pods/agnhost/proxy?method=POST
  I0325 01:13:35.216232 25 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0325 01:13:35.216281 25 proxy.go:448] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9584/pods/agnhost/proxy?method=PUT
  I0325 01:13:35.221303 25 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0325 01:13:35.221348 25 proxy.go:459] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9584/services/e2e-proxy-test-service/proxy?method=DELETE
  I0325 01:13:35.225408 25 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0325 01:13:35.225458 25 proxy.go:459] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9584/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0325 01:13:35.229508 25 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0325 01:13:35.229539 25 proxy.go:459] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9584/services/e2e-proxy-test-service/proxy?method=PATCH
  I0325 01:13:35.233691 25 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0325 01:13:35.233718 25 proxy.go:459] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9584/services/e2e-proxy-test-service/proxy?method=POST
  I0325 01:13:35.239263 25 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0325 01:13:35.239295 25 proxy.go:459] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9584/services/e2e-proxy-test-service/proxy?method=PUT
  I0325 01:13:35.243410 25 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0325 01:13:35.243449 25 proxy.go:479] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9584/pods/agnhost/proxy?method=GET
  I0325 01:13:35.245725 25 proxy.go:487] http.Client request:GET StatusCode:301
  I0325 01:13:35.246531 25 proxy.go:479] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9584/services/e2e-proxy-test-service/proxy?method=GET
  I0325 01:13:35.252947 25 proxy.go:487] http.Client request:GET StatusCode:301
  I0325 01:13:35.253043 25 proxy.go:479] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9584/pods/agnhost/proxy?method=HEAD
  I0325 01:13:35.256917 25 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0325 01:13:35.256952 25 proxy.go:479] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9584/services/e2e-proxy-test-service/proxy?method=HEAD
  I0325 01:13:35.260437 25 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0325 01:13:35.260562 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-9584" for this suite. @ 03/25/25 01:13:35.264
• [4.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 03/25/25 01:13:35.272
  I0325 01:13:35.272576 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename secrets @ 03/25/25 01:13:35.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:13:35.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:13:35.299
  STEP: Creating secret with name secret-test-e2b8705c-7b3d-45af-a0f5-04fa1ba2d7b7 @ 03/25/25 01:13:35.301
  STEP: Creating a pod to test consume secrets @ 03/25/25 01:13:35.306
  E0325 01:13:35.725078      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:36.725155      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:37.725290      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:38.725723      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:39.726077      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:40.726231      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:41.727002      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:42.727162      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 01:13:43.342
  I0325 01:13:43.345584 25 output.go:207] Trying to get logs from node master-2 pod pod-secrets-a1d4c670-c4fb-46e2-a1b4-a80960d4b973 container secret-volume-test: <nil>
  STEP: delete the pod @ 03/25/25 01:13:43.351
  I0325 01:13:43.367388 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5605" for this suite. @ 03/25/25 01:13:43.371
• [8.105 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 03/25/25 01:13:43.377
  I0325 01:13:43.377555 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename apf @ 03/25/25 01:13:43.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:13:43.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:13:43.433
  STEP: getting /apis @ 03/25/25 01:13:43.436
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 03/25/25 01:13:43.44
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 03/25/25 01:13:43.441
  STEP: creating @ 03/25/25 01:13:43.442
  STEP: getting @ 03/25/25 01:13:43.462
  STEP: listing @ 03/25/25 01:13:43.464
  STEP: watching @ 03/25/25 01:13:43.476
  I0325 01:13:43.476643 25 flowcontrol.go:394] starting watch
  STEP: patching @ 03/25/25 01:13:43.478
  STEP: updating @ 03/25/25 01:13:43.497
  I0325 01:13:43.506363 25 flowcontrol.go:422] waiting for watch events with expected annotations
  I0325 01:13:43.506411 25 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 03/25/25 01:13:43.506
  STEP: patching /status @ 03/25/25 01:13:43.511
  STEP: updating /status @ 03/25/25 01:13:43.517
  STEP: deleting @ 03/25/25 01:13:43.554
  STEP: deleting a collection @ 03/25/25 01:13:43.565
  I0325 01:13:43.583384 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-1187" for this suite. @ 03/25/25 01:13:43.587
• [0.217 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 03/25/25 01:13:43.594
  I0325 01:13:43.594458 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename kubelet-test @ 03/25/25 01:13:43.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:13:43.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:13:43.619
  I0325 01:13:43.663065 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3939" for this suite. @ 03/25/25 01:13:43.69
• [0.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 03/25/25 01:13:43.707
  I0325 01:13:43.707180 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename projected @ 03/25/25 01:13:43.709
  E0325 01:13:43.734385      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:13:43.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:13:43.739
  STEP: Creating configMap with name projected-configmap-test-volume-map-fc129f31-3c32-4468-9ab7-a87b91078ec3 @ 03/25/25 01:13:43.742
  STEP: Creating a pod to test consume configMaps @ 03/25/25 01:13:43.747
  E0325 01:13:44.734619      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:45.734750      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:46.735151      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:47.735355      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:48.735313      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:49.735512      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:50.735612      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:51.735800      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 01:13:51.785
  I0325 01:13:51.788661 25 output.go:207] Trying to get logs from node master-2 pod pod-projected-configmaps-6fb84929-4efb-422c-a6aa-f8685f35935c container agnhost-container: <nil>
  STEP: delete the pod @ 03/25/25 01:13:51.795
  I0325 01:13:51.814600 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9913" for this suite. @ 03/25/25 01:13:51.819
• [8.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 03/25/25 01:13:51.831
  I0325 01:13:51.831507 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename field-validation @ 03/25/25 01:13:51.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:13:51.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:13:51.852
  I0325 01:13:51.855502 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  E0325 01:13:52.735821      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:53.736459      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:54.737104      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:55.737876      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:56.738889      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:57.739804      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:13:58.740201      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  W0325 01:13:59.396350      25 warnings.go:70] unknown field "alpha"
  W0325 01:13:59.396376      25 warnings.go:70] unknown field "beta"
  W0325 01:13:59.396380      25 warnings.go:70] unknown field "delta"
  W0325 01:13:59.396383      25 warnings.go:70] unknown field "epsilon"
  W0325 01:13:59.396386      25 warnings.go:70] unknown field "gamma"
  E0325 01:13:59.740898      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:13:59.939098 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6716" for this suite. @ 03/25/25 01:13:59.943
• [8.120 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 03/25/25 01:13:59.953
  I0325 01:13:59.953027 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename pods @ 03/25/25 01:13:59.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:13:59.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:13:59.973
  STEP: creating the pod @ 03/25/25 01:13:59.976
  STEP: submitting the pod to kubernetes @ 03/25/25 01:13:59.976
  STEP: verifying QOS class is set on the pod @ 03/25/25 01:14:00.107
  I0325 01:14:00.113303 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4737" for this suite. @ 03/25/25 01:14:00.125
• [0.179 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 03/25/25 01:14:00.132
  I0325 01:14:00.132036 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename crd-watch @ 03/25/25 01:14:00.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:14:00.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:14:00.15
  I0325 01:14:00.152826 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  E0325 01:14:00.741690      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:01.742031      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:02.742330      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:03.742918      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:04.743627      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:05.744316      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:06.744604      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 03/25/25 01:14:07.692
  I0325 01:14:07.703198 25 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-03-25T01:14:07Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-03-25T01:14:07Z]] name:name1 resourceVersion:2822811 uid:004b812a-45e4-476e-8a74-1f9a55ee31a3] num:map[num1:9223372036854775807 num2:1000000]]}
  E0325 01:14:07.745384      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:08.746088      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:09.746286      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:10.746691      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:11.747004      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:12.747099      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:13.747221      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:14.747575      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:15.747759      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:16.747913      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 03/25/25 01:14:17.703
  I0325 01:14:17.712113 25 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-03-25T01:14:17Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-03-25T01:14:17Z]] name:name2 resourceVersion:2822863 uid:7d3c3712-2a04-4a76-9ae9-bec227a7079a] num:map[num1:9223372036854775807 num2:1000000]]}
  E0325 01:14:17.748271      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:18.748397      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:19.748570      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:20.748797      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:21.749030      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:22.749055      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:23.749596      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:24.750083      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:25.750345      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:26.750646      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 03/25/25 01:14:27.712
  I0325 01:14:27.722472 25 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-03-25T01:14:07Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-03-25T01:14:27Z]] name:name1 resourceVersion:2822914 uid:004b812a-45e4-476e-8a74-1f9a55ee31a3] num:map[num1:9223372036854775807 num2:1000000]]}
  E0325 01:14:27.751528      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:28.751894      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:29.752908      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:30.753038      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:31.753170      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:32.754151      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:33.754505      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:34.755092      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:35.755451      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:36.755748      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 03/25/25 01:14:37.723
  I0325 01:14:37.730552 25 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-03-25T01:14:17Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-03-25T01:14:37Z]] name:name2 resourceVersion:2822962 uid:7d3c3712-2a04-4a76-9ae9-bec227a7079a] num:map[num1:9223372036854775807 num2:1000000]]}
  E0325 01:14:37.756638      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:38.756971      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:39.756997      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:40.757413      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:41.757819      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:42.758362      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:43.758475      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:44.758663      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:45.759017      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:46.759346      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 03/25/25 01:14:47.731
  I0325 01:14:47.747194 25 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-03-25T01:14:07Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-03-25T01:14:27Z]] name:name1 resourceVersion:2823012 uid:004b812a-45e4-476e-8a74-1f9a55ee31a3] num:map[num1:9223372036854775807 num2:1000000]]}
  E0325 01:14:47.760173      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:48.760627      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:49.760723      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:50.761093      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:51.761441      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:52.761770      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:53.762103      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:54.762178      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:55.762293      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:56.762420      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 03/25/25 01:14:57.747
  I0325 01:14:57.759141 25 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-03-25T01:14:17Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-03-25T01:14:37Z]] name:name2 resourceVersion:2823065 uid:7d3c3712-2a04-4a76-9ae9-bec227a7079a] num:map[num1:9223372036854775807 num2:1000000]]}
  E0325 01:14:57.763425      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:58.764489      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:14:59.764546      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:15:00.765019      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:15:01.765056      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:15:02.765184      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:15:03.765334      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:15:04.765403      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:15:05.765785      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:15:06.766029      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:15:07.766962      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:15:08.278069 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-8462" for this suite. @ 03/25/25 01:15:08.284
• [68.160 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194
  STEP: Creating a kubernetes client @ 03/25/25 01:15:08.292
  I0325 01:15:08.293020 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename downward-api @ 03/25/25 01:15:08.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:15:08.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:15:08.316
  STEP: Creating a pod to test downward api env vars @ 03/25/25 01:15:08.32
  E0325 01:15:08.767423      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:15:09.767514      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:15:10.767912      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:15:11.768279      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 01:15:12.354
  I0325 01:15:12.358486 25 output.go:207] Trying to get logs from node master-2 pod downward-api-43fbbebf-50c2-4767-be48-4f8a569e3073 container dapi-container: <nil>
  STEP: delete the pod @ 03/25/25 01:15:12.367
  I0325 01:15:12.386476 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6753" for this suite. @ 03/25/25 01:15:12.39
• [4.105 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 03/25/25 01:15:12.398
  I0325 01:15:12.398253 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename watch @ 03/25/25 01:15:12.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:15:12.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:15:12.423
  STEP: creating a watch on configmaps @ 03/25/25 01:15:12.425
  STEP: creating a new configmap @ 03/25/25 01:15:12.429
  STEP: modifying the configmap once @ 03/25/25 01:15:12.434
  STEP: closing the watch once it receives two notifications @ 03/25/25 01:15:12.442
  I0325 01:15:12.442949 25 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7316  400941b5-ea3e-41ee-a6a1-33d7e159111c 2823219 0 2025-03-25 01:15:12 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-03-25 01:15:12 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0325 01:15:12.443147 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7316  400941b5-ea3e-41ee-a6a1-33d7e159111c 2823220 0 2025-03-25 01:15:12 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-03-25 01:15:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 03/25/25 01:15:12.443
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 03/25/25 01:15:12.45
  STEP: deleting the configmap @ 03/25/25 01:15:12.451
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 03/25/25 01:15:12.457
  I0325 01:15:12.457388 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7316  400941b5-ea3e-41ee-a6a1-33d7e159111c 2823221 0 2025-03-25 01:15:12 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-03-25 01:15:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0325 01:15:12.457676 25 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7316  400941b5-ea3e-41ee-a6a1-33d7e159111c 2823222 0 2025-03-25 01:15:12 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-03-25 01:15:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0325 01:15:12.457866 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7316" for this suite. @ 03/25/25 01:15:12.492
• [0.105 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 03/25/25 01:15:12.503
  I0325 01:15:12.503788 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename webhook @ 03/25/25 01:15:12.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:15:12.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:15:12.529
  STEP: Setting up server cert @ 03/25/25 01:15:12.628
  E0325 01:15:12.769208      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/25/25 01:15:12.89
  STEP: Deploying the webhook pod @ 03/25/25 01:15:12.9
  STEP: Wait for the deployment to be ready @ 03/25/25 01:15:12.924
  I0325 01:15:12.934304 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0325 01:15:13.770091      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:15:14.770219      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/25/25 01:15:14.944
  STEP: Verifying the service has paired with the endpoint @ 03/25/25 01:15:14.957
  E0325 01:15:15.770896      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:15:15.958115 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 03/25/25 01:15:16.06
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 03/25/25 01:15:16.09
  STEP: Deleting the collection of validation webhooks @ 03/25/25 01:15:16.118
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 03/25/25 01:15:16.196
  I0325 01:15:16.252876 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8678" for this suite. @ 03/25/25 01:15:16.259
  STEP: Destroying namespace "webhook-markers-9788" for this suite. @ 03/25/25 01:15:16.271
• [3.776 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 03/25/25 01:15:16.28
  I0325 01:15:16.280487 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename webhook @ 03/25/25 01:15:16.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:15:16.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:15:16.303
  STEP: Setting up server cert @ 03/25/25 01:15:16.416
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/25/25 01:15:16.64
  STEP: Deploying the webhook pod @ 03/25/25 01:15:16.651
  STEP: Wait for the deployment to be ready @ 03/25/25 01:15:16.669
  I0325 01:15:16.677642 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0325 01:15:16.771782      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:15:17.772201      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:15:18.690873 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 25, 1, 15, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 1, 15, 16, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 1, 15, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 1, 15, 16, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0325 01:15:18.772988      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:15:19.774753      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/25/25 01:15:20.697
  STEP: Verifying the service has paired with the endpoint @ 03/25/25 01:15:20.712
  E0325 01:15:20.774765      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:15:21.712449 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 03/25/25 01:15:21.718
  STEP: create the configmap with a random name @ 03/25/25 01:15:21.74
  STEP: verify the configmap is mutated @ 03/25/25 01:15:21.756
  STEP: create the configmap with 'skip-me' name @ 03/25/25 01:15:21.756
  E0325 01:15:21.775111      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:15:21.822200 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8077" for this suite. @ 03/25/25 01:15:21.834
  STEP: Destroying namespace "webhook-markers-5321" for this suite. @ 03/25/25 01:15:21.841
• [5.572 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 03/25/25 01:15:21.853
  I0325 01:15:21.853876 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename container-probe @ 03/25/25 01:15:21.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:15:21.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:15:21.874
  STEP: Creating pod busybox-71f7d6fe-f9e7-40e9-a633-630b614d71b2 in namespace container-probe-8988 @ 03/25/25 01:15:21.877
  E0325 01:15:22.775432      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:15:23.775525      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:15:24.775674      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:15:25.775810      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 03/25/25 01:15:25.906
  I0325 01:15:25.910930 25 container_probe.go:1749] Initial restart count of pod busybox-71f7d6fe-f9e7-40e9-a633-630b614d71b2 is 0
  I0325 01:15:25.914596 25 container_probe.go:1759] Get pod busybox-71f7d6fe-f9e7-40e9-a633-630b614d71b2 in namespace container-probe-8988
  E0325 01:15:26.776537      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:15:27.777035      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:15:27.919657 25 container_probe.go:1759] Get pod busybox-71f7d6fe-f9e7-40e9-a633-630b614d71b2 in namespace container-probe-8988
  E0325 01:15:28.777250      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:15:29.777646      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:15:29.925982 25 container_probe.go:1759] Get pod busybox-71f7d6fe-f9e7-40e9-a633-630b614d71b2 in namespace container-probe-8988
  E0325 01:15:30.777892      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:15:31.778185      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:15:31.930807 25 container_probe.go:1759] Get pod busybox-71f7d6fe-f9e7-40e9-a633-630b614d71b2 in namespace container-probe-8988
  E0325 01:15:32.778721      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:15:33.779053      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:15:33.936112 25 container_probe.go:1759] Get pod busybox-71f7d6fe-f9e7-40e9-a633-630b614d71b2 in namespace container-probe-8988
  E0325 01:15:34.779105      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:15:35.779412      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:15:35.941575 25 container_probe.go:1759] Get pod busybox-71f7d6fe-f9e7-40e9-a633-630b614d71b2 in namespace container-probe-8988
  E0325 01:15:36.779484      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:15:37.779785      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:15:37.947982 25 container_probe.go:1759] Get pod busybox-71f7d6fe-f9e7-40e9-a633-630b614d71b2 in namespace container-probe-8988
  E0325 01:15:38.780855      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:15:39.781050      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:15:39.953117 25 container_probe.go:1759] Get pod busybox-71f7d6fe-f9e7-40e9-a633-630b614d71b2 in namespace container-probe-8988
  E0325 01:15:40.781824      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:15:41.782251      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:15:41.957512 25 container_probe.go:1759] Get pod busybox-71f7d6fe-f9e7-40e9-a633-630b614d71b2 in namespace container-probe-8988
  E0325 01:15:42.782329      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:15:43.782992      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:15:43.962805 25 container_probe.go:1759] Get pod busybox-71f7d6fe-f9e7-40e9-a633-630b614d71b2 in namespace container-probe-8988
  E0325 01:15:44.784109      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:15:45.784401      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:15:45.968706 25 container_probe.go:1759] Get pod busybox-71f7d6fe-f9e7-40e9-a633-630b614d71b2 in namespace container-probe-8988
  E0325 01:15:46.784544      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:15:47.784887      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:15:47.972690 25 container_probe.go:1759] Get pod busybox-71f7d6fe-f9e7-40e9-a633-630b614d71b2 in namespace container-probe-8988
  E0325 01:15:48.785599      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:15:49.785741      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:15:49.978403 25 container_probe.go:1759] Get pod busybox-71f7d6fe-f9e7-40e9-a633-630b614d71b2 in namespace container-probe-8988
  E0325 01:15:50.786391      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:15:51.786682      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:15:51.984040 25 container_probe.go:1759] Get pod busybox-71f7d6fe-f9e7-40e9-a633-630b614d71b2 in namespace container-probe-8988
  E0325 01:15:52.786875      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:15:53.787205      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:15:53.988336 25 container_probe.go:1759] Get pod busybox-71f7d6fe-f9e7-40e9-a633-630b614d71b2 in namespace container-probe-8988
  E0325 01:15:54.788310      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:15:55.788771      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:15:55.993567 25 container_probe.go:1759] Get pod busybox-71f7d6fe-f9e7-40e9-a633-630b614d71b2 in namespace container-probe-8988
  E0325 01:15:56.789378      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:15:57.789728      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:15:57.997665 25 container_probe.go:1759] Get pod busybox-71f7d6fe-f9e7-40e9-a633-630b614d71b2 in namespace container-probe-8988
  E0325 01:15:58.790515      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:15:59.791216      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:16:00.003197 25 container_probe.go:1759] Get pod busybox-71f7d6fe-f9e7-40e9-a633-630b614d71b2 in namespace container-probe-8988
  E0325 01:16:00.792194      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:16:01.792616      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:16:02.008397 25 container_probe.go:1759] Get pod busybox-71f7d6fe-f9e7-40e9-a633-630b614d71b2 in namespace container-probe-8988
  E0325 01:16:02.793087      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:16:03.793314      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:16:04.015144 25 container_probe.go:1759] Get pod busybox-71f7d6fe-f9e7-40e9-a633-630b614d71b2 in namespace container-probe-8988
  E0325 01:16:04.794030      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:16:05.794139      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:16:06.019266 25 container_probe.go:1759] Get pod busybox-71f7d6fe-f9e7-40e9-a633-630b614d71b2 in namespace container-probe-8988
  E0325 01:16:06.794431      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:16:07.794844      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:16:08.024518 25 container_probe.go:1759] Get pod busybox-71f7d6fe-f9e7-40e9-a633-630b614d71b2 in namespace container-probe-8988
  E0325 01:16:08.794966      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:16:09.795245      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:16:10.029292 25 container_probe.go:1759] Get pod busybox-71f7d6fe-f9e7-40e9-a633-630b614d71b2 in namespace container-probe-8988
  E0325 01:16:10.796303      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:16:11.796969      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:16:12.034641 25 container_probe.go:1759] Get pod busybox-71f7d6fe-f9e7-40e9-a633-630b614d71b2 in namespace container-probe-8988
  E0325 01:16:12.798047      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:16:13.798162      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:16:14.040168 25 container_probe.go:1759] Get pod busybox-71f7d6fe-f9e7-40e9-a633-630b614d71b2 in namespace container-probe-8988
  I0325 01:16:14.040230 25 container_probe.go:1763] Restart count of pod container-probe-8988/busybox-71f7d6fe-f9e7-40e9-a633-630b614d71b2 is now 1 (48.129006951s elapsed)
  STEP: deleting the pod @ 03/25/25 01:16:14.04
  I0325 01:16:14.054517 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8988" for this suite. @ 03/25/25 01:16:14.059
• [52.214 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 03/25/25 01:16:14.068
  I0325 01:16:14.068155 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename container-probe @ 03/25/25 01:16:14.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:16:14.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:16:14.091
  STEP: Creating pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942 @ 03/25/25 01:16:14.093
  E0325 01:16:14.798252      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:16:15.798759      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 03/25/25 01:16:16.121
  I0325 01:16:16.127583 25 container_probe.go:1749] Initial restart count of pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 is 0
  I0325 01:16:16.130263 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:16:16.798704      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:16:17.798980      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:16:18.135792 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:16:18.799218      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:16:19.799527      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:16:20.141782 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:16:20.799536      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:16:21.799865      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:16:22.146727 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:16:22.800729      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:16:23.800872      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:16:24.151505 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:16:24.801473      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:16:25.802027      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:16:26.156025 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:16:26.802920      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:16:27.803307      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:16:28.164420 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:16:28.804208      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:16:29.804356      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:16:30.169022 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:16:30.804518      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:16:31.804728      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:16:32.174561 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:16:32.805243      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:16:33.805466      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:16:34.178756 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:16:34.805682      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:16:35.805843      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:16:36.184212 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:16:36.805839      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:16:37.806041      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:16:38.189734 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:16:38.806407      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:16:39.806535      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:16:40.194352 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:16:40.807086      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:16:41.807479      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:16:42.199205 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:16:42.807945      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:16:43.808281      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:16:44.204418 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:16:44.809241      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:16:45.810099      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:16:46.209999 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:16:46.810607      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:16:47.811030      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:16:48.215139 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:16:48.811985      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:16:49.812900      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:16:50.222706 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:16:50.813975      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:16:51.814625      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:16:52.229714 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:16:52.814767      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:16:53.814842      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:16:54.234618 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:16:54.815550      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:16:55.816450      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:16:56.239355 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:16:56.816918      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:16:57.817286      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:16:58.245167 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:16:58.817755      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:16:59.818762      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:17:00.250182 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:17:00.819296      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:17:01.819546      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:17:02.255628 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:17:02.820308      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:17:03.820668      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:17:04.259562 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:17:04.821378      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:17:05.821694      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:17:06.264014 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:17:06.821861      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:17:07.824321      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:17:08.274590 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:17:08.824208      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:17:09.825169      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:17:10.281195 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:17:10.825768      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:17:11.826130      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:17:12.286051 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:17:12.826539      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:17:13.826686      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:17:14.292049 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:17:14.827873      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:17:15.828435      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:17:16.297568 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:17:16.829256      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:17:17.829728      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:17:18.304159 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:17:18.830712      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:17:19.830844      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:17:20.309352 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:17:20.830908      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:17:21.831252      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:17:22.314855 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:17:22.831505      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:17:23.838786      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:17:24.319315 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:17:24.838940      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:17:25.839188      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:17:26.323577 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:17:26.840244      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:17:27.840560      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:17:28.328405 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:17:28.841011      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:17:29.841051      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:17:30.334143 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:17:30.841739      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:17:31.841887      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:17:32.337961 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:17:32.842204      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:17:33.842493      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:17:34.343147 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:17:34.843007      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:17:35.843324      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:17:36.349199 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:17:36.843768      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:17:37.844179      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:17:38.354058 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:17:38.844503      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:17:39.844680      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:17:40.360262 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:17:40.844868      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:17:41.845240      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:17:42.365811 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:17:42.845388      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:17:43.846083      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:17:44.371297 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:17:44.847095      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:17:45.847516      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:17:46.376533 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:17:46.848164      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:17:47.848561      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:17:48.381019 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:17:48.849500      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:17:49.849728      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:17:50.387321 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:17:50.850391      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:17:51.850852      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:17:52.393066 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:17:52.851897      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:17:53.852162      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:17:54.398352 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:17:54.852269      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:17:55.852563      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:17:56.403240 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:17:56.852770      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:17:57.853305      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:17:58.407384 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:17:58.854102      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:17:59.854209      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:18:00.412773 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:18:00.855363      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:18:01.855619      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:18:02.417728 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:18:02.856354      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:18:03.856627      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:18:04.423222 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:18:04.856763      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:18:05.857061      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:18:06.429083 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:18:06.857171      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:18:07.857436      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:18:08.435161 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:18:08.857585      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:18:09.857909      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:18:10.441373 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:18:10.857765      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:18:11.858294      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:18:12.446217 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:18:12.858296      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:18:13.858335      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:18:14.451296 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:18:14.858618      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:18:15.858919      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:18:16.456167 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:18:16.859624      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:18:17.859932      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:18:18.460980 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:18:18.860415      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:18:19.861329      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:18:20.465952 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:18:20.861379      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:18:21.861652      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:18:22.470988 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:18:22.862637      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:18:23.862891      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:18:24.475540 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:18:24.863083      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:18:25.863457      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:18:26.480846 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:18:26.864273      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:18:27.864661      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:18:28.485461 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:18:28.864748      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:18:29.864934      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:18:30.491128 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:18:30.865629      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:18:31.865794      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:18:32.495913 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:18:32.866138      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:18:33.866439      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:18:34.502147 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:18:34.866745      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:18:35.866820      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:18:36.508053 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:18:36.867429      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:18:37.867797      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:18:38.513847 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:18:38.868059      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:18:39.868394      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:18:40.519885 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:18:40.869382      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:18:41.869696      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:18:42.526620 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:18:42.869970      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:18:43.870086      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:18:44.531482 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:18:44.871011      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:18:45.871186      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:18:46.535998 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:18:46.871367      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:18:47.871560      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:18:48.540442 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:18:48.871828      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:18:49.872042      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:18:50.545614 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:18:50.872919      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:18:51.873081      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:18:52.550631 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:18:52.873222      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:18:53.873307      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:18:54.555505 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:18:54.873916      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:18:55.874041      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:18:56.560171 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:18:56.874375      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:18:57.874678      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:18:58.565354 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:18:58.874757      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:18:59.874934      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:19:00.569273 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:19:00.875711      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:19:01.875976      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:19:02.574247 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:19:02.876669      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:19:03.876959      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:19:04.579145 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:19:04.877617      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:19:05.877915      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:19:06.583607 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:19:06.879012      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:19:07.879347      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:19:08.593543 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:19:08.879757      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:19:09.879771      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:19:10.599087 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:19:10.880494      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:19:11.880959      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:19:12.603796 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:19:12.881161      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:19:13.881445      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:19:14.608723 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:19:14.882159      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:19:15.882389      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:19:16.612781 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:19:16.882836      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:19:17.883138      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:19:18.618218 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:19:18.883596      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:19:19.884316      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:19:20.623645 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:19:20.885047      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:19:21.886065      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:19:22.628855 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:19:22.886134      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:19:23.886463      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:19:24.635056 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:19:24.887278      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:19:25.887622      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:19:26.639233 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:19:26.888655      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:19:27.888774      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:19:28.643657 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:19:28.889001      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:19:29.889796      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:19:30.648617 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:19:30.890730      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:19:31.891689      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:19:32.654212 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:19:32.892571      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:19:33.892976      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:19:34.658644 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:19:34.893919      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:19:35.894162      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:19:36.663627 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:19:36.894938      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:19:37.895385      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:19:38.668784 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:19:38.896397      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:19:39.896631      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:19:40.674290 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:19:40.897666      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:19:41.898279      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:19:42.679148 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:19:42.898318      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:19:43.898494      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:19:44.684497 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:19:44.898767      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:19:45.899574      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:19:46.689476 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:19:46.899865      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:19:47.899979      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:19:48.693784 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:19:48.901042      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:19:49.901113      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:19:50.699011 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:19:50.901273      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:19:51.901626      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:19:52.704017 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:19:52.902439      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:19:53.902738      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:19:54.708923 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:19:54.903219      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:19:55.904198      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:19:56.714585 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:19:56.904893      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:19:57.905057      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:19:58.719856 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:19:58.906035      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:19:59.906913      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:20:00.724965 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:20:00.907202      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:01.907491      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:20:02.729432 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:20:02.907760      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:03.907945      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:20:04.733503 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:20:04.908862      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:05.909611      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:20:06.738732 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:20:06.910070      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:07.910394      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:20:08.743342 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:20:08.910616      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:09.910696      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:20:10.747336 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:20:10.911581      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:11.911904      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:20:12.752874 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:20:12.911982      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:13.912501      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:20:14.757897 25 container_probe.go:1759] Get pod liveness-aa6dca16-f898-4a9c-9a05-5afdffa14e98 in namespace container-probe-7942
  E0325 01:20:14.913133      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:15.913671      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 03/25/25 01:20:16.761
  I0325 01:20:16.780206 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7942" for this suite. @ 03/25/25 01:20:16.79
• [242.733 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 03/25/25 01:20:16.802
  I0325 01:20:16.802188 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename replication-controller @ 03/25/25 01:20:16.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:20:16.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:20:16.836
  I0325 01:20:16.838779 25 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0325 01:20:16.914399      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 03/25/25 01:20:17.849
  STEP: Checking rc "condition-test" has the desired failure condition set @ 03/25/25 01:20:17.857
  E0325 01:20:17.915451      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 03/25/25 01:20:18.865
  I0325 01:20:18.874465 25 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 03/25/25 01:20:18.874
  E0325 01:20:18.915769      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:20:19.882529 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9704" for this suite. @ 03/25/25 01:20:19.887
• [3.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 03/25/25 01:20:19.896
  I0325 01:20:19.896447 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename services @ 03/25/25 01:20:19.897
  E0325 01:20:19.915834      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:20:19.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:20:19.918
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-8711 @ 03/25/25 01:20:19.921
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 03/25/25 01:20:19.938
  STEP: creating service externalsvc in namespace services-8711 @ 03/25/25 01:20:19.939
  STEP: creating replication controller externalsvc in namespace services-8711 @ 03/25/25 01:20:19.954
  I0325 01:20:19.964308      25 runners.go:193] Created replication controller with name: externalsvc, namespace: services-8711, replica count: 2
  E0325 01:20:20.916449      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:21.916520      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:22.916685      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:20:23.015840      25 runners.go:193] externalsvc Pods: 2 out of 2 created, 0 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0325 01:20:23.917056      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:24.917950      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:25.918358      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:20:26.016384      25 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 03/25/25 01:20:26.02
  I0325 01:20:26.041234 25 resource.go:361] Creating new exec pod
  E0325 01:20:26.918546      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:27.918763      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:28.919399      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:29.920170      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:20:30.062114 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-8711 exec execpod5vc82 -- /bin/sh -x -c nslookup nodeport-service.services-8711.svc.cluster.local'
  I0325 01:20:30.312437 25 builder.go:146] stderr: "+ nslookup nodeport-service.services-8711.svc.cluster.local\n"
  I0325 01:20:30.312527 25 builder.go:147] stdout: "Server:\t\t10.233.0.3\nAddress:\t10.233.0.3#53\n\nnodeport-service.services-8711.svc.cluster.local\tcanonical name = externalsvc.services-8711.svc.cluster.local.\nName:\texternalsvc.services-8711.svc.cluster.local\nAddress: 10.233.8.162\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-8711, will wait for the garbage collector to delete the pods @ 03/25/25 01:20:30.313
  I0325 01:20:30.379520 25 resources.go:139] Deleting ReplicationController externalsvc took: 11.6956ms
  I0325 01:20:30.480181 25 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.656549ms
  E0325 01:20:30.920521      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:31.921183      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:32.922262      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:20:33.708095 25 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I0325 01:20:33.724106 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8711" for this suite. @ 03/25/25 01:20:33.729
• [13.843 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 03/25/25 01:20:33.741
  I0325 01:20:33.741284 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename pod-network-test @ 03/25/25 01:20:33.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:20:33.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:20:33.77
  STEP: Performing setup for networking test in namespace pod-network-test-5530 @ 03/25/25 01:20:33.772
  STEP: creating a selector @ 03/25/25 01:20:33.772
  STEP: Creating the service pods in kubernetes @ 03/25/25 01:20:33.772
  I0325 01:20:33.772484 25 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0325 01:20:33.922485      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:34.923548      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:35.924477      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:36.924661      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:37.925508      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:38.926148      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:39.927146      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:40.927401      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:41.927950      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:42.928191      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:43.928475      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:44.928886      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:45.929089      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:46.929973      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:47.930290      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:48.930560      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:49.930817      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:50.931681      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:51.931980      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 03/25/25 01:20:51.978
  E0325 01:20:52.932864      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:53.933300      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:20:54.019393 25 utils.go:803] Setting MaxTries for pod polling to 55 for networking test based on endpoint count 5
  I0325 01:20:54.019461 25 utils.go:496] Going to poll 10.233.64.111 on port 8083 at least 0 times, with a maximum of 55 tries before failing
  I0325 01:20:54.022138 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.64.111:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5530 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 01:20:54.022178 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 01:20:54.022244 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5530/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.64.111%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0325 01:20:54.089283 25 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0325 01:20:54.089347 25 utils.go:496] Going to poll 10.233.65.64 on port 8083 at least 0 times, with a maximum of 55 tries before failing
  I0325 01:20:54.093174 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.65.64:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5530 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 01:20:54.093212 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 01:20:54.093267 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5530/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.65.64%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0325 01:20:54.156457 25 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0325 01:20:54.156506 25 utils.go:496] Going to poll 10.233.66.10 on port 8083 at least 0 times, with a maximum of 55 tries before failing
  I0325 01:20:54.160151 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.66.10:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5530 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 01:20:54.160203 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 01:20:54.160253 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5530/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.66.10%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0325 01:20:54.220656 25 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0325 01:20:54.220712 25 utils.go:496] Going to poll 10.233.68.189 on port 8083 at least 0 times, with a maximum of 55 tries before failing
  I0325 01:20:54.224405 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.68.189:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5530 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 01:20:54.224439 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 01:20:54.224504 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5530/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.68.189%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0325 01:20:54.280938 25 utils.go:513] Found all 1 expected endpoints: [netserver-3]
  I0325 01:20:54.280988 25 utils.go:496] Going to poll 10.233.67.98 on port 8083 at least 0 times, with a maximum of 55 tries before failing
  I0325 01:20:54.284971 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.67.98:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5530 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 01:20:54.285008 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 01:20:54.285079 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5530/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.67.98%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0325 01:20:54.341375 25 utils.go:513] Found all 1 expected endpoints: [netserver-4]
  I0325 01:20:54.341583 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5530" for this suite. @ 03/25/25 01:20:54.345
• [20.612 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 03/25/25 01:20:54.354
  I0325 01:20:54.354616 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename subpath @ 03/25/25 01:20:54.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:20:54.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:20:54.378
  STEP: Setting up data @ 03/25/25 01:20:54.38
  STEP: Creating pod pod-subpath-test-configmap-kss8 @ 03/25/25 01:20:54.392
  STEP: Creating a pod to test atomic-volume-subpath @ 03/25/25 01:20:54.392
  E0325 01:20:54.933805      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:55.934143      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:56.934861      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:57.935130      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:58.935513      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:20:59.937077      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:00.937632      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:01.938381      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:02.939346      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:03.939736      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:04.939909      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:05.940006      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:06.941019      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:07.941496      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:08.942685      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:09.942117      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:10.942917      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:11.944004      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:12.944599      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:13.945010      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:14.945850      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:15.946356      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:16.946624      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:17.946998      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 01:21:18.467
  I0325 01:21:18.470688 25 output.go:207] Trying to get logs from node master-2 pod pod-subpath-test-configmap-kss8 container test-container-subpath-configmap-kss8: <nil>
  STEP: delete the pod @ 03/25/25 01:21:18.48
  STEP: Deleting pod pod-subpath-test-configmap-kss8 @ 03/25/25 01:21:18.498
  I0325 01:21:18.498821 25 delete.go:62] Deleting pod "pod-subpath-test-configmap-kss8" in namespace "subpath-6282"
  I0325 01:21:18.501557 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6282" for this suite. @ 03/25/25 01:21:18.505
• [24.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:878
  STEP: Creating a kubernetes client @ 03/25/25 01:21:18.513
  I0325 01:21:18.513123 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename svcaccounts @ 03/25/25 01:21:18.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:21:18.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:21:18.543
  STEP: Creating a Serviceaccount "e2e-sa-zgmpq" in namespace "svcaccounts-463" @ 03/25/25 01:21:18.545
  STEP: Creating a ServiceaccountToken "e2e-sa-zgmpq" in namespace "svcaccounts-463" @ 03/25/25 01:21:18.555
  STEP: Creating a TokenReview for "e2e-sa-zgmpq" in namespace "svcaccounts-463" @ 03/25/25 01:21:18.567
  I0325 01:21:18.572723 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-463" for this suite. @ 03/25/25 01:21:18.607
• [0.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1720
  STEP: Creating a kubernetes client @ 03/25/25 01:21:18.624
  I0325 01:21:18.624536 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename kubectl @ 03/25/25 01:21:18.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:21:18.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:21:18.644
  I0325 01:21:18.647196 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-8448 version'
  I0325 01:21:18.696412 25 builder.go:146] stderr: ""
  I0325 01:21:18.696463 25 builder.go:147] stdout: "Client Version: v1.32.2\nKustomize Version: v5.5.0\nServer Version: v1.32.2\n"
  I0325 01:21:18.696756 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8448" for this suite. @ 03/25/25 01:21:18.707
• [0.092 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 03/25/25 01:21:18.716
  I0325 01:21:18.716507 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename projected @ 03/25/25 01:21:18.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:21:18.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:21:18.75
  STEP: Creating the pod @ 03/25/25 01:21:18.752
  E0325 01:21:18.947292      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:19.947544      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:20.948464      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:21:21.300040 25 pod_client.go:173] Successfully updated pod "annotationupdate83220626-c209-4c70-a18a-fc1690569519"
  E0325 01:21:21.948893      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:22.949057      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:21:23.314800 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2310" for this suite. @ 03/25/25 01:21:23.319
• [4.611 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1075
  STEP: Creating a kubernetes client @ 03/25/25 01:21:23.328
  I0325 01:21:23.328021 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename kubectl @ 03/25/25 01:21:23.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:21:23.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:21:23.348
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 03/25/25 01:21:23.352
  I0325 01:21:23.352891 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-3693 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0325 01:21:23.425183 25 builder.go:146] stderr: ""
  I0325 01:21:23.425264 25 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 03/25/25 01:21:23.425
  I0325 01:21:23.425403 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-3693 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0325 01:21:23.502390 25 builder.go:146] stderr: ""
  I0325 01:21:23.502440 25 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 03/25/25 01:21:23.502
  I0325 01:21:23.505918 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-3693 delete pods e2e-test-httpd-pod'
  E0325 01:21:23.949682      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:24.949818      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:21:25.203223 25 builder.go:146] stderr: ""
  I0325 01:21:25.203270 25 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0325 01:21:25.203420 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3693" for this suite. @ 03/25/25 01:21:25.208
• [1.888 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 03/25/25 01:21:25.216
  I0325 01:21:25.216785 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename webhook @ 03/25/25 01:21:25.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:21:25.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:21:25.239
  STEP: Setting up server cert @ 03/25/25 01:21:25.345
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/25/25 01:21:25.623
  STEP: Deploying the webhook pod @ 03/25/25 01:21:25.633
  STEP: Wait for the deployment to be ready @ 03/25/25 01:21:25.649
  I0325 01:21:25.658138 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0325 01:21:25.950393      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:26.950692      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/25/25 01:21:27.669
  STEP: Verifying the service has paired with the endpoint @ 03/25/25 01:21:27.682
  E0325 01:21:27.950702      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:21:28.682426 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 03/25/25 01:21:28.689
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 03/25/25 01:21:28.712
  STEP: Creating a configMap that should not be mutated @ 03/25/25 01:21:28.725
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 03/25/25 01:21:28.738
  STEP: Creating a configMap that should be mutated @ 03/25/25 01:21:28.751
  I0325 01:21:28.840416 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6557" for this suite. @ 03/25/25 01:21:28.845
  STEP: Destroying namespace "webhook-markers-4012" for this suite. @ 03/25/25 01:21:28.855
• [3.654 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 03/25/25 01:21:28.872
  I0325 01:21:28.872954 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename emptydir @ 03/25/25 01:21:28.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:21:28.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:21:28.902
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 03/25/25 01:21:28.91
  E0325 01:21:28.951222      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:29.951408      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:30.952305      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:31.952831      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:32.953073      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:33.953422      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 01:21:34.944
  I0325 01:21:34.948090 25 output.go:207] Trying to get logs from node master-2 pod pod-01eae08c-a105-4ee7-8638-d058ac2db046 container test-container: <nil>
  STEP: delete the pod @ 03/25/25 01:21:34.953
  E0325 01:21:34.954190      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:21:34.980680 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6021" for this suite. @ 03/25/25 01:21:34.985
• [6.120 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 03/25/25 01:21:34.992
  I0325 01:21:34.992817 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename pods @ 03/25/25 01:21:34.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:21:35.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:21:35.018
  I0325 01:21:35.021436 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: creating the pod @ 03/25/25 01:21:35.022
  STEP: submitting the pod to kubernetes @ 03/25/25 01:21:35.022
  E0325 01:21:35.954877      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:36.954949      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:37.955155      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:38.955553      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:21:39.123562 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9028" for this suite. @ 03/25/25 01:21:39.128
• [4.144 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 03/25/25 01:21:39.136
  I0325 01:21:39.136426 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename container-probe @ 03/25/25 01:21:39.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:21:39.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:21:39.159
  STEP: Creating pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516 @ 03/25/25 01:21:39.162
  E0325 01:21:39.955491      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:40.956085      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 03/25/25 01:21:41.18
  I0325 01:21:41.182832 25 container_probe.go:1749] Initial restart count of pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 is 0
  I0325 01:21:41.188089 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:21:41.956081      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:42.956473      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:21:43.192933 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:21:43.957513      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:44.957782      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:21:45.198531 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:21:45.958132      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:46.958378      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:21:47.204104 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:21:47.958577      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:48.958900      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:21:49.209411 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:21:49.959200      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:50.959444      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:21:51.214177 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:21:51.959516      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:52.959845      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:21:53.218898 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:21:53.960254      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:54.960981      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:21:55.223170 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:21:55.961542      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:56.961876      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:21:57.228657 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:21:57.962531      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:21:58.963007      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:21:59.233234 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:21:59.963642      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:22:00.964008      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:22:01.238518 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  I0325 01:22:01.238581 25 container_probe.go:1763] Restart count of pod container-probe-8516/liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 is now 1 (20.055702452s elapsed)
  E0325 01:22:01.964416      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:22:02.964750      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:22:03.243658 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:22:03.965202      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:22:04.965891      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:22:05.249247 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:22:05.965956      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:22:06.966295      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:22:07.253752 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:22:07.966547      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:22:08.966997      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:22:09.258270 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:22:09.967149      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:22:10.967877      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:22:11.262818 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:22:11.968600      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:22:12.968910      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:22:13.267653 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:22:13.969469      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:22:14.969533      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:22:15.274158 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:22:15.969970      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:22:16.970859      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:22:17.278695 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:22:17.971797      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:22:18.972123      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:22:19.285233 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:22:19.973255      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:22:20.973540      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:22:21.290192 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  I0325 01:22:21.290404 25 container_probe.go:1763] Restart count of pod container-probe-8516/liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 is now 2 (40.107537028s elapsed)
  E0325 01:22:21.973869      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:22:22.974248      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:22:23.296863 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:22:23.974968      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:22:24.975647      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:22:25.301679 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:22:25.976327      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:22:26.976539      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:22:27.306681 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:22:27.977406      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:22:28.977576      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:22:29.311914 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:22:29.977808      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:22:30.978099      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:22:31.316997 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:22:31.978747      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:22:32.978927      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:22:33.323367 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:22:33.978998      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:22:34.988981      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:22:35.328535 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:22:35.980272      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:22:36.980607      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:22:37.332570 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:22:37.981218      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:22:38.982412      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:22:39.337916 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:22:39.982789      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:22:40.982910      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:22:41.343024 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  I0325 01:22:41.343234 25 container_probe.go:1763] Restart count of pod container-probe-8516/liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 is now 3 (1m0.160367158s elapsed)
  E0325 01:22:41.983981      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:22:42.984052      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:22:43.348015 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:22:43.984682      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:22:44.984825      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:22:45.352975 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:22:45.985728      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:22:46.986227      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:22:47.358057 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:22:47.986527      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:22:48.986843      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:22:49.368185 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:22:49.986915      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:22:50.987077      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:22:51.373011 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:22:51.987494      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:22:52.987867      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:22:53.378154 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:22:53.988890      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:22:54.989115      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:22:55.384094 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:22:55.989477      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:22:56.989725      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:22:57.389999 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:22:57.990077      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:22:58.990348      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:22:59.395995 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:22:59.990785      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:23:00.991065      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:23:01.401276 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  I0325 01:23:01.401329 25 container_probe.go:1763] Restart count of pod container-probe-8516/liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 is now 4 (1m20.21846177s elapsed)
  E0325 01:23:01.991976      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:23:02.992275      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:23:03.406543 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:23:03.993294      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:23:04.993575      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:23:05.410149 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:23:05.993867      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:23:06.994226      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:23:07.415471 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:23:07.995290      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:23:08.996312      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:23:09.421796 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:23:09.996523      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:23:10.996628      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:23:11.427256 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:23:11.996878      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:23:12.997193      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:23:13.432852 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:23:13.997329      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:23:14.997630      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:23:15.438717 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:23:15.998128      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:23:16.998473      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:23:17.444231 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:23:17.999329      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:23:18.999680      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:23:19.450408 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:23:20.000709      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:23:21.001016      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:23:21.456078 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:23:22.001642      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:23:23.002031      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:23:23.461469 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:23:24.003018      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:23:25.003986      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:23:25.466593 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:23:26.004187      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:23:27.004351      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:23:27.470764 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:23:28.005439      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:23:29.005482      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:23:29.475773 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:23:30.005606      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:23:31.005958      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:23:31.481320 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:23:32.006919      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:23:33.007003      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:23:33.486246 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:23:34.007849      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:23:35.008565      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:23:35.490565 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:23:36.009218      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:23:37.009262      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:23:37.494957 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:23:38.009594      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:23:39.010175      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:23:39.498703 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:23:40.010292      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:23:41.010604      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:23:41.501973 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:23:42.015673      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:23:43.015916      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:23:43.506447 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:23:44.016927      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:23:45.017180      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:23:45.511082 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:23:46.017706      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:23:47.018011      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:23:47.515691 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:23:48.018261      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:23:49.018433      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:23:49.522012 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:23:50.019504      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:23:51.019847      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:23:51.526654 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:23:52.020141      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:23:53.020689      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:23:53.531741 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:23:54.021362      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:23:55.021590      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:23:55.536400 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:23:56.021960      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:23:57.022280      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:23:57.541056 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:23:58.022461      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:23:59.022766      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:23:59.548125 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:24:00.022951      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:01.023006      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:24:01.553247 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  E0325 01:24:02.023816      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:03.024159      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:24:03.558208 25 container_probe.go:1759] Get pod liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 in namespace container-probe-8516
  I0325 01:24:03.558262 25 container_probe.go:1763] Restart count of pod container-probe-8516/liveness-ee3e6427-aa39-4ede-a5ba-19f49dcff1b9 is now 5 (2m22.375395074s elapsed)
  STEP: deleting the pod @ 03/25/25 01:24:03.558
  I0325 01:24:03.574331 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8516" for this suite. @ 03/25/25 01:24:03.58
• [144.456 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 03/25/25 01:24:03.595
  I0325 01:24:03.595525 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename field-validation @ 03/25/25 01:24:03.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:24:03.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:24:03.621
  I0325 01:24:03.624325 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  W0325 01:24:03.625400      25 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc003dfd450 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0325 01:24:04.024850      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:05.025574      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:06.025732      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:07.026667      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:08.026913      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:09.027173      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:10.027915      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:11.028227      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  W0325 01:24:11.164891      25 warnings.go:70] unknown field "alpha"
  W0325 01:24:11.164925      25 warnings.go:70] unknown field "beta"
  W0325 01:24:11.164930      25 warnings.go:70] unknown field "delta"
  W0325 01:24:11.164933      25 warnings.go:70] unknown field "epsilon"
  W0325 01:24:11.164936      25 warnings.go:70] unknown field "gamma"
  I0325 01:24:11.715509 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3155" for this suite. @ 03/25/25 01:24:11.721
• [8.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:152
  STEP: Creating a kubernetes client @ 03/25/25 01:24:11.732
  I0325 01:24:11.732118 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename dns @ 03/25/25 01:24:11.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:24:11.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:24:11.754
  STEP: Creating a test headless service @ 03/25/25 01:24:11.758
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6555.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-6555.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6555.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-6555.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6555.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-6555.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6555.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-6555.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6555.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-6555.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6555.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-6555.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 12.59.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.59.12_udp@PTR;check="$$(dig +tcp +noall +answer +search 12.59.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.59.12_tcp@PTR;sleep 1; done
   @ 03/25/25 01:24:11.787
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6555.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6555.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6555.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6555.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6555.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-6555.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6555.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-6555.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6555.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-6555.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6555.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-6555.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 12.59.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.59.12_udp@PTR;check="$$(dig +tcp +noall +answer +search 12.59.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.59.12_tcp@PTR;sleep 1; done
   @ 03/25/25 01:24:11.787
  STEP: creating a pod to probe DNS @ 03/25/25 01:24:11.787
  STEP: submitting the pod to kubernetes @ 03/25/25 01:24:11.788
  E0325 01:24:12.029082      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:13.029205      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:14.029920      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:15.030550      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:16.031595      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:17.031999      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 03/25/25 01:24:17.829
  STEP: looking for the results for each expected name from probers @ 03/25/25 01:24:17.832
  I0325 01:24:17.840642 25 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-6555.svc.cluster.local from pod dns-6555/dns-test-7025bb79-2335-4ff0-8d38-b5933dd0a221: the server could not find the requested resource (get pods dns-test-7025bb79-2335-4ff0-8d38-b5933dd0a221)
  I0325 01:24:17.843813 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-6555.svc.cluster.local from pod dns-6555/dns-test-7025bb79-2335-4ff0-8d38-b5933dd0a221: the server could not find the requested resource (get pods dns-test-7025bb79-2335-4ff0-8d38-b5933dd0a221)
  I0325 01:24:17.847496 25 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-6555.svc.cluster.local from pod dns-6555/dns-test-7025bb79-2335-4ff0-8d38-b5933dd0a221: the server could not find the requested resource (get pods dns-test-7025bb79-2335-4ff0-8d38-b5933dd0a221)
  I0325 01:24:17.850712 25 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-6555.svc.cluster.local from pod dns-6555/dns-test-7025bb79-2335-4ff0-8d38-b5933dd0a221: the server could not find the requested resource (get pods dns-test-7025bb79-2335-4ff0-8d38-b5933dd0a221)
  I0325 01:24:17.865547 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-6555.svc.cluster.local from pod dns-6555/dns-test-7025bb79-2335-4ff0-8d38-b5933dd0a221: the server could not find the requested resource (get pods dns-test-7025bb79-2335-4ff0-8d38-b5933dd0a221)
  I0325 01:24:17.868831 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-6555.svc.cluster.local from pod dns-6555/dns-test-7025bb79-2335-4ff0-8d38-b5933dd0a221: the server could not find the requested resource (get pods dns-test-7025bb79-2335-4ff0-8d38-b5933dd0a221)
  I0325 01:24:17.872275 25 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6555.svc.cluster.local from pod dns-6555/dns-test-7025bb79-2335-4ff0-8d38-b5933dd0a221: the server could not find the requested resource (get pods dns-test-7025bb79-2335-4ff0-8d38-b5933dd0a221)
  I0325 01:24:17.874875 25 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6555.svc.cluster.local from pod dns-6555/dns-test-7025bb79-2335-4ff0-8d38-b5933dd0a221: the server could not find the requested resource (get pods dns-test-7025bb79-2335-4ff0-8d38-b5933dd0a221)
  I0325 01:24:17.886449 25 dns_common.go:506] Lookups using dns-6555/dns-test-7025bb79-2335-4ff0-8d38-b5933dd0a221 failed for: [agnhost_udp@dns-test-service.dns-6555.svc.cluster.local agnhost_tcp@dns-test-service.dns-6555.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-6555.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-6555.svc.cluster.local jessie_udp@dns-test-service.dns-6555.svc.cluster.local jessie_tcp@dns-test-service.dns-6555.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-6555.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6555.svc.cluster.local]

  I0325 01:24:17.892062 25 dns_common.go:514] Pod client logs for webserver: 
  I0325 01:24:17.896882 25 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0325 01:24:17.902150 25 dns_common.go:514] Pod client logs for jessie-querier: 
  E0325 01:24:18.032638      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:19.033002      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:20.033125      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:21.033141      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:22.033278      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:24:22.880073 25 dns_common.go:546] DNS probes using dns-6555/dns-test-7025bb79-2335-4ff0-8d38-b5933dd0a221 succeeded

  STEP: deleting the pod @ 03/25/25 01:24:22.88
  STEP: deleting the test service @ 03/25/25 01:24:22.913
  STEP: deleting the test headless service @ 03/25/25 01:24:22.952
  I0325 01:24:22.964451 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6555" for this suite. @ 03/25/25 01:24:22.972
• [11.249 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 03/25/25 01:24:22.981
  I0325 01:24:22.981880 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename webhook @ 03/25/25 01:24:22.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:24:23.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:24:23.009
  E0325 01:24:23.034302      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 03/25/25 01:24:23.109
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/25/25 01:24:23.333
  STEP: Deploying the webhook pod @ 03/25/25 01:24:23.344
  STEP: Wait for the deployment to be ready @ 03/25/25 01:24:23.358
  I0325 01:24:23.368405 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0325 01:24:24.034563      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:25.034858      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:24:25.389107 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 25, 1, 24, 23, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 1, 24, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 1, 24, 23, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 1, 24, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0325 01:24:26.035260      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:27.036182      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:24:27.397784 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.March, 25, 1, 24, 23, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 1, 24, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 1, 24, 23, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 1, 24, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0325 01:24:28.036374      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:29.036707      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/25/25 01:24:29.393
  STEP: Verifying the service has paired with the endpoint @ 03/25/25 01:24:29.406
  E0325 01:24:30.036794      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:24:30.408394 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0325 01:24:30.416099 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  E0325 01:24:31.037457      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:32.038104      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:33.038850      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:34.038700      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:35.039597      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-1512-crds.webhook.example.com via the AdmissionRegistration API @ 03/25/25 01:24:35.929
  STEP: Creating a custom resource that should be mutated by the webhook @ 03/25/25 01:24:35.953
  E0325 01:24:36.040333      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:37.040756      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:38.042080      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:24:38.546845 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6517" for this suite. @ 03/25/25 01:24:38.552
  STEP: Destroying namespace "webhook-markers-319" for this suite. @ 03/25/25 01:24:38.56
• [15.585 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 03/25/25 01:24:38.569
  I0325 01:24:38.569190 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 03/25/25 01:24:38.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:24:38.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:24:38.597
  STEP: create the container to handle the HTTPGet hook request. @ 03/25/25 01:24:38.653
  E0325 01:24:39.042683      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:40.042827      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:41.043967      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:42.044535      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:43.045059      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:44.045443      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 03/25/25 01:24:44.693
  E0325 01:24:45.046045      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:46.046208      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 03/25/25 01:24:46.72
  STEP: delete the pod with lifecycle hook @ 03/25/25 01:24:46.729
  E0325 01:24:47.047116      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:48.047606      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:24:48.759326 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1832" for this suite. @ 03/25/25 01:24:48.765
• [10.205 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 03/25/25 01:24:48.774
  I0325 01:24:48.774436 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename aggregateddiscovery @ 03/25/25 01:24:48.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:24:48.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:24:48.797
  I0325 01:24:48.800798 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  E0325 01:24:49.048235      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:50.049168      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:51.050208      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:52.051163      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:53.051889      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:54.052362      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:55.053522      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:56.053894      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:24:56.857400 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-9219" for this suite. @ 03/25/25 01:24:56.863
• [8.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:54
  STEP: Creating a kubernetes client @ 03/25/25 01:24:56.872
  I0325 01:24:56.872531 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename dns @ 03/25/25 01:24:56.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:24:56.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:24:56.894
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 03/25/25 01:24:56.896
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 03/25/25 01:24:56.896
  STEP: creating a pod to probe DNS @ 03/25/25 01:24:56.896
  STEP: submitting the pod to kubernetes @ 03/25/25 01:24:56.896
  E0325 01:24:57.054979      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:24:58.055310      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 03/25/25 01:24:58.918
  STEP: looking for the results for each expected name from probers @ 03/25/25 01:24:58.921
  I0325 01:24:58.938172 25 dns_common.go:546] DNS probes using dns-7119/dns-test-bb19928b-d54a-474f-8cbd-ca735d1c64fa succeeded

  STEP: deleting the pod @ 03/25/25 01:24:58.938
  I0325 01:24:58.954929 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7119" for this suite. @ 03/25/25 01:24:58.96
• [2.095 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 03/25/25 01:24:58.967
  I0325 01:24:58.967674 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename var-expansion @ 03/25/25 01:24:58.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:24:58.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:24:58.988
  STEP: Creating a pod to test env composition @ 03/25/25 01:24:58.99
  E0325 01:24:59.055847      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:00.055998      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:01.056554      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:02.056585      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 01:25:03.018
  I0325 01:25:03.021835 25 output.go:207] Trying to get logs from node master-2 pod var-expansion-bf6a2043-ee67-428e-b2d8-89407f9b5cbc container dapi-container: <nil>
  STEP: delete the pod @ 03/25/25 01:25:03.027
  I0325 01:25:03.049568 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4286" for this suite. @ 03/25/25 01:25:03.053
  E0325 01:25:03.057191      25 retrywatcher.go:160] "Watch failed" err="context canceled"
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 03/25/25 01:25:03.06
  I0325 01:25:03.060952 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 03/25/25 01:25:03.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:25:03.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:25:03.085
  STEP: create the container to handle the HTTPGet hook request. @ 03/25/25 01:25:03.155
  E0325 01:25:04.057367      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:05.058258      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 03/25/25 01:25:05.186
  E0325 01:25:06.058263      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:07.059321      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 03/25/25 01:25:07.21
  E0325 01:25:08.059779      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:09.059665      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 03/25/25 01:25:09.228
  I0325 01:25:09.236796 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-326" for this suite. @ 03/25/25 01:25:09.243
• [6.191 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 03/25/25 01:25:09.253
  I0325 01:25:09.253035 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename gc @ 03/25/25 01:25:09.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:25:09.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:25:09.277
  STEP: create the rc1 @ 03/25/25 01:25:09.342
  STEP: create the rc2 @ 03/25/25 01:25:09.349
  E0325 01:25:10.059837      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:11.060379      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:12.061328      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:13.062589      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:14.063425      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:15.065046      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 03/25/25 01:25:15.366
  E0325 01:25:16.066331      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 03/25/25 01:25:16.087
  STEP: wait for the rc to be deleted @ 03/25/25 01:25:16.101
  E0325 01:25:17.067029      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:18.067262      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:19.068208      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:20.068468      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:21.069244      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:25:21.121914 25 garbage_collector.go:762] 95 pods remaining
  I0325 01:25:21.121972 25 garbage_collector.go:769] 68 pods has nil DeletionTimestamp
  I0325 01:25:21.121980 25 garbage_collector.go:770] 
  E0325 01:25:22.070110      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:23.070380      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:24.070383      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:25.070471      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:26.070719      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:25:26.115451 25 garbage_collector.go:762] 82 pods remaining
  I0325 01:25:26.115649 25 garbage_collector.go:769] 50 pods has nil DeletionTimestamp
  I0325 01:25:26.115924 25 garbage_collector.go:770] 
  E0325 01:25:27.070751      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:28.070898      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:29.071244      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:30.071786      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:31.071934      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 03/25/25 01:25:31.115
  I0325 01:25:31.187233 25 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0325 01:25:31.187311 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-25wq4" in namespace "gc-7292"
  I0325 01:25:31.202405 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2pbz2" in namespace "gc-7292"
  I0325 01:25:31.220780 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2v4kr" in namespace "gc-7292"
  I0325 01:25:31.241708 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4cvm8" in namespace "gc-7292"
  I0325 01:25:31.255179 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4hgb5" in namespace "gc-7292"
  I0325 01:25:31.281773 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4l6jl" in namespace "gc-7292"
  I0325 01:25:31.329605 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-54frw" in namespace "gc-7292"
  I0325 01:25:31.349240 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5fklw" in namespace "gc-7292"
  I0325 01:25:31.366417 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5pgvp" in namespace "gc-7292"
  I0325 01:25:31.388722 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5pjmx" in namespace "gc-7292"
  I0325 01:25:31.427186 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5pv8j" in namespace "gc-7292"
  I0325 01:25:31.450756 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5vxgd" in namespace "gc-7292"
  I0325 01:25:31.490121 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5zcm9" in namespace "gc-7292"
  I0325 01:25:31.539812 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-688qk" in namespace "gc-7292"
  I0325 01:25:31.576090 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6dq5q" in namespace "gc-7292"
  I0325 01:25:31.598521 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6mcv4" in namespace "gc-7292"
  I0325 01:25:31.612209 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6mxjp" in namespace "gc-7292"
  I0325 01:25:31.634822 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6nsbw" in namespace "gc-7292"
  I0325 01:25:31.692313 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6nvt6" in namespace "gc-7292"
  I0325 01:25:31.715186 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6qsdc" in namespace "gc-7292"
  I0325 01:25:31.743913 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-74kn8" in namespace "gc-7292"
  I0325 01:25:31.775702 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-76svb" in namespace "gc-7292"
  I0325 01:25:31.806217 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-79lkz" in namespace "gc-7292"
  I0325 01:25:31.832423 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7gxn2" in namespace "gc-7292"
  I0325 01:25:31.867987 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7tqjh" in namespace "gc-7292"
  I0325 01:25:31.896487 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-82cxb" in namespace "gc-7292"
  I0325 01:25:31.941174 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-84zbd" in namespace "gc-7292"
  I0325 01:25:31.981871 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8ccdz" in namespace "gc-7292"
  I0325 01:25:32.012166 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8lqck" in namespace "gc-7292"
  I0325 01:25:32.053775 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8xssc" in namespace "gc-7292"
  E0325 01:25:32.072924      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:25:32.108288 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9fczf" in namespace "gc-7292"
  I0325 01:25:32.163087 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9qsn2" in namespace "gc-7292"
  I0325 01:25:32.195370 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bfkg7" in namespace "gc-7292"
  I0325 01:25:32.238714 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-btjwr" in namespace "gc-7292"
  I0325 01:25:32.286373 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c4v9p" in namespace "gc-7292"
  I0325 01:25:32.320375 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cd4d4" in namespace "gc-7292"
  I0325 01:25:32.351202 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cwp4k" in namespace "gc-7292"
  I0325 01:25:32.388974 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d95fc" in namespace "gc-7292"
  I0325 01:25:32.414767 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-djsbj" in namespace "gc-7292"
  I0325 01:25:32.449723 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dwmgz" in namespace "gc-7292"
  I0325 01:25:32.481153 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f66hf" in namespace "gc-7292"
  I0325 01:25:32.503017 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f8f8h" in namespace "gc-7292"
  I0325 01:25:32.535037 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f8hj9" in namespace "gc-7292"
  I0325 01:25:32.563868 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fpjwq" in namespace "gc-7292"
  I0325 01:25:32.607837 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gbjwj" in namespace "gc-7292"
  I0325 01:25:32.627391 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gdlhl" in namespace "gc-7292"
  I0325 01:25:32.655772 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gqh4r" in namespace "gc-7292"
  I0325 01:25:32.674994 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gsd66" in namespace "gc-7292"
  I0325 01:25:32.689431 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gzjnt" in namespace "gc-7292"
  I0325 01:25:32.712158 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h5qdq" in namespace "gc-7292"
  I0325 01:25:32.749421 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7292" for this suite. @ 03/25/25 01:25:32.754
• [23.523 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:757
  STEP: Creating a kubernetes client @ 03/25/25 01:25:32.776
  I0325 01:25:32.776745 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename statefulset @ 03/25/25 01:25:32.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:25:32.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:25:32.815
  STEP: Creating service test in namespace statefulset-5161 @ 03/25/25 01:25:32.818
  STEP: Creating stateful set ss in namespace statefulset-5161 @ 03/25/25 01:25:32.827
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-5161 @ 03/25/25 01:25:32.834
  I0325 01:25:32.840916 25 wait.go:40] Found 0 stateful pods, waiting for 1
  E0325 01:25:33.073611      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:34.073697      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:35.073854      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:36.074335      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:37.074722      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:38.074946      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:39.075200      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:40.075401      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:41.075873      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:42.075997      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:25:42.876396 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 03/25/25 01:25:42.876
  I0325 01:25:42.879898 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=statefulset-5161 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0325 01:25:43.017110 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0325 01:25:43.017168 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0325 01:25:43.017180 25 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0325 01:25:43.020770 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0325 01:25:43.076826      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:44.077063      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:45.077243      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:46.078141      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:47.078572      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:48.078934      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:49.079172      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:50.079320      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:51.079619      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:52.081027      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:25:53.023163 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0325 01:25:53.023228 25 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0325 01:25:53.050846 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 9.999999712s
  E0325 01:25:53.081915      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:25:54.082394      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:25:54.337107 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 8.984918189s
  E0325 01:25:55.082492      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:25:55.342512 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 7.69818779s
  E0325 01:25:56.082988      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:25:56.360514 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 6.692436164s
  E0325 01:25:57.083167      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:25:57.368906 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 5.674548555s
  E0325 01:25:58.083394      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:25:58.374456 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 4.66655099s
  E0325 01:25:59.083600      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:25:59.379995 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 3.66119663s
  E0325 01:26:00.083635      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:26:00.384554 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 2.654953555s
  E0325 01:26:01.083782      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:26:01.390332 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 1.651215468s
  E0325 01:26:02.083892      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:26:02.396709 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 644.744266ms
  E0325 01:26:03.084408      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-5161 @ 03/25/25 01:26:03.397
  I0325 01:26:03.422418 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=statefulset-5161 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0325 01:26:03.543846 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0325 01:26:03.543992 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0325 01:26:03.544017 25 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0325 01:26:03.544067 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=statefulset-5161 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0325 01:26:03.660669 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0325 01:26:03.660724 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0325 01:26:03.660735 25 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0325 01:26:03.660788 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=statefulset-5161 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0325 01:26:03.818062 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0325 01:26:03.818117 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0325 01:26:03.818142 25 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0325 01:26:03.823430 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E0325 01:26:04.085003      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:26:05.086071      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:26:06.086384      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:26:07.086913      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:26:08.087059      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:26:09.087131      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:26:10.087813      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:26:11.088249      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:26:12.089170      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:26:13.089420      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:26:13.822952 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0325 01:26:13.823001 25 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0325 01:26:13.823009 25 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 03/25/25 01:26:13.823
  I0325 01:26:13.924275 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=statefulset-5161 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0325 01:26:14.040526 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0325 01:26:14.040577 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0325 01:26:14.040588 25 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0325 01:26:14.040634 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=statefulset-5161 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0325 01:26:14.090200      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:26:14.192613 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0325 01:26:14.192680 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0325 01:26:14.192707 25 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0325 01:26:14.192786 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=statefulset-5161 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0325 01:26:14.314315 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0325 01:26:14.314369 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0325 01:26:14.314380 25 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0325 01:26:14.314390 25 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0325 01:26:14.319438 25 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 2
  E0325 01:26:15.090292      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:26:16.090399      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:26:17.090574      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:26:18.090892      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:26:19.091013      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:26:20.091779      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:26:21.091948      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:26:22.092650      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:26:23.093026      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:26:24.093131      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:26:24.322407 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0325 01:26:24.322461 25 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0325 01:26:24.322468 25 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0325 01:26:24.343102 25 resource.go:168] POD   NODE      PHASE    GRACE  CONDITIONS
  I0325 01:26:24.343232 25 resource.go:175] ss-0  master-2  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-03-25 01:25:34 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-03-25 01:25:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-03-25 01:26:14 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-03-25 01:26:14 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-03-25 01:25:32 +0000 UTC  }]
  I0325 01:26:24.343256 25 resource.go:175] ss-1  master-3  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-03-25 01:25:54 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-03-25 01:25:53 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-03-25 01:26:14 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-03-25 01:26:14 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-03-25 01:25:53 +0000 UTC  }]
  I0325 01:26:24.343276 25 resource.go:175] ss-2  worker-2  Running  30s    [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-03-25 01:25:54 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-03-25 01:25:53 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-03-25 01:26:14 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-03-25 01:26:14 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-03-25 01:25:53 +0000 UTC  }]
  I0325 01:26:24.343288 25 resource.go:178] 
  I0325 01:26:24.343297 25 statefulset.go:2416] StatefulSet ss has not reached scale 0, at 3
  E0325 01:26:25.093557      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:26:25.348129 25 resource.go:168] POD   NODE      PHASE      GRACE  CONDITIONS
  I0325 01:26:25.348316 25 resource.go:175] ss-1  master-3  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-03-25 01:26:24 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-03-25 01:25:53 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-03-25 01:26:14 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-03-25 01:26:14 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-03-25 01:25:53 +0000 UTC  }]
  I0325 01:26:25.348354 25 resource.go:178] 
  I0325 01:26:25.348390 25 statefulset.go:2416] StatefulSet ss has not reached scale 0, at 1
  E0325 01:26:26.093839      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:26:26.353334 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 7.984254566s
  E0325 01:26:27.094197      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:26:27.359494 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 6.97916517s
  E0325 01:26:28.094420      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:26:28.365596 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 5.973152445s
  E0325 01:26:29.094485      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:26:29.371426 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 4.966787809s
  E0325 01:26:30.095513      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:26:30.377119 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 3.960992645s
  E0325 01:26:31.095596      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:26:31.382949 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 2.956238148s
  E0325 01:26:32.096487      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:26:32.387675 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 1.949868122s
  E0325 01:26:33.097017      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:26:33.392664 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 945.246874ms
  E0325 01:26:34.097193      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-5161 @ 03/25/25 01:26:34.393
  I0325 01:26:34.398087 25 rest.go:152] Scaling statefulset ss to 0
  I0325 01:26:34.403587 25 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0325 01:26:34.406445 25 statefulset.go:138] Deleting all statefulset in ns statefulset-5161
  I0325 01:26:34.409693 25 rest.go:152] Scaling statefulset ss to 0
  I0325 01:26:34.413970 25 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0325 01:26:34.416328 25 rest.go:90] Deleting statefulset ss
  I0325 01:26:34.430067 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5161" for this suite. @ 03/25/25 01:26:34.434
• [61.678 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 03/25/25 01:26:34.455
  I0325 01:26:34.455959 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename container-probe @ 03/25/25 01:26:34.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:26:34.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:26:34.48
  STEP: Creating pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388 @ 03/25/25 01:26:34.483
  E0325 01:26:35.097327      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:26:36.097469      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 03/25/25 01:26:36.502
  I0325 01:26:36.505106 25 container_probe.go:1749] Initial restart count of pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 is 0
  I0325 01:26:36.508441 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:26:37.098213      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:26:38.099033      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:26:38.513326 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:26:39.098949      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:26:40.099568      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:26:40.518064 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:26:41.100166      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:26:42.101065      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:26:42.523005 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:26:43.101653      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:26:44.102188      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:26:44.534463 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:26:45.103142      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:26:46.103325      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:26:46.538760 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:26:47.103402      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:26:48.103521      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:26:48.544929 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:26:49.103666      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:26:50.103749      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:26:50.549802 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:26:51.105151      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:26:52.106070      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:26:52.555410 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:26:53.106207      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:26:54.106476      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:26:54.560413 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:26:55.106994      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:26:56.107104      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:26:56.565961 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:26:57.107832      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:26:58.108121      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:26:58.572090 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:26:59.108997      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:27:00.108685      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:27:00.575392 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:27:01.108989      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:27:02.110012      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:27:02.582133 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:27:03.110590      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:27:04.110767      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:27:04.587968 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:27:05.111588      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:27:06.111744      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:27:06.591999 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:27:07.112644      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:27:08.113183      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:27:08.596893 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:27:09.114159      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:27:10.115830      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:27:10.600482 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:27:11.115078      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:27:12.115234      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:27:12.604896 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:27:13.115553      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:27:14.115665      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:27:14.609513 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:27:15.116062      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:27:16.116219      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:27:16.613985 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:27:17.116389      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:27:18.116549      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:27:18.619511 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:27:19.116994      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:27:20.117986      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:27:20.624481 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:27:21.118062      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:27:22.118181      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:27:22.628890 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:27:23.118306      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:27:24.119440      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:27:24.633441 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:27:25.119958      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:27:26.120278      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:27:26.641235 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:27:27.120769      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:27:28.121140      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:27:28.645718 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:27:29.122166      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:27:30.122602      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:27:30.649809 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:27:31.123118      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:27:32.124087      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:27:32.655021 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:27:33.124192      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:27:34.124555      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:27:34.661195 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:27:35.125370      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:27:36.125683      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:27:36.666788 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:27:37.126346      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:27:38.126683      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:27:38.672443 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:27:39.126815      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:27:40.126962      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:27:40.676800 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:27:41.127860      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:27:42.128648      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:27:42.681731 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:27:43.129226      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:27:44.130108      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:27:44.688371 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:27:45.131019      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:27:46.131594      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:27:46.705409 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:27:47.131908      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:27:48.132469      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:27:48.710064 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  E0325 01:27:49.133607      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:27:50.134601      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:27:50.715729 25 container_probe.go:1759] Get pod test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 in namespace container-probe-2388
  I0325 01:27:50.715801 25 container_probe.go:1763] Restart count of pod container-probe-2388/test-grpc-25f702a7-e892-4bc6-b6aa-c4e681345a18 is now 1 (1m14.210642245s elapsed)
  STEP: deleting the pod @ 03/25/25 01:27:50.717
  I0325 01:27:50.740572 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2388" for this suite. @ 03/25/25 01:27:50.748
• [76.315 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 03/25/25 01:27:50.771
  I0325 01:27:50.771504 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename disruption @ 03/25/25 01:27:50.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:27:50.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:27:50.81
  STEP: Waiting for the pdb to be processed @ 03/25/25 01:27:50.822
  E0325 01:27:51.134740      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:27:52.135214      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 03/25/25 01:27:52.827
  STEP: Waiting for all pods to be running @ 03/25/25 01:27:52.846
  I0325 01:27:52.850342 25 disruption.go:691] running pods: 0 < 1
  E0325 01:27:53.135788      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:27:54.136056      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 03/25/25 01:27:54.852
  STEP: Waiting for the pdb to be processed @ 03/25/25 01:27:54.867
  STEP: Patching PodDisruptionBudget status @ 03/25/25 01:27:54.882
  STEP: Waiting for the pdb to be processed @ 03/25/25 01:27:54.904
  I0325 01:27:54.907037 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7520" for this suite. @ 03/25/25 01:27:54.922
• [4.160 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 03/25/25 01:27:54.931
  I0325 01:27:54.931155 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename secrets @ 03/25/25 01:27:54.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:27:54.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:27:54.962
  I0325 01:27:55.042411 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5598" for this suite. @ 03/25/25 01:27:55.047
• [0.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 03/25/25 01:27:55.057
  I0325 01:27:55.057096 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename var-expansion @ 03/25/25 01:27:55.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:27:55.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:27:55.107
  STEP: creating the pod @ 03/25/25 01:27:55.11
  E0325 01:27:55.136409      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting for pod running @ 03/25/25 01:27:55.155
  E0325 01:27:56.137034      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:27:57.137357      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 03/25/25 01:27:57.162
  I0325 01:27:57.166045 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-778 PodName:var-expansion-a1d3461e-1427-4dac-987b-99b445c8d64b ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 01:27:57.166096 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 01:27:57.166175 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-778/pods/var-expansion-a1d3461e-1427-4dac-987b-99b445c8d64b/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 03/25/25 01:27:57.229
  I0325 01:27:57.235249 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-778 PodName:var-expansion-a1d3461e-1427-4dac-987b-99b445c8d64b ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 01:27:57.235293 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 01:27:57.235401 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-778/pods/var-expansion-a1d3461e-1427-4dac-987b-99b445c8d64b/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 03/25/25 01:27:57.296
  I0325 01:27:57.824174 25 pod_client.go:173] Successfully updated pod "var-expansion-a1d3461e-1427-4dac-987b-99b445c8d64b"
  STEP: waiting for annotated pod running @ 03/25/25 01:27:57.824
  STEP: deleting the pod gracefully @ 03/25/25 01:27:57.827
  I0325 01:27:57.827090 25 delete.go:62] Deleting pod "var-expansion-a1d3461e-1427-4dac-987b-99b445c8d64b" in namespace "var-expansion-778"
  I0325 01:27:57.844220 25 delete.go:70] Wait up to 5m0s for pod "var-expansion-a1d3461e-1427-4dac-987b-99b445c8d64b" to be fully deleted
  E0325 01:27:58.138443      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:27:59.138736      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:00.139829      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:01.140154      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:02.140035      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:03.140151      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:04.140968      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:05.141061      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:06.141410      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:07.141575      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:08.141942      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:09.142287      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:10.143375      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:11.144140      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:12.145157      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:13.145540      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:14.145834      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:15.145906      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:16.146803      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:17.147142      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:18.147298      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:19.147579      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:20.147779      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:21.148106      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:22.149018      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:23.149325      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:24.150333      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:25.150676      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:26.151222      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:27.151614      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:28.157633      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:29.152193      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:28:29.927030 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-778" for this suite. @ 03/25/25 01:28:29.933
• [34.893 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 03/25/25 01:28:29.95
  I0325 01:28:29.950777 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename projected @ 03/25/25 01:28:29.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:28:29.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:28:29.977
  STEP: Creating a pod to test downward API volume plugin @ 03/25/25 01:28:29.992
  E0325 01:28:30.153009      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:31.153891      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:32.154816      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:33.155093      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 01:28:34.02
  I0325 01:28:34.023079 25 output.go:207] Trying to get logs from node master-2 pod downwardapi-volume-6e07036d-bbb9-48ec-ae52-d8e534c0eba1 container client-container: <nil>
  STEP: delete the pod @ 03/25/25 01:28:34.033
  I0325 01:28:34.091875 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5823" for this suite. @ 03/25/25 01:28:34.098
• [4.163 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3164
  STEP: Creating a kubernetes client @ 03/25/25 01:28:34.116
  I0325 01:28:34.116275 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename services @ 03/25/25 01:28:34.117
  E0325 01:28:34.155604      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:28:34.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:28:34.16
  STEP: fetching services @ 03/25/25 01:28:34.163
  I0325 01:28:34.168155 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9934" for this suite. @ 03/25/25 01:28:34.207
• [0.107 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 03/25/25 01:28:34.224
  I0325 01:28:34.224273 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename var-expansion @ 03/25/25 01:28:34.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:28:34.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:28:34.248
  STEP: creating the pod with failed condition @ 03/25/25 01:28:34.254
  E0325 01:28:35.156191      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:36.156457      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:37.157087      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:38.158142      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:39.158708      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:40.159664      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:41.160457      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:42.161440      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:43.162339      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:44.162702      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:45.163434      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:46.163727      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:47.163772      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:48.164183      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:49.164449      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:50.165420      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:51.165953      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:52.166284      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:53.166727      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:54.167067      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:55.167275      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:56.167595      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:57.168210      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:58.168501      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:28:59.169408      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:00.169698      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:01.169721      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:02.170150      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:03.170313      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:04.170613      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:05.171605      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:06.172016      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:07.173084      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:08.173414      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:09.174206      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:10.174478      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:11.174833      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:12.174616      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:13.174692      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:14.174931      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:15.175039      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:16.175153      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:17.175953      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:18.176235      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:19.177123      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:20.177413      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:21.177592      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:22.177614      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:23.177709      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:24.178412      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:25.178518      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:26.178652      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:27.178748      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:28.179683      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:29.179735      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:30.179941      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:31.180070      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:32.181026      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:33.181744      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:34.181685      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:35.181957      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:36.182231      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:37.182378      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:38.182659      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:39.183769      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:40.184396      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:41.184988      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:42.185150      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:43.186116      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:44.186260      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:45.186468      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:46.186854      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:47.187352      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:48.187492      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:49.187652      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:50.187920      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:51.187958      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:52.188545      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:53.189521      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:54.190060      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:55.190250      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:56.190719      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:57.191082      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:58.191651      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:29:59.192513      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:00.192823      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:01.193753      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:02.194410      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:03.194565      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:04.194854      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:05.194953      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:06.195282      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:07.196270      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:08.197270      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:09.198238      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:10.198471      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:11.199464      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:12.200188      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:13.200551      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:14.200684      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:15.201066      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:16.201152      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:17.201765      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:18.201879      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:19.202305      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:20.202427      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:21.202987      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:22.203117      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:23.203543      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:24.203714      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:25.204233      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:26.204448      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:27.205269      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:28.205407      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:29.205827      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:30.205955      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:31.206261      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:32.206564      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:33.206961      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:34.207267      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: updating the pod @ 03/25/25 01:30:34.27
  I0325 01:30:34.787648 25 pod_client.go:173] Successfully updated pod "var-expansion-54e347eb-257e-4e32-a7d7-4bda6ba08cc3"
  STEP: waiting for pod running @ 03/25/25 01:30:34.788
  E0325 01:30:35.207485      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:36.207746      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 03/25/25 01:30:36.796
  I0325 01:30:36.796426 25 delete.go:62] Deleting pod "var-expansion-54e347eb-257e-4e32-a7d7-4bda6ba08cc3" in namespace "var-expansion-6874"
  I0325 01:30:36.809232 25 delete.go:70] Wait up to 5m0s for pod "var-expansion-54e347eb-257e-4e32-a7d7-4bda6ba08cc3" to be fully deleted
  E0325 01:30:37.208791      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:38.209184      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:39.209607      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:40.209936      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:41.210354      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:42.210702      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:43.211546      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:44.212171      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:45.212598      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:46.213505      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:47.214492      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:48.214898      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:49.215995      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:50.216253      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:51.216427      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:52.216539      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:53.216741      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:54.217134      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:55.217179      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:56.217725      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:57.217840      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:58.218134      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:30:59.218107      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:00.219241      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:01.219869      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:02.220272      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:03.220539      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:04.220960      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:05.221839      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:06.222196      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:07.222512      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:08.222877      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:31:08.910975 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6874" for this suite. @ 03/25/25 01:31:08.916
• [154.707 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 03/25/25 01:31:08.931
  I0325 01:31:08.931627 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename daemonsets @ 03/25/25 01:31:08.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:31:08.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:31:08.959
  I0325 01:31:09.031864 25 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 03/25/25 01:31:09.038
  I0325 01:31:09.078075 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0325 01:31:09.078147 25 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 03/25/25 01:31:09.078
  I0325 01:31:09.145755 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0325 01:31:09.145890 25 fixtures.go:131] Node master-2 is running 0 daemon pod, expected 1
  E0325 01:31:09.226236      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:31:10.138298 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0325 01:31:10.138346 25 fixtures.go:131] Node master-2 is running 0 daemon pod, expected 1
  E0325 01:31:10.226449      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:31:11.139768 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0325 01:31:11.139963 25 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 03/25/25 01:31:11.143
  I0325 01:31:11.188072 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0325 01:31:11.193732 25 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 03/25/25 01:31:11.193
  E0325 01:31:11.226754      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:31:11.240907 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0325 01:31:11.241312 25 fixtures.go:131] Node master-2 is running 0 daemon pod, expected 1
  I0325 01:31:12.225037 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0325 01:31:12.225194 25 fixtures.go:131] Node master-2 is running 0 daemon pod, expected 1
  E0325 01:31:12.227129      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:31:13.209358 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0325 01:31:13.209505 25 fixtures.go:131] Node master-2 is running 0 daemon pod, expected 1
  E0325 01:31:13.227419      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:31:14.207193 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0325 01:31:14.207343 25 fixtures.go:131] Node master-2 is running 0 daemon pod, expected 1
  E0325 01:31:14.227761      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:31:15.208856 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0325 01:31:15.209081 25 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 03/25/25 01:31:15.215
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8356, will wait for the garbage collector to delete the pods @ 03/25/25 01:31:15.215
  E0325 01:31:15.227800      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:31:15.279609 25 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.646393ms
  I0325 01:31:15.379975 25 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.355919ms
  E0325 01:31:16.228363      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:31:16.985289 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0325 01:31:16.985347 25 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0325 01:31:16.988842 25 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"2832904"},"items":null}

  I0325 01:31:16.991835 25 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"2832904"},"items":null}

  I0325 01:31:17.047058 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8356" for this suite. @ 03/25/25 01:31:17.149
• [8.226 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 03/25/25 01:31:17.158
  I0325 01:31:17.158165 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename kubelet-test @ 03/25/25 01:31:17.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:31:17.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:31:17.181
  E0325 01:31:17.229059      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:18.229689      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:31:19.213553 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5557" for this suite. @ 03/25/25 01:31:19.218
  E0325 01:31:19.229539      25 retrywatcher.go:160] "Watch failed" err="context canceled"
• [2.076 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 03/25/25 01:31:19.236
  I0325 01:31:19.236530 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename deployment @ 03/25/25 01:31:19.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:31:19.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:31:19.259
  I0325 01:31:19.261976 25 deployment.go:1645] Creating simple deployment test-new-deployment
  I0325 01:31:19.277568 25 deployment.go:223] new replicaset for deployment "test-new-deployment" is yet to be created
  E0325 01:31:20.229913      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:21.230621      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 03/25/25 01:31:21.295
  STEP: updating a scale subresource @ 03/25/25 01:31:21.297
  STEP: verifying the deployment Spec.Replicas was modified @ 03/25/25 01:31:21.306
  STEP: Patch a scale subresource @ 03/25/25 01:31:21.309
  I0325 01:31:21.328644 25 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7206",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "37b54b8d-9a3f-4331-8d22-bc84930a8a1b",
      ResourceVersion: (string) (len=7) "2832985",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878463079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-685b768f58\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0325 01:31:21.344264 25 deployment.go:40] New ReplicaSet "test-new-deployment-685b768f58" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7206",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fe708e8d-0a2c-485e-921f-51b8d88cec2c",
      ResourceVersion: (string) (len=7) "2832989",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878463079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "37b54b8d-9a3f-4331-8d22-bc84930a8a1b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 37 62 35 34 62  38 64 2d 39 61 33 66 2d  |\"37b54b8d-9a3f-|
              00000120  34 33 33 31 2d 38 64 32  32 2d 62 63 38 34 39 33  |4331-8d22-bc8493|
              00000130  30 61 38 61 31 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0a8a1b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0325 01:31:21.354757 25 deployment.go:68] Pod "test-new-deployment-685b768f58-2dtzm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-2dtzm",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7206",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ab0a153f-017c-4dc7-b42b-bb1b43ce7eab",
      ResourceVersion: (string) (len=7) "2832979",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878463079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "fe708e8d-0a2c-485e-921f-51b8d88cec2c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 65  37 30 38 65 38 64 2d 30  |d\":\"fe708e8d-0|
              00000090  61 32 63 2d 34 38 35 65  2d 39 32 31 66 2d 35 31  |a2c-485e-921f-51|
              000000a0  62 38 64 38 38 63 65 63  32 63 5c 22 7d 22 3a 7b  |b8d88cec2c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  31 35 38 5c 22 7d 22 3a  |.233.65.158\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q6bdw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q6bdw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.10.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.10.146"
        }
      },
      PodIP: (string) (len=13) "10.233.65.158",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.158"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878463079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878463080,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e34824dae9d3ef69f19943086d2dcd8855b0c89f574ab20c9df36f0cfdf14dc3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-q6bdw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 01:31:21.357275 25 deployment.go:68] Pod "test-new-deployment-685b768f58-dz89k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-dz89k",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7206",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0c2cb821-c245-4fe7-9a98-c2738de5e406",
      ResourceVersion: (string) (len=7) "2832993",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878463081,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "fe708e8d-0a2c-485e-921f-51b8d88cec2c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 65  37 30 38 65 38 64 2d 30  |d\":\"fe708e8d-0|
              00000090  61 32 63 2d 34 38 35 65  2d 39 32 31 66 2d 35 31  |a2c-485e-921f-51|
              000000a0  62 38 64 38 38 63 65 63  32 63 5c 22 7d 22 3a 7b  |b8d88cec2c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r4zcd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r4zcd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.10.227",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.10.227"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878463081,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-r4zcd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 01:31:21.358470 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7206" for this suite. @ 03/25/25 01:31:21.367
• [2.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 03/25/25 01:31:21.384
  I0325 01:31:21.384854 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename gc @ 03/25/25 01:31:21.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:31:21.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:31:21.429
  STEP: create the deployment @ 03/25/25 01:31:21.432
  W0325 01:31:21.438553      25 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 03/25/25 01:31:21.438
  STEP: delete the deployment @ 03/25/25 01:31:21.947
  STEP: wait for all rs to be garbage collected @ 03/25/25 01:31:21.954
  STEP: expected 0 pods, got 2 pods @ 03/25/25 01:31:21.974
  E0325 01:31:22.231679      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 03/25/25 01:31:22.464
  I0325 01:31:22.535820 25 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0325 01:31:22.536625 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-748" for this suite. @ 03/25/25 01:31:22.545
• [1.168 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 03/25/25 01:31:22.553
  I0325 01:31:22.553484 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename webhook @ 03/25/25 01:31:22.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:31:22.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:31:22.577
  STEP: Setting up server cert @ 03/25/25 01:31:22.675
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/25/25 01:31:23.198
  STEP: Deploying the webhook pod @ 03/25/25 01:31:23.208
  STEP: Wait for the deployment to be ready @ 03/25/25 01:31:23.226
  E0325 01:31:23.232375      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:31:23.242916 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0325 01:31:24.232578      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:25.233370      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/25/25 01:31:25.255
  STEP: Verifying the service has paired with the endpoint @ 03/25/25 01:31:25.403
  E0325 01:31:26.234083      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:31:26.404973 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 03/25/25 01:31:26.413
  STEP: create a configmap that should be updated by the webhook @ 03/25/25 01:31:26.436
  I0325 01:31:26.528155 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5360" for this suite. @ 03/25/25 01:31:26.533
  STEP: Destroying namespace "webhook-markers-1849" for this suite. @ 03/25/25 01:31:26.555
• [4.010 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 03/25/25 01:31:26.566
  I0325 01:31:26.566436 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/25/25 01:31:26.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:31:26.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:31:26.593
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 03/25/25 01:31:26.599
  I0325 01:31:26.600215 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  E0325 01:31:27.234307      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:28.234462      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:29.235244      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:30.235715      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:31.236358      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:32.237413      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:33.237764      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:34.238814      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:31:34.339261 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  E0325 01:31:35.239575      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:36.239568      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:37.239947      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:38.240139      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:39.241000      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:40.241842      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:41.242626      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:42.242933      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:43.243793      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:44.244957      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:45.245813      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:46.246591      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:47.246880      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:31:47.960078 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3759" for this suite. @ 03/25/25 01:31:47.968
• [21.412 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 03/25/25 01:31:47.979
  I0325 01:31:47.979054 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename services @ 03/25/25 01:31:47.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:31:48.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:31:48.01
  STEP: creating service in namespace services-635 @ 03/25/25 01:31:48.013
  STEP: creating service affinity-clusterip in namespace services-635 @ 03/25/25 01:31:48.013
  STEP: creating replication controller affinity-clusterip in namespace services-635 @ 03/25/25 01:31:48.026
  I0325 01:31:48.037644      25 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-635, replica count: 3
  E0325 01:31:48.247561      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:49.247641      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:50.247836      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:31:51.089983      25 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 0 running, 3 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0325 01:31:51.248504      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:52.248645      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:53.248716      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:31:54.090968      25 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0325 01:31:54.100240 25 resource.go:361] Creating new exec pod
  E0325 01:31:54.248753      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:55.249052      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:56.249981      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:31:57.124320 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-635 exec execpod-affinityt268f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  E0325 01:31:57.251263      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:31:57.262749 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.233.11.114) 80 port [tcp/http] succeeded!\n"
  I0325 01:31:57.262812 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0325 01:31:57.262893 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-635 exec execpod-affinityt268f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.11.114 80'
  I0325 01:31:57.391464 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.11.114 80\nConnection to 10.233.11.114 80 port [tcp/http] succeeded!\n"
  I0325 01:31:57.391522 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0325 01:31:57.391611 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-635 exec execpod-affinityt268f -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.11.114:80/ ; done'
  I0325 01:31:57.568203 25 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.11.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.11.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.11.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.11.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.11.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.11.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.11.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.11.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.11.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.11.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.11.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.11.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.11.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.11.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.11.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.11.114:80/\n"
  I0325 01:31:57.568267 25 builder.go:147] stdout: "\naffinity-clusterip-nd4sd\naffinity-clusterip-nd4sd\naffinity-clusterip-nd4sd\naffinity-clusterip-nd4sd\naffinity-clusterip-nd4sd\naffinity-clusterip-nd4sd\naffinity-clusterip-nd4sd\naffinity-clusterip-nd4sd\naffinity-clusterip-nd4sd\naffinity-clusterip-nd4sd\naffinity-clusterip-nd4sd\naffinity-clusterip-nd4sd\naffinity-clusterip-nd4sd\naffinity-clusterip-nd4sd\naffinity-clusterip-nd4sd\naffinity-clusterip-nd4sd"
  I0325 01:31:57.568280 25 service.go:242] Received response from host: affinity-clusterip-nd4sd
  I0325 01:31:57.568294 25 service.go:242] Received response from host: affinity-clusterip-nd4sd
  I0325 01:31:57.568300 25 service.go:242] Received response from host: affinity-clusterip-nd4sd
  I0325 01:31:57.568306 25 service.go:242] Received response from host: affinity-clusterip-nd4sd
  I0325 01:31:57.568312 25 service.go:242] Received response from host: affinity-clusterip-nd4sd
  I0325 01:31:57.568317 25 service.go:242] Received response from host: affinity-clusterip-nd4sd
  I0325 01:31:57.568323 25 service.go:242] Received response from host: affinity-clusterip-nd4sd
  I0325 01:31:57.568328 25 service.go:242] Received response from host: affinity-clusterip-nd4sd
  I0325 01:31:57.568334 25 service.go:242] Received response from host: affinity-clusterip-nd4sd
  I0325 01:31:57.568339 25 service.go:242] Received response from host: affinity-clusterip-nd4sd
  I0325 01:31:57.568343 25 service.go:242] Received response from host: affinity-clusterip-nd4sd
  I0325 01:31:57.568348 25 service.go:242] Received response from host: affinity-clusterip-nd4sd
  I0325 01:31:57.568353 25 service.go:242] Received response from host: affinity-clusterip-nd4sd
  I0325 01:31:57.568358 25 service.go:242] Received response from host: affinity-clusterip-nd4sd
  I0325 01:31:57.568363 25 service.go:242] Received response from host: affinity-clusterip-nd4sd
  I0325 01:31:57.568368 25 service.go:242] Received response from host: affinity-clusterip-nd4sd
  I0325 01:31:57.568504 25 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-635, will wait for the garbage collector to delete the pods @ 03/25/25 01:31:57.591
  I0325 01:31:57.655936 25 resources.go:139] Deleting ReplicationController affinity-clusterip took: 10.507854ms
  I0325 01:31:57.756739 25 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.795751ms
  E0325 01:31:58.252205      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:31:59.253120      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:00.254044      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:32:00.681210 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-635" for this suite. @ 03/25/25 01:32:00.686
• [12.715 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 03/25/25 01:32:00.694
  I0325 01:32:00.694871 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename configmap @ 03/25/25 01:32:00.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:32:00.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:32:00.725
  STEP: Creating configMap with name configmap-test-upd-b3658b7d-150e-4ff7-abc4-6dc6e448e2e0 @ 03/25/25 01:32:00.786
  STEP: Creating the pod @ 03/25/25 01:32:00.802
  E0325 01:32:01.254696      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:02.254966      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:03.255245      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:04.256104      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:05.256897      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:06.257099      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-b3658b7d-150e-4ff7-abc4-6dc6e448e2e0 @ 03/25/25 01:32:06.994
  STEP: waiting to observe update in volume @ 03/25/25 01:32:07
  E0325 01:32:07.257888      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:08.257984      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:09.258751      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:10.258848      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:11.258872      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:12.259330      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:13.260409      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:14.261212      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:15.262130      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:16.262989      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:17.263286      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:18.263501      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:19.263890      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:20.264688      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:21.265025      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:22.265142      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:23.265649      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:24.265800      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:25.266030      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:26.266327      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:27.266842      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:28.267913      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:29.268083      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:30.268082      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:31.268414      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:32.268928      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:33.269243      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:34.269445      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:35.269946      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:36.270429      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:37.270655      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:38.270758      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:39.270995      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:40.271836      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:41.271945      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:42.272994      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:43.273199      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:44.273574      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:45.273678      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:46.273835      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:47.273932      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:48.274055      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:49.274136      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:50.274318      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:51.275275      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:52.274670      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:53.274873      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:54.275259      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:55.275539      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:56.275590      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:57.275908      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:58.276116      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:32:59.276426      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:00.276603      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:01.276769      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:02.277809      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:03.278380      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:04.278596      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:05.278761      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:06.279387      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:07.279645      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:08.279779      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:09.279972      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:10.281173      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:11.281497      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:12.281705      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:13.281987      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:14.282334      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:15.282500      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:16.282668      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:17.282964      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:18.283156      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:19.283475      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:20.284249      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:21.284515      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:22.285233      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:23.288059      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:24.288562      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:25.288848      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:26.289780      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:27.289983      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:28.290725      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:29.290888      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:30.290886      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:31.291123      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:32.292034      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:33.292062      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:34.292398      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:35.292644      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:33:35.744940 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6821" for this suite. @ 03/25/25 01:33:35.749
• [95.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 03/25/25 01:33:35.759
  I0325 01:33:35.759248 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename configmap @ 03/25/25 01:33:35.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:33:35.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:33:35.787
  STEP: Creating configMap that has name configmap-test-emptyKey-7b7f0048-cdca-4cc8-bad5-c141df19ae73 @ 03/25/25 01:33:35.79
  I0325 01:33:35.791676 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5777" for this suite. @ 03/25/25 01:33:35.849
• [0.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 03/25/25 01:33:35.858
  I0325 01:33:35.858606 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename podtemplate @ 03/25/25 01:33:35.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:33:35.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:33:35.891
  STEP: Create set of pod templates @ 03/25/25 01:33:35.893
  I0325 01:33:35.903474 25 podtemplates.go:143] created test-podtemplate-1
  I0325 01:33:35.909444 25 podtemplates.go:143] created test-podtemplate-2
  I0325 01:33:35.914997 25 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 03/25/25 01:33:35.915
  STEP: delete collection of pod templates @ 03/25/25 01:33:35.918
  I0325 01:33:35.918288 25 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 03/25/25 01:33:35.942
  I0325 01:33:35.942229 25 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0325 01:33:35.945055 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1802" for this suite. @ 03/25/25 01:33:35.949
• [0.100 seconds]
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 03/25/25 01:33:35.958
  I0325 01:33:35.958509 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename security-context-test @ 03/25/25 01:33:35.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:33:35.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:33:35.989
  E0325 01:33:36.293509      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:37.294101      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:38.294954      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:39.295250      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:33:40.044857 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2023" for this suite. @ 03/25/25 01:33:40.049
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 03/25/25 01:33:40.057
  I0325 01:33:40.057044 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename replicaset @ 03/25/25 01:33:40.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:33:40.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:33:40.088
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 03/25/25 01:33:40.091
  E0325 01:33:40.295768      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:41.297169      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 03/25/25 01:33:42.121
  STEP: Then the orphan pod is adopted @ 03/25/25 01:33:42.126
  E0325 01:33:42.297826      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 03/25/25 01:33:43.142
  I0325 01:33:43.145796 25 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 03/25/25 01:33:43.157
  E0325 01:33:43.297915      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:33:44.277834 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0325 01:33:44.298801      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replicaset-8001" for this suite. @ 03/25/25 01:33:44.427
• [4.379 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 03/25/25 01:33:44.436
  I0325 01:33:44.437013 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename gc @ 03/25/25 01:33:44.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:33:44.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:33:44.475
  I0325 01:33:44.522048 25 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"cde39ac4-cd83-4b0b-93b2-2d476447dc9b", Controller:(*bool)(0xc0023882da), BlockOwnerDeletion:(*bool)(0xc0023882db)}}
  I0325 01:33:44.541243 25 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"a9468337-5e69-4d20-ad90-2ca8638b557d", Controller:(*bool)(0xc007a671ea), BlockOwnerDeletion:(*bool)(0xc007a671eb)}}
  I0325 01:33:44.561308 25 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"bf7daeb3-da71-41c5-8197-a82a7a17deaf", Controller:(*bool)(0xc002388ac2), BlockOwnerDeletion:(*bool)(0xc002388ac3)}}
  E0325 01:33:45.299060      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:46.299302      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:47.301332      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:48.299701      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:49.300433      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:33:49.574644 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7047" for this suite. @ 03/25/25 01:33:49.578
• [5.150 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 03/25/25 01:33:49.587
  I0325 01:33:49.587343 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename resourcequota @ 03/25/25 01:33:49.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:33:49.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:33:49.615
  STEP: Counting existing ResourceQuota @ 03/25/25 01:33:49.617
  E0325 01:33:50.301283      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:51.302302      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:52.302659      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:53.303185      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:54.303886      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 03/25/25 01:33:54.621
  STEP: Ensuring resource quota status is calculated @ 03/25/25 01:33:54.627
  E0325 01:33:55.304056      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:56.304211      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 03/25/25 01:33:56.632
  STEP: Creating a NodePort Service @ 03/25/25 01:33:56.658
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 03/25/25 01:33:56.689
  STEP: Ensuring resource quota status captures service creation @ 03/25/25 01:33:56.719
  E0325 01:33:57.304644      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:33:58.305009      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 03/25/25 01:33:58.724
  STEP: Ensuring resource quota status released usage @ 03/25/25 01:33:58.774
  E0325 01:33:59.305994      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:00.306100      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:34:00.780033 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2299" for this suite. @ 03/25/25 01:34:00.783
• [11.204 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 03/25/25 01:34:00.792
  I0325 01:34:00.792963 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename validating-admission-policy @ 03/25/25 01:34:00.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:34:00.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:34:00.828
  STEP: getting /apis @ 03/25/25 01:34:00.845
  STEP: getting /apis/admissionregistration.k8s.io @ 03/25/25 01:34:00.852
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 03/25/25 01:34:00.854
  STEP: creating @ 03/25/25 01:34:00.855
  STEP: getting @ 03/25/25 01:34:00.876
  STEP: listing @ 03/25/25 01:34:00.879
  STEP: watching @ 03/25/25 01:34:00.882
  I0325 01:34:00.882135 25 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 03/25/25 01:34:00.882
  STEP: updating @ 03/25/25 01:34:00.889
  I0325 01:34:00.896959 25 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 03/25/25 01:34:00.897
  STEP: deleting a collection @ 03/25/25 01:34:00.908
  I0325 01:34:00.933310 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-4499" for this suite. @ 03/25/25 01:34:00.936
• [0.151 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:327
  STEP: Creating a kubernetes client @ 03/25/25 01:34:00.947
  I0325 01:34:00.947940 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename statefulset @ 03/25/25 01:34:00.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:34:00.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:34:00.983
  STEP: Creating service test in namespace statefulset-4365 @ 03/25/25 01:34:00.986
  STEP: Creating a new StatefulSet @ 03/25/25 01:34:00.997
  I0325 01:34:01.014105 25 wait.go:40] Found 0 stateful pods, waiting for 3
  E0325 01:34:01.306964      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:02.307895      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:03.308190      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:04.308734      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:05.309288      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:06.309475      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:07.309884      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:08.310051      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:09.310570      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:10.310762      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:34:11.014366 25 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0325 01:34:11.014551 25 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0325 01:34:11.014601 25 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0325 01:34:11.023046 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=statefulset-4365 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0325 01:34:11.146016 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0325 01:34:11.146069 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0325 01:34:11.146086 25 statefulset.go:2453] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0325 01:34:11.311377      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:12.311644      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:13.311760      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:14.312170      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:15.312220      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:16.312280      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:17.312544      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:18.312670      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:19.312950      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:20.313046      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 03/25/25 01:34:21.155
  I0325 01:34:21.164844 25 statefulset.go:2510] Updating stateful set ss2
  STEP: Creating a new revision @ 03/25/25 01:34:21.164
  E0325 01:34:21.313395      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:22.313702      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:23.314436      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:24.314761      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:25.315135      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:26.315587      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:27.315718      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:28.316304      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:29.316403      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:30.316836      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 03/25/25 01:34:31.172
  I0325 01:34:31.175368 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=statefulset-4365 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0325 01:34:31.287400 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0325 01:34:31.287453 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0325 01:34:31.287477 25 statefulset.go:2477] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0325 01:34:31.317784      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:32.319123      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:33.319615      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:34.320100      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:35.320544      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:36.321438      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:37.321712      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:38.322306      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:39.323173      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:40.323665      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 03/25/25 01:34:41.306
  I0325 01:34:41.306569 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=statefulset-4365 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0325 01:34:41.324060      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:34:41.437092 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0325 01:34:41.437163 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0325 01:34:41.437178 25 statefulset.go:2453] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0325 01:34:42.324983      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:43.325956      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:44.326322      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:45.327147      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:46.327437      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:47.327719      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:48.327868      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:49.328033      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:50.328100      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:51.328404      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:34:51.457498 25 statefulset.go:2510] Updating stateful set ss2
  E0325 01:34:52.328657      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:53.329050      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:54.329334      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:55.329390      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:56.329530      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:57.330094      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:58.330162      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:34:59.330587      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:00.330726      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:01.331335      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 03/25/25 01:35:01.465
  I0325 01:35:01.469633 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=statefulset-4365 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0325 01:35:01.590731 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0325 01:35:01.590810 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0325 01:35:01.590829 25 statefulset.go:2477] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0325 01:35:02.332099      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:03.332749      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:04.333555      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:05.334045      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:06.335132      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:07.335299      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:08.335606      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:09.335728      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:10.336055      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:11.336167      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:35:11.604927 25 statefulset.go:138] Deleting all statefulset in ns statefulset-4365
  I0325 01:35:11.608058 25 rest.go:152] Scaling statefulset ss2 to 0
  E0325 01:35:12.337197      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:13.337509      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:14.338211      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:15.338204      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:16.338302      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:17.338914      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:18.338975      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:19.339399      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:20.339498      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:21.340515      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:35:21.625731 25 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0325 01:35:21.629867 25 rest.go:90] Deleting statefulset ss2
  I0325 01:35:21.646403 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4365" for this suite. @ 03/25/25 01:35:21.651
• [80.716 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 03/25/25 01:35:21.663
  I0325 01:35:21.663972 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 03/25/25 01:35:21.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:35:21.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:35:21.694
  STEP: create the container to handle the HTTPGet hook request. @ 03/25/25 01:35:21.752
  E0325 01:35:22.341498      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:23.341785      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 03/25/25 01:35:23.782
  E0325 01:35:24.341868      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:25.341997      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 03/25/25 01:35:25.801
  E0325 01:35:26.342279      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:27.342480      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:28.342594      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:29.343221      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 03/25/25 01:35:29.826
  I0325 01:35:29.838971 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4541" for this suite. @ 03/25/25 01:35:29.844
• [8.190 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:799
  STEP: Creating a kubernetes client @ 03/25/25 01:35:29.854
  I0325 01:35:29.854242 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename statefulset @ 03/25/25 01:35:29.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:35:29.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:35:29.887
  STEP: Creating service test in namespace statefulset-1197 @ 03/25/25 01:35:29.889
  STEP: Looking for a node to schedule stateful set and pod @ 03/25/25 01:35:29.897
  STEP: Creating pod with conflicting port in namespace statefulset-1197 @ 03/25/25 01:35:29.945
  STEP: Waiting until pod test-pod will start running in namespace statefulset-1197 @ 03/25/25 01:35:29.958
  E0325 01:35:30.343754      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:31.343986      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-1197 @ 03/25/25 01:35:31.967
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-1197 @ 03/25/25 01:35:31.976
  I0325 01:35:31.997432 25 statefulset.go:872] Observed stateful pod in namespace: statefulset-1197, name: ss-0, uid: 413dd4b9-e24d-4853-8fb3-784273bd053f, status phase: Pending. Waiting for statefulset controller to delete.
  I0325 01:35:32.019602 25 statefulset.go:872] Observed stateful pod in namespace: statefulset-1197, name: ss-0, uid: 413dd4b9-e24d-4853-8fb3-784273bd053f, status phase: Failed. Waiting for statefulset controller to delete.
  I0325 01:35:32.040337 25 statefulset.go:872] Observed stateful pod in namespace: statefulset-1197, name: ss-0, uid: 413dd4b9-e24d-4853-8fb3-784273bd053f, status phase: Failed. Waiting for statefulset controller to delete.
  I0325 01:35:32.044293 25 statefulset.go:866] Observed delete event for stateful pod ss-0 in namespace statefulset-1197
  STEP: Removing pod with conflicting port in namespace statefulset-1197 @ 03/25/25 01:35:32.044
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-1197 and will be in running state @ 03/25/25 01:35:32.063
  E0325 01:35:32.344410      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:33.344499      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:35:34.071490 25 statefulset.go:138] Deleting all statefulset in ns statefulset-1197
  I0325 01:35:34.074037 25 rest.go:152] Scaling statefulset ss to 0
  E0325 01:35:34.345158      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:35.345348      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:36.345676      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:37.345846      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:38.346196      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:39.346304      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:40.346553      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:41.346619      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:42.346886      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:43.347157      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:35:44.090386 25 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0325 01:35:44.094082 25 rest.go:90] Deleting statefulset ss
  I0325 01:35:44.114091 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1197" for this suite. @ 03/25/25 01:35:44.119
• [14.274 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:307
  STEP: Creating a kubernetes client @ 03/25/25 01:35:44.128
  I0325 01:35:44.128930 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename dns @ 03/25/25 01:35:44.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:35:44.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:35:44.156
  STEP: Creating a test headless service @ 03/25/25 01:35:44.159
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3724.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-3724.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3724.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3724.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3724.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-3724.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3724.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-3724.svc.cluster.local;sleep 1; done
   @ 03/25/25 01:35:44.166
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3724.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-3724.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3724.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-3724.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3724.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-3724.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3724.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-3724.svc.cluster.local;sleep 1; done
   @ 03/25/25 01:35:44.166
  STEP: creating a pod to probe DNS @ 03/25/25 01:35:44.166
  STEP: submitting the pod to kubernetes @ 03/25/25 01:35:44.166
  E0325 01:35:44.347915      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:45.348040      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 03/25/25 01:35:46.189
  STEP: looking for the results for each expected name from probers @ 03/25/25 01:35:46.192
  I0325 01:35:46.196250 25 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-3724.svc.cluster.local from pod dns-3724/dns-test-0628d481-8fd2-4e5c-8f39-a66ae5f5e904: the server could not find the requested resource (get pods dns-test-0628d481-8fd2-4e5c-8f39-a66ae5f5e904)
  I0325 01:35:46.199077 25 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3724.svc.cluster.local from pod dns-3724/dns-test-0628d481-8fd2-4e5c-8f39-a66ae5f5e904: the server could not find the requested resource (get pods dns-test-0628d481-8fd2-4e5c-8f39-a66ae5f5e904)
  I0325 01:35:46.201550 25 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-3724.svc.cluster.local from pod dns-3724/dns-test-0628d481-8fd2-4e5c-8f39-a66ae5f5e904: the server could not find the requested resource (get pods dns-test-0628d481-8fd2-4e5c-8f39-a66ae5f5e904)
  I0325 01:35:46.204610 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-3724.svc.cluster.local from pod dns-3724/dns-test-0628d481-8fd2-4e5c-8f39-a66ae5f5e904: the server could not find the requested resource (get pods dns-test-0628d481-8fd2-4e5c-8f39-a66ae5f5e904)
  I0325 01:35:46.207738 25 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3724.svc.cluster.local from pod dns-3724/dns-test-0628d481-8fd2-4e5c-8f39-a66ae5f5e904: the server could not find the requested resource (get pods dns-test-0628d481-8fd2-4e5c-8f39-a66ae5f5e904)
  I0325 01:35:46.210363 25 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3724.svc.cluster.local from pod dns-3724/dns-test-0628d481-8fd2-4e5c-8f39-a66ae5f5e904: the server could not find the requested resource (get pods dns-test-0628d481-8fd2-4e5c-8f39-a66ae5f5e904)
  I0325 01:35:46.213559 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-3724.svc.cluster.local from pod dns-3724/dns-test-0628d481-8fd2-4e5c-8f39-a66ae5f5e904: the server could not find the requested resource (get pods dns-test-0628d481-8fd2-4e5c-8f39-a66ae5f5e904)
  I0325 01:35:46.216401 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-3724.svc.cluster.local from pod dns-3724/dns-test-0628d481-8fd2-4e5c-8f39-a66ae5f5e904: the server could not find the requested resource (get pods dns-test-0628d481-8fd2-4e5c-8f39-a66ae5f5e904)
  I0325 01:35:46.216438 25 dns_common.go:506] Lookups using dns-3724/dns-test-0628d481-8fd2-4e5c-8f39-a66ae5f5e904 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-3724.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3724.svc.cluster.local agnhost_udp@dns-test-service-2.dns-3724.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-3724.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3724.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3724.svc.cluster.local jessie_udp@dns-test-service-2.dns-3724.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3724.svc.cluster.local]

  I0325 01:35:46.222169 25 dns_common.go:514] Pod client logs for webserver: 
  I0325 01:35:46.227248 25 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0325 01:35:46.233153 25 dns_common.go:514] Pod client logs for jessie-querier: 
  E0325 01:35:46.348625      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:47.349434      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:48.351313      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:49.349921      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:50.350437      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:35:51.221197 25 dns_common.go:546] DNS probes using dns-3724/dns-test-0628d481-8fd2-4e5c-8f39-a66ae5f5e904 succeeded

  STEP: deleting the pod @ 03/25/25 01:35:51.221
  STEP: deleting the test headless service @ 03/25/25 01:35:51.245
  I0325 01:35:51.262228 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3724" for this suite. @ 03/25/25 01:35:51.266
• [7.148 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 03/25/25 01:35:51.276
  I0325 01:35:51.276679 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename projected @ 03/25/25 01:35:51.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:35:51.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:35:51.306
  STEP: Creating projection with secret that has name projected-secret-test-map-01a6d130-b5c2-48c3-996d-9050af9c2a4c @ 03/25/25 01:35:51.308
  STEP: Creating a pod to test consume secrets @ 03/25/25 01:35:51.313
  E0325 01:35:51.350912      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:52.351636      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:53.352117      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:54.352356      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 01:35:55.344
  I0325 01:35:55.347973 25 output.go:207] Trying to get logs from node master-2 pod pod-projected-secrets-96b517ae-041b-45e4-9e8e-e745818581c8 container projected-secret-volume-test: <nil>
  E0325 01:35:55.353185      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the pod @ 03/25/25 01:35:55.354
  I0325 01:35:55.380944 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4655" for this suite. @ 03/25/25 01:35:55.385
• [4.118 seconds]
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 03/25/25 01:35:55.394
  I0325 01:35:55.394561 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename replicaset @ 03/25/25 01:35:55.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:35:55.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:35:55.416
  I0325 01:35:55.432609 25 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0325 01:35:56.354166      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:57.354774      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:58.355080      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:35:59.356056      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:00.356913      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:36:00.438090 25 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 03/25/25 01:36:00.438
  STEP: Scaling up "test-rs" replicaset @ 03/25/25 01:36:00.438
  I0325 01:36:00.446754 25 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 03/25/25 01:36:00.446
  I0325 01:36:00.462404 25 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-3809 with ReadyReplicas 1, AvailableReplicas 1
  I0325 01:36:00.481322 25 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-3809 with ReadyReplicas 1, AvailableReplicas 1
  I0325 01:36:00.520226 25 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-3809 with ReadyReplicas 1, AvailableReplicas 1
  I0325 01:36:00.534998 25 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-3809 with ReadyReplicas 1, AvailableReplicas 1
  E0325 01:36:01.357811      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:36:01.988248 25 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-3809 with ReadyReplicas 2, AvailableReplicas 2
  I0325 01:36:02.281946 25 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-3809 with ReadyReplicas 3 found true
  I0325 01:36:02.282207 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3809" for this suite. @ 03/25/25 01:36:02.287
• [6.905 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 03/25/25 01:36:02.3
  I0325 01:36:02.300517 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename emptydir @ 03/25/25 01:36:02.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:36:02.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:36:02.331
  STEP: Creating Pod @ 03/25/25 01:36:02.334
  E0325 01:36:02.357821      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:03.358320      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 03/25/25 01:36:04.352
  I0325 01:36:04.352712 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-2449 PodName:pod-sharedvolume-42c0fb19-6a9a-4795-99f9-9bb039e216c6 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 01:36:04.352892 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 01:36:04.353427 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/emptydir-2449/pods/pod-sharedvolume-42c0fb19-6a9a-4795-99f9-9bb039e216c6/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  E0325 01:36:04.359316      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:36:04.418595 25 exec_util.go:108] Exec stderr: ""
  I0325 01:36:04.418784 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2449" for this suite. @ 03/25/25 01:36:04.424
• [2.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 03/25/25 01:36:04.437
  I0325 01:36:04.437285 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename cronjob @ 03/25/25 01:36:04.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:36:04.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:36:04.466
  STEP: Creating a ForbidConcurrent cronjob @ 03/25/25 01:36:04.469
  STEP: Ensuring a job is scheduled @ 03/25/25 01:36:04.476
  E0325 01:36:05.360390      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:06.360792      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:07.361134      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:08.361516      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:09.362165      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:10.362400      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:11.363217      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:12.363850      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:13.364993      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:14.365307      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:15.365947      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:16.366223      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:17.367203      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:18.367369      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:19.367518      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:20.368280      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:21.368403      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:22.368686      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:23.369749      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:24.370113      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:25.370184      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:26.370371      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:27.370626      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:28.371202      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:29.371384      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:30.371641      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:31.372566      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:32.372935      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:33.373006      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:34.373471      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:35.373639      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:36.373862      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:37.374481      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:38.374737      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:39.375241      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:40.375606      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:41.376018      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:42.376186      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:43.377038      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:44.377490      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:45.378168      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:46.378447      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:47.378546      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:48.378844      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:49.379327      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:50.379532      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:51.380101      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:52.381133      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:53.382108      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:54.382359      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:55.382474      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:56.383030      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:57.383916      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:58.384122      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:36:59.384179      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:00.384337      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 03/25/25 01:37:00.481
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 03/25/25 01:37:00.484
  STEP: Ensuring no more jobs are scheduled @ 03/25/25 01:37:00.487
  STEP: Removing cronjob @ 03/25/25 01:37:00.49
  I0325 01:37:00.496702 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-206" for this suite. @ 03/25/25 01:37:00.501
• [56.077 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 03/25/25 01:37:00.514
  I0325 01:37:00.514955 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename projected @ 03/25/25 01:37:00.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:37:00.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:37:00.546
  STEP: Creating configMap with name projected-configmap-test-volume-d8987d7c-9187-469c-9d1f-7c70521b7d37 @ 03/25/25 01:37:00.548
  STEP: Creating a pod to test consume configMaps @ 03/25/25 01:37:00.554
  E0325 01:37:01.384480      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:02.384661      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:03.384926      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:04.385059      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 01:37:04.575
  I0325 01:37:04.578819 25 output.go:207] Trying to get logs from node master-2 pod pod-projected-configmaps-eb7f08b9-8925-4d46-b134-f81e6a975586 container agnhost-container: <nil>
  STEP: delete the pod @ 03/25/25 01:37:04.584
  I0325 01:37:04.606637 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2843" for this suite. @ 03/25/25 01:37:04.61
• [4.103 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 03/25/25 01:37:04.618
  I0325 01:37:04.618086 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename deployment @ 03/25/25 01:37:04.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:37:04.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:37:04.645
  I0325 01:37:04.648476 25 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0325 01:37:04.660138 25 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0325 01:37:05.386139      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:06.386286      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:07.386675      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:08.387103      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:09.387465      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:37:09.665425 25 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 03/25/25 01:37:09.665
  I0325 01:37:09.665624 25 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0325 01:37:09.675710 25 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0325 01:37:09.687799 25 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0325 01:37:10.388372      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:11.388539      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:37:11.696325 25 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0325 01:37:11.699029 25 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0325 01:37:11.711549 25 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9682",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52b13997-3bc2-49d3-9788-39807129531f",
      ResourceVersion: (string) (len=7) "2836463",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878463429,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463429,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463429,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463429,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463429,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6ff565599d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0325 01:37:11.798080 25 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-6ff565599d" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9682",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e02aca1d-83b8-4110-a690-9e6660dcc135",
      ResourceVersion: (string) (len=7) "2836452",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878463429,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "52b13997-3bc2-49d3-9788-39807129531f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463429,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 32 62 31 33 39  39 37 2d 33 62 63 32 2d  |\"52b13997-3bc2-|
              00000120  34 39 64 33 2d 39 37 38  38 2d 33 39 38 30 37 31  |49d3-9788-398071|
              00000130  32 39 35 33 31 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |29531f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0325 01:37:11.798726 25 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0325 01:37:11.799119 25 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9682",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3a31595d-e52c-4eef-9f74-6ed1f1de1979",
      ResourceVersion: (string) (len=7) "2836462",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878463424,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "52b13997-3bc2-49d3-9788-39807129531f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463424,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 35 32 62 31 33 39 39  |"uid\":\"52b1399|
              000000b0  37 2d 33 62 63 32 2d 34  39 64 33 2d 39 37 38 38  |7-3bc2-49d3-9788|
              000000c0  2d 33 39 38 30 37 31 32  39 35 33 31 66 5c 22 7d  |-39807129531f\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0325 01:37:11.808479 25 deployment.go:68] Pod "test-rolling-update-deployment-6ff565599d-72lrr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6ff565599d-72lrr",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6ff565599d-",
      Namespace: (string) (len=15) "deployment-9682",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aeeb4f92-61c2-4301-abcc-028163103a3a",
      ResourceVersion: (string) (len=7) "2836451",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878463429,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
          UID: (types.UID) (len=36) "e02aca1d-83b8-4110-a690-9e6660dcc135",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463429,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 30  32 61 63 61 31 64 2d 38  |d\":\"e02aca1d-8|
              00000090  33 62 38 2d 34 31 31 30  2d 61 36 39 30 2d 39 65  |3b8-4110-a690-9e|
              000000a0  36 36 36 30 64 63 63 31  33 35 5c 22 7d 22 3a 7b  |6660dcc135\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  31 33 32 5c 22 7d 22 3a  |.233.65.132\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pfjxv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pfjxv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463429,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463429,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.10.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.10.146"
        }
      },
      PodIP: (string) (len=13) "10.233.65.132",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.132"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878463429,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878463430,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://c0bfeb53669e3503b3e12a1a2c147032ba6c9706e325261492f9a706b49aca38",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pfjxv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 01:37:11.812562 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9682" for this suite. @ 03/25/25 01:37:11.819
• [7.209 seconds]
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 03/25/25 01:37:11.827
  I0325 01:37:11.827379 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename cronjob @ 03/25/25 01:37:11.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:37:11.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:37:11.847
  STEP: Creating a suspended cronjob @ 03/25/25 01:37:11.85
  STEP: Ensuring no jobs are scheduled @ 03/25/25 01:37:11.856
  E0325 01:37:12.388816      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:13.389054      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:14.389964      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:15.390145      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:16.390495      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:17.391140      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:18.391887      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:19.392189      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:20.392939      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:21.393145      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:22.393668      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:23.393987      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:24.394595      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:25.394735      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:26.395736      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:27.396068      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:28.396564      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:29.396986      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:30.397492      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:31.397883      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:32.398086      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:33.398452      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:34.398650      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:35.399059      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:36.399542      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:37.400213      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:38.401174      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:39.402215      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:40.403158      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:41.404216      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:42.404467      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:43.404930      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:44.405245      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:45.405541      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:46.405678      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:47.406268      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:48.407093      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:49.408141      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:50.407432      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:51.407690      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:52.408409      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:53.408827      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:54.409297      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:55.410108      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:56.410538      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:57.410816      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:58.411804      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:37:59.412142      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:00.412219      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:01.412483      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:02.413155      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:03.414001      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:04.414118      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:05.414684      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:06.414917      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:07.415199      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:08.415571      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:09.415856      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:10.416850      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:11.417516      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:12.418333      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:13.418886      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:14.419111      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:15.419482      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:16.420036      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:17.420273      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:18.420997      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:19.421182      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:20.421261      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:21.421543      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:22.421945      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:23.422516      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:24.422487      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:25.422700      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:26.423751      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:27.424026      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:28.424726      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:29.424864      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:30.425965      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:31.426261      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:32.427184      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:33.427925      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:34.428485      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:35.428866      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:36.429771      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:37.430140      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:38.430691      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:39.431156      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:40.431712      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:41.431960      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:42.432131      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:43.432352      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:44.433381      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:45.433860      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:46.434264      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:47.434374      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:48.435130      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:49.435263      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:50.436028      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:51.436119      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:52.437161      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:53.437605      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:54.438178      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:55.439166      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:56.439958      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:57.440183      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:58.440488      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:38:59.440873      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:00.441155      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:01.441632      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:02.442612      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:03.443389      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:04.443702      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:05.443933      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:06.444153      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:07.444562      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:08.445141      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:09.446055      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:10.446340      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:11.446663      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:12.447304      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:13.447686      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:14.448499      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:15.448843      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:16.449508      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:17.450121      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:18.450331      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:19.450790      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:20.451509      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:21.451895      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:22.452632      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:23.453017      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:24.453459      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:25.453682      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:26.453771      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:27.453843      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:28.454781      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:29.455420      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:30.455575      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:31.455664      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:32.456679      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:33.457126      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:34.457823      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:35.458149      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:36.458202      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:37.458255      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:38.459064      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:39.459150      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:40.459235      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:41.459880      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:42.459973      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:43.460464      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:44.461077      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:45.461176      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:46.462022      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:47.462453      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:48.463122      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:49.463294      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:50.463486      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:51.463741      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:52.464033      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:53.464173      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:54.464540      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:55.465032      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:56.465770      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:57.466061      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:58.466212      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:39:59.466639      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:00.467430      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:01.467874      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:02.468685      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:03.469036      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:04.469095      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:05.469293      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:06.470036      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:07.470392      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:08.470963      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:09.471367      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:10.471936      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:11.472304      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:12.472494      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:13.472839      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:14.474223      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:15.474408      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:16.475282      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:17.475549      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:18.475731      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:19.476000      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:20.476914      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:21.477718      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:22.478591      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:23.478870      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:24.479892      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:25.480736      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:26.481146      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:27.481276      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:28.482109      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:29.482365      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:30.483032      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:31.483362      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:32.483319      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:33.484031      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:34.484249      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:35.484723      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:36.485543      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:37.486101      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:38.486591      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:39.487061      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:40.487485      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:41.487932      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:42.488447      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:43.489163      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:44.489548      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:45.489795      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:46.490371      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:47.490753      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:48.491025      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:49.491437      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:50.491961      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:51.492398      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:52.493101      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:53.494047      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:54.494389      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:55.494711      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:56.495104      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:57.495711      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:58.496360      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:40:59.496892      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:00.497340      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:01.497736      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:02.498777      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:03.499404      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:04.500094      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:05.500235      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:06.500888      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:07.501088      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:08.501957      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:09.502338      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:10.502844      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:11.503310      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:12.503598      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:13.504495      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:14.504489      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:15.504646      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:16.504705      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:17.504972      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:18.504963      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:19.505395      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:20.506382      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:21.507126      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:22.507848      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:23.508536      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:24.509457      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:25.509797      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:26.510344      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:27.510522      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:28.511165      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:29.511252      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:30.511565      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:31.511870      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:32.512703      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:33.512861      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:34.513550      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:35.513835      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:36.513779      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:37.514053      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:38.514547      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:39.514783      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:40.515172      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:41.515640      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:42.515924      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:43.516708      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:44.517044      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:45.517426      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:46.517789      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:47.518087      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:48.518437      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:49.518695      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:50.519679      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:51.519102      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:52.519490      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:53.519585      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:54.520530      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:55.521054      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:56.521347      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:57.522135      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:58.522667      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:41:59.522611      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:00.522968      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:01.523189      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:02.524268      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:03.524342      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:04.524463      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:05.524520      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:06.525032      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:07.525723      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:08.526035      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:09.526604      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:10.527093      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:11.527976      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 03/25/25 01:42:11.857
  STEP: Removing cronjob @ 03/25/25 01:42:11.863
  I0325 01:42:11.871901 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9785" for this suite. @ 03/25/25 01:42:11.876
• [300.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 03/25/25 01:42:11.891
  I0325 01:42:11.891669 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename endpointslice @ 03/25/25 01:42:11.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:42:11.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:42:11.919
  I0325 01:42:11.930478 25 endpointslice.go:1045] Endpoints addresses: [172.20.10.136 172.20.10.146 172.20.10.91] , ports: [6443]
  I0325 01:42:11.930542 25 endpointslice.go:1075] EndpointSlices addresses: [172.20.10.136 172.20.10.146 172.20.10.91] , ports: [6443]
  I0325 01:42:11.930844 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5622" for this suite. @ 03/25/25 01:42:11.978
• [0.096 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 03/25/25 01:42:11.987
  I0325 01:42:11.987949 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename cronjob @ 03/25/25 01:42:11.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:42:12.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:42:12.023
  STEP: Creating a cronjob @ 03/25/25 01:42:12.025
  STEP: Ensuring more than one job is running at a time @ 03/25/25 01:42:12.033
  E0325 01:42:12.528883      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:13.529212      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:14.529727      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:15.529799      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:16.529940      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:17.530302      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:18.531186      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:19.531573      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:20.532323      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:21.533458      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:22.533512      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:23.534126      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:24.534931      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:25.535559      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:26.535705      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:27.535804      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:28.536159      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:29.536404      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:30.536594      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:31.537037      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:32.537448      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:33.537743      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:34.538134      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:35.538571      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:36.539282      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:37.540047      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:38.540110      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:39.540451      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:40.540699      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:41.540779      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:42.541664      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:43.541918      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:44.542549      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:45.542899      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:46.543877      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:47.544319      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:48.544573      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:49.544864      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:50.545090      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:51.545864      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:52.546234      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:53.546528      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:54.546624      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:55.546960      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:56.547745      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:57.548017      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:58.548758      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:42:59.549019      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:00.549017      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:01.549477      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:02.549598      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:03.550105      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:04.550453      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:05.550884      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:06.551727      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:07.552198      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:08.553142      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:09.553377      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:10.554183      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:11.554720      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:12.555379      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:13.555860      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:14.556903      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:15.557157      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:16.558187      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:17.558324      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:18.558566      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:19.558645      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:20.559218      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:21.559399      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:22.559909      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:23.559894      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:24.560477      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:25.560608      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:26.561476      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:27.561751      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:28.562195      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:29.562881      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:30.563065      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:31.563024      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:32.563222      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:33.563535      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:34.564074      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:35.564375      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:36.564646      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:37.565078      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:38.565095      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:39.565244      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:40.566150      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:41.566727      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:42.567112      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:43.567596      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:44.568511      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:45.568941      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:46.569400      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:47.569560      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:48.569956      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:49.570520      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:50.572515      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:51.572197      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:52.572163      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:53.572272      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:54.572726      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:55.572886      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:56.573582      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:57.573898      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:58.574605      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:43:59.574845      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:00.574981      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:01.575290      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 03/25/25 01:44:02.038
  STEP: Removing cronjob @ 03/25/25 01:44:02.042
  I0325 01:44:02.048888 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6279" for this suite. @ 03/25/25 01:44:02.053
• [110.077 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118
  STEP: Creating a kubernetes client @ 03/25/25 01:44:02.065
  I0325 01:44:02.065152 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename downward-api @ 03/25/25 01:44:02.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:44:02.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:44:02.126
  STEP: Creating a pod to test downward api env vars @ 03/25/25 01:44:02.129
  E0325 01:44:02.575910      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:03.576096      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:04.576406      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:05.576666      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 01:44:06.151
  I0325 01:44:06.155232 25 output.go:207] Trying to get logs from node master-2 pod downward-api-2fcaca47-4926-4165-9e98-ea9f47e61b9b container dapi-container: <nil>
  STEP: delete the pod @ 03/25/25 01:44:06.17
  I0325 01:44:06.191085 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5659" for this suite. @ 03/25/25 01:44:06.195
• [4.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:436
  STEP: Creating a kubernetes client @ 03/25/25 01:44:06.201
  I0325 01:44:06.201994 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename dns @ 03/25/25 01:44:06.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:44:06.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:44:06.228
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 03/25/25 01:44:06.23
  I0325 01:44:06.242277 25 dns.go:448] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-219  653f4fb9-9e2d-4410-9420-9ebad466fc5c 2839084 0 2025-03-25 01:44:06 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-03-25 01:44:06 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-h8f7h,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-h8f7h,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0325 01:44:06.577327      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:07.577505      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 03/25/25 01:44:08.25
  I0325 01:44:08.250633 25 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-219 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 01:44:08.250672 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 01:44:08.250971 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-219/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 03/25/25 01:44:08.327
  I0325 01:44:08.327840 25 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-219 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 01:44:08.327858 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 01:44:08.327941 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-219/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0325 01:44:08.412566 25 dns.go:450] Deleting pod test-dns-nameservers...
  I0325 01:44:08.435741 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-219" for this suite. @ 03/25/25 01:44:08.441
• [2.248 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 03/25/25 01:44:08.449
  I0325 01:44:08.449778 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename webhook @ 03/25/25 01:44:08.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:44:08.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:44:08.475
  STEP: Setting up server cert @ 03/25/25 01:44:08.576
  E0325 01:44:08.577785      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/25/25 01:44:08.995
  STEP: Deploying the webhook pod @ 03/25/25 01:44:09.007
  STEP: Wait for the deployment to be ready @ 03/25/25 01:44:09.022
  I0325 01:44:09.029831 25 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0325 01:44:09.579100      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:10.579430      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/25/25 01:44:11.042
  STEP: Verifying the service has paired with the endpoint @ 03/25/25 01:44:11.055
  E0325 01:44:11.579661      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:44:12.056062 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 03/25/25 01:44:12.063
  STEP: verifying the validating webhook match conditions @ 03/25/25 01:44:12.074
  STEP: updating the validating webhook match conditions @ 03/25/25 01:44:12.077
  STEP: verifying the validating webhook match conditions @ 03/25/25 01:44:12.086
  I0325 01:44:12.141939 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6329" for this suite. @ 03/25/25 01:44:12.147
  STEP: Destroying namespace "webhook-markers-195" for this suite. @ 03/25/25 01:44:12.163
• [3.724 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 03/25/25 01:44:12.175
  I0325 01:44:12.175634 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename pod-network-test @ 03/25/25 01:44:12.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:44:12.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:44:12.205
  STEP: Performing setup for networking test in namespace pod-network-test-9381 @ 03/25/25 01:44:12.207
  STEP: creating a selector @ 03/25/25 01:44:12.208
  STEP: Creating the service pods in kubernetes @ 03/25/25 01:44:12.208
  I0325 01:44:12.208144 25 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0325 01:44:12.579888      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:13.580030      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:14.581050      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:15.581556      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:16.582319      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:17.582726      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:18.583863      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:19.584228      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:20.584485      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:21.584863      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:22.585508      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:23.585593      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:24.586126      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:25.586696      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:26.587143      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:27.587625      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 03/25/25 01:44:28.415
  E0325 01:44:28.588005      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:29.588849      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:44:30.453795 25 utils.go:803] Setting MaxTries for pod polling to 55 for networking test based on endpoint count 5
  I0325 01:44:30.453899 25 utils.go:496] Going to poll 10.233.64.205 on port 8081 at least 0 times, with a maximum of 55 tries before failing
  I0325 01:44:30.456459 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.64.205 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9381 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 01:44:30.456511 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 01:44:30.456574 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9381/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.64.205+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0325 01:44:30.589759      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:44:31.520767 25 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0325 01:44:31.520875 25 utils.go:496] Going to poll 10.233.65.18 on port 8081 at least 0 times, with a maximum of 55 tries before failing
  I0325 01:44:31.524835 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.65.18 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9381 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 01:44:31.524867 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 01:44:31.524922 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9381/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.65.18+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0325 01:44:31.589806      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:44:32.589094 25 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0325 01:44:32.589145 25 utils.go:496] Going to poll 10.233.66.161 on port 8081 at least 0 times, with a maximum of 55 tries before failing
  E0325 01:44:32.590527      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:44:32.597461 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.66.161 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9381 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 01:44:32.597524 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 01:44:32.597581 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9381/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.66.161+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0325 01:44:33.590967      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:44:33.664611 25 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0325 01:44:33.664688 25 utils.go:496] Going to poll 10.233.68.44 on port 8081 at least 0 times, with a maximum of 55 tries before failing
  I0325 01:44:33.669366 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.68.44 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9381 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 01:44:33.669401 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 01:44:33.669484 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9381/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.68.44+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0325 01:44:34.591586      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:44:34.740159 25 utils.go:513] Found all 1 expected endpoints: [netserver-3]
  I0325 01:44:34.740210 25 utils.go:496] Going to poll 10.233.67.247 on port 8081 at least 0 times, with a maximum of 55 tries before failing
  I0325 01:44:34.744339 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.67.247 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9381 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 01:44:34.744409 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 01:44:34.744648 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9381/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.67.247+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0325 01:44:35.592475      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:44:35.808910 25 utils.go:513] Found all 1 expected endpoints: [netserver-4]
  I0325 01:44:35.809166 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9381" for this suite. @ 03/25/25 01:44:35.815
• [23.647 seconds]
------------------------------
SS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 03/25/25 01:44:35.822
  I0325 01:44:35.823012 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename lease-test @ 03/25/25 01:44:35.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:44:35.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:44:35.848
  I0325 01:44:35.928093 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-9141" for this suite. @ 03/25/25 01:44:35.932
• [0.118 seconds]
------------------------------
S
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 03/25/25 01:44:35.941
  I0325 01:44:35.941401 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename volumeattachment @ 03/25/25 01:44:35.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:44:36.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:44:36.063
  STEP: Create VolumeAttachment "va-e2e-5z2wm" on node "master-1" @ 03/25/25 01:44:36.07
  STEP: Patch VolumeAttachment "va-e2e-5z2wm" on node "master-1" @ 03/25/25 01:44:36.075
  STEP: Reading "va-e2e-5z2wm" Status @ 03/25/25 01:44:36.083
  STEP: Patching "va-e2e-5z2wm" Status @ 03/25/25 01:44:36.087
  I0325 01:44:36.093355 25 volume_attachment.go:224] "va-e2e-5z2wm" Status.Attached: true
  STEP: Updating "va-e2e-5z2wm" Status @ 03/25/25 01:44:36.093
  I0325 01:44:36.102564 25 volume_attachment.go:240] "va-e2e-5z2wm" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-5z2wm" on node "master-1" @ 03/25/25 01:44:36.102
  STEP: Confirm deletion of VolumeAttachment "va-e2e-5z2wm" on node "master-1" @ 03/25/25 01:44:36.109
  I0325 01:44:36.112326 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-8312" for this suite. @ 03/25/25 01:44:36.172
• [0.239 seconds]
------------------------------
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 03/25/25 01:44:36.18
  I0325 01:44:36.180221 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename subpath @ 03/25/25 01:44:36.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:44:36.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:44:36.208
  STEP: Setting up data @ 03/25/25 01:44:36.21
  STEP: Creating pod pod-subpath-test-secret-86tt @ 03/25/25 01:44:36.219
  STEP: Creating a pod to test atomic-volume-subpath @ 03/25/25 01:44:36.22
  E0325 01:44:36.593347      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:37.593506      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:38.593612      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:39.594203      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:40.594453      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:41.594449      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:42.594915      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:43.595051      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:44.595506      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:45.595845      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:46.595986      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:47.596854      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:48.596952      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:49.597271      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:50.597901      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:51.598056      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:52.598225      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:53.598555      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:54.599109      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:55.599603      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:56.600066      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:57.600116      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:58.600232      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:44:59.600873      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 01:45:00.29
  I0325 01:45:00.293090 25 output.go:207] Trying to get logs from node master-2 pod pod-subpath-test-secret-86tt container test-container-subpath-secret-86tt: <nil>
  STEP: delete the pod @ 03/25/25 01:45:00.305
  STEP: Deleting pod pod-subpath-test-secret-86tt @ 03/25/25 01:45:00.327
  I0325 01:45:00.327599 25 delete.go:62] Deleting pod "pod-subpath-test-secret-86tt" in namespace "subpath-9473"
  I0325 01:45:00.330735 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9473" for this suite. @ 03/25/25 01:45:00.335
• [24.163 seconds]
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 03/25/25 01:45:00.343
  I0325 01:45:00.343348 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename projected @ 03/25/25 01:45:00.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:45:00.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:45:00.371
  STEP: Creating a pod to test downward API volume plugin @ 03/25/25 01:45:00.373
  E0325 01:45:00.601816      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:01.602018      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:02.602987      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:03.603174      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 01:45:04.397
  I0325 01:45:04.400270 25 output.go:207] Trying to get logs from node master-2 pod downwardapi-volume-a0293b21-ca6d-4a16-8aad-261b30ee6b7c container client-container: <nil>
  STEP: delete the pod @ 03/25/25 01:45:04.407
  I0325 01:45:04.433876 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3369" for this suite. @ 03/25/25 01:45:04.438
• [4.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1037
  STEP: Creating a kubernetes client @ 03/25/25 01:45:04.453
  I0325 01:45:04.453112 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename statefulset @ 03/25/25 01:45:04.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:45:04.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:45:04.48
  STEP: Creating service test in namespace statefulset-3734 @ 03/25/25 01:45:04.482
  STEP: Creating statefulset ss in namespace statefulset-3734 @ 03/25/25 01:45:04.498
  I0325 01:45:04.508723 25 wait.go:40] Found 0 stateful pods, waiting for 1
  E0325 01:45:04.604097      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:05.604837      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:06.605340      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:07.605644      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:08.606002      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:09.606395      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:10.606659      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:11.607016      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:12.607314      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:13.607599      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:14.607887      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:45:14.647499 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 03/25/25 01:45:14.658
  STEP: Getting /status @ 03/25/25 01:45:14.675
  I0325 01:45:14.679886 25 statefulset.go:1073] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 03/25/25 01:45:14.679
  I0325 01:45:14.689788 25 statefulset.go:1093] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 03/25/25 01:45:14.689
  I0325 01:45:14.691893 25 statefulset.go:1121] Observed &StatefulSet event: ADDED
  I0325 01:45:14.691949 25 statefulset.go:1114] Found Statefulset ss in namespace statefulset-3734 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0325 01:45:14.691959 25 statefulset.go:1125] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 03/25/25 01:45:14.691
  I0325 01:45:14.691982 25 statefulset.go:1129] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0325 01:45:14.701562 25 statefulset.go:1133] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 03/25/25 01:45:14.701
  I0325 01:45:14.703382 25 statefulset.go:1158] Observed &StatefulSet event: ADDED
  I0325 01:45:14.703420 25 statefulset.go:1154] Observed Statefulset ss in namespace statefulset-3734 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0325 01:45:14.703524 25 statefulset.go:1158] Observed &StatefulSet event: MODIFIED
  I0325 01:45:14.703608 25 statefulset.go:138] Deleting all statefulset in ns statefulset-3734
  I0325 01:45:14.705922 25 rest.go:152] Scaling statefulset ss to 0
  E0325 01:45:15.608111      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:16.608585      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:17.608767      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:18.609465      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:19.610578      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:20.610980      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:21.611189      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:22.611280      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:23.611425      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:24.611679      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:45:24.722700 25 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0325 01:45:24.725518 25 rest.go:90] Deleting statefulset ss
  I0325 01:45:24.739804 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3734" for this suite. @ 03/25/25 01:45:24.743
• [20.300 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 03/25/25 01:45:24.754
  I0325 01:45:24.754209 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename services @ 03/25/25 01:45:24.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:45:24.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:45:24.781
  STEP: creating service in namespace services-4533 @ 03/25/25 01:45:24.783
  STEP: creating service affinity-nodeport-transition in namespace services-4533 @ 03/25/25 01:45:24.783
  STEP: creating replication controller affinity-nodeport-transition in namespace services-4533 @ 03/25/25 01:45:24.811
  I0325 01:45:24.832383      25 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-4533, replica count: 3
  E0325 01:45:25.612032      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:26.612566      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:27.612851      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:45:27.884013      25 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 0 running, 3 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0325 01:45:28.613228      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:29.613287      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:30.613501      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:45:30.884467      25 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0325 01:45:30.900369 25 resource.go:361] Creating new exec pod
  E0325 01:45:31.613568      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:32.614077      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:33.614065      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:45:33.920783 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-4533 exec execpod-affinity8v6g4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0325 01:45:34.051524 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.233.47.124) 80 port [tcp/http] succeeded!\n"
  I0325 01:45:34.051610 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0325 01:45:34.051848 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-4533 exec execpod-affinity8v6g4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.47.124 80'
  I0325 01:45:34.174143 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.47.124 80\nConnection to 10.233.47.124 80 port [tcp/http] succeeded!\n"
  I0325 01:45:34.174198 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0325 01:45:34.174279 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-4533 exec execpod-affinity8v6g4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.10.81 32554'
  I0325 01:45:34.290504 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.10.81 32554\nConnection to 172.20.10.81 32554 port [tcp/*] succeeded!\n"
  I0325 01:45:34.290562 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0325 01:45:34.290712 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-4533 exec execpod-affinity8v6g4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.10.91 32554'
  I0325 01:45:34.407577 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.10.91 32554\nConnection to 172.20.10.91 32554 port [tcp/*] succeeded!\n"
  I0325 01:45:34.407638 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0325 01:45:34.419520 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-4533 exec execpod-affinity8v6g4 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.20.10.91:32554/ ; done'
  E0325 01:45:34.614811      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:45:34.637504 25 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:32554/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:32554/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:32554/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:32554/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:32554/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:32554/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:32554/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:32554/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:32554/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:32554/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:32554/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:32554/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:32554/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:32554/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:32554/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:32554/\n"
  I0325 01:45:34.637582 25 builder.go:147] stdout: "\naffinity-nodeport-transition-n8lr2\naffinity-nodeport-transition-sn445\naffinity-nodeport-transition-gf7k9\naffinity-nodeport-transition-sn445\naffinity-nodeport-transition-n8lr2\naffinity-nodeport-transition-sn445\naffinity-nodeport-transition-gf7k9\naffinity-nodeport-transition-n8lr2\naffinity-nodeport-transition-gf7k9\naffinity-nodeport-transition-sn445\naffinity-nodeport-transition-gf7k9\naffinity-nodeport-transition-gf7k9\naffinity-nodeport-transition-sn445\naffinity-nodeport-transition-sn445\naffinity-nodeport-transition-n8lr2\naffinity-nodeport-transition-sn445"
  I0325 01:45:34.637596 25 service.go:242] Received response from host: affinity-nodeport-transition-n8lr2
  I0325 01:45:34.637616 25 service.go:242] Received response from host: affinity-nodeport-transition-sn445
  I0325 01:45:34.637623 25 service.go:242] Received response from host: affinity-nodeport-transition-gf7k9
  I0325 01:45:34.637628 25 service.go:242] Received response from host: affinity-nodeport-transition-sn445
  I0325 01:45:34.637634 25 service.go:242] Received response from host: affinity-nodeport-transition-n8lr2
  I0325 01:45:34.637639 25 service.go:242] Received response from host: affinity-nodeport-transition-sn445
  I0325 01:45:34.637644 25 service.go:242] Received response from host: affinity-nodeport-transition-gf7k9
  I0325 01:45:34.637648 25 service.go:242] Received response from host: affinity-nodeport-transition-n8lr2
  I0325 01:45:34.637655 25 service.go:242] Received response from host: affinity-nodeport-transition-gf7k9
  I0325 01:45:34.637660 25 service.go:242] Received response from host: affinity-nodeport-transition-sn445
  I0325 01:45:34.637664 25 service.go:242] Received response from host: affinity-nodeport-transition-gf7k9
  I0325 01:45:34.637669 25 service.go:242] Received response from host: affinity-nodeport-transition-gf7k9
  I0325 01:45:34.637674 25 service.go:242] Received response from host: affinity-nodeport-transition-sn445
  I0325 01:45:34.637885 25 service.go:242] Received response from host: affinity-nodeport-transition-sn445
  I0325 01:45:34.637891 25 service.go:242] Received response from host: affinity-nodeport-transition-n8lr2
  I0325 01:45:34.637897 25 service.go:242] Received response from host: affinity-nodeport-transition-sn445
  I0325 01:45:34.650027 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-4533 exec execpod-affinity8v6g4 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.20.10.91:32554/ ; done'
  I0325 01:45:34.848990 25 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:32554/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:32554/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:32554/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:32554/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:32554/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:32554/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:32554/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:32554/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:32554/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:32554/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:32554/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:32554/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:32554/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:32554/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:32554/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.20.10.91:32554/\n"
  I0325 01:45:34.849086 25 builder.go:147] stdout: "\naffinity-nodeport-transition-sn445\naffinity-nodeport-transition-sn445\naffinity-nodeport-transition-sn445\naffinity-nodeport-transition-sn445\naffinity-nodeport-transition-sn445\naffinity-nodeport-transition-sn445\naffinity-nodeport-transition-sn445\naffinity-nodeport-transition-sn445\naffinity-nodeport-transition-sn445\naffinity-nodeport-transition-sn445\naffinity-nodeport-transition-sn445\naffinity-nodeport-transition-sn445\naffinity-nodeport-transition-sn445\naffinity-nodeport-transition-sn445\naffinity-nodeport-transition-sn445\naffinity-nodeport-transition-sn445"
  I0325 01:45:34.849101 25 service.go:242] Received response from host: affinity-nodeport-transition-sn445
  I0325 01:45:34.849111 25 service.go:242] Received response from host: affinity-nodeport-transition-sn445
  I0325 01:45:34.849117 25 service.go:242] Received response from host: affinity-nodeport-transition-sn445
  I0325 01:45:34.849122 25 service.go:242] Received response from host: affinity-nodeport-transition-sn445
  I0325 01:45:34.849129 25 service.go:242] Received response from host: affinity-nodeport-transition-sn445
  I0325 01:45:34.849134 25 service.go:242] Received response from host: affinity-nodeport-transition-sn445
  I0325 01:45:34.849140 25 service.go:242] Received response from host: affinity-nodeport-transition-sn445
  I0325 01:45:34.849145 25 service.go:242] Received response from host: affinity-nodeport-transition-sn445
  I0325 01:45:34.849153 25 service.go:242] Received response from host: affinity-nodeport-transition-sn445
  I0325 01:45:34.849158 25 service.go:242] Received response from host: affinity-nodeport-transition-sn445
  I0325 01:45:34.849163 25 service.go:242] Received response from host: affinity-nodeport-transition-sn445
  I0325 01:45:34.849168 25 service.go:242] Received response from host: affinity-nodeport-transition-sn445
  I0325 01:45:34.849173 25 service.go:242] Received response from host: affinity-nodeport-transition-sn445
  I0325 01:45:34.849177 25 service.go:242] Received response from host: affinity-nodeport-transition-sn445
  I0325 01:45:34.849181 25 service.go:242] Received response from host: affinity-nodeport-transition-sn445
  I0325 01:45:34.849186 25 service.go:242] Received response from host: affinity-nodeport-transition-sn445
  I0325 01:45:34.849480 25 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-4533, will wait for the garbage collector to delete the pods @ 03/25/25 01:45:34.876
  I0325 01:45:34.945544 25 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 15.697005ms
  I0325 01:45:35.045755 25 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 100.193633ms
  E0325 01:45:35.615600      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:36.615668      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:37.617018      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:45:38.289106 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4533" for this suite. @ 03/25/25 01:45:38.293
• [13.547 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 03/25/25 01:45:38.302
  I0325 01:45:38.302069 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename events @ 03/25/25 01:45:38.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:45:38.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:45:38.331
  STEP: creating a test event @ 03/25/25 01:45:38.333
  STEP: listing events in all namespaces @ 03/25/25 01:45:38.344
  STEP: listing events in test namespace @ 03/25/25 01:45:38.351
  STEP: listing events with field selection filtering on source @ 03/25/25 01:45:38.355
  STEP: listing events with field selection filtering on reportingController @ 03/25/25 01:45:38.358
  STEP: getting the test event @ 03/25/25 01:45:38.366
  STEP: patching the test event @ 03/25/25 01:45:38.369
  STEP: getting the test event @ 03/25/25 01:45:38.377
  STEP: updating the test event @ 03/25/25 01:45:38.381
  STEP: getting the test event @ 03/25/25 01:45:38.391
  STEP: deleting the test event @ 03/25/25 01:45:38.396
  STEP: listing events in all namespaces @ 03/25/25 01:45:38.406
  STEP: listing events in test namespace @ 03/25/25 01:45:38.415
  I0325 01:45:38.423856 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-92" for this suite. @ 03/25/25 01:45:38.43
• [0.139 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1008
  STEP: Creating a kubernetes client @ 03/25/25 01:45:38.441
  I0325 01:45:38.441440 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename job @ 03/25/25 01:45:38.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:45:38.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:45:38.467
  STEP: Creating a job @ 03/25/25 01:45:38.469
  STEP: Ensure pods equal to parallelism count is attached to the job @ 03/25/25 01:45:38.476
  E0325 01:45:38.617011      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:39.617491      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:40.617838      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:41.618350      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:42.619485      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:43.619821      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: patching /status @ 03/25/25 01:45:44.498
  STEP: updating /status @ 03/25/25 01:45:44.508
  STEP: get /status @ 03/25/25 01:45:44.515
  I0325 01:45:44.518449 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-623" for this suite. @ 03/25/25 01:45:44.521
• [6.089 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 03/25/25 01:45:44.53
  I0325 01:45:44.530586 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename projected @ 03/25/25 01:45:44.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:45:44.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:45:44.562
  STEP: Creating projection with secret that has name projected-secret-test-d77fb7da-ba1c-4d5b-815c-e26cb6fe69fb @ 03/25/25 01:45:44.564
  STEP: Creating a pod to test consume secrets @ 03/25/25 01:45:44.57
  E0325 01:45:44.620525      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:45.621053      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:46.621039      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:47.621848      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 01:45:48.594
  I0325 01:45:48.597915 25 output.go:207] Trying to get logs from node master-2 pod pod-projected-secrets-75b4858f-ba13-4f69-a448-2140dcf48b66 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 03/25/25 01:45:48.603
  E0325 01:45:48.622062      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:45:48.625293 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2258" for this suite. @ 03/25/25 01:45:48.629
• [4.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 03/25/25 01:45:48.638
  I0325 01:45:48.638365 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename deployment @ 03/25/25 01:45:48.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:45:48.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:45:48.668
  STEP: creating a Deployment @ 03/25/25 01:45:48.675
  I0325 01:45:48.675231 25 deployment.go:507] Creating simple deployment test-deployment-gp9vp
  I0325 01:45:48.716894 25 deployment.go:223] deployment "test-deployment-gp9vp" doesn't have the required revision set
  E0325 01:45:49.622576      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:50.622908      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Getting /status @ 03/25/25 01:45:50.731
  I0325 01:45:50.734964 25 deployment.go:532] Deployment test-deployment-gp9vp has Conditions: [{Available True 2025-03-25 01:45:50 +0000 UTC 2025-03-25 01:45:50 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-03-25 01:45:50 +0000 UTC 2025-03-25 01:45:48 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-gp9vp-6fb4c74686" has successfully progressed.}]
  STEP: updating Deployment Status @ 03/25/25 01:45:50.734
  I0325 01:45:50.746946 25 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 1, 45, 50, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 1, 45, 50, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.March, 25, 1, 45, 50, 0, time.Local), LastTransitionTime:time.Date(2025, time.March, 25, 1, 45, 48, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-gp9vp-6fb4c74686\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 03/25/25 01:45:50.747
  I0325 01:45:50.749320 25 deployment.go:579] Observed &Deployment event: ADDED
  I0325 01:45:50.749373 25 deployment.go:575] Observed Deployment test-deployment-gp9vp in namespace deployment-8926 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-03-25 01:45:48 +0000 UTC 2025-03-25 01:45:48 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-gp9vp-6fb4c74686"}
  I0325 01:45:50.749574 25 deployment.go:579] Observed &Deployment event: MODIFIED
  I0325 01:45:50.749604 25 deployment.go:575] Observed Deployment test-deployment-gp9vp in namespace deployment-8926 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-03-25 01:45:48 +0000 UTC 2025-03-25 01:45:48 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-gp9vp-6fb4c74686"}
  I0325 01:45:50.749615 25 deployment.go:575] Observed Deployment test-deployment-gp9vp in namespace deployment-8926 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-03-25 01:45:48 +0000 UTC 2025-03-25 01:45:48 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0325 01:45:50.749869 25 deployment.go:579] Observed &Deployment event: MODIFIED
  I0325 01:45:50.749890 25 deployment.go:575] Observed Deployment test-deployment-gp9vp in namespace deployment-8926 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-03-25 01:45:48 +0000 UTC 2025-03-25 01:45:48 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0325 01:45:50.749898 25 deployment.go:575] Observed Deployment test-deployment-gp9vp in namespace deployment-8926 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-03-25 01:45:48 +0000 UTC 2025-03-25 01:45:48 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-gp9vp-6fb4c74686" is progressing.}
  I0325 01:45:50.750102 25 deployment.go:579] Observed &Deployment event: MODIFIED
  I0325 01:45:50.750116 25 deployment.go:575] Observed Deployment test-deployment-gp9vp in namespace deployment-8926 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-03-25 01:45:50 +0000 UTC 2025-03-25 01:45:50 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0325 01:45:50.750125 25 deployment.go:575] Observed Deployment test-deployment-gp9vp in namespace deployment-8926 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-03-25 01:45:50 +0000 UTC 2025-03-25 01:45:48 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-gp9vp-6fb4c74686" has successfully progressed.}
  I0325 01:45:50.750257 25 deployment.go:579] Observed &Deployment event: MODIFIED
  I0325 01:45:50.750279 25 deployment.go:575] Observed Deployment test-deployment-gp9vp in namespace deployment-8926 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-03-25 01:45:50 +0000 UTC 2025-03-25 01:45:50 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0325 01:45:50.750289 25 deployment.go:575] Observed Deployment test-deployment-gp9vp in namespace deployment-8926 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-03-25 01:45:50 +0000 UTC 2025-03-25 01:45:48 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-gp9vp-6fb4c74686" has successfully progressed.}
  I0325 01:45:50.750302 25 deployment.go:572] Found Deployment test-deployment-gp9vp in namespace deployment-8926 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0325 01:45:50.750313 25 deployment.go:583] Deployment test-deployment-gp9vp has an updated status
  STEP: patching the Statefulset Status @ 03/25/25 01:45:50.75
  I0325 01:45:50.750383 25 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0325 01:45:50.760286 25 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 03/25/25 01:45:50.76
  I0325 01:45:50.761887 25 deployment.go:616] Observed &Deployment event: ADDED
  I0325 01:45:50.761917 25 deployment.go:612] Observed deployment test-deployment-gp9vp in namespace deployment-8926 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-03-25 01:45:48 +0000 UTC 2025-03-25 01:45:48 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-gp9vp-6fb4c74686"}
  I0325 01:45:50.761995 25 deployment.go:616] Observed &Deployment event: MODIFIED
  I0325 01:45:50.762120 25 deployment.go:612] Observed deployment test-deployment-gp9vp in namespace deployment-8926 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-03-25 01:45:48 +0000 UTC 2025-03-25 01:45:48 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-gp9vp-6fb4c74686"}
  I0325 01:45:50.762132 25 deployment.go:612] Observed deployment test-deployment-gp9vp in namespace deployment-8926 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-03-25 01:45:48 +0000 UTC 2025-03-25 01:45:48 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0325 01:45:50.762212 25 deployment.go:616] Observed &Deployment event: MODIFIED
  I0325 01:45:50.762224 25 deployment.go:612] Observed deployment test-deployment-gp9vp in namespace deployment-8926 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-03-25 01:45:48 +0000 UTC 2025-03-25 01:45:48 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0325 01:45:50.762234 25 deployment.go:612] Observed deployment test-deployment-gp9vp in namespace deployment-8926 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-03-25 01:45:48 +0000 UTC 2025-03-25 01:45:48 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-gp9vp-6fb4c74686" is progressing.}
  I0325 01:45:50.762309 25 deployment.go:616] Observed &Deployment event: MODIFIED
  I0325 01:45:50.762322 25 deployment.go:612] Observed deployment test-deployment-gp9vp in namespace deployment-8926 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-03-25 01:45:50 +0000 UTC 2025-03-25 01:45:50 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0325 01:45:50.762338 25 deployment.go:612] Observed deployment test-deployment-gp9vp in namespace deployment-8926 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-03-25 01:45:50 +0000 UTC 2025-03-25 01:45:48 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-gp9vp-6fb4c74686" has successfully progressed.}
  I0325 01:45:50.762412 25 deployment.go:616] Observed &Deployment event: MODIFIED
  I0325 01:45:50.762522 25 deployment.go:612] Observed deployment test-deployment-gp9vp in namespace deployment-8926 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-03-25 01:45:50 +0000 UTC 2025-03-25 01:45:50 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0325 01:45:50.762533 25 deployment.go:612] Observed deployment test-deployment-gp9vp in namespace deployment-8926 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-03-25 01:45:50 +0000 UTC 2025-03-25 01:45:48 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-gp9vp-6fb4c74686" has successfully progressed.}
  I0325 01:45:50.762541 25 deployment.go:612] Observed deployment test-deployment-gp9vp in namespace deployment-8926 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0325 01:45:50.762620 25 deployment.go:616] Observed &Deployment event: MODIFIED
  I0325 01:45:50.762632 25 deployment.go:609] Found deployment test-deployment-gp9vp in namespace deployment-8926 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0325 01:45:50.762643 25 deployment.go:620] Deployment test-deployment-gp9vp has a patched status
  I0325 01:45:50.765580 25 deployment.go:633] Deployment "test-deployment-gp9vp":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-gp9vp",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8926",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6f99aee3-c47c-4ceb-b801-2fc102f34e5a",
      ResourceVersion: (string) (len=7) "2840449",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878463948,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463948,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=224) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |ions":{},"f:obse|
              00000090  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              000000a0  7b 7d 2c 22 66 3a 72 65  61 64 79 52 65 70 6c 69  |{},"f:readyRepli|
              000000b0  63 61 73 22 3a 7b 7d 2c  22 66 3a 72 65 70 6c 69  |cas":{},"f:repli|
              000000c0  63 61 73 22 3a 7b 7d 2c  22 66 3a 75 70 64 61 74  |cas":{},"f:updat|
              000000d0  65 64 52 65 70 6c 69 63  61 73 22 3a 7b 7d 7d 7d  |edReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=1) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0325 01:45:50.828683 25 deployment.go:40] New ReplicaSet "test-deployment-gp9vp-6fb4c74686" of Deployment "test-deployment-gp9vp":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-gp9vp-6fb4c74686",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8926",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9fbc118f-6f58-4b42-9952-89bdaa7228b9",
      ResourceVersion: (string) (len=7) "2840434",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878463948,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-gp9vp",
          UID: (types.UID) (len=36) "6f99aee3-c47c-4ceb-b801-2fc102f34e5a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463948,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 36 66 39  |k:{\"uid\":\"6f9|
              00000120  39 61 65 65 33 2d 63 34  37 63 2d 34 63 65 62 2d  |9aee3-c47c-4ceb-|
              00000130  62 38 30 31 2d 32 66 63  31 30 32 66 33 34 65 35  |b801-2fc102f34e5|
              00000140  61 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |a\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686",
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0325 01:45:50.837522 25 deployment.go:68] Pod "test-deployment-gp9vp-6fb4c74686-pgq68" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-gp9vp-6fb4c74686-pgq68",
      GenerateName: (string) (len=33) "test-deployment-gp9vp-6fb4c74686-",
      Namespace: (string) (len=15) "deployment-8926",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b676f250-c94d-4d2b-a41b-c00829c8cc9b",
      ResourceVersion: (string) (len=7) "2840432",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878463948,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-gp9vp-6fb4c74686",
          UID: (types.UID) (len=36) "9fbc118f-6f58-4b42-9952-89bdaa7228b9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463948,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 39 66 62 63 31 31 38  66 2d 36 66 35 38 2d 34  |"9fbc118f-6f58-4|
              000000a0  62 34 32 2d 39 39 35 32  2d 38 39 62 64 61 61 37  |b42-9952-89bdaa7|
              000000b0  32 32 38 62 39 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |228b9\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  32 31 38 5c 22 7d 22 3a  |.233.65.218\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t8jcb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t8jcb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463948,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878463948,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.10.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.10.146"
        }
      },
      PodIP: (string) (len=13) "10.233.65.218",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.218"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878463948,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63878463949,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://dd3346cab72630a222cb143b78ec1522f4d7ef536710322df50db567a156d006",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-t8jcb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 01:45:50.838782 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8926" for this suite. @ 03/25/25 01:45:50.844
• [2.213 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1102
  STEP: Creating a kubernetes client @ 03/25/25 01:45:50.851
  I0325 01:45:50.851984 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename job @ 03/25/25 01:45:50.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:45:50.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:45:50.88
  STEP: Creating a suspended job @ 03/25/25 01:45:50.885
  STEP: Patching the Job @ 03/25/25 01:45:50.897
  STEP: Watching for Job to be patched @ 03/25/25 01:45:50.91
  I0325 01:45:50.912091 25 job.go:1309] Event ADDED observed for Job e2e-htt5c in namespace job-1188 with labels: map[e2e-job-label:e2e-htt5c] and annotations: map[]
  I0325 01:45:50.912151 25 job.go:1312] Event MODIFIED found for Job e2e-htt5c in namespace job-1188 with labels: map[e2e-htt5c:patched e2e-job-label:e2e-htt5c] and annotations: map[]
  STEP: Updating the job @ 03/25/25 01:45:50.912
  STEP: Watching for Job to be updated @ 03/25/25 01:45:50.921
  I0325 01:45:50.922650 25 job.go:1312] Event MODIFIED found for Job e2e-htt5c in namespace job-1188 with labels: map[e2e-htt5c:patched e2e-job-label:e2e-htt5c] and annotations: map[updated:true]
  I0325 01:45:50.922683 25 job.go:1180] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 03/25/25 01:45:50.922
  I0325 01:45:50.924932 25 job.go:1187] Job: e2e-htt5c as labels: map[e2e-htt5c:patched e2e-job-label:e2e-htt5c]
  STEP: Waiting for job to complete @ 03/25/25 01:45:50.924
  E0325 01:45:51.623871      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:52.624782      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:53.625130      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:54.625953      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:55.625957      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:56.626244      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:57.626551      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:45:58.626974      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 03/25/25 01:45:58.977
  STEP: Watching for Job to be deleted @ 03/25/25 01:45:58.989
  I0325 01:45:58.991133 25 job.go:1309] Event MODIFIED observed for Job e2e-htt5c in namespace job-1188 with labels: map[e2e-htt5c:patched e2e-job-label:e2e-htt5c] and annotations: map[updated:true]
  I0325 01:45:58.991163 25 job.go:1309] Event MODIFIED observed for Job e2e-htt5c in namespace job-1188 with labels: map[e2e-htt5c:patched e2e-job-label:e2e-htt5c] and annotations: map[updated:true]
  I0325 01:45:58.991332 25 job.go:1309] Event MODIFIED observed for Job e2e-htt5c in namespace job-1188 with labels: map[e2e-htt5c:patched e2e-job-label:e2e-htt5c] and annotations: map[updated:true]
  I0325 01:45:58.991341 25 job.go:1309] Event MODIFIED observed for Job e2e-htt5c in namespace job-1188 with labels: map[e2e-htt5c:patched e2e-job-label:e2e-htt5c] and annotations: map[updated:true]
  I0325 01:45:58.991349 25 job.go:1309] Event MODIFIED observed for Job e2e-htt5c in namespace job-1188 with labels: map[e2e-htt5c:patched e2e-job-label:e2e-htt5c] and annotations: map[updated:true]
  I0325 01:45:58.991394 25 job.go:1312] Event DELETED found for Job e2e-htt5c in namespace job-1188 with labels: map[e2e-htt5c:patched e2e-job-label:e2e-htt5c] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 03/25/25 01:45:58.991
  I0325 01:45:59.081710 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1188" for this suite. @ 03/25/25 01:45:59.086
• [8.242 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 03/25/25 01:45:59.094
  I0325 01:45:59.094962 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename aggregateddiscovery @ 03/25/25 01:45:59.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:45:59.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:45:59.125
  I0325 01:45:59.131023 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7737" for this suite. @ 03/25/25 01:45:59.188
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 03/25/25 01:45:59.195
  I0325 01:45:59.195412 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename watch @ 03/25/25 01:45:59.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:45:59.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:45:59.221
  STEP: creating a watch on configmaps with a certain label @ 03/25/25 01:45:59.223
  STEP: creating a new configmap @ 03/25/25 01:45:59.226
  STEP: modifying the configmap once @ 03/25/25 01:45:59.23
  STEP: changing the label value of the configmap @ 03/25/25 01:45:59.242
  STEP: Expecting to observe a delete notification for the watched object @ 03/25/25 01:45:59.252
  I0325 01:45:59.252133 25 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7934  7018d62a-4372-4368-9ee0-9ac5e29b98fa 2840630 0 2025-03-25 01:45:59 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-03-25 01:45:59 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0325 01:45:59.252270 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7934  7018d62a-4372-4368-9ee0-9ac5e29b98fa 2840631 0 2025-03-25 01:45:59 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-03-25 01:45:59 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0325 01:45:59.252329 25 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7934  7018d62a-4372-4368-9ee0-9ac5e29b98fa 2840632 0 2025-03-25 01:45:59 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-03-25 01:45:59 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 03/25/25 01:45:59.252
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 03/25/25 01:45:59.259
  E0325 01:45:59.627313      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:00.627659      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:01.627988      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:02.628953      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:03.629247      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:04.629721      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:05.630177      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:06.630606      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:07.630879      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:08.631195      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 03/25/25 01:46:09.26
  STEP: modifying the configmap a third time @ 03/25/25 01:46:09.271
  STEP: deleting the configmap @ 03/25/25 01:46:09.278
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 03/25/25 01:46:09.289
  I0325 01:46:09.289840 25 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7934  7018d62a-4372-4368-9ee0-9ac5e29b98fa 2840718 0 2025-03-25 01:45:59 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-03-25 01:46:09 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0325 01:46:09.289928 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7934  7018d62a-4372-4368-9ee0-9ac5e29b98fa 2840719 0 2025-03-25 01:45:59 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-03-25 01:46:09 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0325 01:46:09.290078 25 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7934  7018d62a-4372-4368-9ee0-9ac5e29b98fa 2840720 0 2025-03-25 01:45:59 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-03-25 01:46:09 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0325 01:46:09.290426 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7934" for this suite. @ 03/25/25 01:46:09.294
• [10.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 03/25/25 01:46:09.304
  I0325 01:46:09.304577 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename field-validation @ 03/25/25 01:46:09.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:46:09.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:46:09.338
  STEP: apply creating a deployment @ 03/25/25 01:46:09.341
  I0325 01:46:09.353989 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9686" for this suite. @ 03/25/25 01:46:09.395
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 03/25/25 01:46:09.405
  I0325 01:46:09.405269 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename pods @ 03/25/25 01:46:09.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:46:09.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:46:09.431
  STEP: creating pod @ 03/25/25 01:46:09.433
  E0325 01:46:09.631316      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:10.631655      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:46:11.456591 25 pods.go:83] Pod pod-hostip-e7dba821-bacc-49c4-8703-ac406e33a624 has hostIP: 172.20.10.146
  I0325 01:46:11.456749 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4990" for this suite. @ 03/25/25 01:46:11.461
• [2.062 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:352
  STEP: Creating a kubernetes client @ 03/25/25 01:46:11.467
  I0325 01:46:11.467900 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename dns @ 03/25/25 01:46:11.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:46:11.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:46:11.495
  STEP: Creating a test externalName service @ 03/25/25 01:46:11.497
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3542.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-3542.svc.cluster.local; sleep 1; done
   @ 03/25/25 01:46:11.507
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3542.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3542.svc.cluster.local; sleep 1; done
   @ 03/25/25 01:46:11.507
  STEP: creating a pod to probe DNS @ 03/25/25 01:46:11.507
  STEP: submitting the pod to kubernetes @ 03/25/25 01:46:11.507
  E0325 01:46:11.631667      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:12.632718      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 03/25/25 01:46:13.532
  STEP: looking for the results for each expected name from probers @ 03/25/25 01:46:13.535
  I0325 01:46:13.544714 25 dns_common.go:571] DNS probes using dns-test-67dc6e90-c9ec-4baa-a28f-276fea48ae26 succeeded

  STEP: changing the externalName to bar.example.com @ 03/25/25 01:46:13.544
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3542.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-3542.svc.cluster.local; sleep 1; done
   @ 03/25/25 01:46:13.554
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3542.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3542.svc.cluster.local; sleep 1; done
   @ 03/25/25 01:46:13.554
  STEP: creating a second pod to probe DNS @ 03/25/25 01:46:13.554
  STEP: submitting the pod to kubernetes @ 03/25/25 01:46:13.554
  E0325 01:46:13.632767      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:14.633556      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 03/25/25 01:46:15.575
  STEP: looking for the results for each expected name from probers @ 03/25/25 01:46:15.579
  I0325 01:46:15.584095 25 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-3542.svc.cluster.local from pod  dns-3542/dns-test-5533963c-3377-4f07-a453-6ed1f10e51fd contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0325 01:46:15.588666 25 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-3542.svc.cluster.local from pod  dns-3542/dns-test-5533963c-3377-4f07-a453-6ed1f10e51fd contains '' instead of 'bar.example.com.'
  I0325 01:46:15.588697 25 dns_common.go:506] Lookups using dns-3542/dns-test-5533963c-3377-4f07-a453-6ed1f10e51fd failed for: [agnhost_udp@dns-test-service-3.dns-3542.svc.cluster.local jessie_udp@dns-test-service-3.dns-3542.svc.cluster.local]

  I0325 01:46:15.594960 25 dns_common.go:514] Pod client logs for webserver: 
  I0325 01:46:15.600305 25 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0325 01:46:15.605260 25 dns_common.go:514] Pod client logs for jessie-querier: 
  E0325 01:46:15.634499      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:16.634706      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:17.635170      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:18.635279      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:19.635879      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:46:20.590456 25 dns_common.go:571] DNS probes using dns-test-5533963c-3377-4f07-a453-6ed1f10e51fd succeeded

  STEP: changing the service to type=ClusterIP @ 03/25/25 01:46:20.59
  W0325 01:46:20.609975      25 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3542.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-3542.svc.cluster.local; sleep 1; done
   @ 03/25/25 01:46:20.61
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3542.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-3542.svc.cluster.local; sleep 1; done
   @ 03/25/25 01:46:20.61
  STEP: creating a third pod to probe DNS @ 03/25/25 01:46:20.61
  STEP: submitting the pod to kubernetes @ 03/25/25 01:46:20.613
  E0325 01:46:20.635997      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:21.636351      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:22.636473      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:23.636757      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:24.637078      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:25.637291      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:26.637292      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 03/25/25 01:46:26.64
  STEP: looking for the results for each expected name from probers @ 03/25/25 01:46:26.644
  I0325 01:46:26.659122 25 dns_common.go:571] DNS probes using dns-test-d8e65b3b-e4b4-49e7-bee5-fbb307f91d06 succeeded

  STEP: deleting the pod @ 03/25/25 01:46:26.659
  STEP: deleting the pod @ 03/25/25 01:46:26.676
  STEP: deleting the pod @ 03/25/25 01:46:26.741
  STEP: deleting the test externalName service @ 03/25/25 01:46:26.765
  I0325 01:46:26.791136 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3542" for this suite. @ 03/25/25 01:46:26.795
• [15.335 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 03/25/25 01:46:26.804
  I0325 01:46:26.804102 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename pods @ 03/25/25 01:46:26.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:46:26.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:46:26.842
  STEP: Create set of pods @ 03/25/25 01:46:26.844
  I0325 01:46:26.872325 25 pods.go:871] created test-pod-1
  I0325 01:46:26.879636 25 pods.go:871] created test-pod-2
  I0325 01:46:26.899332 25 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 03/25/25 01:46:26.899
  E0325 01:46:27.637565      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:28.638116      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:29.638561      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:30.639023      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:31.639716      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:32.640020      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 03/25/25 01:46:32.984
  I0325 01:46:32.987335 25 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E0325 01:46:33.640953      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:46:33.988307 25 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E0325 01:46:34.641053      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:46:34.988166 25 pods.go:1140] Pod quantity 2 is different from expected quantity 0
  E0325 01:46:35.641755      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:46:35.989740 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2775" for this suite. @ 03/25/25 01:46:35.995
• [9.200 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 03/25/25 01:46:36.006
  I0325 01:46:36.006912 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename resourcequota @ 03/25/25 01:46:36.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:46:36.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:46:36.037
  STEP: Counting existing ResourceQuota @ 03/25/25 01:46:36.039
  E0325 01:46:36.641938      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:37.642333      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:38.642562      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:39.643245      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:40.644214      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 03/25/25 01:46:41.044
  STEP: Ensuring resource quota status is calculated @ 03/25/25 01:46:41.051
  E0325 01:46:41.645275      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:42.645657      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 03/25/25 01:46:43.055
  STEP: Ensuring ResourceQuota status captures the pod usage @ 03/25/25 01:46:43.076
  E0325 01:46:43.645878      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:44.646802      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 03/25/25 01:46:45.081
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 03/25/25 01:46:45.083
  STEP: Ensuring a pod cannot update its resource requirements @ 03/25/25 01:46:45.086
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 03/25/25 01:46:45.09
  E0325 01:46:45.647830      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:46.648025      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 03/25/25 01:46:47.095
  STEP: Ensuring resource quota status released the pod usage @ 03/25/25 01:46:47.116
  E0325 01:46:47.648854      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:48.649029      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:46:49.120649 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2679" for this suite. @ 03/25/25 01:46:49.127
• [13.128 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 03/25/25 01:46:49.134
  I0325 01:46:49.134805 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename field-validation @ 03/25/25 01:46:49.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:46:49.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:46:49.161
  STEP: apply creating a deployment @ 03/25/25 01:46:49.163
  I0325 01:46:49.175499 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3662" for this suite. @ 03/25/25 01:46:49.215
• [0.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3189
  STEP: Creating a kubernetes client @ 03/25/25 01:46:49.225
  I0325 01:46:49.225125 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename services @ 03/25/25 01:46:49.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:46:49.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:46:49.266
  STEP: creating an Endpoint @ 03/25/25 01:46:49.272
  STEP: waiting for available Endpoint @ 03/25/25 01:46:49.277
  STEP: listing all Endpoints @ 03/25/25 01:46:49.278
  STEP: updating the Endpoint @ 03/25/25 01:46:49.376
  STEP: fetching the Endpoint @ 03/25/25 01:46:49.383
  STEP: patching the Endpoint @ 03/25/25 01:46:49.386
  STEP: fetching the Endpoint @ 03/25/25 01:46:49.394
  STEP: deleting the Endpoint by Collection @ 03/25/25 01:46:49.397
  STEP: waiting for Endpoint deletion @ 03/25/25 01:46:49.405
  STEP: fetching the Endpoint @ 03/25/25 01:46:49.407
  I0325 01:46:49.409824 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1730" for this suite. @ 03/25/25 01:46:49.413
• [0.195 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 03/25/25 01:46:49.421
  I0325 01:46:49.421356 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename subpath @ 03/25/25 01:46:49.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:46:49.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:46:49.451
  STEP: Setting up data @ 03/25/25 01:46:49.454
  STEP: Creating pod pod-subpath-test-configmap-5j62 @ 03/25/25 01:46:49.466
  STEP: Creating a pod to test atomic-volume-subpath @ 03/25/25 01:46:49.466
  E0325 01:46:49.649943      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:50.650279      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:51.650789      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:52.651254      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:53.652297      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:54.652544      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:55.653619      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:56.654023      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:57.654709      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:58.655055      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:46:59.655470      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:00.655760      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:01.656257      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:02.656721      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:03.657751      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:04.657924      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:05.658506      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:06.658890      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:07.659124      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:08.659495      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:09.659848      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:10.660364      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:11.660820      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:12.661744      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 01:47:13.533
  I0325 01:47:13.537258 25 output.go:207] Trying to get logs from node master-2 pod pod-subpath-test-configmap-5j62 container test-container-subpath-configmap-5j62: <nil>
  STEP: delete the pod @ 03/25/25 01:47:13.544
  STEP: Deleting pod pod-subpath-test-configmap-5j62 @ 03/25/25 01:47:13.563
  I0325 01:47:13.563239 25 delete.go:62] Deleting pod "pod-subpath-test-configmap-5j62" in namespace "subpath-7900"
  I0325 01:47:13.565472 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7900" for this suite. @ 03/25/25 01:47:13.569
• [24.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 03/25/25 01:47:13.576
  I0325 01:47:13.576424 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename secrets @ 03/25/25 01:47:13.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:47:13.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:47:13.605
  STEP: Creating secret with name secret-test-aa38d594-c1de-4586-8ec1-b737d0e2273b @ 03/25/25 01:47:13.607
  STEP: Creating a pod to test consume secrets @ 03/25/25 01:47:13.613
  E0325 01:47:13.662351      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:14.662516      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:15.662534      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:16.662676      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 01:47:17.637
  I0325 01:47:17.640541 25 output.go:207] Trying to get logs from node master-2 pod pod-secrets-93cdbd7b-2027-472e-9dd2-f9a444a84221 container secret-volume-test: <nil>
  STEP: delete the pod @ 03/25/25 01:47:17.648
  E0325 01:47:17.662794      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:47:17.667129 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7205" for this suite. @ 03/25/25 01:47:17.671
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 03/25/25 01:47:17.681
  I0325 01:47:17.681235 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename projected @ 03/25/25 01:47:17.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:47:17.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:47:17.704
  STEP: Creating secret with name s-test-opt-del-0760e399-4fc7-47c7-8d8d-da8c9370a1c6 @ 03/25/25 01:47:17.772
  STEP: Creating secret with name s-test-opt-upd-02449e68-dee8-46c1-a059-4823a7e57553 @ 03/25/25 01:47:17.777
  STEP: Creating the pod @ 03/25/25 01:47:17.782
  E0325 01:47:18.663409      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:19.663537      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-0760e399-4fc7-47c7-8d8d-da8c9370a1c6 @ 03/25/25 01:47:19.825
  STEP: Updating secret s-test-opt-upd-02449e68-dee8-46c1-a059-4823a7e57553 @ 03/25/25 01:47:19.832
  STEP: Creating secret with name s-test-opt-create-d4da4712-eace-4247-b693-f081020ac15d @ 03/25/25 01:47:19.837
  STEP: waiting to observe update in volume @ 03/25/25 01:47:19.842
  E0325 01:47:20.664581      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:21.665005      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:22.665081      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:23.665246      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:47:23.877807 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1315" for this suite. @ 03/25/25 01:47:23.882
• [6.212 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 03/25/25 01:47:23.893
  I0325 01:47:23.893713 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 03/25/25 01:47:23.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:47:23.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:47:23.917
  STEP: Setting up the test @ 03/25/25 01:47:23.919
  STEP: Creating hostNetwork=false pod @ 03/25/25 01:47:23.919
  E0325 01:47:24.665776      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:25.665903      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 03/25/25 01:47:25.941
  E0325 01:47:26.665997      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:27.666187      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Running the test @ 03/25/25 01:47:27.964
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 03/25/25 01:47:27.964
  I0325 01:47:27.964188 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4681 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 01:47:27.964244 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 01:47:27.964320 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4681/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0325 01:47:28.021525 25 exec_util.go:108] Exec stderr: ""
  I0325 01:47:28.021597 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4681 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 01:47:28.021610 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 01:47:28.021697 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4681/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0325 01:47:28.061805 25 exec_util.go:108] Exec stderr: ""
  I0325 01:47:28.061888 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4681 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 01:47:28.061909 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 01:47:28.062001 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4681/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0325 01:47:28.112051 25 exec_util.go:108] Exec stderr: ""
  I0325 01:47:28.112119 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4681 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 01:47:28.112166 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 01:47:28.112303 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4681/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0325 01:47:28.164980 25 exec_util.go:108] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 03/25/25 01:47:28.165
  I0325 01:47:28.165134 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4681 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 01:47:28.165162 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 01:47:28.165297 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4681/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0325 01:47:28.220474 25 exec_util.go:108] Exec stderr: ""
  I0325 01:47:28.220532 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4681 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 01:47:28.220541 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 01:47:28.220633 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4681/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0325 01:47:28.257820 25 exec_util.go:108] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 03/25/25 01:47:28.257
  I0325 01:47:28.258057 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4681 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 01:47:28.258093 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 01:47:28.258218 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4681/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0325 01:47:28.314724 25 exec_util.go:108] Exec stderr: ""
  I0325 01:47:28.314815 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4681 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 01:47:28.314841 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 01:47:28.314954 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4681/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0325 01:47:28.378919 25 exec_util.go:108] Exec stderr: ""
  I0325 01:47:28.378991 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4681 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 01:47:28.379000 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 01:47:28.379056 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4681/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0325 01:47:28.439329 25 exec_util.go:108] Exec stderr: ""
  I0325 01:47:28.439407 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4681 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 01:47:28.439418 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 01:47:28.439493 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4681/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0325 01:47:28.475109 25 exec_util.go:108] Exec stderr: ""
  I0325 01:47:28.475333 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-4681" for this suite. @ 03/25/25 01:47:28.479
• [4.594 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 03/25/25 01:47:28.487
  I0325 01:47:28.487825 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename kubelet-test @ 03/25/25 01:47:28.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:47:28.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:47:28.529
  E0325 01:47:28.666303      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:29.666407      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:30.667392      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:31.669152      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:47:32.548745 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7631" for this suite. @ 03/25/25 01:47:32.552
• [4.073 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 03/25/25 01:47:32.56
  I0325 01:47:32.560984 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename container-runtime @ 03/25/25 01:47:32.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:47:32.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:47:32.586
  STEP: create the container @ 03/25/25 01:47:32.589
  W0325 01:47:32.600218      25 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 03/25/25 01:47:32.6
  E0325 01:47:32.668463      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:33.669302      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:34.669967      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: get the container status @ 03/25/25 01:47:35.62
  STEP: the container should be terminated @ 03/25/25 01:47:35.624
  STEP: the termination message should be set @ 03/25/25 01:47:35.624
  I0325 01:47:35.624237 25 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 03/25/25 01:47:35.624
  I0325 01:47:35.640115 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3159" for this suite. @ 03/25/25 01:47:35.644
• [3.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 03/25/25 01:47:35.654
  I0325 01:47:35.654234 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename init-container @ 03/25/25 01:47:35.655
  E0325 01:47:35.670194      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:47:35.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:47:35.681
  STEP: creating the pod @ 03/25/25 01:47:35.683
  I0325 01:47:35.683420 25 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E0325 01:47:36.670316      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:37.670746      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:47:38.610962 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8823" for this suite. @ 03/25/25 01:47:38.615
• [2.968 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:647
  STEP: Creating a kubernetes client @ 03/25/25 01:47:38.622
  I0325 01:47:38.622393 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename statefulset @ 03/25/25 01:47:38.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:47:38.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:47:38.647
  STEP: Creating service test in namespace statefulset-9685 @ 03/25/25 01:47:38.649
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 03/25/25 01:47:38.656
  STEP: Creating stateful set ss in namespace statefulset-9685 @ 03/25/25 01:47:38.66
  E0325 01:47:38.670751      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-9685 @ 03/25/25 01:47:38.676
  I0325 01:47:38.693621 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  E0325 01:47:39.671325      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:40.671695      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:41.671942      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:42.672400      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:43.672761      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:44.672966      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:45.673054      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:46.673673      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:47.674120      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:48.674558      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:47:48.683233 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 03/25/25 01:47:48.683
  I0325 01:47:48.686947 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=statefulset-9685 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0325 01:47:48.813667 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0325 01:47:48.813757 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0325 01:47:48.813768 25 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0325 01:47:48.819189 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0325 01:47:49.674728      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:50.674816      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:51.675001      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:52.675291      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:53.675497      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:54.676279      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:55.676399      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:56.676674      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:57.677021      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:47:58.677040      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:47:58.819040 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0325 01:47:58.819089 25 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0325 01:47:58.919947 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 9.999999735s
  E0325 01:47:59.677733      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:47:59.925564 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 8.911831126s
  E0325 01:48:00.678289      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:48:00.930957 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 7.906259846s
  E0325 01:48:01.679317      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:48:01.937869 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 6.901455207s
  E0325 01:48:02.679457      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:48:02.943312 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 5.894086755s
  E0325 01:48:03.679869      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:48:03.949054 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 4.888673056s
  E0325 01:48:04.680942      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:48:04.954845 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 3.882691292s
  E0325 01:48:05.681151      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:48:05.960407 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 2.877441699s
  E0325 01:48:06.681189      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:48:06.967290 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 1.871303481s
  E0325 01:48:07.681808      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:48:07.975482 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 864.664039ms
  E0325 01:48:08.682088      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-9685 @ 03/25/25 01:48:08.976
  I0325 01:48:08.981048 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=statefulset-9685 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0325 01:48:09.103060 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0325 01:48:09.103138 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0325 01:48:09.103179 25 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0325 01:48:09.108336 25 wait.go:40] Found 1 stateful pods, waiting for 3
  E0325 01:48:09.682680      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:48:10.683174      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:48:11.683773      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:48:12.683906      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:48:13.685019      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:48:14.685935      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:48:15.686378      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:48:16.686864      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:48:17.686980      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:48:18.687286      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:48:19.107653 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0325 01:48:19.107749 25 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0325 01:48:19.107760 25 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 03/25/25 01:48:19.107
  STEP: Scale down will halt with unhealthy stateful pod @ 03/25/25 01:48:19.108
  I0325 01:48:19.114314 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=statefulset-9685 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0325 01:48:19.226372 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0325 01:48:19.226422 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0325 01:48:19.226433 25 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0325 01:48:19.226486 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=statefulset-9685 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0325 01:48:19.339095 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0325 01:48:19.339166 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0325 01:48:19.339183 25 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0325 01:48:19.339296 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=statefulset-9685 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0325 01:48:19.457548 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0325 01:48:19.457611 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0325 01:48:19.457622 25 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0325 01:48:19.457632 25 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0325 01:48:19.461589 25 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0325 01:48:19.687955      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:48:20.688065      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:48:21.688378      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:48:22.688490      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:48:23.688837      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:48:24.690218      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:48:25.689849      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:48:26.690250      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:48:27.690278      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:48:28.690575      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:48:29.467528 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0325 01:48:29.467618 25 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0325 01:48:29.467631 25 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0325 01:48:29.571260 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 9.999999752s
  E0325 01:48:29.691392      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:48:30.576405 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 8.90588454s
  E0325 01:48:30.691441      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:48:31.581346 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 7.90040195s
  E0325 01:48:31.692354      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:48:32.586119 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 6.895698301s
  E0325 01:48:32.693358      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:48:33.592740 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 5.890558961s
  E0325 01:48:33.693763      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:48:34.597487 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 4.883947823s
  E0325 01:48:34.694438      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:48:35.602113 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 3.879614991s
  E0325 01:48:35.695557      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:48:36.607100 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 2.874985904s
  E0325 01:48:36.696176      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:48:37.612396 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 1.86926209s
  E0325 01:48:37.696487      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:48:38.617736 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 864.162239ms
  E0325 01:48:38.696771      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-9685 @ 03/25/25 01:48:39.618
  I0325 01:48:39.624112 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=statefulset-9685 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0325 01:48:39.697736      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:48:39.744581 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0325 01:48:39.744632 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0325 01:48:39.744653 25 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0325 01:48:39.744702 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=statefulset-9685 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0325 01:48:39.862763 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0325 01:48:39.862833 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0325 01:48:39.862845 25 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0325 01:48:39.862903 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=statefulset-9685 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0325 01:48:39.976848 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0325 01:48:39.976909 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0325 01:48:39.976921 25 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0325 01:48:39.976945 25 rest.go:152] Scaling statefulset ss to 0
  E0325 01:48:40.698890      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:48:41.699500      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:48:42.699567      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:48:43.699737      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:48:44.699903      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:48:45.700172      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:48:46.700493      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:48:47.700692      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:48:48.701030      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:48:49.702103      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 03/25/25 01:48:49.986
  I0325 01:48:49.987134 25 statefulset.go:138] Deleting all statefulset in ns statefulset-9685
  I0325 01:48:49.990326 25 rest.go:152] Scaling statefulset ss to 0
  I0325 01:48:49.995280 25 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0325 01:48:49.998277 25 rest.go:90] Deleting statefulset ss
  I0325 01:48:50.012678 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9685" for this suite. @ 03/25/25 01:48:50.016
• [71.404 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 03/25/25 01:48:50.028
  I0325 01:48:50.028044 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename replicaset @ 03/25/25 01:48:50.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:48:50.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:48:50.059
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 03/25/25 01:48:50.061
  I0325 01:48:50.085550 25 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 03/25/25 01:48:50.085
  E0325 01:48:50.703156      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:48:51.703351      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 03/25/25 01:48:52.098
  STEP: updating a scale subresource @ 03/25/25 01:48:52.101
  STEP: verifying the replicaset Spec.Replicas was modified @ 03/25/25 01:48:52.107
  STEP: Patch a scale subresource @ 03/25/25 01:48:52.11
  I0325 01:48:52.121552 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6581" for this suite. @ 03/25/25 01:48:52.125
• [2.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 03/25/25 01:48:52.137
  I0325 01:48:52.137427 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename webhook @ 03/25/25 01:48:52.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:48:52.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:48:52.181
  STEP: Setting up server cert @ 03/25/25 01:48:52.31
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/25/25 01:48:52.593
  STEP: Deploying the webhook pod @ 03/25/25 01:48:52.603
  STEP: Wait for the deployment to be ready @ 03/25/25 01:48:52.619
  I0325 01:48:52.625822 25 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0325 01:48:52.704126      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:48:53.704443      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/25/25 01:48:54.637
  STEP: Verifying the service has paired with the endpoint @ 03/25/25 01:48:54.651
  E0325 01:48:54.705929      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:48:55.652263 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 03/25/25 01:48:55.662
  STEP: Registering slow webhook via the AdmissionRegistration API @ 03/25/25 01:48:55.662
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 03/25/25 01:48:55.68
  E0325 01:48:55.706354      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 03/25/25 01:48:56.69
  STEP: Registering slow webhook via the AdmissionRegistration API @ 03/25/25 01:48:56.69
  E0325 01:48:56.706961      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:48:57.708249      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 03/25/25 01:48:57.723
  STEP: Registering slow webhook via the AdmissionRegistration API @ 03/25/25 01:48:57.723
  E0325 01:48:58.708663      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:48:59.708827      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:00.709019      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:01.709530      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:02.709847      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 03/25/25 01:49:02.764
  STEP: Registering slow webhook via the AdmissionRegistration API @ 03/25/25 01:49:02.764
  E0325 01:49:03.710080      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:04.710249      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:05.710548      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:06.710722      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:07.711000      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:49:07.885240 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-316" for this suite. @ 03/25/25 01:49:07.892
  STEP: Destroying namespace "webhook-markers-6338" for this suite. @ 03/25/25 01:49:07.913
• [15.784 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 03/25/25 01:49:07.921
  I0325 01:49:07.921702 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename chunking @ 03/25/25 01:49:07.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:49:07.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:49:07.954
  STEP: creating a large number of resources @ 03/25/25 01:49:07.962
  E0325 01:49:08.711600      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:09.712440      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:10.712861      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:11.713173      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:12.713562      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:13.714116      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:14.714643      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:15.715685      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:16.716423      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:17.717216      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:18.717862      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:19.718199      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:20.719065      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:21.719956      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:22.720957      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:23.721002      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:24.721288      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 03/25/25 01:49:25.63
  I0325 01:49:25.679186 25 chunking.go:163] Retrieved 40/40 results with rv 2843163 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzE2Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 03/25/25 01:49:25.679
  E0325 01:49:25.721664      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:26.722735      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:27.722845      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:28.723032      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:29.723986      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:30.724271      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:31.724397      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:32.724484      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:33.725257      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:34.725648      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:35.726082      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:36.726251      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:37.726516      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:38.726644      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:39.726837      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:40.726956      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:41.727266      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:42.727359      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:43.727671      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:44.728616      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:49:45.685691 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzE2Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0325 01:49:45.729294      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:46.729756      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:47.730151      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:48.730285      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:49.730488      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:50.730588      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:51.730886      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:52.730995      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:53.731724      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:54.732654      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:55.733005      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:56.733130      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:57.733193      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:58.734166      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:49:59.734841      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:00.734983      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:01.735116      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:02.735241      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:03.735359      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:04.735460      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:50:05.686504 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzE2Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0325 01:50:05.735868      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:06.736004      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:07.736152      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:08.736259      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:09.736645      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:10.736832      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:11.737719      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:12.738132      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:13.739022      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:14.739579      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:15.739973      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:16.740372      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:17.740698      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:18.741098      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:19.741455      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:20.742073      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:21.742397      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:22.742742      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:23.742873      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:24.743460      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:50:25.685397 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzE2Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0325 01:50:25.744284      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:26.744372      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:27.744930      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:28.745025      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:29.745231      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:30.745329      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:31.745870      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:32.746553      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:33.746856      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:34.746991      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:35.747258      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:36.747534      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:37.748602      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:38.748917      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:39.749139      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:40.750085      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:41.750371      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:42.751092      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:43.751483      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:44.751655      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:50:45.685603 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzE2Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0325 01:50:45.752359      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:46.752762      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:47.753255      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:48.754185      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:49.755290      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:50.755674      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:51.756385      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:52.756766      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:53.757232      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:54.757446      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:55.757602      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:56.757668      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:57.758003      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:58.758126      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:50:59.758239      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:00.758331      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:01.758613      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:02.758760      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:03.759215      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:04.759462      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:51:05.689356 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzE2Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0325 01:51:05.759966      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:06.760408      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:07.760520      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:08.761015      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:09.762208      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:10.762819      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:11.763131      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:12.763174      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:13.763271      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:14.763340      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:15.763785      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:16.764583      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:17.765166      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:18.766159      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:19.766279      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:20.767274      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:21.767984      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:22.768286      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:23.769101      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:24.769573      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:51:25.686718 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzE2Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0325 01:51:25.770076      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:26.770415      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:27.770507      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:28.771015      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:29.771699      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:30.771827      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:31.772334      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:32.772545      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:33.773564      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:34.773426      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:35.773670      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:36.774210      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:37.774485      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:38.774967      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:39.775167      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:40.775669      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:41.776148      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:42.776523      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:43.776996      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:44.777573      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:51:45.685578 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzE2Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0325 01:51:45.778427      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:46.778569      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:47.779623      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:48.779783      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:49.781299      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:50.780958      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:51.781537      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:52.781950      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:53.782215      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:54.782277      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:55.782618      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:56.782777      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:57.782886      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:58.783211      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:51:59.783293      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:00.783651      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:01.783968      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:02.784495      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:03.784873      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:04.785685      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:52:05.687515 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzE2Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0325 01:52:05.786108      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:06.786579      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:07.786705      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:08.787195      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:09.788234      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:10.788746      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:11.788908      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:12.789330      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:13.789450      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:14.789597      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:15.790455      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:16.790897      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:17.791044      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:18.791503      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:19.791627      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:20.792202      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:21.792476      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:22.793230      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:23.793270      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:24.793519      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:52:25.686382 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzE2Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0325 01:52:25.793811      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:26.793937      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:27.794250      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:28.794546      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:29.795504      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:30.795642      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:31.795997      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:32.796174      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:33.796495      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:34.796657      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:35.796897      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:36.797021      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:37.797321      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:38.797448      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:39.797618      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:40.797767      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:41.798050      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:42.798470      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:43.798783      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:44.798966      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:52:45.710728 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzE2Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0325 01:52:45.799352      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:46.799737      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:47.800037      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:48.800122      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:49.800382      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:50.800688      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:51.801096      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:52.801338      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:53.801666      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:54.801842      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:55.801990      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:56.802293      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:57.802596      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:58.802974      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:52:59.803207      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:00.803514      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:01.803973      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:02.804257      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:03.804557      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:04.804740      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:53:05.685937 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzE2Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0325 01:53:05.805510      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:06.805674      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:07.805937      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:08.806061      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:09.806679      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:10.806901      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:11.807020      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:12.807215      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:13.807555      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:14.807634      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:15.808121      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:16.808229      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:17.808517      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:18.808704      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:19.808908      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:20.809043      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:21.809321      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:22.809961      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:23.810374      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:24.810558      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:53:25.687590 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzE2Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0325 01:53:25.811112      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:26.811656      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:27.811952      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:28.812243      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:29.812372      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:30.812382      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:31.813117      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:32.813219      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:33.813708      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:34.815054      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:35.815471      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:36.816150      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:37.816651      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:38.817480      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:39.817697      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:40.818259      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:41.818878      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:42.819153      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:43.819424      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:44.819765      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:53:45.686854 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzE2Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0325 01:53:45.820200      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:46.820463      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:47.820769      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:48.821052      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:49.821755      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:50.822163      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:51.822462      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:52.822721      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:53.823106      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:54.823242      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:55.823615      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:56.824470      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:57.824926      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:58.825420      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:53:59.825593      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:00.826039      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:01.826908      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:02.827418      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:03.827685      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:04.827853      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:54:05.685711 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzE2Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0325 01:54:05.828310      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:06.828740      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:07.829871      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:08.830273      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:09.830622      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:10.830993      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:11.831495      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:12.831905      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:13.832392      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:14.833286      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:15.833566      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:16.834162      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:17.834468      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:18.834767      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:19.834932      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:20.835247      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:21.836319      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:22.836591      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:23.837025      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:24.837189      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:54:25.687123 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzE2Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0325 01:54:25.837857      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:26.838186      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:27.838544      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:28.838918      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:29.839888      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:30.840204      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:31.840537      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:32.840837      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:33.841024      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:34.841166      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:35.842119      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:36.842538      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:37.843496      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:38.844239      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:39.844441      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:40.844581      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:41.845077      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:42.845133      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:43.845275      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:44.845349      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:54:45.685737 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzE2Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0325 01:54:45.845693      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:46.846368      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:47.846361      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:48.846738      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:49.847821      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:50.848083      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:51.848299      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:52.848591      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:53.848756      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:54.848915      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:55.849859      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:56.850208      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:57.850314      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:58.850650      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:54:59.850689      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:00.851048      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:01.851178      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:02.851612      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:03.851929      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:04.852619      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:55:05.685737 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzE2Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0325 01:55:05.853494      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:06.853711      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:07.854086      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:08.854436      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:09.854868      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:10.855322      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:11.855589      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:12.855837      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:13.856092      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:14.856304      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:15.856397      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:16.856486      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:17.857181      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:18.857315      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:19.858084      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:20.858242      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:21.858637      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:22.858738      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:23.859019      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:24.859801      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:55:25.686836 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzE2Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0325 01:55:25.860583      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:26.860873      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:27.861042      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:28.861275      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:29.862324      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:30.862488      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:31.862848      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:32.862876      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:33.862982      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:34.864467      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:35.863354      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:36.863469      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:37.863723      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:38.863848      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:39.864043      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:40.864549      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:41.864882      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:42.865036      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:43.865267      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:44.866396      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:55:45.686196 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzE2Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0325 01:55:45.867288      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:46.867541      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:47.867644      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:48.868191      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:49.868334      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:50.868620      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:51.868959      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:52.869231      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:53.869476      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:54.869647      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:55.869997      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:56.870329      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:57.870600      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:58.871606      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:55:59.871742      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:00.872491      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:01.872876      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:02.873268      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:03.873545      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:04.873718      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:56:05.686107 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzE2Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0325 01:56:05.874067      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:06.874392      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:07.874763      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:08.875044      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:09.875361      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:10.875660      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:11.876000      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:12.876280      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:13.876548      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:14.876732      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:15.876927      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:16.877453      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:17.877718      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:18.877805      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:19.878016      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:20.878297      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:21.878589      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:22.878957      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:23.879291      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:24.879514      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:56:25.686748 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzE2Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0325 01:56:25.880560      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:26.880899      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:27.881144      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:28.881556      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:29.881680      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:30.881934      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:31.882547      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:32.882871      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:33.883195      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:34.883613      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:35.883657      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:36.883962      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:37.884057      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:38.884325      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:39.884522      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:40.884728      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:41.884863      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:42.885011      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:43.885117      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:44.885399      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:56:45.772888 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzE2Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0325 01:56:45.886237      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:46.886377      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:47.886958      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:48.887077      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:49.887694      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:50.887984      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:51.888237      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:52.888545      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:53.888853      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:54.889444      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:55.889521      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:56.889845      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:57.890117      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:58.890406      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:56:59.890660      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:00.890972      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:01.891488      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:02.891809      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:03.891950      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:04.892174      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:57:05.686999 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzE2Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0325 01:57:05.892835      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:06.893052      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:07.893316      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:08.893606      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:09.893784      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:10.894076      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:11.895278      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:12.895554      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:13.895839      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:14.896716      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:15.897026      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:16.897277      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:17.897610      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:18.897958      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:19.898173      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:20.898590      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:21.898887      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:22.899128      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:23.899487      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:24.899694      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:57:25.686819 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzE2Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0325 01:57:25.900568      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:26.900963      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:27.901294      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:28.902349      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:29.902566      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:30.902943      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:31.903684      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:32.904035      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:33.904312      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:34.904562      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:35.904874      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:36.905176      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:37.905302      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:38.905604      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:39.905803      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:40.906099      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:41.906238      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:42.906507      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:43.906717      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:44.906945      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:57:45.686299 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzE2Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0325 01:57:45.907353      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:46.907504      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:47.907851      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:48.907966      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:49.908292      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:50.908323      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:51.908586      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:52.908739      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:53.909018      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:54.909807      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:55.910075      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:56.910228      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:57.910519      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:58.910648      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:57:59.910781      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:00.911080      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:01.911874      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:02.912144      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:03.912462      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:04.912926      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:58:05.685937 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzE2Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0325 01:58:05.913728      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:06.914026      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:07.914717      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:08.915031      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:09.915186      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:10.915489      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:11.915802      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:12.916069      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:13.916192      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:14.916461      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:15.917181      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:16.918101      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:17.918268      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:18.918836      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:19.919906      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:20.920400      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:21.920520      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:22.920977      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:23.921399      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:24.921546      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:58:25.688661 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzE2Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0325 01:58:25.922547      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:26.922900      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:27.923090      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:28.923640      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:29.924145      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:30.924680      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:31.924838      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:32.925018      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:33.925140      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:34.925452      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:35.925543      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:36.926083      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:37.926264      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:38.926722      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:39.926834      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:40.927220      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:41.927592      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:42.927989      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:43.928271      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:44.928437      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:58:45.686495 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzE2Mywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0325 01:58:45.929227      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:46.929622      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:47.930124      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:48.930423      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:49.930804      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:50.931109      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:51.931424      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:52.931711      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:53.931962      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:54.932172      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:55.932654      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:56.933089      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:57.933867      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:58.934313      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:58:59.934479      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:00.934795      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:01.935089      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:02.935352      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:03.935641      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:04.936059      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:59:05.684555 25 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0325 01:59:05.684614 25 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 03/25/25 01:59:05.684
  STEP: retrieving all remaining pages @ 03/25/25 01:59:05.69
  I0325 01:59:05.696621 25 chunking.go:221] Retrieved 40/40 results with rv 2846453 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0NjQ1Mywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE5XHUwMDAwIn0
  I0325 01:59:05.700525 25 chunking.go:221] Retrieved 40/40 results with rv 2846453 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0NjQ1Mywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTU5XHUwMDAwIn0
  I0325 01:59:05.704662 25 chunking.go:221] Retrieved 40/40 results with rv 2846453 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0NjQ1Mywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTk5XHUwMDAwIn0
  I0325 01:59:05.708851 25 chunking.go:221] Retrieved 40/40 results with rv 2846453 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0NjQ1Mywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM5XHUwMDAwIn0
  I0325 01:59:05.719633 25 chunking.go:221] Retrieved 40/40 results with rv 2846453 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0NjQ1Mywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjc5XHUwMDAwIn0
  I0325 01:59:05.741713 25 chunking.go:221] Retrieved 40/40 results with rv 2846453 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0NjQ1Mywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzE5XHUwMDAwIn0
  I0325 01:59:05.746498 25 chunking.go:221] Retrieved 40/40 results with rv 2846453 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0NjQ1Mywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU5XHUwMDAwIn0
  I0325 01:59:05.750462 25 chunking.go:221] Retrieved 40/40 results with rv 2846453 and continue 
  I0325 01:59:05.751038 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-7736" for this suite. @ 03/25/25 01:59:05.755
• [597.842 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 03/25/25 01:59:05.764
  I0325 01:59:05.764622 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename pods @ 03/25/25 01:59:05.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:59:05.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:59:05.801
  STEP: creating the pod @ 03/25/25 01:59:05.803
  STEP: submitting the pod to kubernetes @ 03/25/25 01:59:05.804
  W0325 01:59:05.813041      25 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0325 01:59:05.936341      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:06.936516      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 03/25/25 01:59:07.824
  STEP: updating the pod @ 03/25/25 01:59:07.827
  E0325 01:59:07.937248      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:59:08.345839 25 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-534f2d22-75c6-455e-8b7b-bb6465942cf5"
  E0325 01:59:08.938186      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:09.938379      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:10.938521      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:11.938857      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:59:12.364339 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3913" for this suite. @ 03/25/25 01:59:12.369
• [6.626 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1044
  STEP: Creating a kubernetes client @ 03/25/25 01:59:12.391
  I0325 01:59:12.391028 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename kubectl @ 03/25/25 01:59:12.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:59:12.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:59:12.428
  STEP: create deployment with httpd image @ 03/25/25 01:59:12.431
  I0325 01:59:12.432190 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-205 create -f -'
  E0325 01:59:12.939044      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:59:13.011265 25 builder.go:146] stderr: ""
  I0325 01:59:13.011320 25 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 03/25/25 01:59:13.011
  I0325 01:59:13.011437 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-205 diff -f -'
  E0325 01:59:13.939144      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:14.939542      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:15.939625      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:16.940126      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:59:17.568537 25 builder.go:135] rc: 1
  I0325 01:59:17.568764 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-205 delete -f -'
  I0325 01:59:17.838321 25 builder.go:146] stderr: ""
  I0325 01:59:17.838380 25 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0325 01:59:17.838673 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0325 01:59:17.940545      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "kubectl-205" for this suite. @ 03/25/25 01:59:18.043
• [5.836 seconds]
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 03/25/25 01:59:18.227
  I0325 01:59:18.227770 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename server-version @ 03/25/25 01:59:18.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:59:18.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:59:18.79
  STEP: Request ServerVersion @ 03/25/25 01:59:18.793
  STEP: Confirm major version @ 03/25/25 01:59:18.794
  I0325 01:59:18.794579 25 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 03/25/25 01:59:18.794
  I0325 01:59:18.794612 25 server_version.go:58] cleanMinorVersion: 32
  I0325 01:59:18.794624 25 server_version.go:62] Minor version: 32
  I0325 01:59:18.794715 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-36" for this suite. @ 03/25/25 01:59:18.801
• [0.582 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 03/25/25 01:59:18.81
  I0325 01:59:18.810293 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename ingressclass @ 03/25/25 01:59:18.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:59:18.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:59:18.85
  STEP: getting /apis @ 03/25/25 01:59:18.853
  STEP: getting /apis/networking.k8s.io @ 03/25/25 01:59:18.858
  STEP: getting /apis/networking.k8s.iov1 @ 03/25/25 01:59:18.858
  STEP: creating @ 03/25/25 01:59:18.859
  STEP: getting @ 03/25/25 01:59:18.883
  STEP: listing @ 03/25/25 01:59:18.886
  STEP: watching @ 03/25/25 01:59:18.888
  I0325 01:59:18.889011 25 ingressclass.go:348] starting watch
  STEP: patching @ 03/25/25 01:59:18.89
  STEP: updating @ 03/25/25 01:59:18.895
  I0325 01:59:18.901458 25 ingressclass.go:364] waiting for watch events with expected annotations
  I0325 01:59:18.901511 25 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 03/25/25 01:59:18.901
  STEP: deleting a collection @ 03/25/25 01:59:18.915
  I0325 01:59:18.938169 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0325 01:59:18.940924      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "ingressclass-5970" for this suite. @ 03/25/25 01:59:18.942
• [0.143 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 03/25/25 01:59:18.953
  I0325 01:59:18.953712 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename pods @ 03/25/25 01:59:18.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:59:18.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:59:18.98
  I0325 01:59:18.982335 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: creating the pod @ 03/25/25 01:59:18.982
  STEP: submitting the pod to kubernetes @ 03/25/25 01:59:18.983
  E0325 01:59:19.941689      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:20.941917      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:59:21.023753 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-704" for this suite. @ 03/25/25 01:59:21.029
• [2.083 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 03/25/25 01:59:21.037
  I0325 01:59:21.038202 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename container-probe @ 03/25/25 01:59:21.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:59:21.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:59:21.063
  E0325 01:59:21.941926      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:22.942778      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:23.943016      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:24.943747      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:25.944523      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:26.944869      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:27.947225      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:28.947407      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:29.948156      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:30.948492      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:31.948798      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:32.949085      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:33.949290      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:34.949541      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:35.950665      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:36.949981      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:37.950001      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:38.950329      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:39.950610      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:40.951054      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:41.951767      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:42.952613      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:43.953087      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:44.953196      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:59:45.139339 25 container_probe.go:92] Container started at 2025-03-25 01:59:21 +0000 UTC, pod became ready at 2025-03-25 01:59:43 +0000 UTC
  I0325 01:59:45.139663 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3534" for this suite. @ 03/25/25 01:59:45.143
• [24.117 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 03/25/25 01:59:45.155
  I0325 01:59:45.155335 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename namespaces @ 03/25/25 01:59:45.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:59:45.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:59:45.182
  STEP: Updating Namespace "namespaces-8311" @ 03/25/25 01:59:45.184
  I0325 01:59:45.198550 25 namespace.go:389] Namespace "namespaces-8311" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"371d9ffc-9dec-426c-9f42-f3b8ad069dd6", "kubernetes.io/metadata.name":"namespaces-8311", "namespaces-8311":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0325 01:59:45.198704 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8311" for this suite. @ 03/25/25 01:59:45.201
• [0.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 03/25/25 01:59:45.209
  I0325 01:59:45.209271 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename downward-api @ 03/25/25 01:59:45.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:59:45.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:59:45.287
  STEP: Creating a pod to test downward API volume plugin @ 03/25/25 01:59:45.289
  E0325 01:59:45.953333      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:46.953421      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:47.953513      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:48.953870      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 01:59:49.315
  I0325 01:59:49.319598 25 output.go:207] Trying to get logs from node master-2 pod downwardapi-volume-1ca81adc-124f-4ba8-bd4d-adbce79ea06a container client-container: <nil>
  STEP: delete the pod @ 03/25/25 01:59:49.332
  I0325 01:59:49.356704 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3787" for this suite. @ 03/25/25 01:59:49.361
• [4.160 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 03/25/25 01:59:49.37
  I0325 01:59:49.370213 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename webhook @ 03/25/25 01:59:49.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 01:59:49.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 01:59:49.399
  STEP: Setting up server cert @ 03/25/25 01:59:49.496
  E0325 01:59:49.954232      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/25/25 01:59:50.046
  STEP: Deploying the webhook pod @ 03/25/25 01:59:50.059
  STEP: Wait for the deployment to be ready @ 03/25/25 01:59:50.076
  I0325 01:59:50.087763 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0325 01:59:50.955037      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:51.955657      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/25/25 01:59:52.1
  STEP: Verifying the service has paired with the endpoint @ 03/25/25 01:59:52.127
  E0325 01:59:52.955774      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 01:59:53.129021 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0325 01:59:53.137216 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  E0325 01:59:53.956330      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:54.957384      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:55.958485      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:56.958901      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:57.959575      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3619-crds.webhook.example.com via the AdmissionRegistration API @ 03/25/25 01:59:58.651
  STEP: Creating a custom resource while v1 is storage version @ 03/25/25 01:59:58.754
  E0325 01:59:58.959557      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 01:59:59.959771      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 03/25/25 02:00:00.793
  STEP: Patching the custom resource while v2 is storage version @ 03/25/25 02:00:00.805
  E0325 02:00:00.960666      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:00:01.432046 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7639" for this suite. @ 03/25/25 02:00:01.437
  STEP: Destroying namespace "webhook-markers-7767" for this suite. @ 03/25/25 02:00:01.448
• [12.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199
  STEP: Creating a kubernetes client @ 03/25/25 02:00:01.456
  I0325 02:00:01.456414 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename job @ 03/25/25 02:00:01.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:00:01.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:00:01.487
  STEP: Looking for a node to schedule job pods @ 03/25/25 02:00:01.49
  STEP: Creating a job @ 03/25/25 02:00:01.542
  STEP: Waiting for all the pods to be ready @ 03/25/25 02:00:01.555
  E0325 02:00:01.960726      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:02.960964      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:03.961680      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:04.962798      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:05.963810      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:06.964257      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:07.964734      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:08.964957      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Fetch all running pods @ 03/25/25 02:00:09.582
  STEP: Evict all the Pods @ 03/25/25 02:00:09.586
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-k2rkz/job-3832 @ 03/25/25 02:00:09.587
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-rcq5n/job-3832 @ 03/25/25 02:00:09.587
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-wtkmc/job-3832 @ 03/25/25 02:00:09.587
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-wtkmc/job-3832 to be deleted @ 03/25/25 02:00:09.672
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-rcq5n/job-3832 to be deleted @ 03/25/25 02:00:09.672
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-k2rkz/job-3832 to be deleted @ 03/25/25 02:00:09.677
  E0325 02:00:09.965627      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:10.966009      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:11.967619      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:12.966949      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring job reaches completions @ 03/25/25 02:00:13.688
  E0325 02:00:13.967306      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:14.967570      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:15.968599      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:16.968647      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:17.969149      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:18.969535      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:19.970608      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:20.971142      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:21.972131      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:22.972755      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:23.973637      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:24.973799      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:25.974672      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:26.974954      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:27.975010      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:28.975200      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:29.975502      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:30.975667      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:31.976108      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:32.976255      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:33.976925      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:34.977050      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:35.977841      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:36.978156      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:37.978656      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:38.978768      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:39.979449      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:40.979212      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:41.979741      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:42.980142      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:43.980600      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:44.981471      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:45.982318      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:46.982625      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:47.983166      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:48.983469      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:49.984158      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:50.984497      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:51.984501      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:52.984703      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:53.985190      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:54.986081      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:55.986881      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:56.987316      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:00:57.811134 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3832" for this suite. @ 03/25/25 02:00:57.815
• [56.368 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 03/25/25 02:00:57.824
  I0325 02:00:57.824792 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename secrets @ 03/25/25 02:00:57.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:00:57.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:00:57.853
  STEP: Creating secret with name s-test-opt-del-0325b1e6-0444-40f3-9756-e69c1b106728 @ 03/25/25 02:00:57.917
  STEP: Creating secret with name s-test-opt-upd-5783edfd-eba5-4a1a-9fb1-4c9e4471fb79 @ 03/25/25 02:00:57.925
  STEP: Creating the pod @ 03/25/25 02:00:57.934
  E0325 02:00:57.988378      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:00:58.988777      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-0325b1e6-0444-40f3-9756-e69c1b106728 @ 03/25/25 02:00:59.981
  E0325 02:00:59.989561      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating secret s-test-opt-upd-5783edfd-eba5-4a1a-9fb1-4c9e4471fb79 @ 03/25/25 02:00:59.99
  STEP: Creating secret with name s-test-opt-create-992e20f0-223d-4093-acbe-572abab0f2e4 @ 03/25/25 02:00:59.996
  STEP: waiting to observe update in volume @ 03/25/25 02:01:00.002
  E0325 02:01:00.989312      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:01.989650      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:02.989728      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:03.989863      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:04.990798      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:05.991135      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:06.991397      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:07.991747      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:08.991904      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:09.992840      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:10.993556      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:11.993679      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:12.993843      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:13.994237      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:14.995268      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:15.995749      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:16.996355      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:17.996683      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:18.996835      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:19.996928      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:20.997267      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:21.997495      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:22.997634      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:23.998045      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:24.999070      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:25.999384      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:26.999935      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:28.000397      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:29.001494      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:30.001846      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:31.002686      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:32.003187      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:33.003932      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:34.004877      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:35.005391      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:36.007528      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:37.007305      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:38.007314      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:39.007451      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:40.007742      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:41.008352      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:42.008856      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:43.009199      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:44.009623      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:45.009786      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:46.010118      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:47.010263      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:48.010760      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:49.010883      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:50.011009      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:51.011324      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:52.011681      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:53.012433      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:54.012930      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:55.013574      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:56.014384      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:57.014463      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:58.014661      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:01:59.015133      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:00.016079      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:01.016713      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:02.017094      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:03.017177      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:04.018087      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:05.019201      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:06.019663      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:07.020132      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:08.020666      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:09.020533      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:10.020717      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:11.020972      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:12.021028      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:13.022123      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:14.022471      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:15.022587      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:16.023040      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:02:16.418298 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5806" for this suite. @ 03/25/25 02:02:16.425
• [78.676 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 03/25/25 02:02:16.501
  I0325 02:02:16.501578 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename daemonsets @ 03/25/25 02:02:16.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:02:16.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:02:16.794
  STEP: Creating a simple DaemonSet "daemon-set" @ 03/25/25 02:02:16.831
  STEP: Check that daemon pods launch on every node of the cluster. @ 03/25/25 02:02:16.844
  E0325 02:02:17.023827      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:02:17.104988 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0325 02:02:17.105073 25 fixtures.go:131] Node master-1 is running 0 daemon pod, expected 1
  I0325 02:02:17.995050 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0325 02:02:17.995093 25 fixtures.go:131] Node master-1 is running 0 daemon pod, expected 1
  E0325 02:02:18.024866      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:02:18.966209 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0325 02:02:18.966283 25 fixtures.go:131] Node master-1 is running 0 daemon pod, expected 1
  E0325 02:02:19.024978      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:02:19.856183 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 5
  I0325 02:02:19.856224 25 fixtures.go:136] Number of running nodes: 5, number of available pods: 5 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 03/25/25 02:02:19.859
  E0325 02:02:20.025369      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:02:20.026696 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0325 02:02:20.026729 25 fixtures.go:131] Node worker-2 is running 0 daemon pod, expected 1
  I0325 02:02:20.929288 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0325 02:02:20.929346 25 fixtures.go:131] Node worker-2 is running 0 daemon pod, expected 1
  E0325 02:02:21.026201      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:02:21.929369 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 5
  I0325 02:02:21.929411 25 fixtures.go:136] Number of running nodes: 5, number of available pods: 5 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 03/25/25 02:02:21.929
  STEP: Deleting DaemonSet "daemon-set" @ 03/25/25 02:02:21.935
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6471, will wait for the garbage collector to delete the pods @ 03/25/25 02:02:21.935
  I0325 02:02:22.008678 25 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 19.432952ms
  E0325 02:02:22.026975      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:02:22.309024 25 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 300.336489ms
  E0325 02:02:23.027247      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:02:24.014263 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0325 02:02:24.014319 25 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  E0325 02:02:24.027920      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:02:24.121876 25 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"2848731"},"items":null}

  I0325 02:02:24.319755 25 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"2848731"},"items":null}

  I0325 02:02:24.365117 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6471" for this suite. @ 03/25/25 02:02:24.443
• [8.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 03/25/25 02:02:24.632
  I0325 02:02:24.632857 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename projected @ 03/25/25 02:02:24.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:02:24.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:02:24.932
  STEP: Creating a pod to test downward API volume plugin @ 03/25/25 02:02:24.935
  E0325 02:02:25.028421      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:26.028872      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:27.028861      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:28.029050      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 02:02:29.022
  I0325 02:02:29.028284 25 output.go:207] Trying to get logs from node master-2 pod downwardapi-volume-5cd60573-abab-42a7-883e-a888192de769 container client-container: <nil>
  E0325 02:02:29.029373      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the pod @ 03/25/25 02:02:29.034
  I0325 02:02:29.053379 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1850" for this suite. @ 03/25/25 02:02:29.058
• [4.434 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:861
  STEP: Creating a kubernetes client @ 03/25/25 02:02:29.069
  I0325 02:02:29.069901 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename job @ 03/25/25 02:02:29.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:02:29.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:02:29.095
  STEP: Creating a job @ 03/25/25 02:02:29.097
  STEP: Ensuring active pods == parallelism @ 03/25/25 02:02:29.104
  E0325 02:02:30.033031      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:31.033056      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 03/25/25 02:02:31.113
  I0325 02:02:31.633417 25 pod_client.go:173] Successfully updated pod "adopt-release-pl82d"
  STEP: Checking that the Job readopts the Pod @ 03/25/25 02:02:31.633
  E0325 02:02:32.033785      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:33.034477      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 03/25/25 02:02:33.642
  E0325 02:02:34.034629      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:02:34.155015 25 pod_client.go:173] Successfully updated pod "adopt-release-pl82d"
  STEP: Checking that the Job releases the Pod @ 03/25/25 02:02:34.155
  E0325 02:02:35.035586      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:36.036007      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:02:36.173782 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4121" for this suite. @ 03/25/25 02:02:36.177
• [7.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 03/25/25 02:02:36.19
  I0325 02:02:36.190159 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename services @ 03/25/25 02:02:36.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:02:36.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:02:36.216
  STEP: creating service multi-endpoint-test in namespace services-2669 @ 03/25/25 02:02:36.218
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2669 to expose endpoints map[] @ 03/25/25 02:02:36.243
  I0325 02:02:36.251212 25 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-2669 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-2669 @ 03/25/25 02:02:36.251
  E0325 02:02:37.036089      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:38.036243      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:39.036713      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:40.037003      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:41.037105      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:42.038084      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2669 to expose endpoints map[pod1:[100]] @ 03/25/25 02:02:42.293
  I0325 02:02:42.302174 25 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-2669 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-2669 @ 03/25/25 02:02:42.302
  E0325 02:02:43.038335      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:44.038694      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2669 to expose endpoints map[pod1:[100] pod2:[101]] @ 03/25/25 02:02:44.321
  I0325 02:02:44.471982 25 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-2669 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 03/25/25 02:02:44.472
  I0325 02:02:44.472064 25 resource.go:361] Creating new exec pod
  E0325 02:02:45.038712      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:46.038822      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:47.039861      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:02:47.484690 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-2669 exec execpodd9ctf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0325 02:02:47.607463 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test (10.233.49.224) 80 port [tcp/http] succeeded!\n"
  I0325 02:02:47.607526 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0325 02:02:47.607629 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-2669 exec execpodd9ctf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.49.224 80'
  I0325 02:02:47.724434 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.49.224 80\nConnection to 10.233.49.224 80 port [tcp/http] succeeded!\n"
  I0325 02:02:47.724490 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0325 02:02:47.724591 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-2669 exec execpodd9ctf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0325 02:02:47.842255 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test (10.233.49.224) 81 port [tcp/*] succeeded!\n"
  I0325 02:02:47.842330 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0325 02:02:47.842442 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-2669 exec execpodd9ctf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.49.224 81'
  I0325 02:02:47.950426 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.49.224 81\nConnection to 10.233.49.224 81 port [tcp/*] succeeded!\n"
  I0325 02:02:47.950485 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-2669 @ 03/25/25 02:02:47.95
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2669 to expose endpoints map[pod2:[101]] @ 03/25/25 02:02:47.967
  E0325 02:02:48.039940      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:02:48.997686 25 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-2669 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-2669 @ 03/25/25 02:02:48.997
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2669 to expose endpoints map[] @ 03/25/25 02:02:49.02
  E0325 02:02:49.039989      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:02:50.037051 25 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-2669 exposes endpoints map[]
  E0325 02:02:50.040182      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:02:50.058558 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2669" for this suite. @ 03/25/25 02:02:50.063
• [13.881 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 03/25/25 02:02:50.07
  I0325 02:02:50.070854 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename emptydir @ 03/25/25 02:02:50.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:02:50.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:02:50.097
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 03/25/25 02:02:50.1
  E0325 02:02:51.040380      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:52.040700      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:53.040822      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:54.041122      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:55.041128      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:02:56.041263      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 02:02:56.13
  I0325 02:02:56.137222 25 output.go:207] Trying to get logs from node master-2 pod pod-a93be1a9-cb96-4ad2-babe-81df4b780ff6 container test-container: <nil>
  STEP: delete the pod @ 03/25/25 02:02:56.143
  I0325 02:02:56.159828 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3363" for this suite. @ 03/25/25 02:02:56.163
• [6.106 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 03/25/25 02:02:56.177
  I0325 02:02:56.177215 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename daemonsets @ 03/25/25 02:02:56.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:02:56.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:02:56.205
  I0325 02:02:56.365890 25 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0325 02:02:56.375439 25 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0325 02:02:56.483137 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0325 02:02:56.483764 25 fixtures.go:131] Node master-1 is running 0 daemon pod, expected 1
  E0325 02:02:57.042106      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:02:57.387850 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0325 02:02:57.387984 25 fixtures.go:131] Node master-1 is running 0 daemon pod, expected 1
  E0325 02:02:58.043038      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:02:58.385036 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 5
  I0325 02:02:58.385179 25 fixtures.go:136] Number of running nodes: 5, number of available pods: 5 in daemonset daemon-set
  I0325 02:02:58.385216 25 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0325 02:02:58.394140 25 daemon_set.go:102] Updating DaemonSet daemon-set
  E0325 02:02:59.043335      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:02:59.406773 25 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0325 02:02:59.417932 25 daemon_set.go:102] Updating DaemonSet daemon-set
  I0325 02:02:59.417991 25 daemon_set.go:499] Make sure DaemonSet rollback is complete
  E0325 02:03:00.043720      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:01.043917      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:02.043897      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:03.044199      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:03:03.424216 25 daemon_set.go:1198] Pod daemon-set-wtclb is not available
  STEP: Deleting DaemonSet "daemon-set" @ 03/25/25 02:03:03.435
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5229, will wait for the garbage collector to delete the pods @ 03/25/25 02:03:03.435
  I0325 02:03:03.497812 25 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.212189ms
  I0325 02:03:03.598575 25 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.754647ms
  E0325 02:03:04.045118      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:03:04.903326 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0325 02:03:04.903371 25 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0325 02:03:04.906588 25 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"2849447"},"items":null}

  I0325 02:03:04.908822 25 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"2849447"},"items":null}

  I0325 02:03:04.925022 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5229" for this suite. @ 03/25/25 02:03:04.927
• [8.757 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3599
  STEP: Creating a kubernetes client @ 03/25/25 02:03:04.934
  I0325 02:03:04.934378 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename services @ 03/25/25 02:03:04.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:03:04.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:03:04.966
  STEP: creating a collection of services @ 03/25/25 02:03:04.968
  I0325 02:03:04.968908 25 service.go:3635] Creating e2e-svc-a-5qn7x
  I0325 02:03:04.981989 25 service.go:3635] Creating e2e-svc-b-ckp5l
  I0325 02:03:04.994563 25 service.go:3635] Creating e2e-svc-c-n9fcb
  STEP: deleting service collection @ 03/25/25 02:03:05.011
  I0325 02:03:05.041494 25 service.go:3670] Collection of services has been deleted
  I0325 02:03:05.041811 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0325 02:03:05.045258      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-1092" for this suite. @ 03/25/25 02:03:05.045
• [0.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 03/25/25 02:03:05.054
  I0325 02:03:05.054138 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename discovery @ 03/25/25 02:03:05.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:03:05.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:03:05.079
  STEP: Setting up server cert @ 03/25/25 02:03:05.082
  STEP: Requesting APIResourceList from "/api/v1" @ 03/25/25 02:03:05.408
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 03/25/25 02:03:05.413
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 03/25/25 02:03:05.414
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 03/25/25 02:03:05.415
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 03/25/25 02:03:05.415
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 03/25/25 02:03:05.416
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 03/25/25 02:03:05.418
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 03/25/25 02:03:05.418
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 03/25/25 02:03:05.419
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 03/25/25 02:03:05.42
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 03/25/25 02:03:05.421
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 03/25/25 02:03:05.422
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 03/25/25 02:03:05.422
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 03/25/25 02:03:05.423
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 03/25/25 02:03:05.423
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 03/25/25 02:03:05.424
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 03/25/25 02:03:05.425
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 03/25/25 02:03:05.425
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 03/25/25 02:03:05.426
  I0325 02:03:05.427126 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-8745" for this suite. @ 03/25/25 02:03:05.431
• [0.386 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 03/25/25 02:03:05.439
  I0325 02:03:05.439889 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename limitrange @ 03/25/25 02:03:05.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:03:05.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:03:05.462
  STEP: Creating LimitRange "e2e-limitrange-jp8xv" in namespace "limitrange-4941" @ 03/25/25 02:03:05.464
  STEP: Creating another limitRange in another namespace @ 03/25/25 02:03:05.469
  I0325 02:03:05.568210 25 limit_range.go:299] Namespace "e2e-limitrange-jp8xv-8442" created
  I0325 02:03:05.568261 25 limit_range.go:300] Creating LimitRange "e2e-limitrange-jp8xv" in namespace "e2e-limitrange-jp8xv-8442"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-jp8xv" @ 03/25/25 02:03:05.573
  I0325 02:03:05.576648 25 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-jp8xv" in "limitrange-4941" namespace @ 03/25/25 02:03:05.576
  I0325 02:03:05.582490 25 limit_range.go:335] LimitRange "e2e-limitrange-jp8xv" has been patched
  STEP: Delete LimitRange "e2e-limitrange-jp8xv" by Collection with labelSelector: "e2e-limitrange-jp8xv=patched" @ 03/25/25 02:03:05.582
  STEP: Confirm that the limitRange "e2e-limitrange-jp8xv" has been deleted @ 03/25/25 02:03:05.589
  I0325 02:03:05.589924 25 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0325 02:03:05.592945 25 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-jp8xv=patched"
  I0325 02:03:05.593179 25 limit_range.go:344] LimitRange "e2e-limitrange-jp8xv" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-jp8xv" @ 03/25/25 02:03:05.593
  I0325 02:03:05.596745 25 limit_range.go:350] Found 1 limitRange
  I0325 02:03:05.597181 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-4941" for this suite. @ 03/25/25 02:03:05.6
  STEP: Destroying namespace "e2e-limitrange-jp8xv-8442" for this suite. @ 03/25/25 02:03:05.609
• [0.177 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 03/25/25 02:03:05.625
  I0325 02:03:05.625632 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename taint-single-pod @ 03/25/25 02:03:05.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:03:05.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:03:05.667
  I0325 02:03:05.669989 25 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0325 02:03:06.046116      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:07.046376      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:08.046595      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:09.046874      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:10.046984      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:11.047246      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:12.047473      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:13.047565      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:14.048248      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:15.048873      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:16.049579      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:17.050155      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:18.050900      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:19.051414      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:20.051648      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:21.052166      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:22.053279      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:23.054235      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:24.054474      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:25.054657      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:26.054752      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:27.055006      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:28.055512      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:29.055652      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:30.056092      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:31.056404      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:32.057038      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:33.057022      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:34.057193      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:35.057872      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:36.058000      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:37.058334      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:38.059283      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:39.059562      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:40.059870      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:41.060190      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:42.061237      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:43.061520      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:44.061809      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:45.061978      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:46.062962      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:47.062976      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:48.063303      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:49.064069      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:50.064870      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:51.065130      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:52.065519      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:53.065933      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:54.066828      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:55.067053      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:56.068376      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:57.068235      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:58.069422      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:03:59.070043      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:00.070578      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:01.070987      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:02.071186      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:03.072155      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:04.072718      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:05.072787      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:04:05.670577 25 util.go:396] Waiting for terminating namespaces to be deleted...
  I0325 02:04:05.675015 25 taints.go:144] Starting informer...
  STEP: Starting pod... @ 03/25/25 02:04:05.675
  I0325 02:04:05.902922 25 taints.go:294] Pod is running on master-2. Tainting Node
  STEP: Trying to apply a taint on the Node @ 03/25/25 02:04:05.902
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 03/25/25 02:04:05.928
  STEP: Waiting short time to make sure Pod is queued for deletion @ 03/25/25 02:04:05.932
  I0325 02:04:05.932528 25 taints.go:313] Pod wasn't evicted. Proceeding
  I0325 02:04:05.932548 25 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 03/25/25 02:04:05.954
  STEP: Waiting some time to make sure that toleration time passed. @ 03/25/25 02:04:05.958
  E0325 02:04:06.072886      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:07.073166      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:08.081490      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:09.081354      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:10.081491      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:11.082190      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:12.082216      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:13.082563      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:14.082687      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:15.083725      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:16.084130      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:17.084450      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:18.084753      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:19.085170      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:20.086185      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:21.087054      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:22.087292      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:23.087571      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:24.087817      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:25.088043      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:26.088317      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:27.088670      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:28.088975      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:29.089084      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:30.090113      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:31.090571      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:32.090703      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:33.091244      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:34.091375      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:35.091559      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:36.091631      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:37.091827      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:38.091951      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:39.092894      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:40.093044      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:41.094089      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:42.095067      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:43.095388      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:44.095670      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:45.095789      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:46.095911      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:47.095995      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:48.096220      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:49.096337      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:50.096419      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:51.096556      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:52.097025      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:53.097122      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:54.097578      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:55.098122      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:56.098413      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:57.098605      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:58.098757      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:04:59.098838      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:00.099088      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:01.099196      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:02.099300      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:03.099839      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:04.099846      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:05.100001      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:06.100905      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:07.101094      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:08.101962      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:09.102340      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:10.102646      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:11.103020      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:12.103383      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:13.104061      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:14.105028      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:15.106087      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:16.106223      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:17.106345      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:18.106519      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:19.106613      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:20.106763      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:05:20.959079 25 taints.go:329] Pod wasn't evicted. Test successful
  I0325 02:05:20.959943 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-5814" for this suite. @ 03/25/25 02:05:20.967
• [135.351 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:214
  STEP: Creating a kubernetes client @ 03/25/25 02:05:20.978
  I0325 02:05:20.978861 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename sched-preemption @ 03/25/25 02:05:20.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:05:21.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:05:21.01
  I0325 02:05:21.044691 25 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0325 02:05:21.107488      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:22.107917      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:23.107966      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:24.108430      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:25.109010      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:26.109405      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:27.109808      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:28.110170      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:29.110391      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:30.110548      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:31.110975      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:32.111231      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:33.111961      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:34.113264      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:35.113972      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:36.114294      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:37.115215      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:38.115385      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:39.116183      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:40.116319      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:41.117254      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:42.118120      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:43.118201      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:44.118477      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:45.119498      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:46.119646      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:47.119873      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:48.120235      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:49.120440      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:50.120730      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:51.121509      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:52.122123      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:53.122264      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:54.122805      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:55.123467      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:56.124021      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:57.124378      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:58.124649      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:05:59.125554      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:00.125787      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:01.126041      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:02.126458      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:03.126994      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:04.127352      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:05.127581      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:06.127629      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:07.128001      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:08.128922      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:09.129236      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:10.130115      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:11.130308      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:12.130588      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:13.131329      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:14.131667      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:15.132549      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:16.132909      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:17.133607      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:18.134067      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:19.134375      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:20.135004      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:06:21.049917 25 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 03/25/25 02:06:21.053
  STEP: Adding a custom resource @ 03/25/25 02:06:21.053
  I0325 02:06:21.086917 25 preemption.go:255] Created pod: pod0-0-sched-preemption-low-priority
  I0325 02:06:21.093568 25 preemption.go:255] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 03/25/25 02:06:21.093
  I0325 02:06:21.127964 25 preemption.go:255] Created pod: pod1-0-sched-preemption-medium-priority
  E0325 02:06:21.135005      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:06:21.136954 25 preemption.go:255] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 03/25/25 02:06:21.136
  I0325 02:06:21.167401 25 preemption.go:255] Created pod: pod2-0-sched-preemption-medium-priority
  I0325 02:06:21.178716 25 preemption.go:255] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 03/25/25 02:06:21.178
  I0325 02:06:21.326454 25 preemption.go:255] Created pod: pod3-0-sched-preemption-medium-priority
  I0325 02:06:21.339295 25 preemption.go:255] Created pod: pod3-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 03/25/25 02:06:21.339
  I0325 02:06:21.381279 25 preemption.go:255] Created pod: pod4-0-sched-preemption-medium-priority
  I0325 02:06:21.391137 25 preemption.go:255] Created pod: pod4-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 03/25/25 02:06:21.391
  E0325 02:06:22.135674      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:23.135803      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:24.136250      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:25.136468      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 03/25/25 02:06:25.441
  E0325 02:06:26.136508      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:27.136923      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:28.137889      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:29.138221      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 03/25/25 02:06:29.625
  STEP: Removing a custom resource @ 03/25/25 02:06:29.642
  STEP: Removing a custom resource @ 03/25/25 02:06:29.658
  STEP: Removing a custom resource @ 03/25/25 02:06:29.672
  STEP: Removing a custom resource @ 03/25/25 02:06:29.687
  I0325 02:06:29.708129 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-846" for this suite. @ 03/25/25 02:06:29.714
• [68.744 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 03/25/25 02:06:29.723
  I0325 02:06:29.723076 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename sched-pred @ 03/25/25 02:06:29.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:06:29.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:06:29.75
  I0325 02:06:29.752911 25 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0325 02:06:29.759525 25 util.go:396] Waiting for terminating namespaces to be deleted...
  I0325 02:06:29.762074 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node master-1 before test
  I0325 02:06:29.767340 25 predicates.go:957] oauth2-proxy-admin-89ccc8b6d-gkxsf from auth started at 2025-03-20 01:11:24 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.767383 25 predicates.go:959] 	Container oauth2-proxy-admin ready: true, restart count 5
  I0325 02:06:29.767391 25 predicates.go:957] oauth2-redis-admin-4 from auth started at 2025-03-20 01:11:58 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.767396 25 predicates.go:959] 	Container redis ready: true, restart count 0
  I0325 02:06:29.767405 25 predicates.go:957] maestro-common-api-d4f57ffc9-v25ts from cmp started at 2025-03-20 01:11:25 +0000 UTC (2 container statuses recorded)
  I0325 02:06:29.767474 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 02:06:29.767491 25 predicates.go:959] 	Container maestro-common-api ready: true, restart count 0
  I0325 02:06:29.767503 25 predicates.go:957] maestro-remote-app-b677d7995-ttggb from cmp started at 2025-03-20 01:11:25 +0000 UTC (2 container statuses recorded)
  I0325 02:06:29.767509 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 02:06:29.767515 25 predicates.go:959] 	Container maestro-remote-app ready: true, restart count 0
  I0325 02:06:29.767543 25 predicates.go:957] istiod-99fc7b678-c74hx from istio-system started at 2025-03-20 01:11:42 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.767576 25 predicates.go:959] 	Container discovery ready: true, restart count 0
  I0325 02:06:29.767587 25 predicates.go:957] cilium-nb9w6 from kube-system started at 2025-03-24 08:39:20 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.767596 25 predicates.go:959] 	Container cilium-agent ready: true, restart count 0
  I0325 02:06:29.767601 25 predicates.go:957] coredns-5c54f84c97-s7pm8 from kube-system started at 2025-03-20 07:44:46 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.767619 25 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0325 02:06:29.767650 25 predicates.go:957] dns-autoscaler-76ddddbbc-njtdg from kube-system started at 2025-03-19 11:32:46 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.767657 25 predicates.go:959] 	Container autoscaler ready: true, restart count 0
  I0325 02:06:29.767662 25 predicates.go:957] kube-apiserver-master-1 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.767667 25 predicates.go:959] 	Container kube-apiserver ready: true, restart count 1
  I0325 02:06:29.767672 25 predicates.go:957] kube-controller-manager-master-1 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.767701 25 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 2
  I0325 02:06:29.767707 25 predicates.go:957] kube-proxy-c9vn6 from kube-system started at 2025-03-19 11:31:14 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.767712 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0325 02:06:29.767729 25 predicates.go:957] kube-scheduler-master-1 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.767732 25 predicates.go:959] 	Container kube-scheduler ready: true, restart count 1
  I0325 02:06:29.767737 25 predicates.go:957] pod0-1-sched-preemption-medium-priority from sched-preemption-846 started at 2025-03-25 02:06:21 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.767742 25 predicates.go:959] 	Container pod0-1-sched-preemption-medium-priority ready: true, restart count 0
  I0325 02:06:29.767747 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-fa7539a130154f7a-69xpv from sonobuoy started at 2025-03-25 00:21:29 +0000 UTC (2 container statuses recorded)
  I0325 02:06:29.767751 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0325 02:06:29.767755 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0325 02:06:29.767760 25 predicates.go:957] viola-remote-app-5b964d4757-mx9xg from viola started at 2025-03-20 01:11:24 +0000 UTC (2 container statuses recorded)
  I0325 02:06:29.767793 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 02:06:29.767798 25 predicates.go:959] 	Container viola-remote-app ready: true, restart count 0
  I0325 02:06:29.767814 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node master-2 before test
  I0325 02:06:29.771894 25 predicates.go:957] cilium-7mfqv from kube-system started at 2025-03-24 08:39:20 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.772017 25 predicates.go:959] 	Container cilium-agent ready: true, restart count 0
  I0325 02:06:29.772102 25 predicates.go:957] cilium-operator-75896ddc6-2dpsx from kube-system started at 2025-03-24 08:39:25 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.772147 25 predicates.go:959] 	Container cilium-operator ready: true, restart count 0
  I0325 02:06:29.772279 25 predicates.go:957] kube-apiserver-master-2 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.772397 25 predicates.go:959] 	Container kube-apiserver ready: true, restart count 1
  I0325 02:06:29.772498 25 predicates.go:957] kube-controller-manager-master-2 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.772581 25 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 2
  I0325 02:06:29.772732 25 predicates.go:957] kube-proxy-btnc7 from kube-system started at 2025-03-19 11:31:18 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.772869 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0325 02:06:29.772998 25 predicates.go:957] kube-scheduler-master-2 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.773153 25 predicates.go:959] 	Container kube-scheduler ready: true, restart count 1
  I0325 02:06:29.773301 25 predicates.go:957] pod1-0-sched-preemption-medium-priority from sched-preemption-846 started at 2025-03-25 02:06:21 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.773442 25 predicates.go:959] 	Container pod1-0-sched-preemption-medium-priority ready: true, restart count 0
  I0325 02:06:29.773556 25 predicates.go:957] pod1-1-sched-preemption-medium-priority from sched-preemption-846 started at 2025-03-25 02:06:21 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.773643 25 predicates.go:959] 	Container pod1-1-sched-preemption-medium-priority ready: true, restart count 0
  I0325 02:06:29.773785 25 predicates.go:957] sonobuoy from sonobuoy started at 2025-03-25 00:21:28 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.773840 25 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0325 02:06:29.773986 25 predicates.go:957] sonobuoy-e2e-job-377d99148b324b41 from sonobuoy started at 2025-03-25 00:21:29 +0000 UTC (2 container statuses recorded)
  I0325 02:06:29.774056 25 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0325 02:06:29.774150 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0325 02:06:29.774211 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-fa7539a130154f7a-l2cln from sonobuoy started at 2025-03-25 00:21:29 +0000 UTC (2 container statuses recorded)
  I0325 02:06:29.774251 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0325 02:06:29.774328 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0325 02:06:29.774446 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node master-3 before test
  I0325 02:06:29.778820 25 predicates.go:957] keycloak-8458dcb89f-56vd4 from auth started at 2025-03-20 01:11:26 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.778942 25 predicates.go:959] 	Container keycloak ready: true, restart count 0
  I0325 02:06:29.779079 25 predicates.go:957] oauth2-redis-admin-0 from auth started at 2025-03-20 01:11:28 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.779137 25 predicates.go:959] 	Container redis ready: true, restart count 0
  I0325 02:06:29.779197 25 predicates.go:957] oauth2-redis-admin-1 from auth started at 2025-03-20 08:36:39 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.779298 25 predicates.go:959] 	Container redis ready: true, restart count 0
  I0325 02:06:29.779440 25 predicates.go:957] cloud-service-api-c9d968c5d-ds8b7 from cmp started at 2025-03-20 01:11:25 +0000 UTC (2 container statuses recorded)
  I0325 02:06:29.779566 25 predicates.go:959] 	Container cloud-service-api ready: true, restart count 0
  I0325 02:06:29.779621 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 02:06:29.779692 25 predicates.go:957] maestro-host-app-594465b98c-q6xr7 from cmp started at 2025-03-20 07:44:46 +0000 UTC (2 container statuses recorded)
  I0325 02:06:29.779743 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 02:06:29.779872 25 predicates.go:959] 	Container maestro-host-app ready: true, restart count 0
  I0325 02:06:29.779968 25 predicates.go:957] notification-adapter-api-6cfc54858d-r2572 from cmp started at 2025-03-20 01:11:24 +0000 UTC (2 container statuses recorded)
  I0325 02:06:29.780031 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 02:06:29.780100 25 predicates.go:959] 	Container noti-api ready: true, restart count 1
  I0325 02:06:29.780189 25 predicates.go:957] my-cluster-kafka-1 from dataplatform started at 2025-03-20 01:12:42 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.780249 25 predicates.go:959] 	Container kafka ready: true, restart count 0
  I0325 02:06:29.780292 25 predicates.go:957] my-cluster-zookeeper-2 from dataplatform started at 2025-03-20 01:11:45 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.780345 25 predicates.go:959] 	Container zookeeper ready: true, restart count 0
  I0325 02:06:29.780403 25 predicates.go:957] vault-2 from dataplatform started at 2025-03-20 08:36:44 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.780447 25 predicates.go:959] 	Container vault ready: true, restart count 0
  I0325 02:06:29.780479 25 predicates.go:957] cilium-sz75f from kube-system started at 2025-03-24 08:39:20 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.780566 25 predicates.go:959] 	Container cilium-agent ready: true, restart count 0
  I0325 02:06:29.780625 25 predicates.go:957] coredns-5c54f84c97-k84w6 from kube-system started at 2025-03-19 11:32:47 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.780680 25 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0325 02:06:29.780712 25 predicates.go:957] kube-apiserver-master-3 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.780770 25 predicates.go:959] 	Container kube-apiserver ready: true, restart count 1
  I0325 02:06:29.780855 25 predicates.go:957] kube-controller-manager-master-3 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.780923 25 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 2
  I0325 02:06:29.780956 25 predicates.go:957] kube-proxy-wmb9b from kube-system started at 2025-03-19 11:31:19 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.781021 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0325 02:06:29.781121 25 predicates.go:957] kube-scheduler-master-3 from kube-system started at 2025-03-19 11:33:18 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.781202 25 predicates.go:959] 	Container kube-scheduler ready: true, restart count 1
  I0325 02:06:29.781249 25 predicates.go:957] pod2-0-sched-preemption-medium-priority from sched-preemption-846 started at 2025-03-25 02:06:21 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.781330 25 predicates.go:959] 	Container pod2-0-sched-preemption-medium-priority ready: true, restart count 0
  I0325 02:06:29.781376 25 predicates.go:957] pod2-1-sched-preemption-medium-priority from sched-preemption-846 started at 2025-03-25 02:06:21 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.781424 25 predicates.go:959] 	Container pod2-1-sched-preemption-medium-priority ready: true, restart count 0
  I0325 02:06:29.781488 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-fa7539a130154f7a-6r4nq from sonobuoy started at 2025-03-25 00:21:29 +0000 UTC (2 container statuses recorded)
  I0325 02:06:29.781524 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0325 02:06:29.781568 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0325 02:06:29.781618 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker-1 before test
  I0325 02:06:29.788906 25 predicates.go:957] mariadb-keycloak-0 from auth started at 2025-03-20 01:11:24 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.788940 25 predicates.go:959] 	Container mariadb-keycloak ready: true, restart count 0
  I0325 02:06:29.788950 25 predicates.go:957] oauth2-proxy-admin-89ccc8b6d-nvwdp from auth started at 2025-03-20 01:11:24 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.788960 25 predicates.go:959] 	Container oauth2-proxy-admin ready: true, restart count 5
  I0325 02:06:29.788969 25 predicates.go:957] oauth2-redis-admin-3 from auth started at 2025-03-20 01:11:54 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.788976 25 predicates.go:959] 	Container redis ready: true, restart count 0
  I0325 02:06:29.788983 25 predicates.go:957] maestro-auth-gateway-5c697fc7b6-zphwv from cmp started at 2025-03-20 01:11:25 +0000 UTC (2 container statuses recorded)
  I0325 02:06:29.788989 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 02:06:29.788995 25 predicates.go:959] 	Container maestro-auth-gateway ready: true, restart count 0
  I0325 02:06:29.789002 25 predicates.go:957] maestro-event-pusher-58b995bc56-szcmn from cmp started at 2025-03-20 01:11:24 +0000 UTC (2 container statuses recorded)
  I0325 02:06:29.789008 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 02:06:29.789136 25 predicates.go:959] 	Container maestro-event-pusher ready: false, restart count 1381
  I0325 02:06:29.789145 25 predicates.go:957] mariadb-maxscale-66c484df55-94v5c from dataplatform started at 2025-03-20 01:11:23 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.789153 25 predicates.go:959] 	Container maxscale ready: true, restart count 0
  I0325 02:06:29.789160 25 predicates.go:957] mariadb-sts-1 from dataplatform started at 2025-03-20 01:11:32 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.789167 25 predicates.go:959] 	Container mariadb ready: true, restart count 0
  I0325 02:06:29.789234 25 predicates.go:957] my-cluster-kafka-2 from dataplatform started at 2025-03-20 01:12:42 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.789245 25 predicates.go:959] 	Container kafka ready: true, restart count 0
  I0325 02:06:29.789253 25 predicates.go:957] my-cluster-zookeeper-1 from dataplatform started at 2025-03-20 01:11:45 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.789261 25 predicates.go:959] 	Container zookeeper ready: true, restart count 0
  I0325 02:06:29.789270 25 predicates.go:957] strimzi-cluster-operator-54669f99c6-drmn2 from dataplatform started at 2025-03-20 01:11:24 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.789276 25 predicates.go:959] 	Container strimzi-cluster-operator ready: true, restart count 0
  I0325 02:06:29.789296 25 predicates.go:957] vault-1 from dataplatform started at 2025-03-20 01:11:29 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.789303 25 predicates.go:959] 	Container vault ready: true, restart count 0
  I0325 02:06:29.789311 25 predicates.go:957] nfs-client-provisioner-75dbf5b896-6pxh9 from default started at 2025-03-19 11:51:03 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.789318 25 predicates.go:959] 	Container nfs-client-provisioner ready: true, restart count 0
  I0325 02:06:29.789331 25 predicates.go:957] ingress-nginx-admission-create-2s6qz from ingress-nginx started at 2025-03-19 11:45:01 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.789337 25 predicates.go:959] 	Container create ready: false, restart count 0
  I0325 02:06:29.789370 25 predicates.go:957] ingress-nginx-admission-patch-znhld from ingress-nginx started at 2025-03-19 11:45:01 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.789376 25 predicates.go:959] 	Container patch ready: false, restart count 0
  I0325 02:06:29.789384 25 predicates.go:957] ingress-nginx-controller-d498747d7-g2shr from ingress-nginx started at 2025-03-19 11:45:01 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.789437 25 predicates.go:959] 	Container controller ready: true, restart count 0
  I0325 02:06:29.789446 25 predicates.go:957] istio-gateway-6966544c9c-blbvp from istio-system started at 2025-03-19 11:41:10 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.789452 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 02:06:29.789459 25 predicates.go:957] cilium-hcjv9 from kube-system started at 2025-03-24 08:39:20 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.789477 25 predicates.go:959] 	Container cilium-agent ready: true, restart count 0
  I0325 02:06:29.789487 25 predicates.go:957] cilium-operator-75896ddc6-2gh9q from kube-system started at 2025-03-24 08:39:25 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.789494 25 predicates.go:959] 	Container cilium-operator ready: true, restart count 0
  I0325 02:06:29.789502 25 predicates.go:957] kube-proxy-844j7 from kube-system started at 2025-03-19 11:31:57 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.789507 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0325 02:06:29.789514 25 predicates.go:957] pod3-0-sched-preemption-medium-priority from sched-preemption-846 started at 2025-03-25 02:06:21 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.789547 25 predicates.go:959] 	Container pod3-0-sched-preemption-medium-priority ready: true, restart count 0
  I0325 02:06:29.789554 25 predicates.go:957] pod3-1-sched-preemption-medium-priority from sched-preemption-846 started at 2025-03-25 02:06:21 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.789560 25 predicates.go:959] 	Container pod3-1-sched-preemption-medium-priority ready: true, restart count 0
  I0325 02:06:29.789578 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-fa7539a130154f7a-j662m from sonobuoy started at 2025-03-25 00:21:29 +0000 UTC (2 container statuses recorded)
  I0325 02:06:29.789585 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0325 02:06:29.789609 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0325 02:06:29.789627 25 predicates.go:957] viola-api-5465c989b9-nmngm from viola started at 2025-03-20 01:11:25 +0000 UTC (2 container statuses recorded)
  I0325 02:06:29.789633 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 02:06:29.789640 25 predicates.go:959] 	Container viola-api ready: true, restart count 0
  I0325 02:06:29.789648 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker-2 before test
  I0325 02:06:29.795008 25 predicates.go:957] keycloak-8458dcb89f-bcx8k from auth started at 2025-03-20 01:11:25 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.795059 25 predicates.go:959] 	Container keycloak ready: true, restart count 0
  I0325 02:06:29.795067 25 predicates.go:957] oauth2-redis-admin-2 from auth started at 2025-03-20 01:11:51 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.795072 25 predicates.go:959] 	Container redis ready: true, restart count 0
  I0325 02:06:29.795077 25 predicates.go:957] oauth2-redis-admin-5 from auth started at 2025-03-20 01:12:20 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.795082 25 predicates.go:959] 	Container redis ready: true, restart count 0
  I0325 02:06:29.795094 25 predicates.go:957] cloud-service-collector-69b56994cb-s2gck from cmp started at 2025-03-20 01:11:25 +0000 UTC (2 container statuses recorded)
  I0325 02:06:29.795099 25 predicates.go:959] 	Container cloud-service-collector ready: true, restart count 4
  I0325 02:06:29.795103 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 02:06:29.795108 25 predicates.go:957] maestro-iam-adapter-api-7df55b4d5f-srt98 from cmp started at 2025-03-20 08:36:38 +0000 UTC (2 container statuses recorded)
  I0325 02:06:29.795113 25 predicates.go:959] 	Container istio-proxy ready: true, restart count 0
  I0325 02:06:29.795118 25 predicates.go:959] 	Container maestro-iam-adapter-api ready: true, restart count 0
  I0325 02:06:29.795123 25 predicates.go:957] mariadb-maxscale-66c484df55-sljkg from dataplatform started at 2025-03-20 01:11:23 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.795129 25 predicates.go:959] 	Container maxscale ready: true, restart count 0
  I0325 02:06:29.795133 25 predicates.go:957] mariadb-sts-0 from dataplatform started at 2025-03-20 01:11:27 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.795138 25 predicates.go:959] 	Container mariadb ready: true, restart count 0
  I0325 02:06:29.795145 25 predicates.go:957] my-cluster-entity-operator-5fc55954dc-qfw2l from dataplatform started at 2025-03-20 01:13:10 +0000 UTC (2 container statuses recorded)
  I0325 02:06:29.795150 25 predicates.go:959] 	Container topic-operator ready: true, restart count 0
  I0325 02:06:29.795154 25 predicates.go:959] 	Container user-operator ready: true, restart count 0
  I0325 02:06:29.795159 25 predicates.go:957] my-cluster-kafka-0 from dataplatform started at 2025-03-20 01:12:42 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.795164 25 predicates.go:959] 	Container kafka ready: true, restart count 0
  I0325 02:06:29.795222 25 predicates.go:957] my-cluster-zookeeper-0 from dataplatform started at 2025-03-20 01:11:44 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.795227 25 predicates.go:959] 	Container zookeeper ready: true, restart count 0
  I0325 02:06:29.795231 25 predicates.go:957] pds-integration-service-bb7f75d74-x2l6x from dataplatform started at 2025-03-20 07:44:46 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.795236 25 predicates.go:959] 	Container pds-integration-service ready: true, restart count 0
  I0325 02:06:29.795241 25 predicates.go:957] redis-0 from dataplatform started at 2025-03-20 07:44:47 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.795246 25 predicates.go:959] 	Container redis ready: true, restart count 0
  I0325 02:06:29.795286 25 predicates.go:957] vault-0 from dataplatform started at 2025-03-20 01:11:28 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.795290 25 predicates.go:959] 	Container vault ready: true, restart count 0
  I0325 02:06:29.795295 25 predicates.go:957] cilium-77tzn from kube-system started at 2025-03-24 08:39:20 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.795300 25 predicates.go:959] 	Container cilium-agent ready: true, restart count 0
  I0325 02:06:29.795305 25 predicates.go:957] kube-proxy-phlgh from kube-system started at 2025-03-19 11:32:02 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.795310 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0325 02:06:29.795315 25 predicates.go:957] pod4-0-sched-preemption-medium-priority from sched-preemption-846 started at 2025-03-25 02:06:21 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.795322 25 predicates.go:959] 	Container pod4-0-sched-preemption-medium-priority ready: true, restart count 0
  I0325 02:06:29.795351 25 predicates.go:957] pod4-1-sched-preemption-medium-priority from sched-preemption-846 started at 2025-03-25 02:06:21 +0000 UTC (1 container statuses recorded)
  I0325 02:06:29.795357 25 predicates.go:959] 	Container pod4-1-sched-preemption-medium-priority ready: true, restart count 0
  I0325 02:06:29.795363 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-fa7539a130154f7a-dxpq8 from sonobuoy started at 2025-03-25 00:21:29 +0000 UTC (2 container statuses recorded)
  I0325 02:06:29.795435 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0325 02:06:29.795443 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node master-1 @ 03/25/25 02:06:29.822
  STEP: verifying the node has the label node master-2 @ 03/25/25 02:06:29.845
  STEP: verifying the node has the label node master-3 @ 03/25/25 02:06:29.869
  STEP: verifying the node has the label node worker-1 @ 03/25/25 02:06:29.885
  STEP: verifying the node has the label node worker-2 @ 03/25/25 02:06:29.911
  I0325 02:06:29.939463 25 predicates.go:372] Pod keycloak-8458dcb89f-56vd4 requesting resource cpu=0m on Node master-3
  I0325 02:06:29.939812 25 predicates.go:372] Pod keycloak-8458dcb89f-bcx8k requesting resource cpu=0m on Node worker-2
  I0325 02:06:29.939980 25 predicates.go:372] Pod mariadb-keycloak-0 requesting resource cpu=0m on Node worker-1
  I0325 02:06:29.940081 25 predicates.go:372] Pod oauth2-proxy-admin-89ccc8b6d-gkxsf requesting resource cpu=0m on Node master-1
  I0325 02:06:29.940292 25 predicates.go:372] Pod oauth2-proxy-admin-89ccc8b6d-nvwdp requesting resource cpu=0m on Node worker-1
  I0325 02:06:29.940386 25 predicates.go:372] Pod oauth2-redis-admin-0 requesting resource cpu=0m on Node master-3
  I0325 02:06:29.940584 25 predicates.go:372] Pod oauth2-redis-admin-1 requesting resource cpu=0m on Node master-3
  I0325 02:06:29.940762 25 predicates.go:372] Pod oauth2-redis-admin-2 requesting resource cpu=0m on Node worker-2
  I0325 02:06:29.941253 25 predicates.go:372] Pod oauth2-redis-admin-3 requesting resource cpu=0m on Node worker-1
  I0325 02:06:29.941446 25 predicates.go:372] Pod oauth2-redis-admin-4 requesting resource cpu=0m on Node master-1
  I0325 02:06:29.941616 25 predicates.go:372] Pod oauth2-redis-admin-5 requesting resource cpu=0m on Node worker-2
  I0325 02:06:29.941683 25 predicates.go:372] Pod cloud-service-api-c9d968c5d-ds8b7 requesting resource cpu=100m on Node master-3
  I0325 02:06:29.941857 25 predicates.go:372] Pod cloud-service-collector-69b56994cb-s2gck requesting resource cpu=100m on Node worker-2
  I0325 02:06:29.941918 25 predicates.go:372] Pod maestro-auth-gateway-5c697fc7b6-zphwv requesting resource cpu=100m on Node worker-1
  I0325 02:06:29.942007 25 predicates.go:372] Pod maestro-common-api-d4f57ffc9-v25ts requesting resource cpu=100m on Node master-1
  I0325 02:06:29.942093 25 predicates.go:372] Pod maestro-event-pusher-58b995bc56-szcmn requesting resource cpu=100m on Node worker-1
  I0325 02:06:29.942157 25 predicates.go:372] Pod maestro-host-app-594465b98c-q6xr7 requesting resource cpu=100m on Node master-3
  I0325 02:06:29.942225 25 predicates.go:372] Pod maestro-iam-adapter-api-7df55b4d5f-srt98 requesting resource cpu=100m on Node worker-2
  I0325 02:06:29.942366 25 predicates.go:372] Pod maestro-remote-app-b677d7995-ttggb requesting resource cpu=100m on Node master-1
  I0325 02:06:29.942437 25 predicates.go:372] Pod notification-adapter-api-6cfc54858d-r2572 requesting resource cpu=100m on Node master-3
  I0325 02:06:29.942478 25 predicates.go:372] Pod mariadb-maxscale-66c484df55-94v5c requesting resource cpu=0m on Node worker-1
  I0325 02:06:29.942539 25 predicates.go:372] Pod mariadb-maxscale-66c484df55-sljkg requesting resource cpu=0m on Node worker-2
  I0325 02:06:29.942674 25 predicates.go:372] Pod mariadb-sts-0 requesting resource cpu=0m on Node worker-2
  I0325 02:06:29.942820 25 predicates.go:372] Pod mariadb-sts-1 requesting resource cpu=0m on Node worker-1
  I0325 02:06:29.942930 25 predicates.go:372] Pod my-cluster-entity-operator-5fc55954dc-qfw2l requesting resource cpu=0m on Node worker-2
  I0325 02:06:29.943032 25 predicates.go:372] Pod my-cluster-kafka-0 requesting resource cpu=0m on Node worker-2
  I0325 02:06:29.943142 25 predicates.go:372] Pod my-cluster-kafka-1 requesting resource cpu=0m on Node master-3
  I0325 02:06:29.943227 25 predicates.go:372] Pod my-cluster-kafka-2 requesting resource cpu=0m on Node worker-1
  I0325 02:06:29.943328 25 predicates.go:372] Pod my-cluster-zookeeper-0 requesting resource cpu=0m on Node worker-2
  I0325 02:06:29.943442 25 predicates.go:372] Pod my-cluster-zookeeper-1 requesting resource cpu=0m on Node worker-1
  I0325 02:06:29.943551 25 predicates.go:372] Pod my-cluster-zookeeper-2 requesting resource cpu=0m on Node master-3
  I0325 02:06:29.943658 25 predicates.go:372] Pod pds-integration-service-bb7f75d74-x2l6x requesting resource cpu=0m on Node worker-2
  I0325 02:06:29.943801 25 predicates.go:372] Pod redis-0 requesting resource cpu=0m on Node worker-2
  I0325 02:06:29.943889 25 predicates.go:372] Pod strimzi-cluster-operator-54669f99c6-drmn2 requesting resource cpu=200m on Node worker-1
  I0325 02:06:29.943990 25 predicates.go:372] Pod vault-0 requesting resource cpu=0m on Node worker-2
  I0325 02:06:29.944170 25 predicates.go:372] Pod vault-1 requesting resource cpu=0m on Node worker-1
  I0325 02:06:29.944338 25 predicates.go:372] Pod vault-2 requesting resource cpu=0m on Node master-3
  I0325 02:06:29.944507 25 predicates.go:372] Pod nfs-client-provisioner-75dbf5b896-6pxh9 requesting resource cpu=0m on Node worker-1
  I0325 02:06:29.944603 25 predicates.go:372] Pod ingress-nginx-controller-d498747d7-g2shr requesting resource cpu=100m on Node worker-1
  I0325 02:06:29.944644 25 predicates.go:372] Pod istio-gateway-6966544c9c-blbvp requesting resource cpu=100m on Node worker-1
  I0325 02:06:29.944737 25 predicates.go:372] Pod istiod-99fc7b678-c74hx requesting resource cpu=500m on Node master-1
  I0325 02:06:29.944795 25 predicates.go:372] Pod cilium-77tzn requesting resource cpu=100m on Node worker-2
  I0325 02:06:29.944991 25 predicates.go:372] Pod cilium-7mfqv requesting resource cpu=100m on Node master-2
  I0325 02:06:29.945061 25 predicates.go:372] Pod cilium-hcjv9 requesting resource cpu=100m on Node worker-1
  I0325 02:06:29.945129 25 predicates.go:372] Pod cilium-nb9w6 requesting resource cpu=100m on Node master-1
  I0325 02:06:29.945186 25 predicates.go:372] Pod cilium-operator-75896ddc6-2dpsx requesting resource cpu=0m on Node master-2
  I0325 02:06:29.945259 25 predicates.go:372] Pod cilium-operator-75896ddc6-2gh9q requesting resource cpu=0m on Node worker-1
  I0325 02:06:29.945325 25 predicates.go:372] Pod cilium-sz75f requesting resource cpu=100m on Node master-3
  I0325 02:06:29.945408 25 predicates.go:372] Pod coredns-5c54f84c97-k84w6 requesting resource cpu=100m on Node master-3
  I0325 02:06:29.945473 25 predicates.go:372] Pod coredns-5c54f84c97-s7pm8 requesting resource cpu=100m on Node master-1
  I0325 02:06:29.945537 25 predicates.go:372] Pod dns-autoscaler-76ddddbbc-njtdg requesting resource cpu=20m on Node master-1
  I0325 02:06:29.945615 25 predicates.go:372] Pod kube-apiserver-master-1 requesting resource cpu=250m on Node master-1
  I0325 02:06:29.945791 25 predicates.go:372] Pod kube-apiserver-master-2 requesting resource cpu=250m on Node master-2
  I0325 02:06:29.945894 25 predicates.go:372] Pod kube-apiserver-master-3 requesting resource cpu=250m on Node master-3
  I0325 02:06:29.946014 25 predicates.go:372] Pod kube-controller-manager-master-1 requesting resource cpu=200m on Node master-1
  I0325 02:06:29.946128 25 predicates.go:372] Pod kube-controller-manager-master-2 requesting resource cpu=200m on Node master-2
  I0325 02:06:29.946255 25 predicates.go:372] Pod kube-controller-manager-master-3 requesting resource cpu=200m on Node master-3
  I0325 02:06:29.946367 25 predicates.go:372] Pod kube-proxy-844j7 requesting resource cpu=0m on Node worker-1
  I0325 02:06:29.946462 25 predicates.go:372] Pod kube-proxy-btnc7 requesting resource cpu=0m on Node master-2
  I0325 02:06:29.946569 25 predicates.go:372] Pod kube-proxy-c9vn6 requesting resource cpu=0m on Node master-1
  I0325 02:06:29.946707 25 predicates.go:372] Pod kube-proxy-phlgh requesting resource cpu=0m on Node worker-2
  I0325 02:06:29.946813 25 predicates.go:372] Pod kube-proxy-wmb9b requesting resource cpu=0m on Node master-3
  I0325 02:06:29.946923 25 predicates.go:372] Pod kube-scheduler-master-1 requesting resource cpu=100m on Node master-1
  I0325 02:06:29.947070 25 predicates.go:372] Pod kube-scheduler-master-2 requesting resource cpu=100m on Node master-2
  I0325 02:06:29.947160 25 predicates.go:372] Pod kube-scheduler-master-3 requesting resource cpu=100m on Node master-3
  I0325 02:06:29.947254 25 predicates.go:372] Pod pod0-1-sched-preemption-medium-priority requesting resource cpu=0m on Node master-1
  I0325 02:06:29.947369 25 predicates.go:372] Pod pod1-0-sched-preemption-medium-priority requesting resource cpu=0m on Node master-2
  I0325 02:06:29.947496 25 predicates.go:372] Pod pod1-1-sched-preemption-medium-priority requesting resource cpu=0m on Node master-2
  I0325 02:06:29.947574 25 predicates.go:372] Pod pod2-0-sched-preemption-medium-priority requesting resource cpu=0m on Node master-3
  I0325 02:06:29.947682 25 predicates.go:372] Pod pod2-1-sched-preemption-medium-priority requesting resource cpu=0m on Node master-3
  I0325 02:06:29.947783 25 predicates.go:372] Pod pod3-0-sched-preemption-medium-priority requesting resource cpu=0m on Node worker-1
  I0325 02:06:29.947948 25 predicates.go:372] Pod pod3-1-sched-preemption-medium-priority requesting resource cpu=0m on Node worker-1
  I0325 02:06:29.948035 25 predicates.go:372] Pod pod4-0-sched-preemption-medium-priority requesting resource cpu=0m on Node worker-2
  I0325 02:06:29.948160 25 predicates.go:372] Pod pod4-1-sched-preemption-medium-priority requesting resource cpu=0m on Node worker-2
  I0325 02:06:29.948258 25 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node master-2
  I0325 02:06:29.948366 25 predicates.go:372] Pod sonobuoy-e2e-job-377d99148b324b41 requesting resource cpu=0m on Node master-2
  I0325 02:06:29.948433 25 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-fa7539a130154f7a-69xpv requesting resource cpu=0m on Node master-1
  I0325 02:06:29.948492 25 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-fa7539a130154f7a-6r4nq requesting resource cpu=0m on Node master-3
  I0325 02:06:29.948554 25 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-fa7539a130154f7a-dxpq8 requesting resource cpu=0m on Node worker-2
  I0325 02:06:29.948641 25 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-fa7539a130154f7a-j662m requesting resource cpu=0m on Node worker-1
  I0325 02:06:29.948673 25 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-fa7539a130154f7a-l2cln requesting resource cpu=0m on Node master-2
  I0325 02:06:29.948750 25 predicates.go:372] Pod viola-api-5465c989b9-nmngm requesting resource cpu=100m on Node worker-1
  I0325 02:06:29.948941 25 predicates.go:372] Pod viola-remote-app-5b964d4757-mx9xg requesting resource cpu=100m on Node master-1
  STEP: Starting Pods to consume most of the cluster CPU. @ 03/25/25 02:06:29.948
  I0325 02:06:29.949111 25 predicates.go:382] Creating a pod which consumes cpu=1281m on Node master-1
  I0325 02:06:29.962437 25 predicates.go:382] Creating a pod which consumes cpu=1925m on Node master-2
  I0325 02:06:29.972276 25 predicates.go:382] Creating a pod which consumes cpu=1645m on Node master-3
  I0325 02:06:29.983163 25 predicates.go:382] Creating a pod which consumes cpu=1820m on Node worker-1
  I0325 02:06:30.000308 25 predicates.go:382] Creating a pod which consumes cpu=2170m on Node worker-2
  E0325 02:06:30.139155      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:31.139420      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 03/25/25 02:06:32.033
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1747e627-2ac1-4b5c-8af3-ab7b0f482735.182fe9910ad95052], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8124/filler-pod-1747e627-2ac1-4b5c-8af3-ab7b0f482735 to master-2] @ 03/25/25 02:06:32.037
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1747e627-2ac1-4b5c-8af3-ab7b0f482735.182fe991351ae601], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 03/25/25 02:06:32.037
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1747e627-2ac1-4b5c-8af3-ab7b0f482735.182fe99137e16bb0], Reason = [Created], Message = [Created container: filler-pod-1747e627-2ac1-4b5c-8af3-ab7b0f482735] @ 03/25/25 02:06:32.037
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1747e627-2ac1-4b5c-8af3-ab7b0f482735.182fe9913d3af7ef], Reason = [Started], Message = [Started container filler-pod-1747e627-2ac1-4b5c-8af3-ab7b0f482735] @ 03/25/25 02:06:32.037
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-4bf66a3a-f7a5-4c0c-a7ab-95456faefcd6.182fe9910a525264], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8124/filler-pod-4bf66a3a-f7a5-4c0c-a7ab-95456faefcd6 to master-1] @ 03/25/25 02:06:32.038
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-4bf66a3a-f7a5-4c0c-a7ab-95456faefcd6.182fe99142c34614], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 03/25/25 02:06:32.038
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-4bf66a3a-f7a5-4c0c-a7ab-95456faefcd6.182fe9914643c6f3], Reason = [Created], Message = [Created container: filler-pod-4bf66a3a-f7a5-4c0c-a7ab-95456faefcd6] @ 03/25/25 02:06:32.038
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-4bf66a3a-f7a5-4c0c-a7ab-95456faefcd6.182fe9914b01e51e], Reason = [Started], Message = [Started container filler-pod-4bf66a3a-f7a5-4c0c-a7ab-95456faefcd6] @ 03/25/25 02:06:32.038
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b020a99b-b48f-465f-a301-fc3aaa54dfc1.182fe9910c092645], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8124/filler-pod-b020a99b-b48f-465f-a301-fc3aaa54dfc1 to master-3] @ 03/25/25 02:06:32.038
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b020a99b-b48f-465f-a301-fc3aaa54dfc1.182fe9913e214024], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 03/25/25 02:06:32.038
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b020a99b-b48f-465f-a301-fc3aaa54dfc1.182fe99140753107], Reason = [Created], Message = [Created container: filler-pod-b020a99b-b48f-465f-a301-fc3aaa54dfc1] @ 03/25/25 02:06:32.038
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b020a99b-b48f-465f-a301-fc3aaa54dfc1.182fe99145fb9c7d], Reason = [Started], Message = [Started container filler-pod-b020a99b-b48f-465f-a301-fc3aaa54dfc1] @ 03/25/25 02:06:32.038
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c198fe14-1cf0-447f-9979-67009a1bb7fb.182fe9910d8283a7], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8124/filler-pod-c198fe14-1cf0-447f-9979-67009a1bb7fb to worker-2] @ 03/25/25 02:06:32.038
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c198fe14-1cf0-447f-9979-67009a1bb7fb.182fe9914247075d], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 03/25/25 02:06:32.038
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c198fe14-1cf0-447f-9979-67009a1bb7fb.182fe99145a8bfa7], Reason = [Created], Message = [Created container: filler-pod-c198fe14-1cf0-447f-9979-67009a1bb7fb] @ 03/25/25 02:06:32.038
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c198fe14-1cf0-447f-9979-67009a1bb7fb.182fe9914a80835a], Reason = [Started], Message = [Started container filler-pod-c198fe14-1cf0-447f-9979-67009a1bb7fb] @ 03/25/25 02:06:32.038
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f2c7e576-f8bb-4f69-b8b5-0e542fb3226e.182fe9910ce4a768], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8124/filler-pod-f2c7e576-f8bb-4f69-b8b5-0e542fb3226e to worker-1] @ 03/25/25 02:06:32.038
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f2c7e576-f8bb-4f69-b8b5-0e542fb3226e.182fe99142ec1f57], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 03/25/25 02:06:32.038
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f2c7e576-f8bb-4f69-b8b5-0e542fb3226e.182fe991462884a0], Reason = [Created], Message = [Created container: filler-pod-f2c7e576-f8bb-4f69-b8b5-0e542fb3226e] @ 03/25/25 02:06:32.038
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f2c7e576-f8bb-4f69-b8b5-0e542fb3226e.182fe9914a354401], Reason = [Started], Message = [Started container filler-pod-f2c7e576-f8bb-4f69-b8b5-0e542fb3226e] @ 03/25/25 02:06:32.038
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.182fe99185e88608], Reason = [FailedScheduling], Message = [0/5 nodes are available: 5 Insufficient cpu. preemption: 0/5 nodes are available: 5 No preemption victims found for incoming pod.] @ 03/25/25 02:06:32.058
  E0325 02:06:32.140507      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: removing the label node off the node master-1 @ 03/25/25 02:06:33.052
  STEP: verifying the node doesn't have the label node @ 03/25/25 02:06:33.073
  STEP: removing the label node off the node master-2 @ 03/25/25 02:06:33.084
  STEP: verifying the node doesn't have the label node @ 03/25/25 02:06:33.101
  STEP: removing the label node off the node master-3 @ 03/25/25 02:06:33.104
  STEP: verifying the node doesn't have the label node @ 03/25/25 02:06:33.131
  STEP: removing the label node off the node worker-1 @ 03/25/25 02:06:33.134
  E0325 02:06:33.141093      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: verifying the node doesn't have the label node @ 03/25/25 02:06:33.149
  STEP: removing the label node off the node worker-2 @ 03/25/25 02:06:33.153
  STEP: verifying the node doesn't have the label node @ 03/25/25 02:06:33.173
  I0325 02:06:33.179413 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8124" for this suite. @ 03/25/25 02:06:33.189
• [3.476 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 03/25/25 02:06:33.198
  I0325 02:06:33.198891 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename secrets @ 03/25/25 02:06:33.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:06:33.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:06:33.23
  STEP: Creating secret with name secret-test-92514725-13cd-48f1-bb94-5ce3bc9a1404 @ 03/25/25 02:06:33.232
  STEP: Creating a pod to test consume secrets @ 03/25/25 02:06:33.238
  E0325 02:06:34.142270      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:35.143166      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:36.143281      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:37.143396      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 02:06:37.259
  I0325 02:06:37.263155 25 output.go:207] Trying to get logs from node master-2 pod pod-secrets-bc21db38-bd97-465d-8def-86b3c3919c2e container secret-volume-test: <nil>
  STEP: delete the pod @ 03/25/25 02:06:37.28
  I0325 02:06:37.307274 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2816" for this suite. @ 03/25/25 02:06:37.314
• [4.138 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3373
  STEP: Creating a kubernetes client @ 03/25/25 02:06:37.336
  I0325 02:06:37.336643 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename services @ 03/25/25 02:06:37.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:06:37.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:06:37.37
  STEP: creating a Service @ 03/25/25 02:06:37.375
  STEP: watching for the Service to be added @ 03/25/25 02:06:37.401
  I0325 02:06:37.404051 25 service.go:3425] Found Service test-service-s4dlc in namespace services-9596 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32210}]
  I0325 02:06:37.404085 25 service.go:3432] Service test-service-s4dlc created
  STEP: Getting /status @ 03/25/25 02:06:37.404
  I0325 02:06:37.409125 25 service.go:3443] Service test-service-s4dlc has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 03/25/25 02:06:37.409
  STEP: watching for the Service to be patched @ 03/25/25 02:06:37.416
  I0325 02:06:37.417954 25 service.go:3466] observed Service test-service-s4dlc in namespace services-9596 with annotations: map[] & LoadBalancer: {[]}
  I0325 02:06:37.418007 25 service.go:3469] Found Service test-service-s4dlc in namespace services-9596 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc003391100 []}]}
  I0325 02:06:37.418021 25 service.go:3476] Service test-service-s4dlc has service status patched
  STEP: updating the ServiceStatus @ 03/25/25 02:06:37.418
  I0325 02:06:37.430039 25 service.go:3496] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 03/25/25 02:06:37.43
  I0325 02:06:37.431328 25 service.go:3507] Observed Service test-service-s4dlc in namespace services-9596 with annotations: map[] & Conditions: []
  I0325 02:06:37.431697 25 service.go:3518] Observed Service test-service-s4dlc in namespace services-9596 with annotations: map[patchedstatus:true] & Conditions: []
  I0325 02:06:37.431792 25 service.go:3514] Found Service test-service-s4dlc in namespace services-9596 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0325 02:06:37.431866 25 service.go:3525] Service test-service-s4dlc has service status updated
  STEP: patching the service @ 03/25/25 02:06:37.431
  STEP: watching for the Service to be patched @ 03/25/25 02:06:37.44
  I0325 02:06:37.441480 25 service.go:3548] observed Service test-service-s4dlc in namespace services-9596 with labels: map[test-service-static:true]
  I0325 02:06:37.441666 25 service.go:3548] observed Service test-service-s4dlc in namespace services-9596 with labels: map[test-service-static:true]
  I0325 02:06:37.441853 25 service.go:3548] observed Service test-service-s4dlc in namespace services-9596 with labels: map[test-service-static:true]
  I0325 02:06:37.448661 25 service.go:3551] Found Service test-service-s4dlc in namespace services-9596 with labels: map[test-service:patched test-service-static:true]
  I0325 02:06:37.449367 25 service.go:3558] Service test-service-s4dlc patched
  STEP: deleting the service @ 03/25/25 02:06:37.449
  STEP: watching for the Service to be deleted @ 03/25/25 02:06:37.47
  I0325 02:06:37.472211 25 service.go:3582] Observed event: ADDED
  I0325 02:06:37.472435 25 service.go:3582] Observed event: MODIFIED
  I0325 02:06:37.472741 25 service.go:3582] Observed event: MODIFIED
  I0325 02:06:37.472790 25 service.go:3582] Observed event: MODIFIED
  I0325 02:06:37.472998 25 service.go:3578] Found Service test-service-s4dlc in namespace services-9596 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0325 02:06:37.473065 25 service.go:3587] Service test-service-s4dlc deleted
  I0325 02:06:37.473256 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9596" for this suite. @ 03/25/25 02:06:37.477
• [0.149 seconds]
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 03/25/25 02:06:37.485
  I0325 02:06:37.486035 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename services @ 03/25/25 02:06:37.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:06:37.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:06:37.528
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-4535 @ 03/25/25 02:06:37.531
  STEP: changing the ExternalName service to type=ClusterIP @ 03/25/25 02:06:37.539
  STEP: creating replication controller externalname-service in namespace services-4535 @ 03/25/25 02:06:37.562
  I0325 02:06:37.572456      25 runners.go:193] Created replication controller with name: externalname-service, namespace: services-4535, replica count: 2
  E0325 02:06:38.143532      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:39.143819      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:40.144715      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:06:40.624178      25 runners.go:193] externalname-service Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0325 02:06:41.145641      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:42.146029      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:43.146476      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:06:43.624408      25 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0325 02:06:43.624576 25 resource.go:361] Creating new exec pod
  E0325 02:06:44.147279      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:45.147747      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:46.147843      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:06:46.678005 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-4535 exec execpodt9cxw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0325 02:06:46.802797 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.233.3.13) 80 port [tcp/http] succeeded!\n"
  I0325 02:06:46.802852 25 builder.go:147] stdout: ""
  E0325 02:06:47.148365      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:06:47.678985 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-4535 exec execpodt9cxw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0325 02:06:47.794812 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.233.3.13) 80 port [tcp/http] succeeded!\n"
  I0325 02:06:47.794899 25 builder.go:147] stdout: ""
  E0325 02:06:48.149432      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:06:48.679076 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-4535 exec execpodt9cxw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0325 02:06:48.789511 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.233.3.13) 80 port [tcp/http] succeeded!\n"
  I0325 02:06:48.789566 25 builder.go:147] stdout: "externalname-service-pk8wj"
  I0325 02:06:48.789675 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-4535 exec execpodt9cxw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.3.13 80'
  I0325 02:06:48.899568 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.3.13 80\nConnection to 10.233.3.13 80 port [tcp/http] succeeded!\n"
  I0325 02:06:48.899619 25 builder.go:147] stdout: "externalname-service-pk8wj"
  I0325 02:06:48.899727 25 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I0325 02:06:48.919103 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4535" for this suite. @ 03/25/25 02:06:48.925
• [11.447 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 03/25/25 02:06:48.933
  I0325 02:06:48.933269 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename projected @ 03/25/25 02:06:48.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:06:48.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:06:48.96
  STEP: Creating projection with secret that has name projected-secret-test-map-6364aa84-e589-4e98-9991-78a62e9b9538 @ 03/25/25 02:06:48.962
  STEP: Creating a pod to test consume secrets @ 03/25/25 02:06:48.969
  E0325 02:06:49.150499      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:50.151599      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:51.151801      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:52.151974      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:53.152146      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:54.152648      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 02:06:54.998
  I0325 02:06:55.000907 25 output.go:207] Trying to get logs from node master-2 pod pod-projected-secrets-ec758243-0830-4a46-a2e3-2b0187bcd84d container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 03/25/25 02:06:55.007
  I0325 02:06:55.032540 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1859" for this suite. @ 03/25/25 02:06:55.036
• [6.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 03/25/25 02:06:55.046
  I0325 02:06:55.046917 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename downward-api @ 03/25/25 02:06:55.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:06:55.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:06:55.073
  STEP: Creating the pod @ 03/25/25 02:06:55.076
  E0325 02:06:55.153584      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:56.154228      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:57.154438      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:06:57.617700 25 pod_client.go:173] Successfully updated pod "annotationupdatefd0052b1-e3b9-4c49-a60d-cd2cd533ad67"
  E0325 02:06:58.154527      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:06:59.154636      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:06:59.631470 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-691" for this suite. @ 03/25/25 02:06:59.635
• [4.599 seconds]
------------------------------
SS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 03/25/25 02:06:59.645
  I0325 02:06:59.645140 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename events @ 03/25/25 02:06:59.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:06:59.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:06:59.672
  STEP: Create set of events @ 03/25/25 02:06:59.674
  STEP: get a list of Events with a label in the current namespace @ 03/25/25 02:06:59.693
  STEP: delete a list of events @ 03/25/25 02:06:59.696
  I0325 02:06:59.696222 25 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 03/25/25 02:06:59.72
  I0325 02:06:59.723673 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2482" for this suite. @ 03/25/25 02:06:59.736
• [0.100 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407
  STEP: Creating a kubernetes client @ 03/25/25 02:06:59.744
  I0325 02:06:59.744946 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename job @ 03/25/25 02:06:59.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:06:59.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:06:59.791
  STEP: Creating Indexed job @ 03/25/25 02:06:59.793
  STEP: Ensuring job reaches completions @ 03/25/25 02:06:59.801
  E0325 02:07:00.154856      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:01.155560      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:02.156472      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:03.156870      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:04.157637      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:05.157833      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:06.159131      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:07.160110      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:08.160553      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:09.161202      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 03/25/25 02:07:09.842
  I0325 02:07:09.846178 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6272" for this suite. @ 03/25/25 02:07:09.849
• [10.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 03/25/25 02:07:09.856
  I0325 02:07:09.856861 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename subpath @ 03/25/25 02:07:09.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:07:09.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:07:09.883
  STEP: Setting up data @ 03/25/25 02:07:09.885
  STEP: Creating pod pod-subpath-test-downwardapi-nzr6 @ 03/25/25 02:07:09.896
  STEP: Creating a pod to test atomic-volume-subpath @ 03/25/25 02:07:09.896
  E0325 02:07:10.161232      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:11.161390      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:12.162283      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:13.163095      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:14.164099      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:15.164047      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:16.164992      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:17.165291      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:18.166229      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:19.169253      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:20.169330      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:21.169914      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:22.170447      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:23.171163      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:24.172112      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:25.172893      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:26.173310      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:27.173568      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:28.174554      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:29.174725      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:30.175680      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:31.175868      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:32.175833      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:33.176161      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 02:07:33.97
  I0325 02:07:33.974448 25 output.go:207] Trying to get logs from node master-2 pod pod-subpath-test-downwardapi-nzr6 container test-container-subpath-downwardapi-nzr6: <nil>
  STEP: delete the pod @ 03/25/25 02:07:33.981
  STEP: Deleting pod pod-subpath-test-downwardapi-nzr6 @ 03/25/25 02:07:34.004
  I0325 02:07:34.004951 25 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-nzr6" in namespace "subpath-8668"
  I0325 02:07:34.007853 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8668" for this suite. @ 03/25/25 02:07:34.012
• [24.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 03/25/25 02:07:34.019
  I0325 02:07:34.019777 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename webhook @ 03/25/25 02:07:34.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:07:34.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:07:34.047
  STEP: Setting up server cert @ 03/25/25 02:07:34.144
  E0325 02:07:34.176493      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/25/25 02:07:34.421
  STEP: Deploying the webhook pod @ 03/25/25 02:07:34.432
  STEP: Wait for the deployment to be ready @ 03/25/25 02:07:34.449
  I0325 02:07:34.458950 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0325 02:07:35.177401      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:36.177476      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/25/25 02:07:36.473
  STEP: Verifying the service has paired with the endpoint @ 03/25/25 02:07:36.489
  E0325 02:07:37.177654      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:07:37.490413 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0325 02:07:37.499320 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  E0325 02:07:38.178582      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:39.178811      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:40.179771      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:41.180788      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:42.181838      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5393-crds.webhook.example.com via the AdmissionRegistration API @ 03/25/25 02:07:43.022
  STEP: Creating a custom resource that should be mutated by the webhook @ 03/25/25 02:07:43.044
  E0325 02:07:43.182474      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:44.182827      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:45.189304      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:07:45.693812 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7535" for this suite. @ 03/25/25 02:07:45.7
  STEP: Destroying namespace "webhook-markers-929" for this suite. @ 03/25/25 02:07:45.709
• [11.702 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 03/25/25 02:07:45.722
  I0325 02:07:45.722301 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename pv @ 03/25/25 02:07:45.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:07:45.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:07:45.744
  STEP: Creating initial PV and PVC @ 03/25/25 02:07:45.746
  I0325 02:07:45.746772 25 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-8175" @ 03/25/25 02:07:45.76
  STEP: Listing PVCs in namespace "pv-8175" @ 03/25/25 02:07:45.768
  STEP: Reading "pvc-qjzbd" Status @ 03/25/25 02:07:45.771
  STEP: Reading "pv-8175-2twb5" Status @ 03/25/25 02:07:45.775
  STEP: Patching "pvc-qjzbd" Status @ 03/25/25 02:07:45.8
  STEP: Patching "pv-8175-2twb5" Status @ 03/25/25 02:07:45.807
  STEP: Updating "pvc-qjzbd" Status @ 03/25/25 02:07:45.813
  STEP: Updating "pv-8175-2twb5" Status @ 03/25/25 02:07:45.835
  I0325 02:07:45.870926 25 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0325 02:07:45.871256 25 pv.go:205] Deleting PersistentVolumeClaim "pvc-qjzbd"
  I0325 02:07:45.881673 25 pv.go:193] Deleting PersistentVolume "pv-8175-2twb5"
  I0325 02:07:45.890751 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-8175" for this suite. @ 03/25/25 02:07:45.894
• [0.179 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 03/25/25 02:07:45.901
  I0325 02:07:45.901911 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename gc @ 03/25/25 02:07:45.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:07:45.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:07:45.942
  STEP: create the rc @ 03/25/25 02:07:45.96
  W0325 02:07:45.967905      25 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0325 02:07:46.187993      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:47.188039      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:48.188983      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:49.189041      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:50.189334      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:51.189711      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the rc @ 03/25/25 02:07:51.975
  STEP: wait for the rc to be deleted @ 03/25/25 02:07:51.981
  E0325 02:07:52.199363      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:53.193596      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:54.193751      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:55.193833      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:56.194679      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 03/25/25 02:07:56.987
  E0325 02:07:57.194724      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:58.195014      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:07:59.195318      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:00.195861      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:01.195907      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:02.196439      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:03.196764      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:04.197070      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:05.197282      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:06.198129      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:07.198540      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:08.198645      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:09.199294      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:10.200957      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:11.201256      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:12.201361      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:13.201788      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:14.201875      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:15.202105      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:16.202481      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:17.202619      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:18.203431      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:19.203644      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:20.203786      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:21.204168      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:22.204304      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:23.208980      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:24.209263      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:25.209397      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:26.210043      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 03/25/25 02:08:27
  I0325 02:08:27.087548 25 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0325 02:08:27.087647 25 delete.go:95] Deleting pod "simpletest.rc-27982" in namespace "gc-1285"
  I0325 02:08:27.103506 25 delete.go:95] Deleting pod "simpletest.rc-27rdm" in namespace "gc-1285"
  I0325 02:08:27.123633 25 delete.go:95] Deleting pod "simpletest.rc-2bdj4" in namespace "gc-1285"
  I0325 02:08:27.152019 25 delete.go:95] Deleting pod "simpletest.rc-4b4gc" in namespace "gc-1285"
  I0325 02:08:27.181192 25 delete.go:95] Deleting pod "simpletest.rc-4d6zx" in namespace "gc-1285"
  E0325 02:08:27.210451      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:08:27.225147 25 delete.go:95] Deleting pod "simpletest.rc-4tnwr" in namespace "gc-1285"
  I0325 02:08:27.266300 25 delete.go:95] Deleting pod "simpletest.rc-4xh6t" in namespace "gc-1285"
  I0325 02:08:27.287486 25 delete.go:95] Deleting pod "simpletest.rc-55ms9" in namespace "gc-1285"
  I0325 02:08:27.314036 25 delete.go:95] Deleting pod "simpletest.rc-64hb9" in namespace "gc-1285"
  I0325 02:08:27.348020 25 delete.go:95] Deleting pod "simpletest.rc-64zbq" in namespace "gc-1285"
  I0325 02:08:27.372785 25 delete.go:95] Deleting pod "simpletest.rc-667hk" in namespace "gc-1285"
  I0325 02:08:27.410111 25 delete.go:95] Deleting pod "simpletest.rc-68ncc" in namespace "gc-1285"
  I0325 02:08:27.451942 25 delete.go:95] Deleting pod "simpletest.rc-7lp6x" in namespace "gc-1285"
  I0325 02:08:27.469330 25 delete.go:95] Deleting pod "simpletest.rc-7v7rw" in namespace "gc-1285"
  I0325 02:08:27.495852 25 delete.go:95] Deleting pod "simpletest.rc-7zc2x" in namespace "gc-1285"
  I0325 02:08:27.551071 25 delete.go:95] Deleting pod "simpletest.rc-8cjhx" in namespace "gc-1285"
  I0325 02:08:27.606593 25 delete.go:95] Deleting pod "simpletest.rc-8cw89" in namespace "gc-1285"
  I0325 02:08:27.635882 25 delete.go:95] Deleting pod "simpletest.rc-8dt25" in namespace "gc-1285"
  I0325 02:08:27.666540 25 delete.go:95] Deleting pod "simpletest.rc-8xbq8" in namespace "gc-1285"
  I0325 02:08:27.692746 25 delete.go:95] Deleting pod "simpletest.rc-9859b" in namespace "gc-1285"
  I0325 02:08:27.726870 25 delete.go:95] Deleting pod "simpletest.rc-b42zr" in namespace "gc-1285"
  I0325 02:08:27.767012 25 delete.go:95] Deleting pod "simpletest.rc-bc4p5" in namespace "gc-1285"
  I0325 02:08:27.815322 25 delete.go:95] Deleting pod "simpletest.rc-bd566" in namespace "gc-1285"
  I0325 02:08:27.846032 25 delete.go:95] Deleting pod "simpletest.rc-bd6s8" in namespace "gc-1285"
  I0325 02:08:27.870246 25 delete.go:95] Deleting pod "simpletest.rc-bsnrb" in namespace "gc-1285"
  I0325 02:08:27.900996 25 delete.go:95] Deleting pod "simpletest.rc-c2wdm" in namespace "gc-1285"
  I0325 02:08:27.936237 25 delete.go:95] Deleting pod "simpletest.rc-c6h2j" in namespace "gc-1285"
  I0325 02:08:27.981001 25 delete.go:95] Deleting pod "simpletest.rc-c7cnw" in namespace "gc-1285"
  I0325 02:08:28.016121 25 delete.go:95] Deleting pod "simpletest.rc-cjmpj" in namespace "gc-1285"
  I0325 02:08:28.072118 25 delete.go:95] Deleting pod "simpletest.rc-d6t7d" in namespace "gc-1285"
  I0325 02:08:28.095757 25 delete.go:95] Deleting pod "simpletest.rc-ddwpf" in namespace "gc-1285"
  I0325 02:08:28.118742 25 delete.go:95] Deleting pod "simpletest.rc-dhf49" in namespace "gc-1285"
  I0325 02:08:28.146721 25 delete.go:95] Deleting pod "simpletest.rc-f4858" in namespace "gc-1285"
  I0325 02:08:28.197170 25 delete.go:95] Deleting pod "simpletest.rc-f7lnh" in namespace "gc-1285"
  E0325 02:08:28.211037      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:08:28.223965 25 delete.go:95] Deleting pod "simpletest.rc-f8cqv" in namespace "gc-1285"
  I0325 02:08:28.246346 25 delete.go:95] Deleting pod "simpletest.rc-g5xlw" in namespace "gc-1285"
  I0325 02:08:28.317591 25 delete.go:95] Deleting pod "simpletest.rc-gll9l" in namespace "gc-1285"
  I0325 02:08:28.383059 25 delete.go:95] Deleting pod "simpletest.rc-gn67j" in namespace "gc-1285"
  I0325 02:08:28.405275 25 delete.go:95] Deleting pod "simpletest.rc-hm8jr" in namespace "gc-1285"
  I0325 02:08:28.439196 25 delete.go:95] Deleting pod "simpletest.rc-hmx4r" in namespace "gc-1285"
  I0325 02:08:28.477161 25 delete.go:95] Deleting pod "simpletest.rc-hxqs2" in namespace "gc-1285"
  I0325 02:08:28.532963 25 delete.go:95] Deleting pod "simpletest.rc-jwbqw" in namespace "gc-1285"
  I0325 02:08:28.602321 25 delete.go:95] Deleting pod "simpletest.rc-jxx8r" in namespace "gc-1285"
  I0325 02:08:28.628591 25 delete.go:95] Deleting pod "simpletest.rc-k4zdg" in namespace "gc-1285"
  I0325 02:08:28.674202 25 delete.go:95] Deleting pod "simpletest.rc-k67bm" in namespace "gc-1285"
  I0325 02:08:28.736482 25 delete.go:95] Deleting pod "simpletest.rc-k7n4f" in namespace "gc-1285"
  I0325 02:08:28.765204 25 delete.go:95] Deleting pod "simpletest.rc-k8tcf" in namespace "gc-1285"
  I0325 02:08:28.795954 25 delete.go:95] Deleting pod "simpletest.rc-kzrwh" in namespace "gc-1285"
  I0325 02:08:28.860496 25 delete.go:95] Deleting pod "simpletest.rc-l9bxp" in namespace "gc-1285"
  I0325 02:08:28.898670 25 delete.go:95] Deleting pod "simpletest.rc-lcsd5" in namespace "gc-1285"
  I0325 02:08:28.963003 25 delete.go:95] Deleting pod "simpletest.rc-lwzng" in namespace "gc-1285"
  I0325 02:08:28.980248 25 delete.go:95] Deleting pod "simpletest.rc-lx2h9" in namespace "gc-1285"
  I0325 02:08:29.011833 25 delete.go:95] Deleting pod "simpletest.rc-mcf29" in namespace "gc-1285"
  I0325 02:08:29.029380 25 delete.go:95] Deleting pod "simpletest.rc-mfz9q" in namespace "gc-1285"
  I0325 02:08:29.054783 25 delete.go:95] Deleting pod "simpletest.rc-mk7pf" in namespace "gc-1285"
  I0325 02:08:29.094851 25 delete.go:95] Deleting pod "simpletest.rc-mnh9z" in namespace "gc-1285"
  I0325 02:08:29.122520 25 delete.go:95] Deleting pod "simpletest.rc-mr5nf" in namespace "gc-1285"
  I0325 02:08:29.154703 25 delete.go:95] Deleting pod "simpletest.rc-mt7d5" in namespace "gc-1285"
  I0325 02:08:29.196222 25 delete.go:95] Deleting pod "simpletest.rc-mwpkq" in namespace "gc-1285"
  E0325 02:08:29.211649      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:08:29.223941 25 delete.go:95] Deleting pod "simpletest.rc-n5cfj" in namespace "gc-1285"
  I0325 02:08:29.271110 25 delete.go:95] Deleting pod "simpletest.rc-nb6hr" in namespace "gc-1285"
  I0325 02:08:29.297372 25 delete.go:95] Deleting pod "simpletest.rc-ng9b4" in namespace "gc-1285"
  I0325 02:08:29.318702 25 delete.go:95] Deleting pod "simpletest.rc-nhhsx" in namespace "gc-1285"
  I0325 02:08:29.346216 25 delete.go:95] Deleting pod "simpletest.rc-nlzgj" in namespace "gc-1285"
  I0325 02:08:29.374651 25 delete.go:95] Deleting pod "simpletest.rc-nnzph" in namespace "gc-1285"
  I0325 02:08:29.400932 25 delete.go:95] Deleting pod "simpletest.rc-p8rq6" in namespace "gc-1285"
  I0325 02:08:29.435796 25 delete.go:95] Deleting pod "simpletest.rc-pdb2g" in namespace "gc-1285"
  I0325 02:08:29.484311 25 delete.go:95] Deleting pod "simpletest.rc-pjg85" in namespace "gc-1285"
  I0325 02:08:29.551690 25 delete.go:95] Deleting pod "simpletest.rc-px9lk" in namespace "gc-1285"
  I0325 02:08:29.586142 25 delete.go:95] Deleting pod "simpletest.rc-px9mh" in namespace "gc-1285"
  I0325 02:08:29.621493 25 delete.go:95] Deleting pod "simpletest.rc-q2hkv" in namespace "gc-1285"
  I0325 02:08:29.682286 25 delete.go:95] Deleting pod "simpletest.rc-qgbms" in namespace "gc-1285"
  I0325 02:08:29.700925 25 delete.go:95] Deleting pod "simpletest.rc-qjlc5" in namespace "gc-1285"
  I0325 02:08:29.738586 25 delete.go:95] Deleting pod "simpletest.rc-r5fpl" in namespace "gc-1285"
  I0325 02:08:29.771900 25 delete.go:95] Deleting pod "simpletest.rc-r7d9h" in namespace "gc-1285"
  I0325 02:08:29.802933 25 delete.go:95] Deleting pod "simpletest.rc-r97kj" in namespace "gc-1285"
  I0325 02:08:29.867148 25 delete.go:95] Deleting pod "simpletest.rc-rd2hq" in namespace "gc-1285"
  I0325 02:08:29.892370 25 delete.go:95] Deleting pod "simpletest.rc-rnhn9" in namespace "gc-1285"
  I0325 02:08:29.922129 25 delete.go:95] Deleting pod "simpletest.rc-rvqgj" in namespace "gc-1285"
  I0325 02:08:29.969935 25 delete.go:95] Deleting pod "simpletest.rc-rzbwt" in namespace "gc-1285"
  I0325 02:08:30.005178 25 delete.go:95] Deleting pod "simpletest.rc-sjg46" in namespace "gc-1285"
  I0325 02:08:30.042420 25 delete.go:95] Deleting pod "simpletest.rc-snr9z" in namespace "gc-1285"
  I0325 02:08:30.076565 25 delete.go:95] Deleting pod "simpletest.rc-snzxk" in namespace "gc-1285"
  I0325 02:08:30.101049 25 delete.go:95] Deleting pod "simpletest.rc-ss2fh" in namespace "gc-1285"
  I0325 02:08:30.134617 25 delete.go:95] Deleting pod "simpletest.rc-t5scs" in namespace "gc-1285"
  I0325 02:08:30.168155 25 delete.go:95] Deleting pod "simpletest.rc-tm546" in namespace "gc-1285"
  I0325 02:08:30.183652 25 delete.go:95] Deleting pod "simpletest.rc-v2rp4" in namespace "gc-1285"
  E0325 02:08:30.212371      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:08:30.230527 25 delete.go:95] Deleting pod "simpletest.rc-v6zx5" in namespace "gc-1285"
  I0325 02:08:30.268153 25 delete.go:95] Deleting pod "simpletest.rc-v7z7n" in namespace "gc-1285"
  I0325 02:08:30.288171 25 delete.go:95] Deleting pod "simpletest.rc-vf6vk" in namespace "gc-1285"
  I0325 02:08:30.326830 25 delete.go:95] Deleting pod "simpletest.rc-vt4sc" in namespace "gc-1285"
  I0325 02:08:30.341297 25 delete.go:95] Deleting pod "simpletest.rc-w6bhc" in namespace "gc-1285"
  I0325 02:08:30.385511 25 delete.go:95] Deleting pod "simpletest.rc-wcd7j" in namespace "gc-1285"
  I0325 02:08:30.424147 25 delete.go:95] Deleting pod "simpletest.rc-wsdw8" in namespace "gc-1285"
  I0325 02:08:30.473737 25 delete.go:95] Deleting pod "simpletest.rc-wvt77" in namespace "gc-1285"
  I0325 02:08:30.547013 25 delete.go:95] Deleting pod "simpletest.rc-xd45j" in namespace "gc-1285"
  I0325 02:08:30.587003 25 delete.go:95] Deleting pod "simpletest.rc-xhzwd" in namespace "gc-1285"
  I0325 02:08:30.635811 25 delete.go:95] Deleting pod "simpletest.rc-xjh5g" in namespace "gc-1285"
  I0325 02:08:30.670802 25 delete.go:95] Deleting pod "simpletest.rc-zj5jm" in namespace "gc-1285"
  I0325 02:08:30.690234 25 delete.go:95] Deleting pod "simpletest.rc-zxrwx" in namespace "gc-1285"
  I0325 02:08:30.732084 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1285" for this suite. @ 03/25/25 02:08:30.74
• [44.846 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 03/25/25 02:08:30.75
  I0325 02:08:30.750312 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename projected @ 03/25/25 02:08:30.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:08:30.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:08:30.789
  STEP: Creating a pod to test downward API volume plugin @ 03/25/25 02:08:30.792
  E0325 02:08:31.212723      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:32.213710      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:33.214273      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:34.214670      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 02:08:34.838
  I0325 02:08:34.841446 25 output.go:207] Trying to get logs from node master-2 pod downwardapi-volume-90c31d6a-07b0-4c2d-868b-6c2cbebcced8 container client-container: <nil>
  STEP: delete the pod @ 03/25/25 02:08:34.848
  I0325 02:08:34.868272 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2039" for this suite. @ 03/25/25 02:08:34.872
• [4.128 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 03/25/25 02:08:34.879
  I0325 02:08:34.879125 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename gc @ 03/25/25 02:08:34.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:08:34.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:08:34.904
  STEP: create the rc @ 03/25/25 02:08:34.906
  W0325 02:08:34.912126      25 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0325 02:08:35.215728      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:36.216298      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:37.216315      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:38.216532      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:39.216879      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the rc @ 03/25/25 02:08:39.916
  STEP: wait for all pods to be garbage collected @ 03/25/25 02:08:39.926
  E0325 02:08:40.217224      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:41.217538      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:42.217831      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:43.218406      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:44.218596      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 03/25/25 02:08:44.934
  I0325 02:08:44.991833 25 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0325 02:08:44.993126 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-485" for this suite. @ 03/25/25 02:08:44.997
• [10.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 03/25/25 02:08:45.007
  I0325 02:08:45.007600 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename ingress @ 03/25/25 02:08:45.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:08:45.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:08:45.036
  STEP: getting /apis @ 03/25/25 02:08:45.038
  STEP: getting /apis/networking.k8s.io @ 03/25/25 02:08:45.044
  STEP: getting /apis/networking.k8s.iov1 @ 03/25/25 02:08:45.045
  STEP: creating @ 03/25/25 02:08:45.046
  STEP: getting @ 03/25/25 02:08:45.075
  STEP: listing @ 03/25/25 02:08:45.078
  STEP: watching @ 03/25/25 02:08:45.084
  I0325 02:08:45.084793 25 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 03/25/25 02:08:45.086
  STEP: cluster-wide watching @ 03/25/25 02:08:45.089
  I0325 02:08:45.089477 25 ingress.go:198] starting watch
  STEP: patching @ 03/25/25 02:08:45.09
  STEP: updating @ 03/25/25 02:08:45.1
  I0325 02:08:45.110806 25 ingress.go:221] waiting for watch events with expected annotations
  I0325 02:08:45.111026 25 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 03/25/25 02:08:45.111
  STEP: updating /status @ 03/25/25 02:08:45.119
  STEP: get /status @ 03/25/25 02:08:45.128
  STEP: deleting @ 03/25/25 02:08:45.13
  STEP: deleting a collection @ 03/25/25 02:08:45.148
  I0325 02:08:45.169771 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-1345" for this suite. @ 03/25/25 02:08:45.174
• [0.173 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110
  STEP: Creating a kubernetes client @ 03/25/25 02:08:45.181
  I0325 02:08:45.181247 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename job @ 03/25/25 02:08:45.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:08:45.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:08:45.217
  E0325 02:08:45.218444      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Looking for a node to schedule job pod @ 03/25/25 02:08:45.219
  STEP: Creating a job @ 03/25/25 02:08:45.274
  STEP: Ensuring job fails @ 03/25/25 02:08:45.284
  E0325 02:08:46.218723      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:47.219095      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:48.219980      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:49.220466      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:50.221407      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:51.221677      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:08:51.300780 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4210" for this suite. @ 03/25/25 02:08:51.306
• [6.132 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 03/25/25 02:08:51.313
  I0325 02:08:51.313900 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename volumeattachment @ 03/25/25 02:08:51.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:08:51.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:08:51.343
  STEP: Create VolumeAttachment "va-e2e-7vtp7" on node "worker-1" @ 03/25/25 02:08:51.408
  STEP: Get VolumeAttachment "va-e2e-7vtp7" on node "worker-1" @ 03/25/25 02:08:51.417
  STEP: Patch VolumeAttachment "va-e2e-7vtp7" on node "worker-1" @ 03/25/25 02:08:51.419
  STEP: List VolumeAttachments with "va-e2e-7vtp7=patched" label @ 03/25/25 02:08:51.43
  STEP: Delete VolumeAttachment "va-e2e-7vtp7" on node "worker-1" @ 03/25/25 02:08:51.432
  STEP: Confirm deletion of VolumeAttachment "va-e2e-7vtp7" on node "worker-1" @ 03/25/25 02:08:51.438
  STEP: Create VolumeAttachment "va-e2e-jnpc4" on node "worker-1" @ 03/25/25 02:08:51.508
  STEP: Update the VolumeAttachment "va-e2e-jnpc4" on node "worker-1" with label "va-e2e=updated" @ 03/25/25 02:08:51.515
  STEP: Create VolumeAttachment "va-e2e-ch2tz" on node "worker-1" @ 03/25/25 02:08:51.609
  STEP: Update the VolumeAttachment "va-e2e-ch2tz" on node "worker-1" with label "va-e2e=updated" @ 03/25/25 02:08:51.614
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 03/25/25 02:08:51.622
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 03/25/25 02:08:51.633
  I0325 02:08:51.636778 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-7158" for this suite. @ 03/25/25 02:08:51.71
• [0.405 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 03/25/25 02:08:51.72
  I0325 02:08:51.720863 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename pods @ 03/25/25 02:08:51.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:08:51.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:08:51.745
  STEP: creating a Pod with a static label @ 03/25/25 02:08:51.75
  STEP: watching for Pod to be ready @ 03/25/25 02:08:51.759
  I0325 02:08:51.760832 25 pods.go:945] observed Pod pod-test in namespace pods-1176 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0325 02:08:51.768082 25 pods.go:945] observed Pod pod-test in namespace pods-1176 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-03-25 02:08:51 +0000 UTC  }]
  I0325 02:08:51.782612 25 pods.go:945] observed Pod pod-test in namespace pods-1176 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-03-25 02:08:51 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-03-25 02:08:51 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-03-25 02:08:51 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-03-25 02:08:51 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-03-25 02:08:51 +0000 UTC  }]
  E0325 02:08:52.225029      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:08:53.049988 25 pods.go:948] Found Pod pod-test in namespace pods-1176 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-03-25 02:08:53 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-03-25 02:08:51 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2025-03-25 02:08:53 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2025-03-25 02:08:53 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-03-25 02:08:51 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 03/25/25 02:08:53.053
  STEP: getting the Pod and ensuring that it's patched @ 03/25/25 02:08:53.063
  STEP: replacing the Pod's status Ready condition to False @ 03/25/25 02:08:53.074
  STEP: check the Pod again to ensure its Ready conditions are False @ 03/25/25 02:08:53.093
  STEP: deleting the Pod via a Collection with a LabelSelector @ 03/25/25 02:08:53.093
  STEP: watching for the Pod to be deleted @ 03/25/25 02:08:53.103
  I0325 02:08:53.107871 25 pods.go:1058] observed event type MODIFIED
  E0325 02:08:53.225383      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:54.225543      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:08:55.060583 25 pods.go:1058] observed event type MODIFIED
  E0325 02:08:55.226076      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:08:55.285173 25 pods.go:1058] observed event type MODIFIED
  I0325 02:08:56.066467 25 pods.go:1058] observed event type MODIFIED
  I0325 02:08:56.074768 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1176" for this suite. @ 03/25/25 02:08:56.078
• [4.366 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 03/25/25 02:08:56.087
  I0325 02:08:56.087370 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename projected @ 03/25/25 02:08:56.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:08:56.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:08:56.111
  STEP: Creating configMap with name projected-configmap-test-volume-72f75407-57b1-4df5-a892-2f197f1f3958 @ 03/25/25 02:08:56.113
  STEP: Creating a pod to test consume configMaps @ 03/25/25 02:08:56.119
  E0325 02:08:56.226865      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:57.227488      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:58.228374      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:08:59.228667      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 02:09:00.14
  I0325 02:09:00.144394 25 output.go:207] Trying to get logs from node master-2 pod pod-projected-configmaps-3fdb2986-710d-418b-9209-fa66bca5e3a3 container agnhost-container: <nil>
  STEP: delete the pod @ 03/25/25 02:09:00.15
  I0325 02:09:00.191039 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2955" for this suite. @ 03/25/25 02:09:00.197
• [4.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 03/25/25 02:09:00.208
  I0325 02:09:00.208046 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename resourcequota @ 03/25/25 02:09:00.209
  E0325 02:09:00.229491      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:09:00.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:09:00.256
  STEP: Creating a ResourceQuota with terminating scope @ 03/25/25 02:09:00.259
  STEP: Ensuring ResourceQuota status is calculated @ 03/25/25 02:09:00.263
  E0325 02:09:01.230074      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:09:02.230620      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 03/25/25 02:09:02.268
  STEP: Ensuring ResourceQuota status is calculated @ 03/25/25 02:09:02.274
  E0325 02:09:03.231154      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:09:04.231429      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 03/25/25 02:09:04.279
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 03/25/25 02:09:04.296
  E0325 02:09:05.232200      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:09:06.233242      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 03/25/25 02:09:06.301
  E0325 02:09:07.234236      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:09:08.234297      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 03/25/25 02:09:08.306
  STEP: Ensuring resource quota status released the pod usage @ 03/25/25 02:09:08.327
  E0325 02:09:09.234481      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:09:10.235523      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 03/25/25 02:09:10.333
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 03/25/25 02:09:10.348
  E0325 02:09:11.235637      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:09:12.235849      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 03/25/25 02:09:12.352
  E0325 02:09:13.236762      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:09:14.236954      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 03/25/25 02:09:14.357
  STEP: Ensuring resource quota status released the pod usage @ 03/25/25 02:09:14.375
  E0325 02:09:15.237159      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:09:16.237448      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:09:16.380681 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4375" for this suite. @ 03/25/25 02:09:16.385
• [16.185 seconds]
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 03/25/25 02:09:16.393
  I0325 02:09:16.393145 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename deployment @ 03/25/25 02:09:16.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:09:16.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:09:16.42
  I0325 02:09:16.423615 25 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0325 02:09:16.430297 25 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0325 02:09:16.436908 25 deployment.go:223] new replicaset for deployment "test-recreate-deployment" is yet to be created
  E0325 02:09:17.237968      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:09:18.238259      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:09:18.445369 25 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0325 02:09:18.447642 25 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0325 02:09:18.458056 25 deployment.go:314] Updating deployment test-recreate-deployment
  I0325 02:09:18.458091 25 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0325 02:09:18.572546 25 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7599",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5367f30e-88ca-4106-8c09-1aea82181d61",
      ResourceVersion: (string) (len=7) "2855111",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878465356,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878465358,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878465358,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878465358,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878465358,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878465358,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878465356,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-59cddbdd4b\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0325 02:09:18.599480 25 deployment.go:40] New ReplicaSet "test-recreate-deployment-59cddbdd4b" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7599",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b2f7da5b-ad31-4838-aa6b-7aa0974a43cc",
      ResourceVersion: (string) (len=7) "2855110",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878465358,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "5367f30e-88ca-4106-8c09-1aea82181d61",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878465358,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 33 36 37 66 33  30 65 2d 38 38 63 61 2d  |\"5367f30e-88ca-|
              00000120  34 31 30 36 2d 38 63 30  39 2d 31 61 65 61 38 32  |4106-8c09-1aea82|
              00000130  31 38 31 64 36 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |181d61\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878465358,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0325 02:09:18.599935 25 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0325 02:09:18.600178 25 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-db85869db",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7599",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c62e5234-d308-4264-a53c-0ade64df4280",
      ResourceVersion: (string) (len=7) "2855099",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878465356,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "5367f30e-88ca-4106-8c09-1aea82181d61",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878465358,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 33 36 37 66 33  30 65 2d 38 38 63 61 2d  |\"5367f30e-88ca-|
              00000120  34 31 30 36 2d 38 63 30  39 2d 31 61 65 61 38 32  |4106-8c09-1aea82|
              00000130  31 38 31 64 36 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |181d61\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878465358,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db",
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0325 02:09:18.606172 25 deployment.go:68] Pod "test-recreate-deployment-59cddbdd4b-xmx65" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-59cddbdd4b-xmx65",
      GenerateName: (string) (len=36) "test-recreate-deployment-59cddbdd4b-",
      Namespace: (string) (len=15) "deployment-7599",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f4503cca-1dfd-42c8-91bf-9c757c2299ad",
      ResourceVersion: (string) (len=7) "2855109",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878465358,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
          UID: (types.UID) (len=36) "b2f7da5b-ad31-4838-aa6b-7aa0974a43cc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878465358,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 32  66 37 64 61 35 62 2d 61  |d\":\"b2f7da5b-a|
              00000090  64 33 31 2d 34 38 33 38  2d 61 61 36 62 2d 37 61  |d31-4838-aa6b-7a|
              000000a0  61 30 39 37 34 61 34 33  63 63 5c 22 7d 22 3a 7b  |a0974a43cc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878465358,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hnhdh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hnhdh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "master-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878465358,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878465358,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878465358,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878465358,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63878465358,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.20.10.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.20.10.146"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63878465358,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hnhdh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0325 02:09:18.613064 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7599" for this suite. @ 03/25/25 02:09:18.618
• [2.235 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 03/25/25 02:09:18.628
  I0325 02:09:18.628211 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename projected @ 03/25/25 02:09:18.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:09:18.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:09:18.654
  STEP: Creating secret with name projected-secret-test-269422a5-fc61-499b-afe2-4bfb535d0c4c @ 03/25/25 02:09:18.656
  STEP: Creating a pod to test consume secrets @ 03/25/25 02:09:18.664
  E0325 02:09:19.241021      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:09:20.241883      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:09:21.242172      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:09:22.242338      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 02:09:22.686
  I0325 02:09:22.689694 25 output.go:207] Trying to get logs from node master-2 pod pod-projected-secrets-455af3ad-71fa-415a-84ca-046f6f4a691b container secret-volume-test: <nil>
  STEP: delete the pod @ 03/25/25 02:09:22.695
  I0325 02:09:22.716770 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6461" for this suite. @ 03/25/25 02:09:22.721
• [4.101 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 03/25/25 02:09:22.729
  I0325 02:09:22.729513 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename webhook @ 03/25/25 02:09:22.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:09:22.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:09:22.754
  STEP: Setting up server cert @ 03/25/25 02:09:22.855
  E0325 02:09:23.243388      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/25/25 02:09:23.374
  STEP: Deploying the webhook pod @ 03/25/25 02:09:23.387
  STEP: Wait for the deployment to be ready @ 03/25/25 02:09:23.403
  I0325 02:09:23.415202 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0325 02:09:24.243636      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:09:25.244239      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/25/25 02:09:25.426
  STEP: Verifying the service has paired with the endpoint @ 03/25/25 02:09:25.443
  E0325 02:09:26.244845      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:09:26.444025 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0325 02:09:26.452742 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  E0325 02:09:27.245513      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:09:28.246124      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:09:29.247045      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:09:30.247047      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:09:31.247727      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 03/25/25 02:09:31.965
  STEP: Creating a custom resource that should be denied by the webhook @ 03/25/25 02:09:31.982
  E0325 02:09:32.248153      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:09:33.248560      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 03/25/25 02:09:34.001
  STEP: Updating the custom resource with disallowed data should be denied @ 03/25/25 02:09:34.01
  STEP: Deleting the custom resource should be denied @ 03/25/25 02:09:34.018
  STEP: Remove the offending key and value from the custom resource data @ 03/25/25 02:09:34.025
  STEP: Deleting the updated custom resource should be successful @ 03/25/25 02:09:34.041
  E0325 02:09:34.249115      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:09:34.626569 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-344" for this suite. @ 03/25/25 02:09:34.637
  STEP: Destroying namespace "webhook-markers-227" for this suite. @ 03/25/25 02:09:34.644
• [11.922 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 03/25/25 02:09:34.651
  I0325 02:09:34.651228 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename services @ 03/25/25 02:09:34.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:09:34.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:09:34.683
  STEP: creating service nodeport-test with type=NodePort in namespace services-8127 @ 03/25/25 02:09:34.686
  STEP: creating replication controller nodeport-test in namespace services-8127 @ 03/25/25 02:09:34.717
  I0325 02:09:34.725954      25 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-8127, replica count: 2
  E0325 02:09:35.249102      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:09:36.249243      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:09:37.249819      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:09:37.777321      25 runners.go:193] nodeport-test Pods: 2 out of 2 created, 0 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0325 02:09:38.249848      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:09:39.249963      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:09:40.250139      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:09:40.777652      25 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0325 02:09:40.777728 25 resource.go:361] Creating new exec pod
  E0325 02:09:41.250360      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:09:42.251572      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:09:43.252057      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:09:44.252221      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:09:45.252846      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:09:45.814883 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-8127 exec execpodx4wwj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0325 02:09:45.960214 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.233.43.204) 80 port [tcp/http] succeeded!\n"
  I0325 02:09:45.960269 25 builder.go:147] stdout: "nodeport-test-j6kg5"
  I0325 02:09:45.960361 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-8127 exec execpodx4wwj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.43.204 80'
  I0325 02:09:46.077967 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.43.204 80\nConnection to 10.233.43.204 80 port [tcp/http] succeeded!\n"
  I0325 02:09:46.078022 25 builder.go:147] stdout: "nodeport-test-57x4m"
  I0325 02:09:46.078103 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-8127 exec execpodx4wwj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.10.227 31714'
  I0325 02:09:46.212280 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.10.227 31714\nConnection to 172.20.10.227 31714 port [tcp/*] succeeded!\n"
  I0325 02:09:46.212339 25 builder.go:147] stdout: ""
  E0325 02:09:46.253565      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:09:47.078318 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-8127 exec execpodx4wwj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.10.227 31714'
  I0325 02:09:47.208867 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.10.227 31714\nConnection to 172.20.10.227 31714 port [tcp/*] succeeded!\n"
  I0325 02:09:47.208929 25 builder.go:147] stdout: ""
  E0325 02:09:47.254137      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:09:48.078630 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-8127 exec execpodx4wwj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.10.227 31714'
  I0325 02:09:48.192868 25 builder.go:146] stderr: "+ + nc -v -techo -w 2 172.20.10.227 31714\n hostName\nConnection to 172.20.10.227 31714 port [tcp/*] succeeded!\n"
  I0325 02:09:48.192922 25 builder.go:147] stdout: "nodeport-test-j6kg5"
  I0325 02:09:48.193007 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=services-8127 exec execpodx4wwj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.20.10.136 31714'
  E0325 02:09:48.254492      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:09:48.316696 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.20.10.136 31714\nConnection to 172.20.10.136 31714 port [tcp/*] succeeded!\n"
  I0325 02:09:48.316749 25 builder.go:147] stdout: "nodeport-test-57x4m"
  I0325 02:09:48.316984 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8127" for this suite. @ 03/25/25 02:09:48.325
• [13.682 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 03/25/25 02:09:48.333
  I0325 02:09:48.333790 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename validating-admission-policy @ 03/25/25 02:09:48.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:09:48.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:09:48.364
  STEP: creating a policy with variables @ 03/25/25 02:09:48.377
  STEP: waiting until the marker is denied @ 03/25/25 02:09:48.416
  STEP: testing a replicated Deployment to be allowed @ 03/25/25 02:09:48.825
  STEP: testing a non-replicated ReplicaSet not to be denied @ 03/25/25 02:09:48.839
  I0325 02:09:48.878941 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3791" for this suite. @ 03/25/25 02:09:48.904
• [0.593 seconds]
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 03/25/25 02:09:48.926
  I0325 02:09:48.926938 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename proxy @ 03/25/25 02:09:48.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:09:48.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:09:48.985
  STEP: starting an echo server on multiple ports @ 03/25/25 02:09:48.999
  STEP: creating replication controller proxy-service-x5xml in namespace proxy-9071 @ 03/25/25 02:09:48.999
  I0325 02:09:49.010072      25 runners.go:193] Created replication controller with name: proxy-service-x5xml, namespace: proxy-9071, replica count: 1
  E0325 02:09:49.255512      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:09:50.061156      25 runners.go:193] proxy-service-x5xml Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0325 02:09:50.255583      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:09:51.062062      25 runners.go:193] proxy-service-x5xml Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0325 02:09:51.256761      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:09:52.063210      25 runners.go:193] proxy-service-x5xml Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0325 02:09:52.256644      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:09:53.063606      25 runners.go:193] proxy-service-x5xml Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0325 02:09:53.257199      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:09:54.064143      25 runners.go:193] proxy-service-x5xml Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0325 02:09:54.259037      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:09:55.064601      25 runners.go:193] proxy-service-x5xml Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0325 02:09:55.069878 25 proxy.go:230] setup took 6.082584818s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 03/25/25 02:09:55.07
  I0325 02:09:55.077413 25 proxy.go:558] (0) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">test<... (200; 6.552441ms)
  I0325 02:09:55.077472 25 proxy.go:558] (0) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 6.888329ms)
  I0325 02:09:55.080166 25 proxy.go:558] (0) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 9.339605ms)
  I0325 02:09:55.080208 25 proxy.go:558] (0) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">... (200; 9.377348ms)
  I0325 02:09:55.080306 25 proxy.go:558] (0) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/rewriteme">test</a> (200; 9.350027ms)
  I0325 02:09:55.080484 25 proxy.go:558] (0) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 9.596505ms)
  I0325 02:09:55.081184 25 proxy.go:558] (0) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname1/proxy/: foo (200; 10.59993ms)
  I0325 02:09:55.081685 25 proxy.go:558] (0) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname2/proxy/: bar (200; 10.486986ms)
  I0325 02:09:55.081760 25 proxy.go:558] (0) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname2/proxy/: bar (200; 11.002692ms)
  I0325 02:09:55.081811 25 proxy.go:558] (0) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:460/proxy/: tls baz (200; 10.88272ms)
  I0325 02:09:55.081846 25 proxy.go:558] (0) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname2/proxy/: tls qux (200; 11.058516ms)
  I0325 02:09:55.082076 25 proxy.go:558] (0) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 11.484766ms)
  I0325 02:09:55.082108 25 proxy.go:558] (0) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname1/proxy/: foo (200; 11.147588ms)
  I0325 02:09:55.082182 25 proxy.go:558] (0) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/tlsrewritem... (200; 11.269923ms)
  I0325 02:09:55.082464 25 proxy.go:558] (0) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:462/proxy/: tls qux (200; 11.581893ms)
  I0325 02:09:55.082518 25 proxy.go:558] (0) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname1/proxy/: tls baz (200; 11.759715ms)
  I0325 02:09:55.086870 25 proxy.go:558] (1) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/tlsrewritem... (200; 3.857178ms)
  I0325 02:09:55.087641 25 proxy.go:558] (1) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 4.633027ms)
  I0325 02:09:55.087661 25 proxy.go:558] (1) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/rewriteme">test</a> (200; 4.691136ms)
  I0325 02:09:55.087971 25 proxy.go:558] (1) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">... (200; 5.025916ms)
  I0325 02:09:55.088228 25 proxy.go:558] (1) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:462/proxy/: tls qux (200; 5.137701ms)
  I0325 02:09:55.088245 25 proxy.go:558] (1) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 5.298782ms)
  I0325 02:09:55.088525 25 proxy.go:558] (1) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname1/proxy/: foo (200; 5.806873ms)
  I0325 02:09:55.088571 25 proxy.go:558] (1) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">test<... (200; 5.505241ms)
  I0325 02:09:55.088616 25 proxy.go:558] (1) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 5.698189ms)
  I0325 02:09:55.088633 25 proxy.go:558] (1) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname2/proxy/: bar (200; 5.838543ms)
  I0325 02:09:55.088680 25 proxy.go:558] (1) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname2/proxy/: tls qux (200; 5.601442ms)
  I0325 02:09:55.088824 25 proxy.go:558] (1) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 5.954403ms)
  I0325 02:09:55.088868 25 proxy.go:558] (1) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname2/proxy/: bar (200; 5.807515ms)
  I0325 02:09:55.089059 25 proxy.go:558] (1) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname1/proxy/: foo (200; 6.392169ms)
  I0325 02:09:55.090771 25 proxy.go:558] (1) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname1/proxy/: tls baz (200; 7.728309ms)
  I0325 02:09:55.091293 25 proxy.go:558] (1) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:460/proxy/: tls baz (200; 8.266405ms)
  I0325 02:09:55.095089 25 proxy.go:558] (2) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:460/proxy/: tls baz (200; 3.604773ms)
  I0325 02:09:55.095136 25 proxy.go:558] (2) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/rewriteme">test</a> (200; 3.425358ms)
  I0325 02:09:55.096305 25 proxy.go:558] (2) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname1/proxy/: foo (200; 4.946182ms)
  I0325 02:09:55.096338 25 proxy.go:558] (2) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 4.803589ms)
  I0325 02:09:55.096351 25 proxy.go:558] (2) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:462/proxy/: tls qux (200; 4.517995ms)
  I0325 02:09:55.096409 25 proxy.go:558] (2) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">test<... (200; 4.661046ms)
  I0325 02:09:55.096429 25 proxy.go:558] (2) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/tlsrewritem... (200; 4.632982ms)
  I0325 02:09:55.098192 25 proxy.go:558] (2) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname1/proxy/: tls baz (200; 6.514347ms)
  I0325 02:09:55.098457 25 proxy.go:558] (2) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname1/proxy/: foo (200; 6.560158ms)
  I0325 02:09:55.098784 25 proxy.go:558] (2) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 6.656548ms)
  I0325 02:09:55.099509 25 proxy.go:558] (2) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 7.300775ms)
  I0325 02:09:55.100591 25 proxy.go:558] (2) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">... (200; 8.604051ms)
  I0325 02:09:55.101599 25 proxy.go:558] (2) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 9.521026ms)
  I0325 02:09:55.101629 25 proxy.go:558] (2) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname2/proxy/: tls qux (200; 9.696995ms)
  I0325 02:09:55.101737 25 proxy.go:558] (2) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname2/proxy/: bar (200; 9.445216ms)
  I0325 02:09:55.101860 25 proxy.go:558] (2) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname2/proxy/: bar (200; 10.270233ms)
  I0325 02:09:55.106577 25 proxy.go:558] (3) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 4.103569ms)
  I0325 02:09:55.106606 25 proxy.go:558] (3) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:460/proxy/: tls baz (200; 4.722289ms)
  I0325 02:09:55.106743 25 proxy.go:558] (3) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname2/proxy/: bar (200; 4.394486ms)
  I0325 02:09:55.106789 25 proxy.go:558] (3) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">... (200; 4.361427ms)
  I0325 02:09:55.113098 25 proxy.go:558] (3) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 10.534319ms)
  I0325 02:09:55.113106 25 proxy.go:558] (3) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">test<... (200; 10.946261ms)
  I0325 02:09:55.113122 25 proxy.go:558] (3) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname1/proxy/: foo (200; 10.822447ms)
  I0325 02:09:55.113147 25 proxy.go:558] (3) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname1/proxy/: tls baz (200; 11.134894ms)
  I0325 02:09:55.113170 25 proxy.go:558] (3) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname2/proxy/: tls qux (200; 10.553265ms)
  I0325 02:09:55.113181 25 proxy.go:558] (3) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:462/proxy/: tls qux (200; 10.926066ms)
  I0325 02:09:55.113189 25 proxy.go:558] (3) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/tlsrewritem... (200; 10.992509ms)
  I0325 02:09:55.113198 25 proxy.go:558] (3) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname2/proxy/: bar (200; 10.680493ms)
  I0325 02:09:55.113210 25 proxy.go:558] (3) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 10.37947ms)
  I0325 02:09:55.113218 25 proxy.go:558] (3) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname1/proxy/: foo (200; 10.507035ms)
  I0325 02:09:55.113237 25 proxy.go:558] (3) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 10.446275ms)
  I0325 02:09:55.113264 25 proxy.go:558] (3) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/rewriteme">test</a> (200; 11.206003ms)
  I0325 02:09:55.122490 25 proxy.go:558] (4) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/rewriteme">test</a> (200; 7.127032ms)
  I0325 02:09:55.122494 25 proxy.go:558] (4) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 7.047771ms)
  I0325 02:09:55.125019 25 proxy.go:558] (4) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">... (200; 9.49885ms)
  I0325 02:09:55.125019 25 proxy.go:558] (4) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/tlsrewritem... (200; 9.624239ms)
  I0325 02:09:55.125059 25 proxy.go:558] (4) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname1/proxy/: foo (200; 9.809381ms)
  I0325 02:09:55.126163 25 proxy.go:558] (4) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 10.621161ms)
  I0325 02:09:55.126202 25 proxy.go:558] (4) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 10.627363ms)
  I0325 02:09:55.126219 25 proxy.go:558] (4) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:462/proxy/: tls qux (200; 10.79151ms)
  I0325 02:09:55.126562 25 proxy.go:558] (4) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:460/proxy/: tls baz (200; 11.359093ms)
  I0325 02:09:55.126567 25 proxy.go:558] (4) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname1/proxy/: foo (200; 11.273965ms)
  I0325 02:09:55.126583 25 proxy.go:558] (4) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">test<... (200; 11.205856ms)
  I0325 02:09:55.126634 25 proxy.go:558] (4) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname2/proxy/: bar (200; 11.024638ms)
  I0325 02:09:55.126714 25 proxy.go:558] (4) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 11.59888ms)
  I0325 02:09:55.126848 25 proxy.go:558] (4) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname2/proxy/: tls qux (200; 11.72389ms)
  I0325 02:09:55.127588 25 proxy.go:558] (4) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname2/proxy/: bar (200; 12.10142ms)
  I0325 02:09:55.128401 25 proxy.go:558] (4) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname1/proxy/: tls baz (200; 13.07614ms)
  I0325 02:09:55.132456 25 proxy.go:558] (5) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 3.852497ms)
  I0325 02:09:55.136063 25 proxy.go:558] (5) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">... (200; 7.18126ms)
  I0325 02:09:55.136080 25 proxy.go:558] (5) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname2/proxy/: bar (200; 7.315438ms)
  I0325 02:09:55.136112 25 proxy.go:558] (5) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 7.217255ms)
  I0325 02:09:55.136345 25 proxy.go:558] (5) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/rewriteme">test</a> (200; 7.537176ms)
  I0325 02:09:55.136427 25 proxy.go:558] (5) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:462/proxy/: tls qux (200; 7.709264ms)
  I0325 02:09:55.137005 25 proxy.go:558] (5) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 8.246199ms)
  I0325 02:09:55.136966 25 proxy.go:558] (5) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:460/proxy/: tls baz (200; 8.16513ms)
  I0325 02:09:55.137143 25 proxy.go:558] (5) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname1/proxy/: tls baz (200; 8.501437ms)
  I0325 02:09:55.137246 25 proxy.go:558] (5) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 8.352461ms)
  I0325 02:09:55.137596 25 proxy.go:558] (5) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname2/proxy/: tls qux (200; 8.717369ms)
  I0325 02:09:55.138016 25 proxy.go:558] (5) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname1/proxy/: foo (200; 9.270987ms)
  I0325 02:09:55.138081 25 proxy.go:558] (5) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/tlsrewritem... (200; 9.366497ms)
  I0325 02:09:55.138364 25 proxy.go:558] (5) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname1/proxy/: foo (200; 9.640996ms)
  I0325 02:09:55.138367 25 proxy.go:558] (5) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname2/proxy/: bar (200; 9.457814ms)
  I0325 02:09:55.140209 25 proxy.go:558] (5) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">test<... (200; 11.345861ms)
  I0325 02:09:55.144579 25 proxy.go:558] (6) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/tlsrewritem... (200; 4.174954ms)
  I0325 02:09:55.145424 25 proxy.go:558] (6) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 4.916239ms)
  I0325 02:09:55.146055 25 proxy.go:558] (6) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">test<... (200; 5.530677ms)
  I0325 02:09:55.146348 25 proxy.go:558] (6) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 5.787975ms)
  I0325 02:09:55.146618 25 proxy.go:558] (6) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 6.010777ms)
  I0325 02:09:55.146763 25 proxy.go:558] (6) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 6.205149ms)
  I0325 02:09:55.146880 25 proxy.go:558] (6) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname1/proxy/: tls baz (200; 6.495558ms)
  I0325 02:09:55.147064 25 proxy.go:558] (6) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:462/proxy/: tls qux (200; 6.610636ms)
  I0325 02:09:55.147284 25 proxy.go:558] (6) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:460/proxy/: tls baz (200; 6.780491ms)
  I0325 02:09:55.147421 25 proxy.go:558] (6) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname2/proxy/: bar (200; 6.897328ms)
  I0325 02:09:55.147526 25 proxy.go:558] (6) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname1/proxy/: foo (200; 7.171998ms)
  I0325 02:09:55.147766 25 proxy.go:558] (6) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname2/proxy/: tls qux (200; 7.17361ms)
  I0325 02:09:55.148009 25 proxy.go:558] (6) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">... (200; 7.319303ms)
  I0325 02:09:55.148178 25 proxy.go:558] (6) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname1/proxy/: foo (200; 7.681135ms)
  I0325 02:09:55.148328 25 proxy.go:558] (6) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/rewriteme">test</a> (200; 7.75227ms)
  I0325 02:09:55.148495 25 proxy.go:558] (6) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname2/proxy/: bar (200; 7.95367ms)
  I0325 02:09:55.154915 25 proxy.go:558] (7) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:462/proxy/: tls qux (200; 5.870502ms)
  I0325 02:09:55.154925 25 proxy.go:558] (7) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname2/proxy/: tls qux (200; 6.284482ms)
  I0325 02:09:55.155628 25 proxy.go:558] (7) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 6.493994ms)
  I0325 02:09:55.156191 25 proxy.go:558] (7) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:460/proxy/: tls baz (200; 7.262757ms)
  I0325 02:09:55.157057 25 proxy.go:558] (7) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 8.256499ms)
  I0325 02:09:55.157205 25 proxy.go:558] (7) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname1/proxy/: foo (200; 8.344688ms)
  I0325 02:09:55.157223 25 proxy.go:558] (7) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">... (200; 8.138815ms)
  I0325 02:09:55.157333 25 proxy.go:558] (7) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/tlsrewritem... (200; 8.319072ms)
  I0325 02:09:55.158147 25 proxy.go:558] (7) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname1/proxy/: foo (200; 9.418744ms)
  I0325 02:09:55.158171 25 proxy.go:558] (7) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname2/proxy/: bar (200; 9.02293ms)
  I0325 02:09:55.158826 25 proxy.go:558] (7) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 9.757442ms)
  I0325 02:09:55.160117 25 proxy.go:558] (7) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/rewriteme">test</a> (200; 11.146015ms)
  I0325 02:09:55.160283 25 proxy.go:558] (7) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 11.173811ms)
  I0325 02:09:55.160289 25 proxy.go:558] (7) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname1/proxy/: tls baz (200; 11.339002ms)
  I0325 02:09:55.161542 25 proxy.go:558] (7) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">test<... (200; 12.549461ms)
  I0325 02:09:55.163217 25 proxy.go:558] (7) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname2/proxy/: bar (200; 14.320764ms)
  I0325 02:09:55.167017 25 proxy.go:558] (8) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/rewriteme">test</a> (200; 3.468785ms)
  I0325 02:09:55.168216 25 proxy.go:558] (8) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">test<... (200; 4.648914ms)
  I0325 02:09:55.168277 25 proxy.go:558] (8) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 4.69644ms)
  I0325 02:09:55.171648 25 proxy.go:558] (8) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname1/proxy/: tls baz (200; 8.233547ms)
  I0325 02:09:55.171669 25 proxy.go:558] (8) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:462/proxy/: tls qux (200; 8.209789ms)
  I0325 02:09:55.171709 25 proxy.go:558] (8) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 8.078438ms)
  I0325 02:09:55.171722 25 proxy.go:558] (8) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/tlsrewritem... (200; 8.323999ms)
  I0325 02:09:55.171738 25 proxy.go:558] (8) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:460/proxy/: tls baz (200; 8.342147ms)
  I0325 02:09:55.171763 25 proxy.go:558] (8) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 8.178831ms)
  I0325 02:09:55.171776 25 proxy.go:558] (8) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">... (200; 8.2274ms)
  I0325 02:09:55.171788 25 proxy.go:558] (8) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 8.190329ms)
  I0325 02:09:55.171839 25 proxy.go:558] (8) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname1/proxy/: foo (200; 8.209091ms)
  I0325 02:09:55.172039 25 proxy.go:558] (8) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname2/proxy/: bar (200; 8.554446ms)
  I0325 02:09:55.172308 25 proxy.go:558] (8) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname1/proxy/: foo (200; 8.829607ms)
  I0325 02:09:55.172421 25 proxy.go:558] (8) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname2/proxy/: bar (200; 8.91121ms)
  I0325 02:09:55.173373 25 proxy.go:558] (8) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname2/proxy/: tls qux (200; 9.850078ms)
  I0325 02:09:55.176596 25 proxy.go:558] (9) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 3.192395ms)
  I0325 02:09:55.176879 25 proxy.go:558] (9) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/rewriteme">test</a> (200; 3.267995ms)
  I0325 02:09:55.177599 25 proxy.go:558] (9) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">... (200; 3.726127ms)
  I0325 02:09:55.177707 25 proxy.go:558] (9) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:462/proxy/: tls qux (200; 3.969872ms)
  I0325 02:09:55.178797 25 proxy.go:558] (9) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">test<... (200; 5.138935ms)
  I0325 02:09:55.179344 25 proxy.go:558] (9) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname2/proxy/: bar (200; 5.830448ms)
  I0325 02:09:55.179496 25 proxy.go:558] (9) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname1/proxy/: tls baz (200; 5.933142ms)
  I0325 02:09:55.179525 25 proxy.go:558] (9) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 5.538852ms)
  I0325 02:09:55.179936 25 proxy.go:558] (9) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname1/proxy/: foo (200; 6.143182ms)
  I0325 02:09:55.180152 25 proxy.go:558] (9) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 6.211254ms)
  I0325 02:09:55.180201 25 proxy.go:558] (9) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname2/proxy/: bar (200; 6.18121ms)
  I0325 02:09:55.180400 25 proxy.go:558] (9) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname1/proxy/: foo (200; 6.333876ms)
  I0325 02:09:55.180451 25 proxy.go:558] (9) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname2/proxy/: tls qux (200; 6.61629ms)
  I0325 02:09:55.180466 25 proxy.go:558] (9) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 6.55747ms)
  I0325 02:09:55.180529 25 proxy.go:558] (9) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/tlsrewritem... (200; 6.835154ms)
  I0325 02:09:55.180575 25 proxy.go:558] (9) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:460/proxy/: tls baz (200; 6.4546ms)
  I0325 02:09:55.184034 25 proxy.go:558] (10) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/tlsrewritem... (200; 3.235781ms)
  I0325 02:09:55.184063 25 proxy.go:558] (10) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 3.463187ms)
  I0325 02:09:55.184153 25 proxy.go:558] (10) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:460/proxy/: tls baz (200; 3.391645ms)
  I0325 02:09:55.184250 25 proxy.go:558] (10) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 3.005319ms)
  I0325 02:09:55.184261 25 proxy.go:558] (10) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 3.542016ms)
  I0325 02:09:55.184583 25 proxy.go:558] (10) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 3.475916ms)
  I0325 02:09:55.184888 25 proxy.go:558] (10) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">... (200; 3.676288ms)
  I0325 02:09:55.185261 25 proxy.go:558] (10) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">test<... (200; 4.190678ms)
  I0325 02:09:55.185353 25 proxy.go:558] (10) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/rewriteme">test</a> (200; 4.32213ms)
  I0325 02:09:55.186038 25 proxy.go:558] (10) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname2/proxy/: bar (200; 5.077576ms)
  I0325 02:09:55.186377 25 proxy.go:558] (10) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname1/proxy/: foo (200; 5.700871ms)
  I0325 02:09:55.186987 25 proxy.go:558] (10) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname1/proxy/: tls baz (200; 5.994198ms)
  I0325 02:09:55.187010 25 proxy.go:558] (10) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname2/proxy/: tls qux (200; 5.83216ms)
  I0325 02:09:55.187021 25 proxy.go:558] (10) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname2/proxy/: bar (200; 5.878585ms)
  I0325 02:09:55.187148 25 proxy.go:558] (10) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname1/proxy/: foo (200; 6.22732ms)
  I0325 02:09:55.187281 25 proxy.go:558] (10) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:462/proxy/: tls qux (200; 6.397118ms)
  I0325 02:09:55.189415 25 proxy.go:558] (11) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:462/proxy/: tls qux (200; 2.10461ms)
  I0325 02:09:55.197464 25 proxy.go:558] (11) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 10.02597ms)
  I0325 02:09:55.197542 25 proxy.go:558] (11) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 9.960313ms)
  I0325 02:09:55.198910 25 proxy.go:558] (11) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:460/proxy/: tls baz (200; 11.230859ms)
  I0325 02:09:55.200376 25 proxy.go:558] (11) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">... (200; 12.64645ms)
  I0325 02:09:55.200420 25 proxy.go:558] (11) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname2/proxy/: bar (200; 12.711572ms)
  I0325 02:09:55.200632 25 proxy.go:558] (11) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/rewriteme">test</a> (200; 12.872458ms)
  I0325 02:09:55.200654 25 proxy.go:558] (11) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 13.033154ms)
  I0325 02:09:55.200691 25 proxy.go:558] (11) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname1/proxy/: foo (200; 12.998186ms)
  I0325 02:09:55.200719 25 proxy.go:558] (11) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">test<... (200; 12.979967ms)
  I0325 02:09:55.200761 25 proxy.go:558] (11) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/tlsrewritem... (200; 12.984949ms)
  I0325 02:09:55.200780 25 proxy.go:558] (11) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 13.248435ms)
  I0325 02:09:55.201164 25 proxy.go:558] (11) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname1/proxy/: tls baz (200; 13.504341ms)
  I0325 02:09:55.201201 25 proxy.go:558] (11) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname2/proxy/: tls qux (200; 13.615134ms)
  I0325 02:09:55.201283 25 proxy.go:558] (11) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname1/proxy/: foo (200; 13.642306ms)
  I0325 02:09:55.201666 25 proxy.go:558] (11) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname2/proxy/: bar (200; 14.265485ms)
  I0325 02:09:55.206814 25 proxy.go:558] (12) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 4.499977ms)
  I0325 02:09:55.207931 25 proxy.go:558] (12) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 5.686325ms)
  I0325 02:09:55.208014 25 proxy.go:558] (12) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/rewriteme">test</a> (200; 6.047759ms)
  I0325 02:09:55.208069 25 proxy.go:558] (12) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">test<... (200; 6.06426ms)
  I0325 02:09:55.208327 25 proxy.go:558] (12) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 6.049276ms)
  I0325 02:09:55.208347 25 proxy.go:558] (12) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:460/proxy/: tls baz (200; 6.458296ms)
  I0325 02:09:55.208360 25 proxy.go:558] (12) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">... (200; 6.161605ms)
  I0325 02:09:55.212656 25 proxy.go:558] (12) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/tlsrewritem... (200; 10.608482ms)
  I0325 02:09:55.212744 25 proxy.go:558] (12) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname1/proxy/: foo (200; 10.958605ms)
  I0325 02:09:55.212756 25 proxy.go:558] (12) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:462/proxy/: tls qux (200; 10.676098ms)
  I0325 02:09:55.212800 25 proxy.go:558] (12) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname2/proxy/: bar (200; 10.455792ms)
  I0325 02:09:55.212854 25 proxy.go:558] (12) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname1/proxy/: tls baz (200; 10.903896ms)
  I0325 02:09:55.212946 25 proxy.go:558] (12) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname1/proxy/: foo (200; 10.829339ms)
  I0325 02:09:55.212972 25 proxy.go:558] (12) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname2/proxy/: bar (200; 10.815716ms)
  I0325 02:09:55.212988 25 proxy.go:558] (12) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname2/proxy/: tls qux (200; 11.291861ms)
  I0325 02:09:55.213013 25 proxy.go:558] (12) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 11.179371ms)
  I0325 02:09:55.217924 25 proxy.go:558] (13) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname1/proxy/: foo (200; 4.7189ms)
  I0325 02:09:55.218656 25 proxy.go:558] (13) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/rewriteme">test</a> (200; 5.002183ms)
  I0325 02:09:55.218684 25 proxy.go:558] (13) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname2/proxy/: bar (200; 5.111715ms)
  I0325 02:09:55.218758 25 proxy.go:558] (13) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">test<... (200; 4.933573ms)
  I0325 02:09:55.219433 25 proxy.go:558] (13) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 6.158441ms)
  I0325 02:09:55.219691 25 proxy.go:558] (13) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 6.644348ms)
  I0325 02:09:55.219935 25 proxy.go:558] (13) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:460/proxy/: tls baz (200; 6.48124ms)
  I0325 02:09:55.220020 25 proxy.go:558] (13) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/tlsrewritem... (200; 5.967468ms)
  I0325 02:09:55.219998 25 proxy.go:558] (13) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:462/proxy/: tls qux (200; 5.894845ms)
  I0325 02:09:55.220425 25 proxy.go:558] (13) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname2/proxy/: bar (200; 6.096887ms)
  I0325 02:09:55.224905 25 proxy.go:558] (13) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 10.451194ms)
  I0325 02:09:55.225235 25 proxy.go:558] (13) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname1/proxy/: tls baz (200; 11.618797ms)
  I0325 02:09:55.225566 25 proxy.go:558] (13) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname2/proxy/: tls qux (200; 11.179291ms)
  I0325 02:09:55.225664 25 proxy.go:558] (13) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname1/proxy/: foo (200; 12.125472ms)
  I0325 02:09:55.225683 25 proxy.go:558] (13) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">... (200; 11.267081ms)
  I0325 02:09:55.225696 25 proxy.go:558] (13) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 11.215049ms)
  I0325 02:09:55.228863 25 proxy.go:558] (14) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:460/proxy/: tls baz (200; 3.137102ms)
  I0325 02:09:55.229123 25 proxy.go:558] (14) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:462/proxy/: tls qux (200; 3.312262ms)
  I0325 02:09:55.231688 25 proxy.go:558] (14) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">... (200; 5.514676ms)
  I0325 02:09:55.231972 25 proxy.go:558] (14) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/tlsrewritem... (200; 5.909509ms)
  I0325 02:09:55.232176 25 proxy.go:558] (14) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname2/proxy/: bar (200; 6.271431ms)
  I0325 02:09:55.232222 25 proxy.go:558] (14) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname1/proxy/: tls baz (200; 6.280723ms)
  I0325 02:09:55.232235 25 proxy.go:558] (14) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 5.846423ms)
  I0325 02:09:55.232245 25 proxy.go:558] (14) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname1/proxy/: foo (200; 6.385277ms)
  I0325 02:09:55.232267 25 proxy.go:558] (14) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">test<... (200; 6.243191ms)
  I0325 02:09:55.232277 25 proxy.go:558] (14) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 6.073531ms)
  I0325 02:09:55.232360 25 proxy.go:558] (14) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/rewriteme">test</a> (200; 6.369186ms)
  I0325 02:09:55.232479 25 proxy.go:558] (14) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 6.241876ms)
  I0325 02:09:55.232525 25 proxy.go:558] (14) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 6.048314ms)
  I0325 02:09:55.232800 25 proxy.go:558] (14) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname2/proxy/: bar (200; 6.697737ms)
  I0325 02:09:55.232943 25 proxy.go:558] (14) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname1/proxy/: foo (200; 6.50835ms)
  I0325 02:09:55.238193 25 proxy.go:558] (14) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname2/proxy/: tls qux (200; 12.049207ms)
  I0325 02:09:55.243195 25 proxy.go:558] (15) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">test<... (200; 4.667519ms)
  I0325 02:09:55.243424 25 proxy.go:558] (15) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:460/proxy/: tls baz (200; 5.005901ms)
  I0325 02:09:55.243953 25 proxy.go:558] (15) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 5.594238ms)
  I0325 02:09:55.245193 25 proxy.go:558] (15) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/rewriteme">test</a> (200; 6.733667ms)
  I0325 02:09:55.245255 25 proxy.go:558] (15) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname1/proxy/: foo (200; 7.012505ms)
  I0325 02:09:55.245271 25 proxy.go:558] (15) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 6.424208ms)
  I0325 02:09:55.245301 25 proxy.go:558] (15) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">... (200; 6.191951ms)
  I0325 02:09:55.245331 25 proxy.go:558] (15) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname2/proxy/: bar (200; 6.607944ms)
  I0325 02:09:55.245441 25 proxy.go:558] (15) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:462/proxy/: tls qux (200; 6.815028ms)
  I0325 02:09:55.245718 25 proxy.go:558] (15) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/tlsrewritem... (200; 7.143824ms)
  I0325 02:09:55.245760 25 proxy.go:558] (15) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 6.843888ms)
  I0325 02:09:55.245878 25 proxy.go:558] (15) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname1/proxy/: tls baz (200; 7.078571ms)
  I0325 02:09:55.246135 25 proxy.go:558] (15) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname2/proxy/: bar (200; 7.119041ms)
  I0325 02:09:55.246150 25 proxy.go:558] (15) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname1/proxy/: foo (200; 7.477854ms)
  I0325 02:09:55.246279 25 proxy.go:558] (15) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 7.315561ms)
  I0325 02:09:55.246365 25 proxy.go:558] (15) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname2/proxy/: tls qux (200; 7.291088ms)
  I0325 02:09:55.250876 25 proxy.go:558] (16) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:460/proxy/: tls baz (200; 4.289552ms)
  I0325 02:09:55.252184 25 proxy.go:558] (16) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">test<... (200; 5.567018ms)
  I0325 02:09:55.252543 25 proxy.go:558] (16) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">... (200; 5.492605ms)
  I0325 02:09:55.252598 25 proxy.go:558] (16) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/tlsrewritem... (200; 5.940442ms)
  I0325 02:09:55.252624 25 proxy.go:558] (16) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:462/proxy/: tls qux (200; 5.93404ms)
  I0325 02:09:55.252734 25 proxy.go:558] (16) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 6.188299ms)
  I0325 02:09:55.252750 25 proxy.go:558] (16) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 5.870545ms)
  I0325 02:09:55.253297 25 proxy.go:558] (16) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname1/proxy/: tls baz (200; 6.484708ms)
  I0325 02:09:55.253313 25 proxy.go:558] (16) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 6.39465ms)
  I0325 02:09:55.253875 25 proxy.go:558] (16) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname2/proxy/: bar (200; 6.905654ms)
  I0325 02:09:55.254498 25 proxy.go:558] (16) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/rewriteme">test</a> (200; 7.653137ms)
  I0325 02:09:55.254748 25 proxy.go:558] (16) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname1/proxy/: foo (200; 8.026176ms)
  I0325 02:09:55.254777 25 proxy.go:558] (16) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname1/proxy/: foo (200; 8.275961ms)
  I0325 02:09:55.257093 25 proxy.go:558] (16) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 10.694247ms)
  I0325 02:09:55.257106 25 proxy.go:558] (16) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname2/proxy/: bar (200; 10.355104ms)
  I0325 02:09:55.257263 25 proxy.go:558] (16) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname2/proxy/: tls qux (200; 10.259607ms)
  E0325 02:09:55.259206      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:09:55.262668 25 proxy.go:558] (17) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 5.293211ms)
  I0325 02:09:55.262934 25 proxy.go:558] (17) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/tlsrewritem... (200; 5.474201ms)
  I0325 02:09:55.262955 25 proxy.go:558] (17) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:462/proxy/: tls qux (200; 5.435084ms)
  I0325 02:09:55.262965 25 proxy.go:558] (17) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:460/proxy/: tls baz (200; 5.550761ms)
  I0325 02:09:55.263594 25 proxy.go:558] (17) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/rewriteme">test</a> (200; 5.927888ms)
  I0325 02:09:55.263620 25 proxy.go:558] (17) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">... (200; 5.772152ms)
  I0325 02:09:55.263708 25 proxy.go:558] (17) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 5.794509ms)
  I0325 02:09:55.263728 25 proxy.go:558] (17) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 5.992161ms)
  I0325 02:09:55.263755 25 proxy.go:558] (17) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname2/proxy/: tls qux (200; 5.947998ms)
  I0325 02:09:55.264013 25 proxy.go:558] (17) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">test<... (200; 6.312822ms)
  I0325 02:09:55.264226 25 proxy.go:558] (17) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname1/proxy/: foo (200; 6.669033ms)
  I0325 02:09:55.264468 25 proxy.go:558] (17) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname2/proxy/: bar (200; 6.695081ms)
  I0325 02:09:55.265081 25 proxy.go:558] (17) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname2/proxy/: bar (200; 7.488065ms)
  I0325 02:09:55.265303 25 proxy.go:558] (17) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 7.422849ms)
  I0325 02:09:55.266486 25 proxy.go:558] (17) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname1/proxy/: tls baz (200; 8.851046ms)
  I0325 02:09:55.266500 25 proxy.go:558] (17) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname1/proxy/: foo (200; 9.211709ms)
  I0325 02:09:55.272762 25 proxy.go:558] (18) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/rewriteme">test</a> (200; 6.077507ms)
  I0325 02:09:55.273691 25 proxy.go:558] (18) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 6.722985ms)
  I0325 02:09:55.273748 25 proxy.go:558] (18) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">... (200; 6.845847ms)
  I0325 02:09:55.274968 25 proxy.go:558] (18) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname1/proxy/: foo (200; 8.132699ms)
  I0325 02:09:55.275000 25 proxy.go:558] (18) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 8.477179ms)
  I0325 02:09:55.275016 25 proxy.go:558] (18) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">test<... (200; 8.30199ms)
  I0325 02:09:55.275039 25 proxy.go:558] (18) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname2/proxy/: tls qux (200; 8.170309ms)
  I0325 02:09:55.274974 25 proxy.go:558] (18) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 7.967142ms)
  I0325 02:09:55.275128 25 proxy.go:558] (18) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname1/proxy/: tls baz (200; 8.483441ms)
  I0325 02:09:55.275427 25 proxy.go:558] (18) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:462/proxy/: tls qux (200; 8.629883ms)
  I0325 02:09:55.275449 25 proxy.go:558] (18) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 8.516016ms)
  I0325 02:09:55.275465 25 proxy.go:558] (18) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/tlsrewritem... (200; 8.717599ms)
  I0325 02:09:55.275477 25 proxy.go:558] (18) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname2/proxy/: bar (200; 8.878364ms)
  I0325 02:09:55.275489 25 proxy.go:558] (18) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname2/proxy/: bar (200; 8.452249ms)
  I0325 02:09:55.275502 25 proxy.go:558] (18) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname1/proxy/: foo (200; 8.432158ms)
  I0325 02:09:55.275439 25 proxy.go:558] (18) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:460/proxy/: tls baz (200; 8.331823ms)
  I0325 02:09:55.279584 25 proxy.go:558] (19) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:443/proxy/tlsrewritem... (200; 3.872065ms)
  I0325 02:09:55.280438 25 proxy.go:558] (19) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:460/proxy/: tls baz (200; 4.706972ms)
  I0325 02:09:55.281652 25 proxy.go:558] (19) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname1/proxy/: foo (200; 5.955658ms)
  I0325 02:09:55.282788 25 proxy.go:558] (19) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 6.863966ms)
  I0325 02:09:55.283619 25 proxy.go:558] (19) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 7.991543ms)
  I0325 02:09:55.283713 25 proxy.go:558] (19) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname1/proxy/: foo (200; 7.968445ms)
  I0325 02:09:55.283864 25 proxy.go:558] (19) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:162/proxy/: bar (200; 8.293016ms)
  I0325 02:09:55.283880 25 proxy.go:558] (19) /api/v1/namespaces/proxy-9071/services/proxy-service-x5xml:portname2/proxy/: bar (200; 8.123866ms)
  I0325 02:09:55.289310 25 proxy.go:558] (19) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:160/proxy/: foo (200; 13.413329ms)
  I0325 02:09:55.289348 25 proxy.go:558] (19) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname2/proxy/: tls qux (200; 13.513936ms)
  I0325 02:09:55.289512 25 proxy.go:558] (19) /api/v1/namespaces/proxy-9071/pods/https:proxy-service-x5xml-rmzfh:462/proxy/: tls qux (200; 13.652214ms)
  I0325 02:09:55.291683 25 proxy.go:558] (19) /api/v1/namespaces/proxy-9071/services/http:proxy-service-x5xml:portname2/proxy/: bar (200; 15.806518ms)
  I0325 02:09:55.292250 25 proxy.go:558] (19) /api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/http:proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">... (200; 16.346105ms)
  I0325 02:09:55.292253 25 proxy.go:558] (19) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh/proxy/rewriteme">test</a> (200; 16.45702ms)
  I0325 02:09:55.292270 25 proxy.go:558] (19) /api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9071/pods/proxy-service-x5xml-rmzfh:1080/proxy/rewriteme">test<... (200; 16.457716ms)
  I0325 02:09:55.289299 25 proxy.go:558] (19) /api/v1/namespaces/proxy-9071/services/https:proxy-service-x5xml:tlsportname1/proxy/: tls baz (200; 13.523314ms)
  STEP: deleting ReplicationController proxy-service-x5xml in namespace proxy-9071, will wait for the garbage collector to delete the pods @ 03/25/25 02:09:55.293
  I0325 02:09:55.355206 25 resources.go:139] Deleting ReplicationController proxy-service-x5xml took: 8.087357ms
  I0325 02:09:55.455852 25 resources.go:163] Terminating ReplicationController proxy-service-x5xml pods took: 100.631309ms
  E0325 02:09:56.260264      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:09:57.260670      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:09:58.257222 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0325 02:09:58.261491      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "proxy-9071" for this suite. @ 03/25/25 02:09:58.262
• [9.345 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 03/25/25 02:09:58.276
  I0325 02:09:58.276475 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename downward-api @ 03/25/25 02:09:58.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:09:58.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:09:58.302
  STEP: Creating a pod to test downward API volume plugin @ 03/25/25 02:09:58.304
  E0325 02:09:59.264091      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:00.264682      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:01.266212      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:02.266521      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 02:10:02.342
  I0325 02:10:02.345073 25 output.go:207] Trying to get logs from node master-2 pod downwardapi-volume-f059840e-3ac8-4709-a236-57c8e16d2b23 container client-container: <nil>
  STEP: delete the pod @ 03/25/25 02:10:02.352
  I0325 02:10:02.406238 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1635" for this suite. @ 03/25/25 02:10:02.41
• [4.145 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:771
  STEP: Creating a kubernetes client @ 03/25/25 02:10:02.422
  I0325 02:10:02.422680 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename svcaccounts @ 03/25/25 02:10:02.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:10:02.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:10:02.45
  I0325 02:10:02.456285 25 service_accounts.go:783] Got root ca configmap in namespace "svcaccounts-5513"
  I0325 02:10:02.462758 25 service_accounts.go:786] Deleted root ca configmap in namespace "svcaccounts-5513"
  STEP: waiting for a new root ca configmap created @ 03/25/25 02:10:02.963
  I0325 02:10:02.967263 25 service_accounts.go:800] Recreated root ca configmap in namespace "svcaccounts-5513"
  I0325 02:10:02.973373 25 service_accounts.go:811] Updated root ca configmap in namespace "svcaccounts-5513"
  E0325 02:10:03.266586      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting for the root ca configmap reconciled @ 03/25/25 02:10:03.473
  I0325 02:10:03.476920 25 service_accounts.go:829] Reconciled root ca configmap in namespace "svcaccounts-5513"
  I0325 02:10:03.477145 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5513" for this suite. @ 03/25/25 02:10:03.481
• [1.068 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 03/25/25 02:10:03.49
  I0325 02:10:03.490747 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename emptydir @ 03/25/25 02:10:03.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:10:03.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:10:03.516
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 03/25/25 02:10:03.519
  E0325 02:10:04.266885      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:05.267180      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:06.267521      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:07.267671      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:08.267745      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:09.267853      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:10.268508      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:11.268523      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 02:10:11.553
  I0325 02:10:11.556975 25 output.go:207] Trying to get logs from node master-2 pod pod-75965462-e94a-4792-b652-9160ca4fba84 container test-container: <nil>
  STEP: delete the pod @ 03/25/25 02:10:11.564
  I0325 02:10:11.583733 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4256" for this suite. @ 03/25/25 02:10:11.587
• [8.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 03/25/25 02:10:11.594
  I0325 02:10:11.594364 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename pod-network-test @ 03/25/25 02:10:11.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:10:11.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:10:11.618
  STEP: Performing setup for networking test in namespace pod-network-test-2589 @ 03/25/25 02:10:11.62
  STEP: creating a selector @ 03/25/25 02:10:11.62
  STEP: Creating the service pods in kubernetes @ 03/25/25 02:10:11.62
  I0325 02:10:11.620707 25 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0325 02:10:12.269312      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:13.269547      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:14.270178      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:15.270158      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:16.271084      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:17.271503      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:18.271683      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:19.272093      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:20.272440      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:21.272930      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:22.273094      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:23.273141      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:24.273371      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:25.273599      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 03/25/25 02:10:25.856
  E0325 02:10:26.274177      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:27.274707      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:10:27.873474 25 utils.go:803] Setting MaxTries for pod polling to 55 for networking test based on endpoint count 5
  I0325 02:10:27.873656 25 networking.go:42] Breadth first check of 10.233.64.132 on host 172.20.10.91...
  I0325 02:10:27.876844 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.65.75:9080/dial?request=hostname&protocol=http&host=10.233.64.132&port=8083&tries=1'] Namespace:pod-network-test-2589 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 02:10:27.876902 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 02:10:27.877015 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-2589/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.65.75%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.64.132%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0325 02:10:27.942149 25 utils.go:356] Waiting for responses: map[]
  I0325 02:10:27.942204 25 utils.go:360] reached 10.233.64.132 after 0/1 tries
  I0325 02:10:27.942226 25 networking.go:42] Breadth first check of 10.233.65.96 on host 172.20.10.146...
  I0325 02:10:27.946160 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.65.75:9080/dial?request=hostname&protocol=http&host=10.233.65.96&port=8083&tries=1'] Namespace:pod-network-test-2589 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 02:10:27.946255 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 02:10:27.946336 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-2589/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.65.75%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.65.96%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0325 02:10:28.004298 25 utils.go:356] Waiting for responses: map[]
  I0325 02:10:28.004341 25 utils.go:360] reached 10.233.65.96 after 0/1 tries
  I0325 02:10:28.004351 25 networking.go:42] Breadth first check of 10.233.66.190 on host 172.20.10.136...
  I0325 02:10:28.008347 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.65.75:9080/dial?request=hostname&protocol=http&host=10.233.66.190&port=8083&tries=1'] Namespace:pod-network-test-2589 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 02:10:28.008389 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 02:10:28.008455 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-2589/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.65.75%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.66.190%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0325 02:10:28.066200 25 utils.go:356] Waiting for responses: map[]
  I0325 02:10:28.066250 25 utils.go:360] reached 10.233.66.190 after 0/1 tries
  I0325 02:10:28.066262 25 networking.go:42] Breadth first check of 10.233.68.142 on host 172.20.10.81...
  I0325 02:10:28.070248 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.65.75:9080/dial?request=hostname&protocol=http&host=10.233.68.142&port=8083&tries=1'] Namespace:pod-network-test-2589 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 02:10:28.070281 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 02:10:28.070422 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-2589/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.65.75%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.68.142%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0325 02:10:28.141514 25 utils.go:356] Waiting for responses: map[]
  I0325 02:10:28.141881 25 utils.go:360] reached 10.233.68.142 after 0/1 tries
  I0325 02:10:28.141931 25 networking.go:42] Breadth first check of 10.233.67.108 on host 172.20.10.227...
  I0325 02:10:28.145372 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.65.75:9080/dial?request=hostname&protocol=http&host=10.233.67.108&port=8083&tries=1'] Namespace:pod-network-test-2589 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0325 02:10:28.145406 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0325 02:10:28.145472 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-2589/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.65.75%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.67.108%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0325 02:10:28.185945 25 utils.go:356] Waiting for responses: map[]
  I0325 02:10:28.185997 25 utils.go:360] reached 10.233.67.108 after 0/1 tries
  I0325 02:10:28.186013 25 networking.go:53] Going to retry 0 out of 5 pods....
  I0325 02:10:28.186177 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2589" for this suite. @ 03/25/25 02:10:28.191
• [16.605 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 03/25/25 02:10:28.2
  I0325 02:10:28.200471 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename custom-resource-definition @ 03/25/25 02:10:28.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:10:28.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:10:28.232
  STEP: fetching the /apis discovery document @ 03/25/25 02:10:28.235
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 03/25/25 02:10:28.236
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 03/25/25 02:10:28.236
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 03/25/25 02:10:28.236
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 03/25/25 02:10:28.237
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 03/25/25 02:10:28.237
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 03/25/25 02:10:28.237
  I0325 02:10:28.238048 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0325 02:10:28.275619      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "custom-resource-definition-5259" for this suite. @ 03/25/25 02:10:28.291
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 03/25/25 02:10:28.302
  I0325 02:10:28.302575 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename security-context-test @ 03/25/25 02:10:28.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:10:28.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:10:28.331
  E0325 02:10:29.275758      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:30.275995      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:31.276065      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:32.276263      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:10:32.353348 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-273" for this suite. @ 03/25/25 02:10:32.359
• [4.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 03/25/25 02:10:32.369
  I0325 02:10:32.369140 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename namespaces @ 03/25/25 02:10:32.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:10:32.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:10:32.395
  STEP: creating a Namespace @ 03/25/25 02:10:32.397
  STEP: patching the Namespace @ 03/25/25 02:10:32.493
  STEP: get the Namespace and ensuring it has the label @ 03/25/25 02:10:32.501
  I0325 02:10:32.503366 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4389" for this suite. @ 03/25/25 02:10:32.506
  STEP: Destroying namespace "nspatchtest-20c41c7f-2183-472c-9871-5b65612b8d28-7966" for this suite. @ 03/25/25 02:10:32.515
• [0.152 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 03/25/25 02:10:32.522
  I0325 02:10:32.522291 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename proxy @ 03/25/25 02:10:32.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:10:32.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:10:32.596
  I0325 02:10:32.598816 25 proxy.go:293] Creating pod...
  E0325 02:10:33.279345      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:34.279516      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:10:34.617798 25 proxy.go:317] Creating service...
  I0325 02:10:34.632926 25 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6754/pods/agnhost/proxy/some/path/with/DELETE
  I0325 02:10:34.644355 25 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0325 02:10:34.644420 25 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6754/pods/agnhost/proxy/some/path/with/GET
  I0325 02:10:34.647585 25 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0325 02:10:34.647691 25 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6754/pods/agnhost/proxy/some/path/with/HEAD
  I0325 02:10:34.651571 25 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0325 02:10:34.651599 25 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6754/pods/agnhost/proxy/some/path/with/OPTIONS
  I0325 02:10:34.655003 25 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0325 02:10:34.655166 25 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6754/pods/agnhost/proxy/some/path/with/PATCH
  I0325 02:10:34.658426 25 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0325 02:10:34.658458 25 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6754/pods/agnhost/proxy/some/path/with/POST
  I0325 02:10:34.661318 25 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0325 02:10:34.661420 25 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6754/pods/agnhost/proxy/some/path/with/PUT
  I0325 02:10:34.664718 25 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0325 02:10:34.664768 25 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6754/services/test-service/proxy/some/path/with/DELETE
  I0325 02:10:34.668719 25 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0325 02:10:34.668754 25 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6754/services/test-service/proxy/some/path/with/GET
  I0325 02:10:34.672958 25 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0325 02:10:34.673010 25 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6754/services/test-service/proxy/some/path/with/HEAD
  I0325 02:10:34.678217 25 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0325 02:10:34.678457 25 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6754/services/test-service/proxy/some/path/with/OPTIONS
  I0325 02:10:34.682658 25 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0325 02:10:34.682790 25 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6754/services/test-service/proxy/some/path/with/PATCH
  I0325 02:10:34.686524 25 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0325 02:10:34.686563 25 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6754/services/test-service/proxy/some/path/with/POST
  I0325 02:10:34.691656 25 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0325 02:10:34.691860 25 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6754/services/test-service/proxy/some/path/with/PUT
  I0325 02:10:34.696643 25 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0325 02:10:34.696970 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6754" for this suite. @ 03/25/25 02:10:34.701
• [2.187 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 03/25/25 02:10:34.709
  I0325 02:10:34.709543 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename endpointslice @ 03/25/25 02:10:34.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:10:34.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:10:34.742
  I0325 02:10:34.810197 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1298" for this suite. @ 03/25/25 02:10:34.816
• [0.116 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 03/25/25 02:10:34.826
  I0325 02:10:34.826689 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/25/25 02:10:34.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:10:34.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:10:34.856
  I0325 02:10:34.860181 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  E0325 02:10:35.280120      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:36.281296      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:37.282239      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:38.282666      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:39.282917      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:40.283098      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:41.283226      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:42.283959      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 03/25/25 02:10:42.467
  I0325 02:10:42.468053 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=crd-publish-openapi-2151 --namespace=crd-publish-openapi-2151 create -f -'
  I0325 02:10:42.590765 25 builder.go:146] stderr: ""
  I0325 02:10:42.590822 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8436-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0325 02:10:42.590877 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=crd-publish-openapi-2151 --namespace=crd-publish-openapi-2151 delete e2e-test-crd-publish-openapi-8436-crds test-cr'
  I0325 02:10:42.667505 25 builder.go:146] stderr: ""
  I0325 02:10:42.667560 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8436-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0325 02:10:42.667607 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=crd-publish-openapi-2151 --namespace=crd-publish-openapi-2151 apply -f -'
  I0325 02:10:42.813940 25 builder.go:146] stderr: ""
  I0325 02:10:42.822031 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8436-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0325 02:10:42.822121 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=crd-publish-openapi-2151 --namespace=crd-publish-openapi-2151 delete e2e-test-crd-publish-openapi-8436-crds test-cr'
  I0325 02:10:42.908878 25 builder.go:146] stderr: ""
  I0325 02:10:42.908926 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8436-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 03/25/25 02:10:42.908
  I0325 02:10:42.909122 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=crd-publish-openapi-2151 explain e2e-test-crd-publish-openapi-8436-crds'
  I0325 02:10:42.966238 25 builder.go:146] stderr: ""
  I0325 02:10:42.966340 25 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-8436-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0325 02:10:43.284956      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:44.286003      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:45.286264      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:10:45.305554 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2151" for this suite. @ 03/25/25 02:10:45.312
• [10.493 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 03/25/25 02:10:45.319
  I0325 02:10:45.320079 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename emptydir @ 03/25/25 02:10:45.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:10:45.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:10:45.343
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 03/25/25 02:10:45.345
  E0325 02:10:46.286433      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:47.286824      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:48.287592      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:49.288089      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 02:10:49.368
  I0325 02:10:49.374491 25 output.go:207] Trying to get logs from node master-2 pod pod-583f23d2-0c2d-4a0c-9e6c-25854a9c9504 container test-container: <nil>
  STEP: delete the pod @ 03/25/25 02:10:49.386
  I0325 02:10:49.410330 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7825" for this suite. @ 03/25/25 02:10:49.413
• [4.100 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 03/25/25 02:10:49.419
  I0325 02:10:49.419885 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename webhook @ 03/25/25 02:10:49.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:10:49.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:10:49.447
  STEP: Setting up server cert @ 03/25/25 02:10:49.547
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/25/25 02:10:49.846
  STEP: Deploying the webhook pod @ 03/25/25 02:10:49.856
  STEP: Wait for the deployment to be ready @ 03/25/25 02:10:49.873
  I0325 02:10:49.881532 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0325 02:10:50.288208      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:51.288318      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/25/25 02:10:51.892
  STEP: Verifying the service has paired with the endpoint @ 03/25/25 02:10:51.911
  E0325 02:10:52.288942      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:10:52.911622 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 03/25/25 02:10:52.92
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 03/25/25 02:10:52.921
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 03/25/25 02:10:52.921
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 03/25/25 02:10:52.921
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 03/25/25 02:10:52.922
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 03/25/25 02:10:52.922
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 03/25/25 02:10:52.923
  I0325 02:10:52.968596 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-939" for this suite. @ 03/25/25 02:10:52.972
  STEP: Destroying namespace "webhook-markers-1689" for this suite. @ 03/25/25 02:10:52.982
• [3.574 seconds]
------------------------------
S
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 03/25/25 02:10:52.994
  I0325 02:10:52.994137 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename containers @ 03/25/25 02:10:52.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:10:53.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:10:53.015
  STEP: Creating a pod to test override all @ 03/25/25 02:10:53.018
  E0325 02:10:53.289461      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:54.289307      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:55.289411      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:56.293079      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:57.293060      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:10:58.296014      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 02:10:59.051
  I0325 02:10:59.055874 25 output.go:207] Trying to get logs from node master-2 pod client-containers-44fa4a04-f8e0-441b-9941-d5a2275d53fd container agnhost-container: <nil>
  STEP: delete the pod @ 03/25/25 02:10:59.062
  I0325 02:10:59.084162 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6093" for this suite. @ 03/25/25 02:10:59.088
• [6.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 03/25/25 02:10:59.102
  I0325 02:10:59.102064 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename emptydir-wrapper @ 03/25/25 02:10:59.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:10:59.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:10:59.149
  STEP: Creating 50 configmaps @ 03/25/25 02:10:59.151
  E0325 02:10:59.293838      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 03/25/25 02:10:59.427
  I0325 02:10:59.464133 25 resource.go:87] Pod name wrapped-volume-race-52f292c2-de8e-4fda-b707-79561acd36cd: Found 1 pods out of 5
  E0325 02:11:00.295392      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:01.301090      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:02.302111      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:03.302328      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:04.302635      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:11:04.470330 25 resource.go:87] Pod name wrapped-volume-race-52f292c2-de8e-4fda-b707-79561acd36cd: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 03/25/25 02:11:04.47
  STEP: Creating RC which spawns configmap-volume pods @ 03/25/25 02:11:04.499
  I0325 02:11:04.524241 25 resource.go:87] Pod name wrapped-volume-race-4a7481e2-75cf-41df-a819-20ce5b9708f0: Found 1 pods out of 5
  E0325 02:11:05.303618      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:06.303970      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:07.304492      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:08.304660      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:09.305549      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:11:09.530577 25 resource.go:87] Pod name wrapped-volume-race-4a7481e2-75cf-41df-a819-20ce5b9708f0: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 03/25/25 02:11:09.53
  STEP: Creating RC which spawns configmap-volume pods @ 03/25/25 02:11:09.553
  I0325 02:11:09.594940 25 resource.go:87] Pod name wrapped-volume-race-13948294-6825-4901-9fb2-4ae3b79b8027: Found 1 pods out of 5
  E0325 02:11:10.306095      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:11.306434      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:12.307063      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:13.308016      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:14.308263      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:11:14.601111 25 resource.go:87] Pod name wrapped-volume-race-13948294-6825-4901-9fb2-4ae3b79b8027: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 03/25/25 02:11:14.601
  STEP: deleting ReplicationController wrapped-volume-race-13948294-6825-4901-9fb2-4ae3b79b8027 in namespace emptydir-wrapper-9656, will wait for the garbage collector to delete the pods @ 03/25/25 02:11:14.615
  I0325 02:11:14.678841 25 resources.go:139] Deleting ReplicationController wrapped-volume-race-13948294-6825-4901-9fb2-4ae3b79b8027 took: 9.609863ms
  I0325 02:11:14.779964 25 resources.go:163] Terminating ReplicationController wrapped-volume-race-13948294-6825-4901-9fb2-4ae3b79b8027 pods took: 101.093639ms
  E0325 02:11:15.308826      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-4a7481e2-75cf-41df-a819-20ce5b9708f0 in namespace emptydir-wrapper-9656, will wait for the garbage collector to delete the pods @ 03/25/25 02:11:16.18
  I0325 02:11:16.244874 25 resources.go:139] Deleting ReplicationController wrapped-volume-race-4a7481e2-75cf-41df-a819-20ce5b9708f0 took: 9.234539ms
  E0325 02:11:16.309195      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:11:16.347105 25 resources.go:163] Terminating ReplicationController wrapped-volume-race-4a7481e2-75cf-41df-a819-20ce5b9708f0 pods took: 102.209331ms
  E0325 02:11:17.309888      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-52f292c2-de8e-4fda-b707-79561acd36cd in namespace emptydir-wrapper-9656, will wait for the garbage collector to delete the pods @ 03/25/25 02:11:17.748
  I0325 02:11:17.813053 25 resources.go:139] Deleting ReplicationController wrapped-volume-race-52f292c2-de8e-4fda-b707-79561acd36cd took: 9.558633ms
  I0325 02:11:17.913432 25 resources.go:163] Terminating ReplicationController wrapped-volume-race-52f292c2-de8e-4fda-b707-79561acd36cd pods took: 100.33672ms
  E0325 02:11:18.310924      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 03/25/25 02:11:18.714
  I0325 02:11:19.038804 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-9656" for this suite. @ 03/25/25 02:11:19.042
• [19.948 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1830
  STEP: Creating a kubernetes client @ 03/25/25 02:11:19.049
  I0325 02:11:19.049972 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename kubectl @ 03/25/25 02:11:19.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:11:19.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:11:19.076
  STEP: starting the proxy server @ 03/25/25 02:11:19.08
  I0325 02:11:19.081132 25 util.go:590] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3290110762 --namespace=kubectl-8281 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 03/25/25 02:11:19.132
  I0325 02:11:19.139785 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0325 02:11:19.141665 25 kubectl.go:2226] kubectl proxy stderr: W0325 02:11:19.131966    1323 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  I0325 02:11:19.141776 25 kubectl.go:2221] kubectl proxy stdout: Starting to serve on 127.0.0.1:42243

  STEP: Destroying namespace "kubectl-8281" for this suite. @ 03/25/25 02:11:19.144
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 03/25/25 02:11:19.154
  I0325 02:11:19.154922 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename projected @ 03/25/25 02:11:19.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:11:19.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:11:19.177
  STEP: Creating projection with secret that has name projected-secret-test-6267207b-f388-4ac5-b4ca-c72b04556fd8 @ 03/25/25 02:11:19.18
  STEP: Creating a pod to test consume secrets @ 03/25/25 02:11:19.19
  E0325 02:11:19.311859      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:20.312941      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:21.313811      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:22.313943      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 02:11:23.212
  I0325 02:11:23.215354 25 output.go:207] Trying to get logs from node master-2 pod pod-projected-secrets-416f0d8f-825d-4bf8-b6f5-f55389d0e88e container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 03/25/25 02:11:23.221
  I0325 02:11:23.250625 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-171" for this suite. @ 03/25/25 02:11:23.255
• [4.108 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 03/25/25 02:11:23.262
  I0325 02:11:23.262731 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename emptydir @ 03/25/25 02:11:23.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:11:23.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:11:23.287
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 03/25/25 02:11:23.289
  E0325 02:11:23.314628      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:24.314771      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:25.314911      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:26.317069      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:27.317427      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 02:11:27.317
  I0325 02:11:27.320933 25 output.go:207] Trying to get logs from node master-2 pod pod-43839b1c-f051-47ba-89be-698bba238c6f container test-container: <nil>
  STEP: delete the pod @ 03/25/25 02:11:27.327
  I0325 02:11:27.351506 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1237" for this suite. @ 03/25/25 02:11:27.355
• [4.100 seconds]
------------------------------
SS
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 03/25/25 02:11:27.363
  I0325 02:11:27.363191 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename fake-node @ 03/25/25 02:11:27.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:11:27.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:11:27.383
  STEP: Create "e2e-fake-node-5m6sc" @ 03/25/25 02:11:27.385
  STEP: Getting "e2e-fake-node-5m6sc" @ 03/25/25 02:11:27.391
  STEP: Patching "e2e-fake-node-5m6sc" @ 03/25/25 02:11:27.394
  STEP: Listing nodes with LabelSelector "e2e-fake-node-5m6sc=patched" @ 03/25/25 02:11:27.419
  STEP: Updating "e2e-fake-node-5m6sc" @ 03/25/25 02:11:27.422
  STEP: Delete "e2e-fake-node-5m6sc" @ 03/25/25 02:11:27.431
  STEP: Confirm deletion of "e2e-fake-node-5m6sc" @ 03/25/25 02:11:27.437
  I0325 02:11:27.439223 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-5558" for this suite. @ 03/25/25 02:11:27.441
• [0.084 seconds]
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 03/25/25 02:11:27.447
  I0325 02:11:27.447282 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename disruption @ 03/25/25 02:11:27.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:11:27.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:11:27.491
  STEP: creating the pdb @ 03/25/25 02:11:27.494
  STEP: Waiting for the pdb to be processed @ 03/25/25 02:11:27.501
  E0325 02:11:28.318167      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:29.318402      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 03/25/25 02:11:29.505
  STEP: Waiting for the pdb to be processed @ 03/25/25 02:11:29.513
  E0325 02:11:30.319287      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:31.319403      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 03/25/25 02:11:31.519
  STEP: Waiting for the pdb to be processed @ 03/25/25 02:11:31.528
  E0325 02:11:32.319907      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:33.320075      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 03/25/25 02:11:33.54
  I0325 02:11:33.543198 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6021" for this suite. @ 03/25/25 02:11:33.546
• [6.106 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 03/25/25 02:11:33.553
  I0325 02:11:33.553722 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename webhook @ 03/25/25 02:11:33.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:11:33.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:11:33.588
  STEP: Setting up server cert @ 03/25/25 02:11:33.686
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/25/25 02:11:33.89
  STEP: Deploying the webhook pod @ 03/25/25 02:11:33.9
  STEP: Wait for the deployment to be ready @ 03/25/25 02:11:33.914
  I0325 02:11:33.924647 25 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0325 02:11:34.320196      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:35.320397      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/25/25 02:11:35.935
  STEP: Verifying the service has paired with the endpoint @ 03/25/25 02:11:35.954
  E0325 02:11:36.321679      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:11:36.954607 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 03/25/25 02:11:36.961
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 03/25/25 02:11:36.977
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 03/25/25 02:11:36.982
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 03/25/25 02:11:36.995
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 03/25/25 02:11:37.007
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 03/25/25 02:11:37.019
  I0325 02:11:37.084861 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7412" for this suite. @ 03/25/25 02:11:37.098
  STEP: Destroying namespace "webhook-markers-2845" for this suite. @ 03/25/25 02:11:37.113
• [3.569 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 03/25/25 02:11:37.123
  I0325 02:11:37.123578 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename emptydir @ 03/25/25 02:11:37.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:11:37.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:11:37.163
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 03/25/25 02:11:37.166
  E0325 02:11:37.321639      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:38.321808      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:39.322028      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:40.322100      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:41.322267      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:42.322376      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 02:11:43.197
  I0325 02:11:43.200435 25 output.go:207] Trying to get logs from node master-2 pod pod-4d0a5b23-c577-4115-9b30-b7c6c3d08119 container test-container: <nil>
  STEP: delete the pod @ 03/25/25 02:11:43.206
  I0325 02:11:43.229192 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3093" for this suite. @ 03/25/25 02:11:43.232
• [6.120 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 03/25/25 02:11:43.244
  I0325 02:11:43.244367 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename events @ 03/25/25 02:11:43.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:11:43.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:11:43.266
  STEP: Create set of events @ 03/25/25 02:11:43.269
  I0325 02:11:43.277381 25 core_events.go:198] created test-event-1
  I0325 02:11:43.286821 25 core_events.go:198] created test-event-2
  I0325 02:11:43.293190 25 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 03/25/25 02:11:43.293
  STEP: delete collection of events @ 03/25/25 02:11:43.295
  I0325 02:11:43.295981 25 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 03/25/25 02:11:43.316
  I0325 02:11:43.316382 25 core_events.go:230] requesting list of events to confirm quantity
  I0325 02:11:43.319025 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0325 02:11:43.322575      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "events-6250" for this suite. @ 03/25/25 02:11:43.333
• [0.097 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 03/25/25 02:11:43.342
  I0325 02:11:43.342087 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/25/25 02:11:43.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:11:43.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:11:43.374
  STEP: set up a multi version CRD @ 03/25/25 02:11:43.376
  I0325 02:11:43.377106 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  E0325 02:11:44.323315      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:45.323403      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:46.323711      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:47.324622      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:48.325701      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:49.325914      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:50.326303      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:51.326403      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:52.327367      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: rename a version @ 03/25/25 02:11:52.943
  STEP: check the new version name is served @ 03/25/25 02:11:52.957
  E0325 02:11:53.328301      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:54.329045      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 03/25/25 02:11:54.681
  E0325 02:11:55.329464      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 03/25/25 02:11:55.42
  E0325 02:11:56.330003      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:57.330238      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:11:58.331076      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:11:59.199335 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5557" for this suite. @ 03/25/25 02:11:59.206
• [15.873 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 03/25/25 02:11:59.215
  I0325 02:11:59.215138 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename emptydir @ 03/25/25 02:11:59.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:11:59.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:11:59.244
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 03/25/25 02:11:59.247
  E0325 02:11:59.331117      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:00.331395      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:01.331869      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:02.332285      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 02:12:03.269
  I0325 02:12:03.272742 25 output.go:207] Trying to get logs from node master-2 pod pod-848e8260-4b34-4ff8-b82e-6263933f82e9 container test-container: <nil>
  STEP: delete the pod @ 03/25/25 02:12:03.288
  I0325 02:12:03.309677 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9471" for this suite. @ 03/25/25 02:12:03.313
• [4.109 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 03/25/25 02:12:03.324
  I0325 02:12:03.324332 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename downward-api @ 03/25/25 02:12:03.325
  E0325 02:12:03.332318      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:12:03.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:12:03.35
  STEP: Creating a pod to test downward API volume plugin @ 03/25/25 02:12:03.352
  E0325 02:12:04.332670      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:05.332773      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:06.333001      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:07.333172      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 02:12:07.375
  I0325 02:12:07.378076 25 output.go:207] Trying to get logs from node master-2 pod downwardapi-volume-4b8c7b83-4110-4eed-9d50-d1f957b02269 container client-container: <nil>
  STEP: delete the pod @ 03/25/25 02:12:07.384
  I0325 02:12:07.403373 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1057" for this suite. @ 03/25/25 02:12:07.407
• [4.135 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:124
  STEP: Creating a kubernetes client @ 03/25/25 02:12:07.459
  I0325 02:12:07.459419 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename sched-preemption @ 03/25/25 02:12:07.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:12:07.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:12:07.495
  I0325 02:12:07.512043 25 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0325 02:12:08.334096      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:09.334301      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:10.334517      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:11.334817      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:12.334836      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:13.335177      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:14.335299      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:15.335476      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:16.335902      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:17.336258      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:18.336883      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:19.337008      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:20.337219      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:21.337422      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:22.337729      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:23.338805      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:24.339979      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:25.340647      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:26.341049      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:27.341322      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:28.341456      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:29.342040      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:30.342234      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:31.343166      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:32.343796      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:33.343862      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:34.344787      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:35.345026      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:36.345272      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:37.345581      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:38.346005      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:39.347052      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:40.348171      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:41.348279      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:42.349090      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:43.349173      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:44.349787      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:45.350594      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:46.351682      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:47.351943      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:48.353056      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:49.353672      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:50.354180      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:51.354236      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:52.354610      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:53.354903      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:54.356040      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:55.356171      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:56.356222      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:57.356834      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:58.357953      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:12:59.358402      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:00.358684      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:01.359469      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:02.360352      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:03.360790      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:04.361556      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:05.362353      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:06.362819      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:07.363060      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:13:07.517715 25 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 03/25/25 02:13:07.521
  STEP: Adding a custom resource @ 03/25/25 02:13:07.521
  I0325 02:13:07.556451 25 preemption.go:168] Created pod: pod0-0-sched-preemption-low-priority
  I0325 02:13:07.572076 25 preemption.go:168] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 03/25/25 02:13:07.572
  I0325 02:13:07.618639 25 preemption.go:168] Created pod: pod1-0-sched-preemption-medium-priority
  I0325 02:13:07.629056 25 preemption.go:168] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 03/25/25 02:13:07.629
  I0325 02:13:07.649558 25 preemption.go:168] Created pod: pod2-0-sched-preemption-medium-priority
  I0325 02:13:07.659947 25 preemption.go:168] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 03/25/25 02:13:07.66
  I0325 02:13:07.692071 25 preemption.go:168] Created pod: pod3-0-sched-preemption-medium-priority
  I0325 02:13:07.699775 25 preemption.go:168] Created pod: pod3-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 03/25/25 02:13:07.699
  I0325 02:13:07.743624 25 preemption.go:168] Created pod: pod4-0-sched-preemption-medium-priority
  I0325 02:13:07.763184 25 preemption.go:168] Created pod: pod4-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 03/25/25 02:13:07.763
  E0325 02:13:08.364081      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:09.364202      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:10.365150      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:11.366127      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 03/25/25 02:13:11.806
  E0325 02:13:12.366287      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:13.366992      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:14.368024      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:15.368170      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 03/25/25 02:13:15.881
  STEP: Removing a custom resource @ 03/25/25 02:13:15.901
  STEP: Removing a custom resource @ 03/25/25 02:13:15.916
  STEP: Removing a custom resource @ 03/25/25 02:13:15.93
  STEP: Removing a custom resource @ 03/25/25 02:13:15.944
  I0325 02:13:15.959072 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9753" for this suite. @ 03/25/25 02:13:15.966
• [68.517 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 03/25/25 02:13:15.977
  I0325 02:13:15.977461 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename watch @ 03/25/25 02:13:15.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:13:16.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:13:16.017
  STEP: creating a new configmap @ 03/25/25 02:13:16.019
  STEP: modifying the configmap once @ 03/25/25 02:13:16.028
  STEP: modifying the configmap a second time @ 03/25/25 02:13:16.038
  STEP: deleting the configmap @ 03/25/25 02:13:16.045
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 03/25/25 02:13:16.059
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 03/25/25 02:13:16.06
  I0325 02:13:16.060906 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-6412  f2b5c50f-3a5d-4bbe-8db6-b4e5f4ff8a26 2858669 0 2025-03-25 02:13:16 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-03-25 02:13:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0325 02:13:16.061173 25 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-6412  f2b5c50f-3a5d-4bbe-8db6-b4e5f4ff8a26 2858670 0 2025-03-25 02:13:16 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-03-25 02:13:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0325 02:13:16.061307 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6412" for this suite. @ 03/25/25 02:13:16.065
• [0.105 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 03/25/25 02:13:16.082
  I0325 02:13:16.082406 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename secrets @ 03/25/25 02:13:16.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:13:16.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:13:16.114
  STEP: Creating secret with name secret-test-map-cb822e3a-e577-4af1-bc49-144fed3f588d @ 03/25/25 02:13:16.116
  STEP: Creating a pod to test consume secrets @ 03/25/25 02:13:16.121
  E0325 02:13:16.368687      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:17.369070      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:18.369271      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:19.369689      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/25/25 02:13:20.144
  I0325 02:13:20.147113 25 output.go:207] Trying to get logs from node master-2 pod pod-secrets-c287172d-7b9e-44dc-98cd-d05dde2d2398 container secret-volume-test: <nil>
  STEP: delete the pod @ 03/25/25 02:13:20.153
  I0325 02:13:20.169209 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1365" for this suite. @ 03/25/25 02:13:20.172
• [4.101 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 03/25/25 02:13:20.183
  I0325 02:13:20.183768 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename replication-controller @ 03/25/25 02:13:20.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:13:20.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:13:20.216
  STEP: Creating ReplicationController "e2e-rc-6k28c" @ 03/25/25 02:13:20.218
  I0325 02:13:20.225847 25 rc.go:792] Get Replication Controller "e2e-rc-6k28c" to confirm replicas
  E0325 02:13:20.370607      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:13:21.226846 25 rc.go:792] Get Replication Controller "e2e-rc-6k28c" to confirm replicas
  I0325 02:13:21.232081 25 rc.go:801] Found 1 replicas for "e2e-rc-6k28c" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-6k28c" @ 03/25/25 02:13:21.232
  STEP: Updating a scale subresource @ 03/25/25 02:13:21.235
  STEP: Verifying replicas where modified for replication controller "e2e-rc-6k28c" @ 03/25/25 02:13:21.243
  I0325 02:13:21.243761 25 rc.go:792] Get Replication Controller "e2e-rc-6k28c" to confirm replicas
  E0325 02:13:21.370826      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:13:22.244590 25 rc.go:792] Get Replication Controller "e2e-rc-6k28c" to confirm replicas
  I0325 02:13:22.248199 25 rc.go:801] Found 2 replicas for "e2e-rc-6k28c" replication controller
  I0325 02:13:22.248413 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7104" for this suite. @ 03/25/25 02:13:22.252
• [2.075 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 03/25/25 02:13:22.259
  I0325 02:13:22.259384 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename namespaces @ 03/25/25 02:13:22.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:13:22.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:13:22.287
  STEP: Read namespace status @ 03/25/25 02:13:22.289
  I0325 02:13:22.292389 25 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 03/25/25 02:13:22.292
  I0325 02:13:22.306057 25 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 03/25/25 02:13:22.306
  I0325 02:13:22.317951 25 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0325 02:13:22.318196 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5546" for this suite. @ 03/25/25 02:13:22.353
• [0.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 03/25/25 02:13:22.367
  I0325 02:13:22.367208 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename sysctl @ 03/25/25 02:13:22.367
  E0325 02:13:22.371737      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:13:22.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:13:22.397
  STEP: Creating a pod with one valid and two invalid sysctls @ 03/25/25 02:13:22.4
  I0325 02:13:22.404686 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-4306" for this suite. @ 03/25/25 02:13:22.455
• [0.095 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:746
  STEP: Creating a kubernetes client @ 03/25/25 02:13:22.463
  I0325 02:13:22.463164 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename sched-preemption @ 03/25/25 02:13:22.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:13:22.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:13:22.493
  I0325 02:13:22.510729 25 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0325 02:13:23.371961      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:24.372297      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:25.372393      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:26.372690      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:27.373069      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:28.374102      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:29.374255      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:30.374452      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:31.375295      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:32.375359      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:33.375984      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:34.376123      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:35.376229      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:36.376298      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:37.377296      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:38.377310      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:39.377967      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:40.378074      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:41.378780      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:42.379027      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:43.379158      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:44.379560      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:45.379779      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:46.379846      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:47.380023      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:48.380140      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:49.380997      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:50.381224      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:51.381283      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:52.381424      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:53.382448      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:54.382789      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:55.383477      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:56.384106      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:57.385141      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:58.386070      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:13:59.386321      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:00.386360      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:01.387263      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:02.387527      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:03.388795      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:04.389125      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:05.389718      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:06.390075      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:07.390186      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:08.390492      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:09.391176      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:10.391424      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:11.391781      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:12.392043      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:13.392245      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:14.392799      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:15.393923      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:16.394501      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:17.395003      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:18.395108      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:19.395163      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:20.395297      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:21.395514      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:22.395785      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:14:22.517252 25 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 03/25/25 02:14:22.521
  I0325 02:14:22.521158 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3290110762
  STEP: Building a namespace api object, basename sched-preemption-path @ 03/25/25 02:14:22.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/25/25 02:14:22.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/25/25 02:14:22.556
  STEP: Finding an available node @ 03/25/25 02:14:22.559
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 03/25/25 02:14:22.559
  E0325 02:14:23.395952      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:24.396391      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 03/25/25 02:14:24.589
  I0325 02:14:24.606454 25 preemption.go:709] found a healthy node: master-2
  STEP: Adding a custom resource @ 03/25/25 02:14:24.609
  E0325 02:14:25.397187      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:26.397591      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:27.398711      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:28.399768      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:29.400414      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:30.401498      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:14:30.685403 25 preemption.go:828] pods created so far: [1 1 1]
  I0325 02:14:30.685461 25 preemption.go:829] length of pods created so far: 3
  E0325 02:14:31.401697      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:32.401920      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0325 02:14:32.698630 25 preemption.go:846] pods created so far: [2 2 1]
  E0325 02:14:33.402344      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:34.402624      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:35.403089      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:36.403275      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:37.403615      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:38.403803      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0325 02:14:39.404082      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 03/25/25 02:14:39.699
  STEP: Removing a custom resource @ 03/25/25 02:14:39.771
  STEP: Removing a custom resource @ 03/25/25 02:14:39.779
  STEP: Removing a custom resource @ 03/25/25 02:14:39.787
  STEP: Removing a custom resource @ 03/25/25 02:14:39.794
  STEP: Removing a custom resource @ 03/25/25 02:14:39.802
  I0325 02:14:39.811053 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-9670" for this suite. @ 03/25/25 02:14:39.814
  I0325 02:14:39.822527 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2569" for this suite. @ 03/25/25 02:14:39.915
• [77.460 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0325 02:14:39.923468 25 suites.go:34] Running AfterSuite actions on node 1
  I0325 02:14:39.923507 25 util.go:612] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
[ReportAfterSuite] PASSED [0.053 seconds]
------------------------------

Ran 411 of 6622 Specs in 6785.264 seconds
SUCCESS! -- 411 Passed | 0 Failed | 0 Pending | 6211 Skipped
PASS

Ginkgo ran 1 suite in 1h53m6.143556486s
Test Suite Passed
